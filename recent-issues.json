{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1563894092000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6047","number":6047,"title":"No support for Ignore Comment in C(gcc)","body":"","comments":0,"createdAt":"2019-07-23T15:00:34Z","updatedAt":"2019-07-23T15:01:32Z","closedAt":null,"state":"open","user":{"login":"hv7214","avatarUrl":"https://avatars3.githubusercontent.com/u/42354803?v=4"},"owner":{"login":"hv7214","avatarUrl":"https://avatars3.githubusercontent.com/u/42354803?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1562231993000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6041","number":6041,"title":"Circle CI failing on master: No module named pyparsing","body":"https://circleci.com/gh/jayvdb/coala/1655\ncoalib/misc/Shell.py F\n\n________________ [doctest] coalib.misc.Shell.ShellCommandResult ________________\n017 \n018     >>> import sys\n019     >>> process = Popen([sys.executable, '-c',\n020     ...                  'import sys; print(sys.stdin.readline().strip() +'\n021     ...                  '                  \" processed\")'],\n022     ...                 stdin=PIPE, stdout=PIPE, stderr=PIPE,\n023     ...                 universal_newlines=True)\n024 \n025     >>> stdout, stderr = process.communicate(input='data')\n026     >>> stderr\nExpected:\n    ''\nGot:\n    'pytest-cov: Failed to setup subprocess coverage. Environ: {\\'COV_CORE_CONFIG\\': \\':\\', \\'COV_CORE_SOURCE\\': \\':\\', \\'COV_CORE_DATAFILE\\': \\'/home/circleci/project/.coverage\\'} Exception: ImportError(\"No module named \\'pyparsing\\'\",)\\n'\n\n/home/circleci/project/coalib/misc/Shell.py:26: DocTestFailure","comments":0,"createdAt":"2019-07-04T09:19:53Z","updatedAt":"2019-07-04T09:19:53Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1563812000000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6045","number":6045,"title":"Coala's AGPL coverage ","body":"Hi Coala maintainers,\nCan you help clarify AGPL coverage in Coala's case? Specifically, are the modifications made by Coala, which would get put into the input source code, covered by AGPL?\nYour clarification will help evaluate the technology selection. I'd be helpful If you could clarify your interpretation in the Q&A page.\nThanks,\nBrian","comments":0,"createdAt":"2019-07-22T16:13:20Z","updatedAt":"2019-07-22T16:13:20Z","closedAt":null,"state":"open","user":{"login":"briankhsieh","avatarUrl":"https://avatars2.githubusercontent.com/u/1657283?v=4"},"owner":{"login":"briankhsieh","avatarUrl":"https://avatars2.githubusercontent.com/u/1657283?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564304375000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6034","number":6034,"title":"`color_letter` function is buggy","body":"color_letter function in ConsoleInteraction module does not work as expected when there is an upper case letter after the upper case letter in parenthesis.\ne.g. If input line is Edit (C)ommit Message then output is Edit (M)ommit Message","comments":3,"createdAt":"2019-06-22T12:45:11Z","updatedAt":"2019-07-28T08:59:35Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"assignee":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1562161283000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6040","number":6040,"title":"The 'coala' distribution was not found and is required by the application","body":"Traceback (most recent call last):\n  File \"C:\\Program Files\\Python36\\Scripts\\coala-script.py\", line 6, in <module>\n    from pkg_resources import load_entry_point\n  File \"c:\\program files\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 3088, in <module>\n    @_call_aside\n  File \"c:\\program files\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 3072, in _call_aside\n    f(*args, **kwargs)\n  File \"c:\\program files\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 3101, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"c:\\program files\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 574, in _build_master\n    ws.require(__requires__)\n  File \"c:\\program files\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 892, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"c:\\program files\\python36\\lib\\site-packages\\pkg_resources\\__init__.py\", line 778, in resolve\n    raise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'coala' distribution was not found and is required by the application\n\nOS: Windows 10 version 1903 (OS Build 18362.207)","comments":0,"createdAt":"2019-07-03T13:41:23Z","updatedAt":"2019-07-03T13:41:23Z","closedAt":null,"state":"open","user":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"owner":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1563769317000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6033","number":6033,"title":"Running \"coala --json --show-bears --show-details\" is raising errors","body":"Build error:\nNotImplementedError: This platform doesn't have any of the specified package manager(s): brew\nOS System: Linux","comments":2,"createdAt":"2019-06-22T09:59:47Z","updatedAt":"2019-07-22T04:21:57Z","closedAt":"2019-07-22T04:21:57Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564103923000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5983","number":5983,"title":"Setting.py: Change property name","body":"The line_number property for Setting class should be changed to start_line_number as it is the starting line number of a setting.\ndifficulty/newcomer","comments":8,"createdAt":"2019-02-10T06:04:00Z","updatedAt":"2019-07-26T01:18:43Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1562116165000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5988","number":5988,"title":"coala_main.py: Documentation error","body":"coala/coalib/coala_main.py\n    \n    \n        Lines 93 to 94\n      in\n      acb2341\n    \n    \n    \n    \n\n        \n          \n               :param force_show_patch:        If set to True, a patch will be always \n        \n\n        \n          \n                                               shown. (Using ApplyPatchAction.) \n        \n    \n  \n\n\nThis uses ShowPatchAction not ApplyPatchAction","comments":8,"createdAt":"2019-02-13T10:29:35Z","updatedAt":"2019-07-03T01:09:25Z","closedAt":null,"state":"open","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"assignee":{"login":"xurror","avatarUrl":"https://avatars1.githubusercontent.com/u/45751948?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1563553252000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6003","number":6003,"title":"coala -A throws exception on EOF signal","body":"Overview Description\nSending EOF signal to coala -A results in EOFError\nSteps to Reproduce\n\nrun coala with -A or --single-action flag\npress Ctrl-D(EOF signal)\nEOFError is dumped to the console\n\nActual Results\nEOFError is dumped on console with the following traceback\nTraceback (most recent call last):\n  File \"/home/amol/anaconda3/envs/coala/bin/coala\", line 11, in <module>\n    load_entry_point('coala', 'console_scripts', 'coala')()\n  File \"/home/amol/GitHub/coala/coalib/coala.py\", line 121, in main\n    return mode_normal(console_printer, None, args, debug=debug)\n  File \"/home/amol/GitHub/coala/coalib/coala_modes.py\", line 29, in mode_normal\n    debug=debug)\n  File \"/home/amol/GitHub/coala/coalib/coala_main.py\", line 116, in run_coala\n    choice = input(line)\nEOFError\n\nExpected Results\nA better message like, Found EOF. Exiting gracefully. should be shown and the process must exit with status code 0\nReproducibility\n100%\nAdditional Information:\ndifficulty/low\ncoala/main","comments":19,"createdAt":"2019-03-22T12:19:16Z","updatedAt":"2019-07-19T16:20:52Z","closedAt":null,"state":"open","user":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"owner":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1563613568000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6006","number":6006,"title":"Missing comma in docstring","body":"In the file Git_Basics.rst, the following line:\n\nAs people work on coala new commits will be added.\n\ncan be changed to\n\nAs people work on coala, new commits will be added.\n\nto sound better.\nThis can be a newcomer issue.","comments":4,"createdAt":"2019-04-01T16:15:12Z","updatedAt":"2019-07-20T09:06:08Z","closedAt":null,"state":"open","user":{"login":"Haider8","avatarUrl":"https://avatars1.githubusercontent.com/u/43299408?v=4"},"owner":{"login":"Haider8","avatarUrl":"https://avatars1.githubusercontent.com/u/43299408?v=4"},"assignee":{"login":"roshnet","avatarUrl":"https://avatars3.githubusercontent.com/u/40719199?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1562235532000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5945","number":5945,"title":"Adding_CI.rst: Section on Circle CI","body":"In Adding_CI.rst, we have a section on Circle CI.\nIt appears to me that we are no longer using Circle CI (the last build for coala/coala was 2 months ago and for coala/coala-bears was 6 months ago (which is still running on the unsupported CircleCI 1.0). Also the link to coala's circle.yml is broken.\nThere are two solutions to this:\n\nIf we are no longer using Circle CI (which appears to be the case) then the section or at least the link needs to be removed.\nIf we are using it, we still need to remove/update the link and also upgrade to Circle CI 2.0 for coala-bears (which should be done via a separate issue).\n\nThis issue requires some advice and input from the maintainers but regardless of that, this would be an issue that is suitable for newcomers.","comments":3,"createdAt":"2019-01-10T11:09:42Z","updatedAt":"2019-07-04T10:18:52Z","closedAt":null,"state":"open","user":{"login":"shashank-b","avatarUrl":"https://avatars2.githubusercontent.com/u/22676390?v=4"},"owner":{"login":"shashank-b","avatarUrl":"https://avatars2.githubusercontent.com/u/22676390?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564471805000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2941","number":2941,"title":"Dependency [guess_language-spirit] incorrect in bear-requirements.txt on PyPi [0.11.1]","body":"Hi,\nI am having issues installing coala-bears on my Ubuntu 16.04 LTS host. Essentially complaining about one specific dependency namely:\n\"ERROR: Could not find a version that satisfies the requirement guess-language-spirit~=0.5.2 (from coala-bears) (from versions: none)\nERROR: No matching distribution found for guess-language-spirit~=0.5.2 (from coala-bears)\"\nMy environment details:\nPython 3.7.3\npip 19.2.1 from /usr/local/lib/python3.7/site-packages/pip (python 3.7)\nCommand to install \"pip3 install coala-bears\".\nFYI: wWhen looking at the source on PyPi for coala-bears, I noticed in the \"bears-requirements.txt\" file \"guess-language-spirit~=0.5.2\" does not look correct. I believe it should be:\n\"guess_language-spirit\"\n-> Reference: https://pypi.org/project/guess_language-spirit/","comments":1,"createdAt":"2019-07-30T05:11:05Z","updatedAt":"2019-07-30T07:30:05Z","closedAt":"2019-07-30T07:30:05Z","state":"closed","user":{"login":"ryanleonbutler","avatarUrl":"https://avatars3.githubusercontent.com/u/32143470?v=4"},"owner":{"login":"ryanleonbutler","avatarUrl":"https://avatars3.githubusercontent.com/u/32143470?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564363685000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2938","number":2938,"title":"Bear Proposal: pgsanity","body":"https://github.com/markdrago/pgsanity","comments":0,"createdAt":"2019-07-29T01:28:05Z","updatedAt":"2019-07-29T01:28:05Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564455629000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2940","number":2940,"title":"lxml 4.4.0 dropped support for Python 3.4","body":"Need to cap below 4.4.0.","comments":0,"createdAt":"2019-07-30T03:00:29Z","updatedAt":"2019-07-30T03:00:29Z","closedAt":null,"state":"open","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562412015000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2932","number":2932,"title":"AttributeError: 'CheckstyleBear' object has no attribute 'checkstyle_jar_file'","body":"[DEBUG][16:47:14] Running bear CheckstyleBear...\n[DEBUG][16:47:14] The bear CheckstyleBear raised an exception. If you are the author of this bear, please make sure to catch all exceptions. If not and this error annoys you, you might want to get in contact with the author of this bear.\n\nTraceback information is provided below:\n\nTraceback (most recent call last):\n  File \"c:\\users\\amolg\\documents\\github\\coala\\coalib\\bears\\Bear.py\", line 453, in execute\n    result = self.run_bear_from_section(args, kwargs)\n  File \"c:\\users\\amolg\\documents\\github\\coala\\coalib\\bears\\Bear.py\", line 436, in run_bear_from_section\n    return self.run(*args, **kwargs)\n  File \"c:\\users\\amolg\\documents\\github\\coala\\coalib\\bearlib\\abstractions\\Linter.py\", line 663, in run\n    **create_arguments_kwargs)\n  File \"c:\\users\\amolg\\documents\\github\\coala-bears\\bears\\java\\CheckstyleBear.py\", line 102, in create_arguments\n    return ('-jar', self.checkstyle_jar_file, '-c',\nAttributeError: 'CheckstyleBear' object has no attribute 'checkstyle_jar_file'\n\n\nOS: Windows 10 build 18362.207","comments":0,"createdAt":"2019-07-06T11:20:15Z","updatedAt":"2019-07-06T11:20:15Z","closedAt":null,"state":"open","user":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"owner":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562586244000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2933","number":2933,"title":"JavaPMDBear wrong execution command on Windows","body":"[DEBUG][17:09:36] Running 'bash C:\\Users\\amolg\\pmd-bin-6.16.0\\bin\\pmd.BAT pmd -R java-basic,java-braces,java-clone,java-codesize,java-imports,java-naming,java-unnecessary,java-unusedcode -d c:\\users\\amolg\\documents\\github\\coala-jetbrains\\src\\main\\java\\io\\coala\\jetbrains\\utils\\CodeAnalysisIssue.java'\nWARNING:root:JavaPMDBear: Discarded stderr: /bin/bash: C:Usersamolgpmd-bin-6.16.0binpmd.BAT: No such file or directory\n\nWARNING:root:JavaPMDBear: Exit code 127\n\nJavaPMDBear is generating\nbash C:\\Users\\amolg\\pmd-bin-6.16.0\\bin\\pmd.BAT pmd -R java-basic,java-braces,java-clone,java-codesize,java-imports,java-naming,java-unnecessary,java-unusedcode -d c:\\users\\amolg\\documents\\github\\coala-jetbrains\\src\\main\\java\\io\\coala\\jetbrains\\utils\\CodeAnalysisIssue.java\n\ncommand on windows.\nThe actual generated (and working) command should be (minus the bash prefix and pmd argument)\nC:\\Users\\amolg\\pmd-bin-6.16.0\\bin\\pmd.BAT -R java-basic,java-braces,java-clone,java-codesize,java-imports,java-naming,java-unnecessary,java-unusedcode -d c:\\users\\amolg\\documents\\github\\coala-jetbrains\\src\\main\\java\\io\\coala\\jetbrains\\utils\\CodeAnalysisIssue.java\n\nWindows 10 build 18362.207","comments":0,"createdAt":"2019-07-08T11:44:04Z","updatedAt":"2019-07-08T11:44:04Z","closedAt":null,"state":"open","user":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"owner":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563934924000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2936","number":2936,"title":".ci/generate_bear_metadata.py: incorrect \"overrides\" value","body":"Running moban as .ci/generate_bear_metadata.py throws\nWarning: Both package-manager-requirements.yaml and /home/areebbeigh/.cache/moban/repos/mobans/package-manager-requirements.yaml does not exist\n\nThis is because running ci/generate_bear_metadata.py sets overrides: package-manager-requirements.yaml whereas it should be overrides: pm-requirements.yaml.\nRequires a simple change in:\n\n  \n    \n      coala-bears/.ci/generate_bear_metadata.py\n    \n    \n         Line 461\n      in\n      afb068b\n    \n    \n    \n    \n\n        \n          \n           requirements['overrides'] = 'package-manager-requirements.yaml'","comments":0,"createdAt":"2019-07-22T14:05:45Z","updatedAt":"2019-07-24T02:22:04Z","closedAt":"2019-07-24T02:22:04Z","state":"closed","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"assignee":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563938784000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2937","number":2937,"title":"CPDBear failing on Windows, both AppVeyor and Travis Windows","body":"Builds are consistently failing with four errors like\n____________________ CPDBearTest.test_unsupported_language ____________________\nForbidden skipped test - Skipped: PMD is missing. Make sure to install it from <https://pmd.github.io/>.\n\nhttps://ci.appveyor.com/project/coala/coala-bears/build/job/tqv9oos3f43wspkt and https://travis-ci.org/coala/coala-bears/jobs/562576591\nAlmost certainly an error in the final phase of #2910 , when I was culling unneeded stuff, which was masked by the caching.","comments":2,"createdAt":"2019-07-24T02:15:07Z","updatedAt":"2019-07-24T03:26:24Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/bug","color":"e11d21"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563692932000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2929","number":2929,"title":"TextLintBear dependency on textlint-plugin-asciidoc-loose","body":"https://www.npmjs.com/package/textlint-plugin-asciidoc-loose is a compiled package, which is a build and security problem, especially considering it has not been maintained for three years.\nIt also has limited functionality https://github.com/azu/textlint-plugin-asciidoc-loose#limitation\nhttps://www.npmjs.com/package/textlint-plugin-asciidoctor is better in every regard, and is a drop in replacement for textlint-plugin-asciidoc-loose","comments":0,"createdAt":"2019-07-01T01:52:05Z","updatedAt":"2019-07-21T07:08:52Z","closedAt":"2019-07-21T07:08:52Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563692933000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2930","number":2930,"title":"PHPLintBear fails on Windows","body":"The regex used doesnt match on Windows, which cuts the lines into parts.","comments":0,"createdAt":"2019-07-01T03:47:44Z","updatedAt":"2019-07-21T07:08:53Z","closedAt":"2019-07-21T07:08:53Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562122665000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2931","number":2931,"title":"Upgrade infer","body":"InferBear is using infer 0.7.0 , which is very old and requires a lot of hand holding to keep building.\nIt would be good if a newer version of infer was supported.","comments":1,"createdAt":"2019-07-03T02:55:09Z","updatedAt":"2019-07-03T02:57:45Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562211521000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2906","number":2906,"title":"Error fetching phpmd","body":"curl -fsSL -o /home/travis/.local/bin/phpmd http://static.phpmd.org/php/latest/phpmd.phar\ncurl: (7) Failed to connect to static.phpmd.org port 80: Connection timed out\n\nWe need to find the version which was being installed, and then find another way of installing it.","comments":2,"createdAt":"2019-05-22T13:54:29Z","updatedAt":"2019-07-04T03:38:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563790153000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2871","number":2871,"title":"Replace dep munkres3 with munkres","body":"https://github.com/bmc/munkres now has Python 3 support, so we dont need to use https://github.com/datapublica/munkres\nopenSUSE already has the former, doesnt have the latter (c.f. #2849)\nhttps://packages.ubuntu.com/cosmic/python3-munkres appears to also be the former.","comments":1,"createdAt":"2019-02-11T01:51:49Z","updatedAt":"2019-07-22T10:09:13Z","closedAt":"2019-07-22T10:09:13Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563934924000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2873","number":2873,"title":"YapfBearTest.test_allow_multiline_lambdas fails with yapf 0.24","body":"[  452s] =================================== FAILURES ===================================\n[  452s] __________________ YapfBearTest.test_allow_multiline_lambdas ___________________\n[  452s] \n[  452s] self = <tests.python.YapfBearTest.YapfBearTest testMethod=test_allow_multiline_lambdas>\n[  452s] \n[  452s]     def test_allow_multiline_lambdas(self):\n[  452s]         self.section.append(Setting('allow_multiline_lambdas', True))\n[  452s]         self.check_validity(self.uut,\n[  452s]                             ['func(a, lambda xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n[  452s] >                            'xxxxxxxxxxxxxxxxxx:\\n', '     xxxxxxxxxxxxxxxxxx'\n[  452s]                              'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + 222222222)\\n'\n[  452s]                              ])\n[  452s] \n[  452s] tests/python/YapfBearTest.py:74: \n[  452s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[  452s] /usr/lib/python3.7/site-packages/coalib/testing/LocalBearTestHelper.py:174: in check_validity\n[  452s]     aspects=aspects,\n[  452s] /usr/lib/python3.7/site-packages/coalib/testing/LocalBearTestHelper.py:287: in check_results\n[  452s]     self.assertComparableObjectsEqual(bear_output, results)\n[  452s] /usr/lib/python3.7/site-packages/coalib/testing/LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n[  452s]     self.assertEqual(observed_result, expected_result)\n[  452s] E   AssertionError: Lists differ: [<Result object(id=0x603c7610717443dabfe29[424 chars]b70>] != []\n[  452s] E   \n[  452s] E   First list contains 1 additional elements.\n[  452s] E   First extra element 0:\n[  452s] E   <Result object(id=0x603c7610717443dabfe29d338608073, origin='YapfBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=1, column=None) at 0x7fbdd8593f98>, end=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=2, column=None) at 0x7fbdd862cac8>) at 0x7fbdd862c710>,), severity=NORMAL, confidence=100, message='The code does not comply with the settings provided.', aspect=NoneType, applied_actions={}) at 0x7fbdd862cb70>\n[  452s] E   \n[  452s] E   - [<Result object(id=0x603c7610717443dabfe29d338608073, origin='YapfBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=1, column=None) at 0x7fbdd8593f98>, end=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=2, column=None) at 0x7fbdd862cac8>) at 0x7fbdd862c710>,), severity=NORMAL, confidence=100, message='The code does not comply with the settings provided.', aspect=NoneType, applied_actions={}) at 0x7fbdd862cb70>]\n[  452s] E   + []\n\nWe should include support for 0.24, and the latest 0.26","comments":3,"createdAt":"2019-02-13T02:46:39Z","updatedAt":"2019-07-24T02:22:04Z","closedAt":"2019-07-24T02:22:04Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563273201000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2508","number":2508,"title":"Remove `package-lock.json` from gitignore","body":"npm clearly states that this file should be commited. From npm help package-lock.json:\n\npackage-lock.json is automatically generated for any operations where npm modifies either the node_modules tree, or package.json. It describes the exact tree that was generated, such that subsequent installs are able to generate identical trees, regardless of intermediate dependency updates.\nThis file is intended to be committed into source repositories, and serves various purposes:\n\nDescribe a single representation of a dependency tree such that teammates, deployments, and continuous integration are guaranteed to install exactly the same dependencies.\nProvide a facility for users to \"time-travel\" to previous states of node_modules without having to commit the directory itself.\nTo facilitate greater visibility of tree changes through readable source control diffs.\nAnd optimize the installation process by allowing npm to skip repeated metadata resolutions for previously-installed packages.\n\nOne key detail about package-lock.json is that it cannot be published, and it will be ignored if found in any place other than the toplevel package. It shares a format with npm-shrinkwrap.json(5), which is essentially the same file, but allows publication. This is not recommended unless deploying a CLI tool or otherwise using the publication process for producing production packages.\nIf both package-lock.json and npm-shrinkwrap.json are present in the root of a package, package-lock.json will be completely ignored.\n\nThis issue is about reverting the change in #2494 again.","comments":2,"createdAt":"2018-05-26T12:31:44Z","updatedAt":"2019-07-16T10:33:21Z","closedAt":"2018-06-15T01:47:25Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"KaplanAlex","avatarUrl":"https://avatars3.githubusercontent.com/u/19846978?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563692933000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2664","number":2664,"title":"Travis CI failing due to infer breakage with javalib","body":"Recent travis build for python 3.6 fail while trying to build infer.\nError: No implementations provided for the following modules:\n         CamomileLibrary__UTF8 referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__UChar referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__ referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\nCommand exited with code 2.\nmake[2]: *** [build_java] Error 10\nmake[2]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer/src'\nmake[1]: *** [java] Error 2\nmake[1]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer'\nmake: *** [java] Error 2\n  compilation failure; you can try running\n    make clean\n    ./build-infer.sh java\nThe command \".ci/deps.opam.sh\" failed and exited with 1 during .\n\nhttps://travis-ci.org/coala/coala-bears/jobs/413575180","comments":7,"createdAt":"2018-08-08T17:04:00Z","updatedAt":"2019-07-21T07:08:53Z","closedAt":"2019-07-21T07:08:53Z","state":"closed","user":{"login":"saksham189","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"saksham189","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563494066000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2214","number":2214,"title":"Bear Proposal: Gherkin-lint","body":"https://github.com/vsiakka/gherkin-lint","comments":3,"createdAt":"2018-01-06T08:17:05Z","updatedAt":"2019-07-18T23:54:26Z","closedAt":"2018-08-12T14:52:17Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562122282000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1825","number":1825,"title":"InferBearTest: test_invalid_files fails on Python 3.4","body":"From https://circleci.com/gh/coala/coala-bears/6480?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link with pyenv local 3.4.3:\n_______________________ InferBearTest.test_invalid_files _______________________\n\nself = <coalib.testing.LocalBearTestHelper.LocalBearTest testMethod=test_invalid_files>\n\n    def test_invalid_files(self):\n        self.assertIsInstance(invalid_files, (list, tuple))\n        for file in invalid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=False,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n\n../.pyenv/versions/3.4.3/lib/python3.4/site-packages/coalib/testing/LocalBearTestHelper.py:302: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../.pyenv/versions/3.4.3/lib/python3.4/site-packages/coalib/testing/LocalBearTestHelper.py:92: in check_validity\n    settings=settings,\n../.pyenv/versions/3.4.3/lib/python3.4/site-packages/coalib/testing/LocalBearTestHelper.py:132: in check_invalidity\n    self.assertNotEqual(len(bear_output), 0, msg=msg)\nE   AssertionError: 0 == 0 : The local bear 'InferBear' yields no result although it should.","comments":2,"createdAt":"2017-06-08T11:56:51Z","updatedAt":"2019-07-03T02:51:22Z","closedAt":"2019-07-03T02:51:22Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563267509000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1384","number":1384,"title":"cabal-install times out regularly","body":"When building without cache, cabal-install regularly fails, and the build fails, the cache is still empty, and the build must be started again.\nSee https://travis-ci.org/jayvdb/coala-bears/jobs/197200323#L3189\nMaybe there is some config option to increase the timeout.\nOpened via gitter by @jayvdb","comments":1,"createdAt":"2017-02-01T06:34:45Z","updatedAt":"2019-07-16T08:58:29Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1564128474000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/662","number":662,"title":"labhub.py: Incorrect implementation for `is_room_member`","body":"The gitter backend returns a list of GitterRoomOccupant, but in the function we consider it to be a list of strings.\nhttps://github.com/coala/corobo/blob/master/plugins/labhub.py#L113\ntype/bug difficulty/newcomer","comments":0,"createdAt":"2019-07-26T08:07:54Z","updatedAt":"2019-07-26T08:07:54Z","closedAt":null,"state":"open","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564658148000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/285","number":285,"title":"Install and Use openhub_django pypi package","body":"","comments":0,"createdAt":"2019-08-01T11:15:48Z","updatedAt":"2019-08-01T11:15:48Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564594486000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/280","number":280,"title":"Add  form to assign issues to users","body":"","comments":0,"createdAt":"2019-07-31T17:34:46Z","updatedAt":"2019-07-31T17:34:46Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564594506000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/281","number":281,"title":"Add a contributor promotion form","body":"","comments":0,"createdAt":"2019-07-31T17:35:06Z","updatedAt":"2019-07-31T17:35:06Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516288000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/272","number":272,"title":"Add form for applying as a mentor in GSoC","body":"","comments":0,"createdAt":"2019-07-30T19:51:28Z","updatedAt":"2019-07-30T19:51:28Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516303000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/273","number":273,"title":" Add form for adding yourself a GSoC participant","body":"","comments":0,"createdAt":"2019-07-30T19:51:43Z","updatedAt":"2019-07-30T19:51:43Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516322000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/274","number":274,"title":" Create a feedback form","body":"","comments":0,"createdAt":"2019-07-30T19:52:02Z","updatedAt":"2019-07-30T19:52:02Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516337000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/275","number":275,"title":" Update Readme.md of coala-community repository","body":"","comments":0,"createdAt":"2019-07-30T19:52:17Z","updatedAt":"2019-07-30T19:52:17Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1562831438000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/262","number":262,"title":"Add netlify-oauth","body":"","comments":0,"createdAt":"2019-07-11T07:50:38Z","updatedAt":"2019-07-11T07:50:38Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1563431075000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/264","number":264,"title":"Create a user profile page","body":"The design of profile page should be based on the following mockup design https://gitlab.com/coala/GSoC/gsoc-2019/issues/267#note_178633245","comments":0,"createdAt":"2019-07-18T06:24:35Z","updatedAt":"2019-07-18T06:24:35Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564515901000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/265","number":265,"title":"Add form for adding a new Google form","body":"","comments":0,"createdAt":"2019-07-18T06:25:01Z","updatedAt":"2019-07-30T19:45:01Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1563431434000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/266","number":266,"title":" Add Newcomers form to community website","body":"The form should me created in a manner to allow users to join the community with performing some rudimentary checks. Using netlify forms, the submissions will be saved on netlify itself and a cron job should be defined in coala-webservices to fetch all such submissions and run the checks on each submission. Passing the checks, will send an invite to the user else an email will be sent informing the errors to it.","comments":0,"createdAt":"2019-07-18T06:30:34Z","updatedAt":"2019-07-18T06:30:34Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564503671000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/268","number":268,"title":"Display contributor statistics","body":"","comments":0,"createdAt":"2019-07-30T16:21:11Z","updatedAt":"2019-07-30T16:21:11Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564515927000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/270","number":270,"title":"Add form for adding/updating a calendar event","body":"","comments":0,"createdAt":"2019-07-30T19:45:27Z","updatedAt":"2019-07-30T19:45:27Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516107000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/271","number":271,"title":"Add a web-page for mentors","body":"","comments":0,"createdAt":"2019-07-30T19:48:19Z","updatedAt":"2019-07-30T19:48:27Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1563182982000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/232","number":232,"title":"Deploy of fork to netlify fails the build","body":"Following the instructions to deploy the changes pushed in forked repo on netlify is failing the build.\nError log - https://gist.github.com/KVGarg/db41b5f3019513f3659dd44c014ba27c","comments":8,"createdAt":"2019-02-04T20:09:36Z","updatedAt":"2019-07-15T09:29:42Z","closedAt":"2019-07-15T09:29:42Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564515428000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/247","number":247,"title":"pytest v4.4.0 is causing build failures","body":"Build failure log - https://travis-ci.org/coala/community/jobs/532912493","comments":2,"createdAt":"2019-05-16T10:43:15Z","updatedAt":"2019-07-30T19:37:08Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1563448373000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/89","number":89,"title":"Create a Netlify form for joining the community","body":"Netlify forms can be used to let people 'become a developer' from their web browser.  It allows signing using GitHub, for authenticated collection of their username to be added to the org.  We could also add a field for the issue they want to be assigned to.\nIt is then easy for maintainers to invite them to the org after some rudimentary checks, or add a http://webtask.io which automatically invites them if they pass some basic automated checks to prevent abuse.\nProbably a good app name is '/join'","comments":4,"createdAt":"2018-03-10T20:25:20Z","updatedAt":"2019-07-18T11:12:53Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1563573758000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/186","number":186,"title":"moban sync needed","body":"See https://gitlab.com/coala/mobans/blob/master/README.rst for more details","comments":4,"createdAt":"2019-02-03T08:43:27Z","updatedAt":"2019-07-19T22:02:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"rishikesh1410","avatarUrl":"https://avatars3.githubusercontent.com/u/31008983?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564458049000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2939","number":2939,"title":"Sync templates with moban","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-07-29T13:50:40Z","updatedAt":"2019-07-30T03:40:49Z","closedAt":null,"state":"open","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2939","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563755496000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2934","number":2934,"title":"bears/general: Add RegexLintBear","body":"Closes #1532\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2019-07-20T16:23:44Z","updatedAt":"2019-07-22T00:31:36Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2934","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzEyNQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617125","bodyText":"We use common description for language, 'The programming language of the file(s).'.","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture\n+from contextlib import suppress\n+\n+from bears.general.AnnotationBear import AnnotationBear\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from coalib.testing.LocalBearTestHelper import execute_bear\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RegexLintBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    REQUIREMENTS = {PipRequirement('regexlint', '1.6')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+    CAN_DETECT = {'Formatting'}\n+\n+    def run(self, filename, file, language: str):\n+        \"\"\"\n+        Bear for linting regex through regexlint.\n+\n+        :param language:\n+            The language of the files, must be supported by coala.","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NTgwMA==","createdAt":"2019-07-21T13:13:40Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T13:02:53Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:02:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzM1OQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617359","bodyText":"sarge is coala dependency?\nAfaik, sarge comes from package_manager, if you are using it directly here, you'll need to add it to requirements.txt.\nMaybe you can confirm this from @jayvdb","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T13:08:11Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:08:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzQ4Nw==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617487","bodyText":"This is a part of LocalBearTestHelper, I'm not too sure if we should use this here. But I don't find any reason not to do so.","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture\n+from contextlib import suppress\n+\n+from bears.general.AnnotationBear import AnnotationBear\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from coalib.testing.LocalBearTestHelper import execute_bear\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RegexLintBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    REQUIREMENTS = {PipRequirement('regexlint', '1.6')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+    CAN_DETECT = {'Formatting'}\n+\n+    def run(self, filename, file, language: str):\n+        \"\"\"\n+        Bear for linting regex through regexlint.\n+\n+        :param language:\n+            The language of the files, must be supported by coala.\n+        \"\"\"\n+        section = Section('')\n+        section.append(Setting('language', language))\n+        bear = AnnotationBear(section, Queue())\n+\n+        with execute_bear(bear, filename, file) as result:","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T13:10:36Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:10:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzUyMQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617521","bodyText":"Why so many? We know it would be fine since we already tested it. Keeping this once is also fine...","diffHunk":"@@ -0,0 +1,87 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NTgwNQ==","createdAt":"2019-07-21T13:14:13Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T13:11:28Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:11:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzYwNQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617605","bodyText":"I think I'm not very sure about this since we might just create a conflict if the versions mismatch later on.","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-21T13:13:50Z","lastEditedAt":"2019-07-21T13:30:15Z","updatedAt":"2019-07-21T13:30:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzYyOA==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617628","bodyText":"Yeah, I missed to delete them later :P","diffHunk":"@@ -0,0 +1,87 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-21T13:14:31Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:14:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2MTA0Nw==","url":"https://github.com/coala/coala-bears/pull/2934#issuecomment-513561047","bodyText":"Restarted few jobs, there was a timeout.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:51:34Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:51:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2MTExOQ==","url":"https://github.com/coala/coala-bears/pull/2934#issuecomment-513561119","bodyText":"@sangamcse @kriti21 You guys can also have a look.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:52:10Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:52:10Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564370813000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2935","number":2935,"title":"bears/python: Add RequirementsCheckBear","body":"Closes #1113\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-07-21T03:10:35Z","updatedAt":"2019-07-29T03:26:53Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2935","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMjkxNQ==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308002915","bodyText":"Can there be a case where lines[0] doesn't contain Could not? If yes, then what message will it yield for that?","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()\n+                if not orig_file:\n+                    orig_file = cont\n+                else:\n+                    data += cont\n+\n+        with open(req_files[0], 'a+') as temp_file:\n+            temp_file.write(data)\n+\n+        out = capture_both('pip-compile {} -r -n --no-annotate --no-header '\n+                           '--no-index --allow-unsafe'.format(req_files[0]))\n+\n+        if out.stderr.text and not out.stdout.text:\n+            lines = out.stderr.text.splitlines()\n+            yield Result(self,\n+                         message=[s for s in lines if 'Could not' in s][0],","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2019-07-28T13:55:19Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:55:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMzAyNA==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308003024","bodyText":"Better to give a meaningful variable name for cont","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzU2MzUyNA==","createdAt":"2019-07-29T03:06:50Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-28T13:57:48Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:57:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMzAzNg==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308003036","bodyText":"require_files makes more sense.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzU2MzUyNg==","createdAt":"2019-07-29T03:06:59Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-28T13:58:18Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:58:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMzA3OA==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308003078","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              The bear to check and find any conflicting dependencies.\n        \n          \n            \n                The bear to check and find any conflicting pip dependencies.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzU2MzUzOA==","createdAt":"2019-07-29T03:07:11Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-28T13:59:22Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:59:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODA0MTkzNg==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308041936","bodyText":"The exception will always have 'Could not' in it. Actually, the better solution was to just get lines[0] but, some of the warnings from pip are getting recorded too with it.\nhttps://github.com/jazzband/pip-tools/blob/b37b91d251f7c7e590047f902e6f51e9a49d276c/piptools/exceptions.py#L22","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()\n+                if not orig_file:\n+                    orig_file = cont\n+                else:\n+                    data += cont\n+\n+        with open(req_files[0], 'a+') as temp_file:\n+            temp_file.write(data)\n+\n+        out = capture_both('pip-compile {} -r -n --no-annotate --no-header '\n+                           '--no-index --allow-unsafe'.format(req_files[0]))\n+\n+        if out.stderr.text and not out.stdout.text:\n+            lines = out.stderr.text.splitlines()\n+            yield Result(self,\n+                         message=[s for s in lines if 'Could not' in s][0],","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-29T03:03:31Z","lastEditedAt":null,"updatedAt":"2019-07-29T03:03:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODA0NDg3Mw==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308044873","bodyText":"Updated, seems like a much better solution now.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()\n+                if not orig_file:\n+                    orig_file = cont\n+                else:\n+                    data += cont\n+\n+        with open(req_files[0], 'a+') as temp_file:\n+            temp_file.write(data)\n+\n+        out = capture_both('pip-compile {} -r -n --no-annotate --no-header '\n+                           '--no-index --allow-unsafe'.format(req_files[0]))\n+\n+        if out.stderr.text and not out.stdout.text:\n+            lines = out.stderr.text.splitlines()\n+            yield Result(self,\n+                         message=[s for s in lines if 'Could not' in s][0],","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-29T03:26:53Z","lastEditedAt":null,"updatedAt":"2019-07-29T03:26:53Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563692931000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2910","number":2910,"title":"Use tox","body":"Green builds, and lots of closes.  Continues #1386 .  This is a new PR because that one is so old and has some interesting implementation choices where are no longer relevant due to new approaches.\nWIP as the commits need to be split up, linked to issues, etc.\nA few parts of this are hopefully going to be replaced with PRs underway by other folk, otherwise I'll take over the assigned issues.\nThis also implements https://gitlab.com/coala/mobans/merge_requests/130 for Windows CI on both AppVeyor and Travis CI.","comments":4,"createdAt":"2019-05-25T20:02:36Z","updatedAt":"2019-07-21T07:08:51Z","closedAt":"2019-07-21T07:08:50Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2910","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3Mzk4OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r287573989","bodyText":"unused file; should be deleted.  Also the two files above changing only permissions dont need to be in this PR","diffHunk":"@@ -0,0 +1,17 @@\n+#!/bin/sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:16:55Z","lastEditedAt":null,"updatedAt":"2019-05-25T20:16:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3NDAwMA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r287574000","bodyText":"unused iirc","diffHunk":"@@ -0,0 +1,10 @@\n+#!/bin/bash","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:17:42Z","lastEditedAt":null,"updatedAt":"2019-05-25T20:17:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg0NA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799844","bodyText":"Not worth raising upstream to tox-travis - which isnt too active and unlikely to fix it soon (I'm one of the contributors)  They have related issues unsolved for years\njust remove this comment.","diffHunk":"@@ -0,0 +1,141 @@\n+[tox]\n+envlist = py{34,35,36,37}-{all,pip,clang,npm,gem,go,perl,php,cabal,java,java7,java8,scala,elm,r,dart,julia,lua,infer,opam,apt,adhoc,disabled,win,swift,mono}-{list,check,collectonly,skip,noskip}-codecov\n+minversion = 3.4\n+# Doesnt work","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:38:53Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:38:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg1MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799851","bodyText":"probably unnecessary","diffHunk":"@@ -80,6 +80,18 @@ def tearDown(self):\n             onerror = None\n         shutil.rmtree(self.gitdir, onerror=onerror)\n \n+    def test_check_prerequisites(self):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:39:15Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:39:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg1OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799859","bodyText":"move to separate commit.","diffHunk":"@@ -9,9 +6,6 @@\n bad_file = 'tihs si surly som incoreclt speling.'\n \n \n-SpellCheckLintBearTest = unittest.skipIf(\n-    platform.system() == 'Windows',\n-    \"SpellCheckBear doesn't work on windows\")(\n-        verify_local_bear(SpellCheckBear,\n-                          valid_files=(good_file,),\n-                          invalid_files=(bad_file,)))\n+SpellCheckLintBearTest = verify_local_bear(SpellCheckBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:39:44Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:39:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg4MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799881","bodyText":"this possibly needs a change to the template.\nBut the other changes to this file need to be undone.","diffHunk":"@@ -17,9 +17,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n-  --doctest-modules\n   --doctest-ignore-import-error\n-  --cov","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:40:54Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:40:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg4OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799889","bodyText":"this was working around a bug - remove and fix bug","diffHunk":"@@ -17,9 +17,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n-  --doctest-modules","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:41:11Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:41:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTkzOA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799938","bodyText":"switch to using @frextrite 's branch","diffHunk":"@@ -15,17 +15,16 @@\n         severity_map={'style': RESULT_SEVERITY.NORMAL,\n                       'warning': RESULT_SEVERITY.NORMAL,\n                       'error': RESULT_SEVERITY.MAJOR},\n-        prerequisite_check_command=('Rscript', '-e', 'library(lintr)'),\n-        prerequisite_check_fail_message='R library \"lintr\" is not installed.')\n-class RLintBear:  # pragma nt: no cover\n+        )\n+class RLintBear:\n     \"\"\"\n     Checks the code with ``lintr``.\n     \"\"\"\n     LANGUAGES = {'R'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     REQUIREMENTS = {RscriptRequirement('lintr',\n-                                       version='>=1.0.2'),\n+                                       ),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:43:45Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:43:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDA0Mw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800043","bodyText":"discard changes.  they can be included in #2922 (comment)","diffHunk":"@@ -37,9 +37,9 @@ def check_prerequisites(cls):\n         try:\n             output = subprocess.check_output(('alex', '--help'),\n                                              stderr=subprocess.STDOUT)\n-        except (OSError, subprocess.CalledProcessError):\n-            return ('The `alex` package could not be verified. ' +\n-                    incorrect_pkg_msg)\n+        except (OSError, subprocess.CalledProcessError) as e:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:48:25Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:48:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDA3Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800077","bodyText":"separate commit","diffHunk":"@@ -17,7 +17,7 @@ html-linter~=0.4.0\n isort~=4.2\n language-check~=1.0\n libclang-py3~=3.4.0\n-lxml==3.6.0\n+lxml","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:49:50Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:49:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDEwOQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800109","bodyText":"re-check - probably not needed","diffHunk":"@@ -0,0 +1 @@\n+install:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:50:56Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:50:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDEzMA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800130","bodyText":"use main()","diffHunk":"@@ -0,0 +1,12 @@\n+#!/usr/bin/env python3\n+\n+import sys\n+\n+# Tags like list, check and collectonly shouldnt appear on codecov\n+# but they also shouldnt be submitted to codecov, so they are not\n+# removed here as that would hide a bug in tox.ini\n+REJECT_TAGS = set(['codecov', 'skip', 'noskip'])\n+\n+env_factors = set(sys.argv[1].split('-'))\n+\n+print(','.join(sorted(env_factors - REJECT_TAGS)))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:51:29Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:51:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDE5NQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800195","bodyText":"If time allows, get all of this moved into the PM repo","diffHunk":"@@ -0,0 +1,515 @@\n+#!/usr/bin/env python3\n+\n+# This program is free software: you can redistribute it and/or modify it\n+# under the terms of the GNU Affero General Public License as published by the\n+# Free Software Foundation, either version 3 of the License, or (at your\n+# option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License\n+# for more details.\n+#\n+# You should have received a copy of the GNU Affero General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+import argparse\n+import collections\n+import copy\n+import itertools\n+import logging\n+import os\n+import sys\n+\n+from ruamel.yaml import YAML, RoundTripDumper\n+from ruamel.yaml.comments import CommentedMap\n+\n+from coalib.bears.BEAR_KIND import BEAR_KIND\n+from coalib.collecting.Collectors import collect_bears\n+\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements,\n+)\n+from dependency_management.requirements.DistributionRequirement import (\n+    DistributionRequirement,\n+)\n+from dependency_management.requirements.ExecutableRequirement import (\n+    ExecutableRequirement,\n+)\n+\n+DISABLED_BEARS = []\n+\n+yaml = YAML(typ='rt')\n+yaml.default_flow_style = False\n+yaml.Dumper = RoundTripDumper\n+\n+BEAR_METADATA_YAML = 'bear-metadata.yaml'\n+BEAR_REQUIREMENTS_YAML = 'bear-requirements.yaml'\n+BEAR_LANGUAGES_YAML = 'bear-languages.yaml'\n+\n+_VERSION_OPERATORS = ('<', '>', '~', '=', '-', '!')\n+\n+THIS_DIR = os.path.dirname(os.path.abspath(__file__))\n+\n+PROJECT_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\n+\n+PROJECT_BEAR_DIR = os.path.abspath(os.path.join(PROJECT_DIR, 'bears'))\n+\n+\n+def get_args():\n+    parser = argparse.ArgumentParser(\n+        description='This program generates a yaml requirement file for '\n+                    'installation of linters that are used by the bears.')\n+    parser.add_argument('--output', '-o',\n+                        help='name of file to generate, or - for stdout',\n+                        default=os.path.join(PROJECT_DIR,\n+                                             BEAR_REQUIREMENTS_YAML))\n+    parser.add_argument('--bear-dirs', '-d', nargs='+', metavar='DIR',\n+                        help='additional directories which may contain bears')\n+\n+    parser.add_argument('--debug', action='store_true',\n+                        help='sets logging level to debug.')\n+    parser.add_argument('--check', '-c', action='store_true',\n+                        help='performs a dry run, and reports differences.')\n+    parser.add_argument('--update', '-u', action='store_true',\n+                        help='updates \"bear-requirements.yaml\" '\n+                             'instead of overwriting')\n+    args = parser.parse_args()\n+\n+    return args\n+\n+\n+def get_all_bears(bear_dirs):\n+    local_bears, global_bears = collect_bears(\n+        bear_dirs,\n+        ['**'],\n+        [BEAR_KIND.LOCAL, BEAR_KIND.GLOBAL],\n+        warn_if_unused_glob=False)\n+    return list(itertools.chain(local_bears, global_bears))\n+\n+\n+def get_inherited_requirements():\n+    inherited_requirements = set()\n+\n+    in_inherited = False\n+    with open(os.path.join(PROJECT_DIR, 'requirements.txt'), 'r') as file:\n+        for line in file.read().splitlines():\n+            if 'inherited' in line:\n+                in_inherited = True\n+                continue\n+            if in_inherited:\n+                if line.startswith('# '):\n+                    requirement = line[2:]\n+                    inherited_requirements.add(requirement.replace('-', '_'))\n+                    inherited_requirements.add(requirement.replace('_', '-'))\n+                else:\n+                    in_inherited = False\n+\n+    return inherited_requirements\n+\n+\n+INHERITED_PIP_REQUIREMENTS = get_inherited_requirements()\n+\n+REQUIREMENT_TYPES = collections.OrderedDict({","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:54:55Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:54:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDIxNA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800214","bodyText":"-v 1.16.1 necessary ??  Needs a comment explaining why","diffHunk":"@@ -0,0 +1 @@\n+gem install bundler -v 1.16.1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:55:52Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:55:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI0MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800240","bodyText":"remove R_LIB_USER everywhere as it is mispelt; find variable for /usr/local/lib/R/site-library","diffHunk":"@@ -4,7 +4,7 @@ set -e\n set -x\n \n # R commands\n-echo '.libPaths( c( \"'\"$R_LIB_USER\"'\", .libPaths()) )' >> .Rprofile\n+echo '.libPaths( c( \"/usr/local/lib/R/site-library\", .libPaths()) )' >> ~/.Rprofile","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:56:57Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:56:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI1Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800256","bodyText":".cmd not needed ?","diffHunk":"@@ -0,0 +1,4 @@\n+R.exe -e \"install.packages('formatR')\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:57:44Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:57:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI2MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800261","bodyText":"doubt this is needed either","diffHunk":"@@ -0,0 +1,2 @@\n+install.packages(\"formatR\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:57:59Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:57:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI5MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800291","bodyText":"separate commit for this","diffHunk":"@@ -24,7 +24,18 @@ if [ ! -e ~/infer-linux64-v0.7.0/infer/bin ]; then\n   # See https://github.com/coala/coala-bears/issues/1763\n   opam pin add --yes --no-action reason 1.13.5\n \n+  opam pin add --yes --no-action javalib 2.3.1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:59:21Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:59:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI5OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800299","bodyText":"cleanup","diffHunk":"@@ -0,0 +1,12 @@\n+#julia -e \"Pkg.add(\\\"Lint\\\")\"\n+\n+#julia -e \"import Lint.lintfile\"\n+\n+#mkdir deps","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:59:41Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:59:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDMzMA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800330","bodyText":"inline it, so no need for extra file .ci/deps.goreturns.sh","diffHunk":"@@ -7,3 +7,5 @@ go get -u github.com/alecthomas/gometalinter\n gometalinter --install\n \n go get -u github.com/BurntSushi/toml/cmd/tomlv\n+\n+.ci/deps.goreturns.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T14:01:21Z","lastEditedAt":null,"updatedAt":"2019-06-29T14:01:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDM2MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800361","bodyText":"Add note about elm version here; as 0.19 needs elm.json instead","diffHunk":"@@ -0,0 +1,11 @@\n+function Install-Elm-Format {\n+    elm-compiler --version\n+    wget https://github.com/avh4/elm-format/releases/download/0.8.1/elm-format-0.8.1-win-i386.zip\n+    7z e elm-format-0.8.1-win-i386.zip\n+    mv elm-format.exe ./node_modules/.bin\n+    touch elm-package.json","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T14:02:41Z","lastEditedAt":null,"updatedAt":"2019-06-29T14:02:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgyOTY4Mw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298829683","bodyText":"Need to also address status of old & unusable circle.yml","diffHunk":"@@ -4,7 +4,7 @@ set -e\n set -x\n \n # R commands\n-echo '.libPaths( c( \"'\"$R_LIB_USER\"'\", .libPaths()) )' >> .Rprofile\n+echo '.libPaths( c( \"/usr/local/lib/R/site-library\", .libPaths()) )' >> ~/.Rprofile","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:32:47Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:32:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgyOTg2MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298829860","bodyText":"probably related to .travis.yml entry if [ -f .ci/$TRAVIS_LANGUAGE.GNUMakefile ]; then ln -s .ci/$TRAVIS_LANGUAGE.GNUMakefile ./GNUMakefile; fi , possibly to deactivate something.","diffHunk":"@@ -0,0 +1 @@\n+install:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:37:09Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:37:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDEyMQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830121","bodyText":"this should be moved into .ci/deps.elm.sh","diffHunk":"@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+set -e -x\n+\n+# NPM commands\n+ALEX=$(which alex || true)\n+# Delete 'alex' if it is not in a node_modules directory,\n+# which means it is ghc-alex.\n+if [[ -n \"$ALEX\" && \"${ALEX/node_modules/}\" == \"${ALEX}\" ]]; then\n+  echo \"Removing $ALEX\"\n+  sudo rm -rf $ALEX\n+fi\n+\n+if [ -z \"$TRAVIS_LANGUAGE\" ]; then\n+  npm install\n+  npm list --depth=0\n+fi\n+\n+# elm-format Installation\n+if [ ! -e ~/.local/bin/elm-format ]; then","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:43:34Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:43:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDEzNQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830135","bodyText":"not sure what this was about","diffHunk":"@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+set -e -x\n+\n+# NPM commands\n+ALEX=$(which alex || true)\n+# Delete 'alex' if it is not in a node_modules directory,\n+# which means it is ghc-alex.\n+if [[ -n \"$ALEX\" && \"${ALEX/node_modules/}\" == \"${ALEX}\" ]]; then\n+  echo \"Removing $ALEX\"\n+  sudo rm -rf $ALEX\n+fi\n+\n+if [ -z \"$TRAVIS_LANGUAGE\" ]; then","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:43:54Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:43:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDE4Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830187","bodyText":"move into a new .ci/deps.alex.sh, as it is probably useful from generic images","diffHunk":"@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+set -e -x\n+\n+# NPM commands\n+ALEX=$(which alex || true)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:45:15Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:45:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDM1OA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830358","bodyText":"this is unused unless there is a travis BEARS= entry referring to 'pear'","diffHunk":"@@ -0,0 +1,2 @@\n+pear install pear/PHP_CodeSniffer","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:49:06Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:49:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMjEyNw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298832127","bodyText":"todo: this depends on another feature in tox-backticks","diffHunk":"@@ -0,0 +1,135 @@\n+[tox]\n+envlist = py{34,35,36,37}-{all,pip,clang,npm,gem,go,perl,php,cabal,java,java7,java8,scala,elm,r,dart,julia,lua,infer,opam,apt,adhoc,disabled,win,swift,mono}-{list,check,collectonly,skip,noskip}-codecov\n+minversion = 3.4\n+\n+[travis:env]\n+TRAVIS =\n+  true: codecov\n+TRAVIS_LANGUAGE =\n+  python: pip-noskip\n+  node_js: py36-npm-noskip\n+  ruby: py36-gem-noskip\n+  haskell: py36-cabal-noskip\n+  go: py36-go-noskip\n+  perl: py36-perl-noskip\n+  php: py36-php-noskip\n+  scala: py36-scala-noskip\n+  elm: py36-elm-noskip\n+  r: py36-r-noskip\n+  dart: py36-dart-noskip\n+  julia: py36-julia-noskip\n+  objective_c: py36-swift-noskip\n+  swift: py36-swift-noskip\n+  objectivec: py36-swift-noskip\n+  objective-c: py36-swift-noskip\n+  csharp: py36-mono-noskip\n+  minimal,generic: py36-adhoc-noskip\n+TRAVIS_JDK_VERSION =\n+  oraclejdk11: py36-java-skip\n+  oraclejdk9: py36-java-skip\n+  oraclejdk8: py36-java8-noskip\n+  openjdk11: py36-java-skip\n+  openjdk10: py36-java-skip\n+  openjdk9: py36-java-skip\n+  openjdk8: py36-java8-noskip\n+  openjdk7: py36-java7-noskip\n+# apt_get is the only group allowed to skip\n+BEARS =\n+  apt_get: py36-apt-skip\n+  lua: py36-lua-noskip\n+  infer: py36-infer-noskip\n+  opam: py36-opam-noskip\n+  adhoc: py36-adhoc-noskip\n+  clang: py36-clang-noskip\n+  disabled: py36-disabled-noskip\n+\n+# pyyaml literally here to support get_tests.py\n+[testenv]\n+passenv =\n+  HOME\n+  PATH\n+  CI CI_*\n+  TRAVIS TRAVIS_*\n+  APPVEYOR APPVEYOR_*\n+  TOX_*\n+  PIP_*\n+  VIRTUALENV_*\n+  LOCALAPPDATA\n+  GEM_HOME\n+  GEM_PATH\n+  JULIA_PROJECT\n+  GOROOT\n+  GOPATH\n+  BEARS\n+  BEAR_LIST\n+  DISABLE_BEARS\n+  R_LIBS_USER\n+  R_LIBS_SITE\n+  _R_CHECK_CRAN_INCOMING_\n+  NOT_CRAN\n+  R_PROFILE\n+pip_version = 9.0.1\n+alwayscopy = true\n+skipsdist = true\n+skip_install = true\n+list_dependencies_command = python -m pip freeze --local\n+whitelist_externals =\n+    pytest\n+    bash\n+    rm\n+deps =\n+    # Doing this inside tox failed once\n+    # https://travis-ci.org/jayvdb/coala-bears/jobs/547197301\n+    # hg+https://bitbucket.org/jayvdb/sarge@win-reg-lookup#egg=sarge\n+    git+https://github.com/coala/coala#egg=coala\n+    pip: -rbear-requirements.txt\n+    # These two are needed for some non-pip bears\n+    !pip: aenum\n+    !pip: PyYAML\n+    npm: docutils-ast-writer~=0.1.2\n+    apt,clang,mono,adhoc: libclang-py3~=3.4.0\n+    clang: munkres3~=1.0\n+    java7,java8: language-check~=1.0\n+    java7,java8: guess-language-spirit~=0.5.2\n+    -rtest-requirements.txt\n+    # pytest-cov-threshold is incompatible with py34\n+    !py34: git+https://github.com/krkd/pytest-cov-threshold\n+    noskip: pytest-error-for-skips\n+setenv =\n+    all,pip: PIPBEARS=`python .ci/get_tests.py noreqs pip`\n+    all,clang: PIPBEARS=`python .ci/get_tests.py clang`\n+    all,npm: NPMBEARS=`python .ci/get_tests.py npm`\n+    all,elm: NPMBEARS=`python .ci/get_tests.py elm`\n+    all,gem: GEMBEARS=`python .ci/get_tests.py gem`\n+    all,go: GOBEARS=`python .ci/get_tests.py go`\n+    all,perl: PERLBEARS=`python .ci/get_tests.py perl`\n+    all,php: PHPBEARS=`python .ci/get_tests.py php`\n+    all,cabal: CABALBEARS=`python .ci/get_tests.py cabal`\n+    all,java8: JAVABEARS=`python .ci/get_tests.py java`\n+    all,java7: JAVABEARS=`python .ci/get_tests.py java`\n+    all,java: JAVABEARS=`python .ci/get_tests.py java`\n+    all,scala: JAVABEARS=`python .ci/get_tests.py scala`\n+    all,swift: JAVABEARS=`python .ci/get_tests.py swift`\n+    all,mono: MONOBEARS=`python .ci/get_tests.py mono`\n+    all,r: RBEARS=`python .ci/get_tests.py r`\n+    all,dart: DARTBEARS=`python .ci/get_tests.py dart`\n+    all,julia: JULIABEARS=`python .ci/get_tests.py julia`\n+    all,lua: LUABEARS=`python .ci/get_tests.py lua`\n+    all,opam,infer: OPAMBEARS=`python .ci/get_tests.py opam`\n+    all,apt: APTBEARS=`python .ci/get_tests.py apt_get`\n+    adhoc: ADHOCBEARS=`python .ci/get_tests.py {env:BEAR_LIST}`\n+    disabled: DISABLEDBEARS=`python .ci/get_tests.py --disabled {env:BEAR_LIST}`\n+    SELECTED={env:PIPBEARS:} {env:NPMBEARS:} {env:GEMBEARS:} {env:GOBEARS:} {env:PERLBEARS:} {env:PHPBEARS:} {env:CABALBEARS:} {env:JAVABEARS:} {env:MONOBEARS:} {env:RBEARS:} {env:DARTBEARS:} {env:JULIABEARS:} {env:LUABEARS:} {env:OPAMBEARS:} {env:APTBEARS:} {env:ADHOCBEARS:} {env:DISABLEDBEARS:}\n+    noskip: PYTEST_ARGS=--error-for-skips\n+    py34-noskip: PYTEST_ARGS=--error-for-skips -k 'not test_valid_async'\n+    win-noskip: PYTEST_ARGS=--error-for-skips -k 'not test_language_french and not test_valid_async'\n+    collectonly,list: PYTEST_ARGS=--collect-only\n+    codecov: CODECOV_FLAGS=`python .ci/get_codecov_tags.py {envname}`\n+commands =\n+    check,list,all: python .ci/get_bears.py --missing {env:SELECTED}\n+    java: bash -e -x .ci/deps.coala-bears.sh\n+    !py34,!apt: python .ci/generate_coverage_thresholds.py {posargs:{env:SELECTED}}\n+    py34,apt: rm -f .threshold.json\n+    !list: pytest {env:PYTEST_ARGS:} --cov --cov-fail-under=0 --continue-on-collection-errors --cov-report term-missing:skip-covered --deselect=requirements.txt {posargs:{env:SELECTED}}\n+    codecov: codecov --name={envname} --flags={env:CODECOV_FLAGS}\n+# Use commands_post =","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:36:42Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:36:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMjE2Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298832166","bodyText":"maybe not required; nor Project.toml or JuliaProject.toml","diffHunk":"@@ -0,0 +1,2 @@\n+julia\n+Lint","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:37:45Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:37:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMjMxMw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298832313","bodyText":"remove - coala isnt installed yet, so we cant use .ci/deps.coala-bears.sh","diffHunk":"@@ -1,22 +1,18 @@\n-#!/bin/sh\n+#!/bin/bash\n \n-set -e\n-set -x\n+set -e -x\n \n-# PMD commands\n-PMD_VERSION=5.4.1\n-if [ ! -e ~/.local/bin/pmd ]; then\n-  wget -nc -O ~/pmd.zip https://github.com/pmd/pmd/releases/download/pmd_releases%2F5.4.1/pmd-bin-5.4.1.zip\n-  unzip ~/pmd.zip -d ~/\n-  cp -r ~/pmd-bin-$PMD_VERSION/* ~/.local/\n+if [ -n \"$TRAVIS_JDK_VERSION\" ]; then\n+  jdk_version=${TRAVIS_JDK_VERSION#openjdk}\n+  jdk_version=${jdk_version#oraclejdk}\n fi\n \n-# Tailor (Swift) commands\n-# Comment out the hardcoded PREFIX, so we can put it into ~/.local\n-if [ ! -e ~/.local/tailor/tailor-latest ]; then\n-  curl -fsSL -o install.sh https://tailor.sh/install.sh\n-  sed -i 's/read -r CONTINUE < \\/dev\\/tty/CONTINUE=y/;;s/^PREFIX.*/# PREFIX=\"\"/;' install.sh\n-  PREFIX=$HOME/.local bash ./install.sh\n-  # Provide a constant path for the executable\n-  ln -s ~/.local/tailor/tailor-* ~/.local/tailor/tailor-latest\n+if [ -z \"$jdk_version\" ] || [ $jdk_version -eq 8 ]; then\n+  .ci/deps.tailor.sh\n fi\n+\n+if [ -z \"$(which pmd || true)\" ]; then\n+  .ci/deps.pmd.sh\n+fi\n+\n+#bash -e -x .ci/deps.coala-bears.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:41:08Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:41:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzE1MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833150","bodyText":"This is a future task todo; not feasible in short term","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:58:41Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:58:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzE1Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833157","bodyText":"todo now!","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:58:49Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:58:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzI1MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833251","bodyText":"this job is holding up the build, as it takes longer than the others in test-languages; maybe move to test-other-versions\nthe others finish around 20mins - the windows job takes 27 mins","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:01:07Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:01:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzI3MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833270","bodyText":"these jobs might be better in test-other-versions","diffHunk":"@@ -21,13 +17,19 @@ python:\n stages:\n   - name: sentinel\n     if: branch != master OR type = pull_request\n-  - test\n+  - test-python\n+  - test-languages\n+  - test-other-versions\n+  - test-apt","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:01:35Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:01:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzM2NA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833364","bodyText":"another \"must work out what to do with old circle.yml\" stuff.","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is\n+        # disabled in choco_requirements.  Uninstalling vctools fails\n+      install:\n+        - powershell -c \". .ci/Fudge.ps1 install\"\n+        - refreshenv\n+        - taskkill -IM \"gpg-agent.exe\" || true\n+      before_script:\n+        - python --version\n+      script:\n+        - \"sed -i 's/^envlist.*$/envlist: '$TOXENV/ tox.ini\"\n+        - python -m tox --sitepackages\n+        - git checkout tox.ini\n+\n+    - stage: test-python\n+\n+      language: python\n+      python: 3.6\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.5\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.4\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: csharp\n+      mono: 5.20.1\n+\n+    - language: r\n+      r: release\n+\n+    - language: node_js\n+      node_js: 10\n+\n+    - language: julia\n+      # default language is 0.6.4, and has problems with pre-installed Lint.jl\n+      julia: 1.1\n+      env: JL_PKG=CoalaBears\n+      # install not provided https://github.com/travis-ci/travis-build/pull/1571\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        # Verify compilation works\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: dart\n+      dart: 1.15.0\n+\n+    - language: perl\n+      perl: 5.14\n+\n+    - language: go\n+      go: 1.11\n+      install: true\n+\n+    - language: ruby\n+      rvm: 2.4\n+\n+    - language: php\n+      php: 7.2\n+\n+    - language: java\n+      jdk: oraclejdk8\n+\n+    - language: scala\n+      scala: 2.11\n+\n+    - language: lua\n+      env: BEARS=lua\n+      addons:\n+        apt:\n+          packages:\n+            - luarocks\n+\n+    - language: generic\n+      env: BEARS=opam INFER_VERSION=0.7.0\n+           PATH=$PATH:$HOME/infer-linux64-v$INFER_VERSION/infer/bin\n+      addons:\n+        apt:\n+          sources:\n+            - avsm\n+          packages:\n+            - camlp4-extra\n+            - ocaml\n+            - opam\n+\n+    # This is in generic image, as language: haskell isnt working yet\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"ghc-mod hlint\"\n+      # ghc-mod needs parts of ghc, specifically at least /usr/lib/ghc/settings\n+      # ghc-mod needs cabal-install\n+      # shellcheck is failing in xenial\n+      addons:\n+        apt:\n+          packages:\n+            - cabal-install\n+            - ghc\n+            - ghc-mod\n+            - hlint\n+\n+    # BEARS=apt_get rather than 'apt' to avoid invoking .deps.apt.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:03:37Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:03:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzk0Mg==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833942","bodyText":"need to get out the blame for these libraries -- they probably made one of the languages faster; probably R","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is\n+        # disabled in choco_requirements.  Uninstalling vctools fails\n+      install:\n+        - powershell -c \". .ci/Fudge.ps1 install\"\n+        - refreshenv\n+        - taskkill -IM \"gpg-agent.exe\" || true\n+      before_script:\n+        - python --version\n+      script:\n+        - \"sed -i 's/^envlist.*$/envlist: '$TOXENV/ tox.ini\"\n+        - python -m tox --sitepackages\n+        - git checkout tox.ini\n+\n+    - stage: test-python\n+\n+      language: python\n+      python: 3.6\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.5\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.4\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: csharp\n+      mono: 5.20.1\n+\n+    - language: r\n+      r: release\n+\n+    - language: node_js\n+      node_js: 10\n+\n+    - language: julia\n+      # default language is 0.6.4, and has problems with pre-installed Lint.jl\n+      julia: 1.1\n+      env: JL_PKG=CoalaBears\n+      # install not provided https://github.com/travis-ci/travis-build/pull/1571\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        # Verify compilation works\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: dart\n+      dart: 1.15.0\n+\n+    - language: perl\n+      perl: 5.14\n+\n+    - language: go\n+      go: 1.11\n+      install: true\n+\n+    - language: ruby\n+      rvm: 2.4\n+\n+    - language: php\n+      php: 7.2\n+\n+    - language: java\n+      jdk: oraclejdk8\n+\n+    - language: scala\n+      scala: 2.11\n+\n+    - language: lua\n+      env: BEARS=lua\n+      addons:\n+        apt:\n+          packages:\n+            - luarocks\n+\n+    - language: generic\n+      env: BEARS=opam INFER_VERSION=0.7.0\n+           PATH=$PATH:$HOME/infer-linux64-v$INFER_VERSION/infer/bin\n+      addons:\n+        apt:\n+          sources:\n+            - avsm\n+          packages:\n+            - camlp4-extra\n+            - ocaml\n+            - opam\n+\n+    # This is in generic image, as language: haskell isnt working yet\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"ghc-mod hlint\"\n+      # ghc-mod needs parts of ghc, specifically at least /usr/lib/ghc/settings\n+      # ghc-mod needs cabal-install\n+      # shellcheck is failing in xenial\n+      addons:\n+        apt:\n+          packages:\n+            - cabal-install\n+            - ghc\n+            - ghc-mod\n+            - hlint\n+\n+    # BEARS=apt_get rather than 'apt' to avoid invoking .deps.apt.sh\n+    # which is the old circle init\n+    - stage: test-apt\n+      language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=apt_get DISABLE_BEARS=shellcheck\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php7.0-cli\n+            - phpmd\n+            - php-codesniffer\n+            - verilator\n+\n+    - stage: test-apt\n+      language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"bakalint default-jre\"\n+\n+    - stage: test-apt\n+      language: generic\n+      env: DIST=trusty BEARS=adhoc BEAR_LIST=astyle\n+      addons:\n+        apt:\n+          sources:\n+            - sourceline:  # astyle\n+                deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main\n+              key_url:\n+                https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C\n+          packages:\n+            - astyle\n+\n+    - stage: test-other-versions\n+\n+      language: node_js\n+      node_js: 9\n+    - language: node_js\n+      node_js: 8\n+    - language: node_js\n+      node_js: 7\n+    - language: node_js\n+      node_js: 6\n+\n+    - language: ruby\n+      rvm: 2.5\n+      env: DISABLE_BEARS=csvlint\n+    - language: ruby\n+      rvm: 2.3\n+    - language: ruby\n+      rvm: 2.2\n+    - language: ruby\n+      rvm: 2.1\n+\n+    - language: go\n+      go: '1.10'\n+      install: true\n+\n+    - language: php\n+      php: hhvm-3.18\n+    - language: php\n+      php: 5.5\n+\n+    - language: scala\n+      jdk: oraclejdk8\n+      scala: 2.12.2\n+\n+    # oraclejdk10 is EOL\n+    - language: java\n+      jdk: oraclejdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+\n+    - language: java\n+      jdk: openjdk11\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk10\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk7\n+      env: DISABLE_BEARS=tailor\n+\n+    - language: dart\n+      dart: 1.14.2\n+\n+    - language: julia\n+      julia: 1.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: julia\n+      julia: 0.7.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: r\n+      r: devel\n+\n+    - language: r\n+      r: oldrel\n+\n+    - language: generic\n+      env: DIST=trusty BEARS=apt_get\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - php-codesniffer\n+            - shellcheck\n+            - verilator\n+\n+    - stage: test-apt\n+      language: generic\n+      env: DIST=precise BEARS=apt_get\n+      dist: precise\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - python3\n+            - verilator\n+\n+    - stage: test-master\n+\n+      # This is under other languages, as the only bear is tailor\n+      # which is java, already covered above.  Listed first to schedule\n+      # it early onto osx, as they take a while to spin up\n+      language: objective_c\n+      os: osx\n+      dist: false\n+\n     - *check_moban\n   allow_failures:\n     - *check_moban\n \n-dist: trusty\n-\n-.apt_sources: &apt_sources\n-  - ubuntu-toolchain-r-test\n-  # avsm  # OPAM stable\n-  - hvr-ghc  # Haskell\n-  - sourceline:  # R\n-      deb https://cloud.r-project.org/bin/linux/ubuntu trusty-cran35/\n-    key_url:\n-      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x51716619E084DAB9\n-  - sourceline:  # Julia\n-      deb http://ppa.launchpad.net/staticfloat/juliareleases/ubuntu trusty main\n-    key_url:\n-      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xCF979FFA3D3D3ACC\n-  - sourceline:  # astyle\n-      deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main\n-    key_url:\n-      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C\n-\n-addons:\n-  apt:\n-    sources: *apt_sources\n-    packages:\n-      - aspcud\n-      - astyle\n-      - cabal-install-1.24\n-      - chktex\n-      - clang-3.4\n-      - cppcheck\n-      - devscripts\n-      - flawfinder\n-      - gfortran\n-      - ghc\n-      - happy\n-      - indent\n-      - julia\n-      - libarpack2\n-      - libblas-dev\n-      - libcolamd2.8.0\n-      - libfftw3-3\n-      - liblapack-dev\n-      - libopenblas-base\n-      - libpaper-utils\n-      - libperl-critic-perl\n-      - libumfpack5.6.2","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:18:05Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:18:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzk5Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833996","bodyText":"fudge unnecessary; as it is now in the repo","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:19:18Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:19:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDAxNg==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834016","bodyText":"turn off","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:19:43Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:19:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDA1OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834059","bodyText":"do this in a .ci/deps* file","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh\n+\n+  - if [ -f .ci/deps.$TRAVIS_LANGUAGE.sh ]; then\n+      bash -e -x .ci/deps.$TRAVIS_LANGUAGE.sh;\n+    fi\n+\n+  - python --version\n+  # ~/bin is uncached; ~/local/bin is cached; we dont want python/pip in latter\n+  - rm -f ~/.local/bin/python* ~/.local/bin/pip*\n+\n+  - source .ci/deps.pyenv.sh\n+  - pyenv versions\n+  - pyenv versions --bare\n+  # node-gpy needs py27\n+  - if [ \"$TRAVIS_LANGUAGE\" = \"node_js\" ]; then pyenv global 2.7; hash -r; fi\n+  - if [ \"$BEARS\" = \"infer\" ]; then pyenv global 2.7; hash -r; fi\n+  - pyenv versions\n+  - python --version\n+\n+  # Remove Ruby directive from Gemfile as we test many versions\n+  - sed -i.bak '/^ruby/d' Gemfile","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:20:41Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:20:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDA3MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834070","bodyText":"needs to go if not used.","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh\n+\n+  - if [ -f .ci/deps.$TRAVIS_LANGUAGE.sh ]; then\n+      bash -e -x .ci/deps.$TRAVIS_LANGUAGE.sh;\n+    fi\n+\n+  - python --version\n+  # ~/bin is uncached; ~/local/bin is cached; we dont want python/pip in latter\n+  - rm -f ~/.local/bin/python* ~/.local/bin/pip*\n+\n+  - source .ci/deps.pyenv.sh\n+  - pyenv versions\n+  - pyenv versions --bare\n+  # node-gpy needs py27\n+  - if [ \"$TRAVIS_LANGUAGE\" = \"node_js\" ]; then pyenv global 2.7; hash -r; fi\n+  - if [ \"$BEARS\" = \"infer\" ]; then pyenv global 2.7; hash -r; fi\n+  - pyenv versions\n+  - python --version\n+\n+  # Remove Ruby directive from Gemfile as we test many versions\n+  - sed -i.bak '/^ruby/d' Gemfile\n+\n+  # Used by go, to do nothing; not working\n+  - if [ -f .ci/$TRAVIS_LANGUAGE.GNUMakefile ]; then","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:20:53Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:20:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDA4NA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834084","bodyText":"recheck if this is needed","diffHunk":"@@ -1,3 +1,6 @@\n Package: coala\n Version: 0.10\n Depends: R (>= 3.1.0), lintr, formatR\n+Imports:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:21:14Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:21:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDk3Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834977","bodyText":"recheck how important this is","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:42:25Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:42:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODg2ODQ3Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298868476","bodyText":"outdated comment","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-other-versions\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is\n+        # disabled in choco_requirements.  Uninstalling vctools fails\n+      install:\n+        - powershell -c \". .ci/Fudge.ps1 install\"\n+        - refreshenv\n+        - taskkill -IM \"gpg-agent.exe\" || true\n+      before_script:\n+        - python --version\n+      script:\n+        - \"sed -i 's/^envlist.*$/envlist: '$TOXENV/ tox.ini\"\n+        - python -m tox --sitepackages\n+        - git checkout tox.ini\n+\n+    - stage: sentinel\n+      language: python\n+      python: 3.6\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: python\n+      python: 3.5\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-other-versions\n+      language: python\n+      python: 3.4\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: csharp\n+      mono: 5.20.1\n+\n+    - language: r\n+      r: release\n+\n+    - language: node_js\n+      node_js: 10\n+\n+    - language: julia\n+      # default language is 0.6.4, and has problems with pre-installed Lint.jl\n+      julia: 1.1\n+      env: JL_PKG=CoalaBears\n+      # install not provided https://github.com/travis-ci/travis-build/pull/1571\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        # Verify compilation works\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: dart\n+      dart: 1.15.0\n+\n+    - language: perl\n+      perl: 5.14\n+\n+    - language: go\n+      go: 1.11\n+      install: true\n+\n+    - language: ruby\n+      rvm: 2.4\n+\n+    - language: php\n+      php: 7.2\n+\n+    - language: java\n+      jdk: oraclejdk8\n+\n+    - language: scala\n+      scala: 2.11\n+\n+    - language: lua\n+      env: BEARS=lua\n+      addons:\n+        apt:\n+          packages:\n+            - luarocks\n+\n+    - language: generic\n+      env: BEARS=opam INFER_VERSION=0.7.0\n+           PATH=$PATH:$HOME/infer-linux64-v$INFER_VERSION/infer/bin\n+      addons:\n+        apt:\n+          sources:\n+            - avsm\n+          packages:\n+            - camlp4-extra\n+            - ocaml\n+            - opam\n+\n+    # This is in generic image, as language: haskell isnt working yet\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"ghc-mod hlint\"\n+      # ghc-mod needs parts of ghc, specifically at least /usr/lib/ghc/settings\n+      # ghc-mod needs cabal-install\n+      # shellcheck is failing in xenial\n+      addons:\n+        apt:\n+          packages:\n+            - cabal-install\n+            - ghc\n+            - ghc-mod\n+            - hlint\n+\n+    # BEARS=apt_get rather than 'apt' to avoid invoking .deps.apt.sh\n+    # which is the old circle init\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=apt_get DISABLE_BEARS=shellcheck\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php7.0-cli\n+            - phpmd\n+            - php-codesniffer\n+            - verilator\n+\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"bakalint default-jre\"\n+\n+    - language: generic\n+      env: DIST=trusty BEARS=adhoc BEAR_LIST=astyle\n+      addons:\n+        apt:\n+          sources:\n+            - sourceline:  # astyle\n+                deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main\n+              key_url:\n+                https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C\n+          packages:\n+            - astyle\n+\n+    - stage: test-other-versions\n+\n+      language: node_js\n+      node_js: 9\n+    - language: node_js\n+      node_js: 8\n+    - language: node_js\n+      node_js: 7\n+    - language: node_js\n+      node_js: 6\n+\n+    - language: ruby\n+      rvm: 2.5\n+      env: DISABLE_BEARS=csvlint\n+    - language: ruby\n+      rvm: 2.3\n+    - language: ruby\n+      rvm: 2.2\n+    - language: ruby\n+      rvm: 2.1\n+\n+    - language: go\n+      go: '1.10'\n+      install: true\n+\n+    - language: php\n+      php: hhvm-3.18\n+    - language: php\n+      php: 5.5\n+\n+    - language: scala\n+      jdk: oraclejdk8\n+      scala: 2.12.2\n+\n+    # oraclejdk10 is EOL\n+    - language: java\n+      jdk: oraclejdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+\n+    - language: java\n+      jdk: openjdk11\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk10\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk7\n+      env: DISABLE_BEARS=tailor\n+\n+    - language: dart\n+      dart: 1.14.2\n+\n+    - language: julia\n+      julia: 1.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: julia\n+      julia: 0.7.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: r\n+      r: devel\n+\n+    - language: r\n+      r: oldrel\n+\n+    - language: generic\n+      env: DIST=trusty BEARS=apt_get\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - php-codesniffer\n+            - shellcheck\n+            - verilator\n+\n+    - stage: test-other-versions\n+      language: generic\n+      env: DIST=precise BEARS=apt_get\n+      dist: precise\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - python3\n+            - verilator\n+\n+    - stage: test-master\n+\n+      # This is under other languages, as the only bear is tailor","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-01T02:56:40Z","lastEditedAt":null,"updatedAt":"2019-07-01T02:56:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODg2ODYwMQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298868601","bodyText":"node-gpy should no longer be necessary","diffHunk":"@@ -147,54 +413,94 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    # Enable to debug tox\n+    # VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh\n+\n+  - if [ -f .ci/deps.$TRAVIS_LANGUAGE.sh ]; then\n+      bash -e -x .ci/deps.$TRAVIS_LANGUAGE.sh;\n+    fi\n+\n+  - python --version\n+  # ~/bin is uncached; ~/local/bin is cached; we dont want python/pip in latter\n+  - rm -f ~/.local/bin/python* ~/.local/bin/pip*\n+\n+  - source .ci/deps.pyenv.sh\n+  - pyenv versions\n+  - pyenv versions --bare\n+  # node-gpy needs py27","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-01T02:57:57Z","lastEditedAt":null,"updatedAt":"2019-07-01T02:57:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODg3NjczNw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298876737","bodyText":"It has been moved into Test-other-versions and the other jobs in this group take appox 27 mins, however that is largely because the R jobs are very inefficient, so that may need to be revisited if the R jobs are improved.","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-01T04:15:17Z","lastEditedAt":null,"updatedAt":"2019-07-01T04:15:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDIyOTc3MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r300229771","bodyText":"ftr, this file was simply\npear install pear/PHP_CodeSniffer\nphpenv rehash\ndeleting as unused atm.","diffHunk":"@@ -0,0 +1,2 @@\n+pear install pear/PHP_CodeSniffer","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-04T05:04:51Z","lastEditedAt":null,"updatedAt":"2019-07-04T05:04:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDIzMDkyOQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r300230929","bodyText":"this and line above are doing nothing useful","diffHunk":"@@ -24,7 +24,18 @@ if [ ! -e ~/infer-linux64-v0.7.0/infer/bin ]; then\n   # See https://github.com/coala/coala-bears/issues/1763\n   opam pin add --yes --no-action reason 1.13.5\n \n+  opam pin add --yes --no-action javalib 2.3.1\n+\n   opam pin add --yes --no-action infer .\n+\n+  opam init -y --reinit --disable-sandboxing\n+\n+  cp ~/.opam/config ~/.opam/config.orig\n+  cat ~/.opam/config","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-04T05:13:20Z","lastEditedAt":null,"updatedAt":"2019-07-04T05:13:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDIzMTEwNg==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r300231106","bodyText":"And mention #2664 like the other pins","diffHunk":"@@ -24,7 +24,18 @@ if [ ! -e ~/infer-linux64-v0.7.0/infer/bin ]; then\n   # See https://github.com/coala/coala-bears/issues/1763\n   opam pin add --yes --no-action reason 1.13.5\n \n+  opam pin add --yes --no-action javalib 2.3.1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-04T05:14:29Z","lastEditedAt":null,"updatedAt":"2019-07-04T05:14:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDI4OTg5Mg==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r300289892","bodyText":"this was part of the Circle CI v1.0 system, which doesnt work now, and needs to be replaced with Circle CI v2.0 (#2298), or deleted.","diffHunk":"@@ -0,0 +1,17 @@\n+#!/bin/sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-04T08:37:47Z","lastEditedAt":null,"updatedAt":"2019-07-04T08:37:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDM4ODk0MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r300388940","bodyText":"Thoughts about Circle CI at coala/coala#5945","diffHunk":"@@ -0,0 +1,17 @@\n+#!/bin/sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-04T13:02:36Z","lastEditedAt":null,"updatedAt":"2019-07-04T13:02:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk0NTU4Mw==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-495945583","bodyText":"Coverage appearing at https://codecov.io/gh/coala/coala-bears/tree/c50ebe9/bears\n99.9%  The remaining coverage is Constants, which is only used by docs/conf.py:from bears.Constants import VERSION\nHaving coverage at 100% isnt critical any more because of the use of per-file 100% coverage requirements.  We should remove Constants.  Anyway, this will be fixed by running the docs inside tox also.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:14:27Z","lastEditedAt":"2019-05-26T01:56:27Z","updatedAt":"2019-05-26T01:56:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk2MjE2Mg==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-495962162","bodyText":"The travis failures are intentional, and will be added to \"allowed failures\", except for Elm and Haskell, the two languages which are supported by Travis but not yet working.\nAnother change I'll likely try getting into this PR is adding Linux to AppVeyor, as it supports Bionic, which the apt_get factor should handle ok, and there are many more bears with OS distributed packages in bionic.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-26T02:07:05Z","lastEditedAt":null,"updatedAt":"2019-05-26T02:07:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzc0MTU2Nw==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-507741567","bodyText":"Failures atm are due to travis-ci/travis-cookbooks#976","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-02T16:03:25Z","lastEditedAt":null,"updatedAt":"2019-07-02T16:03:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMTg0OTMyMg==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-511849322","bodyText":"Green build.  Almost done.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-16T14:48:42Z","lastEditedAt":null,"updatedAt":"2019-07-16T14:48:42Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563791153000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2912","number":2912,"title":"bears/general: Add FileModeBear","body":"Closes #2370\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-06-04T15:19:00Z","updatedAt":"2019-07-22T10:25:53Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2912","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzNTQ0Mg==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r294035442","bodyText":"Mention the reason wherever you have done this.","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+def get_testfile_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'filemode_test_files', file)\n+\n+\n+FILE_PATH = get_testfile_path('test_file.txt')\n+\n+\n+class FileModeBearTest(LocalBearTestHelper):\n+\n+    def setUp(self):\n+        self.section = Section('')\n+        self.uut = FileModeBear(self.section, Queue())\n+\n+    def test_r_to_r_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IRUSR)\n+        self.section.append(Setting('filemode', 'r'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_w_to_w_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IWUSR)\n+        self.section.append(Setting('filemode', 'w'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_x_to_x_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IXUSR)\n+        if platform.system() != 'Windows':","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-06-15T05:24:17Z","lastEditedAt":null,"updatedAt":"2019-06-15T05:24:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjIyMA==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622220","bodyText":"Descriptions for filename and file are quite redundant imo.","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NzgyNw==","createdAt":"2019-07-21T15:13:49Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T14:56:14Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:56:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjMxNA==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622314","bodyText":"How about using filter()?","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:\n+            File that needs to be checked in the form of a list of strings.\n+        :param filemode:\n+            Filemode to check, e.g. `rw`, `rwx`, etc.\n+        \"\"\"\n+        st = os.stat(filename)\n+        permissions = {'r': stat.S_IRUSR,\n+                       'w': stat.S_IWUSR,\n+                       'x': stat.S_IXUSR,\n+                       }\n+\n+        for char in filemode:\n+            if char not in permissions:","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:58:18Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:58:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjMzNg==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622336","bodyText":"This looks really ugly...","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:\n+            File that needs to be checked in the form of a list of strings.\n+        :param filemode:\n+            Filemode to check, e.g. `rw`, `rwx`, etc.\n+        \"\"\"\n+        st = os.stat(filename)\n+        permissions = {'r': stat.S_IRUSR,\n+                       'w': stat.S_IWUSR,\n+                       'x': stat.S_IXUSR,\n+                       }\n+\n+        for char in filemode:\n+            if char not in permissions:\n+                raise ValueError('Unable to recognize character `{}` in '\n+                                 'filemode `{}`.'.format(char, filemode))\n+\n+        mode = st.st_mode\n+        for char in filemode:\n+            if not mode & permissions[char]:\n+                message = ('The file permissions are not adequate. The '\n+                           'permissions are set to {}'.format(stat.filemode(\n+                                                              mode)))","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:59:02Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:59:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjQwOQ==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622409","bodyText":"You are using get_testfile_path() only once, so no need to keep the function.","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+def get_testfile_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'filemode_test_files', file)\n+\n+\n+FILE_PATH = get_testfile_path('test_file.txt')","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NzgzMg==","createdAt":"2019-07-21T15:14:11Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T15:00:45Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:00:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjk4OQ==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622989","bodyText":"Will improve this 👍","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:\n+            File that needs to be checked in the form of a list of strings.\n+        :param filemode:\n+            Filemode to check, e.g. `rw`, `rwx`, etc.\n+        \"\"\"\n+        st = os.stat(filename)\n+        permissions = {'r': stat.S_IRUSR,\n+                       'w': stat.S_IWUSR,\n+                       'x': stat.S_IXUSR,\n+                       }\n+\n+        for char in filemode:\n+            if char not in permissions:\n+                raise ValueError('Unable to recognize character `{}` in '\n+                                 'filemode `{}`.'.format(char, filemode))\n+\n+        mode = st.st_mode\n+        for char in filemode:\n+            if not mode & permissions[char]:\n+                message = ('The file permissions are not adequate. The '\n+                           'permissions are set to {}'.format(stat.filemode(\n+                                                              mode)))","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-21T15:14:06Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:14:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzczNDg5Mg==","url":"https://github.com/coala/coala-bears/pull/2912#issuecomment-513734892","bodyText":"Current codecov failure at 99.91% can be ignored - https://travis-ci.org/coala/coala-bears/jobs/561920971 shows the new bear is getting 100% test coverage","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA5ODM5Mw==","createdAt":"2019-07-22T11:20:21Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-07-22T10:25:52Z","lastEditedAt":null,"updatedAt":"2019-07-22T10:25:52Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563800452000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2927","number":2927,"title":"New actions for GitCommitBear","body":"This adds two new actions for GitCommitBear:\n\nAddNewlineAction: This adds a newline between shortlog and body of the commit message.\nEditCommitMessageAction: Open an editor in which user can edit the commit message\n\nThis also modifies CommitBear.py to pass these actions when Result is yielded.","comments":13,"createdAt":"2019-06-19T12:48:01Z","updatedAt":"2019-07-22T13:00:52Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2927","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTQxNzE5OA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295417198","bodyText":"@abhishalya I think git commit --amend also adds the staged changes. This is not good. Any alternatives?","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-19T17:27:47Z","lastEditedAt":"2019-06-19T17:33:52Z","updatedAt":"2019-06-19T17:33:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYxODAxMQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295618011","bodyText":"I guess git rebase would do then.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:47:17Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:47:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyMjA3Mw==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295622073","bodyText":"Since this action is only to be used by one of the vcs bears, the better place for this action would be in bears/vcs/actions.","diffHunk":"@@ -13,6 +13,7 @@\n from coalib.settings.Setting import typed_list\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from dependency_management.requirements.PipRequirement import PipRequirement\n+from bears.actions.AddNewlineAction import AddNewlineAction","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:53:21Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:53:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyNDI2MA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295624260","bodyText":"shortlog: str = ''","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:56:52Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:56:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyNTAxNA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295625014","bodyText":"Nope, no \\. Its a rule now, we even have a bear to check this :P","diffHunk":"@@ -271,8 +272,10 @@ def check_body(self, body,\n             return\n \n         if body[0] != '\\n':\n-            yield Result(self, 'No newline found between shortlog and body at '\n-                               'HEAD commit. Please add one.')\n+            message = 'No newline found between shortlog and body at '\\","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:58:06Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:58:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTcxOTk3NQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295719975","bodyText":"Have a look at this. Even rebase is not ideal if someone is using your commits.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T09:21:09Z","lastEditedAt":"2019-06-20T09:21:19Z","updatedAt":"2019-06-20T09:21:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTcyMTQ1Mg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295721452","bodyText":"PycodestyleBear is complaining for shortlog: str = ''","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T09:24:57Z","lastEditedAt":"2019-06-20T09:25:06Z","updatedAt":"2019-06-20T09:25:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg0MzY0OQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295843649","bodyText":"ping @Vamshi99 @kriti21","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T14:48:22Z","lastEditedAt":null,"updatedAt":"2019-06-20T14:48:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg0ODUxMg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295848512","bodyText":"Oh, I guess it must be complaining about no spaces around =.","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T14:57:12Z","lastEditedAt":null,"updatedAt":"2019-06-20T14:57:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1MTUxOQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295851519","bodyText":"Yeah, but here we are expecting the user to change the commit message. If the commit is not pushed doing rebase is just fine.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T15:02:52Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:02:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1Njg0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295856846","bodyText":"ping @abhishalya @Vamshi99 Looking at this I don't think amending or rebasing a commit is a good idea because it changes the history.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add New(L)ine\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:13:33Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:13:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1NzEzMQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295857131","bodyText":"My bad, it's not.","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:14:06Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:14:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg2NTIyNw==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295865227","bodyText":"Maybe we can warn that history will be rewritten action is applied.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:31:07Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:31:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg4MTM0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295881346","bodyText":"Yeah, a warning message would be good 👍","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T16:04:10Z","lastEditedAt":null,"updatedAt":"2019-06-20T16:04:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQ0MTI2NA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r296441264","bodyText":"I guess git rebase would do then.\n\ngit rebase doesn't run when there are unstaged or uncommitted changes.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-22T10:16:43Z","lastEditedAt":null,"updatedAt":"2019-06-22T10:16:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQ0MjExOQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r296442119","bodyText":"git commit --amend -o will do the job.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-22T10:50:45Z","lastEditedAt":null,"updatedAt":"2019-06-22T10:50:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDc0MDE3Mg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r300740172","bodyText":"User can first apply EditCommitMessageAction and change the commit message, so to check if AddNewlineAction is applicable or not, commit message is extracted first.","diffHunk":"@@ -0,0 +1,31 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def is_applicable(self,\n+                      result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        new_message, _ = run_shell_command('git log -1 --pretty=%B')","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-05T16:21:35Z","lastEditedAt":"2019-07-05T16:21:49Z","updatedAt":"2019-07-05T16:21:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzAzMTc0NA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-507031744","bodyText":"EditCommitMessageAction and AddNewlineAction in action","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-30T12:20:33Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:20:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU0NjQ3MQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513546471","bodyText":"Travis is failing because it depends on coala/coala#6029","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-21T11:42:37Z","lastEditedAt":null,"updatedAt":"2019-07-21T11:42:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU1MjM0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513552346","bodyText":"Yeah, please add the coala requirement as your branch.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T12:59:42Z","lastEditedAt":null,"updatedAt":"2019-07-21T12:59:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU1MjgwNA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513552804","bodyText":"Yeah, please add the coala requirement as your branch.\n\nBtw this is only temporary, to check if the changes work fine.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T13:06:04Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:06:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2MzgwOA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513563808","bodyText":"Yeah, please add the coala requirement as your branch.\n\nI made these changes, am I doing something wrong because the first travis job is failing because of some weird reason but it was passing before.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-21T15:27:04Z","lastEditedAt":"2019-07-21T15:31:11Z","updatedAt":"2019-07-21T15:31:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NDc4MQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513564781","bodyText":"You can ignore the first job of Sentinel since it fails for moban. But, the rest should pass... Looks like a breaking test.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T15:40:00Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:40:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NTExNw==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513565117","bodyText":"Btw, I think the rest of the jobs would stop if Sentinel fails (which it would eventually since the first one would fail due to moban) so instead of restarting those you can also make relevant changes to travis.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T15:44:17Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:44:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NTIzOQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513565239","bodyText":"Look at the error of the second build. This is because the changes in coala/coala#6029 are not there yet.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-21T15:45:54Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:45:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NTU0OQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513565549","bodyText":"coala is being installed correctly there from your branch, let me try this out locally","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T15:49:51Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:49:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NzE5Ng==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513567196","bodyText":"@akshatkarani This seems to be the problem...","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T16:11:45Z","lastEditedAt":null,"updatedAt":"2019-07-21T16:11:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzY3Mjg1Mg==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513672852","bodyText":"Removed the first sentinel build, now only one build is failing and the error is the same.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-22T07:24:01Z","lastEditedAt":null,"updatedAt":"2019-07-22T07:24:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc1OTY5Ng==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513759696","bodyText":"Okay build is passing with these temporary changes.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-22T11:52:10Z","lastEditedAt":null,"updatedAt":"2019-07-22T11:52:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc4MTIxOQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513781219","bodyText":"Nice, (since other mentors aren't active) give me some time to check this (and the core changes) in more detail.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-22T13:00:52Z","lastEditedAt":null,"updatedAt":"2019-07-22T13:00:52Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563755516000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2928","number":2928,"title":"bears/general: Add OutdatedDependencyBear","body":"Closes #2445\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-24T12:16:30Z","updatedAt":"2019-07-22T00:31:56Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2928","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563717442000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2901","number":2901,"title":"configfiles: Add NginxBear","body":"Closes #1638\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-04-02T16:52:24Z","updatedAt":"2019-07-21T13:57:22Z","closedAt":null,"state":"open","user":{"login":"44rdvark","avatarUrl":"https://avatars0.githubusercontent.com/u/25840847?v=4"},"owner":{"login":"44rdvark","avatarUrl":"https://avatars0.githubusercontent.com/u/25840847?v=4"},"assignee":{"login":"44rdvark","avatarUrl":"https://avatars0.githubusercontent.com/u/25840847?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"hacktoberfest","color":"b60205"},{"name":"language/javascript","color":"5abbfc"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2901","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxODI4NQ==","url":"https://github.com/coala/coala-bears/pull/2901#discussion_r305618285","bodyText":"nice.  The new build system has landed, and you will need to re-run .ci/generate_bears_metadata.py, and then re-run moban , and it should update .travis.yml for you.","diffHunk":"@@ -0,0 +1,40 @@\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.DistributionRequirement \\\n+    import DistributionRequirement\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+@linter(executable='nginx',\n+        output_format='regex',\n+        output_regex=r'\\[(?P<severity>.+)\\](?P<message>.+)'\n+                     r':(?P<line>\\d+)',\n+        severity_map={'emerg': RESULT_SEVERITY.MAJOR,\n+                      'alert': RESULT_SEVERITY.MAJOR,\n+                      'warn': RESULT_SEVERITY.NORMAL},\n+        use_stderr=True)\n+class NginxBear:\n+    \"\"\"\n+    Checks syntax of nginx configuration files using `nginx -tc` command.\n+    \"\"\"\n+\n+    LANGUAGES = {'nginx'}\n+    REQUIREMENTS = {\n+        DistributionRequirement(\n+            apt_get='nginx',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-21T13:30:28Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:30:28Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563782110000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2904","number":2904,"title":"PycodestyleBear: Process whole output","body":"This commit modifies process_output to\nprocess all the detected problems instead\nof just the first one.\nFixes #2882\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":3,"createdAt":"2019-04-12T18:10:10Z","updatedAt":"2019-07-22T07:55:10Z","closedAt":null,"state":"open","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"process/approved","color":"009800"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2904","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjkyNDQ4MA==","url":"https://github.com/coala/coala-bears/pull/2904#discussion_r276924480","bodyText":"Remove trailing whitespaces","diffHunk":"@@ -114,3 +119,10 @@ def test_line_length(self):\n                                  'E501 line too long (106 > 30 characters)')\n                 self.assertEqual(result.origin, 'PycodestyleBear (E501)')\n                 self.assertEqual(result.aspect, LineLength('py'))\n+    ","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-04-19T07:47:18Z","lastEditedAt":null,"updatedAt":"2019-04-19T07:47:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjkyNDUzNQ==","url":"https://github.com/coala/coala-bears/pull/2904#discussion_r276924535","bodyText":"remove trailing whitespaces from here too.","diffHunk":"@@ -114,3 +119,10 @@ def test_line_length(self):\n                                  'E501 line too long (106 > 30 characters)')\n                 self.assertEqual(result.origin, 'PycodestyleBear (E501)')\n                 self.assertEqual(result.aspect, LineLength('py'))\n+    \n+    def test_multiple_errors(self):\n+        content = multiple_error_file.splitlines()\n+        with prepare_file(content, None) as (file, fname):\n+            with execute_bear(self.uut, fname, file) as results:\n+                self.assertTrue(len(results) == 3)\n+","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-04-19T07:47:37Z","lastEditedAt":null,"updatedAt":"2019-04-19T07:47:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjkzNDI2Nw==","url":"https://github.com/coala/coala-bears/pull/2904#discussion_r276934267","bodyText":"Done.","diffHunk":"@@ -114,3 +119,10 @@ def test_line_length(self):\n                                  'E501 line too long (106 > 30 characters)')\n                 self.assertEqual(result.origin, 'PycodestyleBear (E501)')\n                 self.assertEqual(result.aspect, LineLength('py'))\n+    ","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-04-19T08:35:28Z","lastEditedAt":null,"updatedAt":"2019-04-19T08:35:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4NDc2NzQ5OA==","url":"https://github.com/coala/coala-bears/pull/2904#issuecomment-484767498","bodyText":"Can you add test cases to check and enforce PycodestyleBear processes whole output? That would be good ^^\n\nDone.","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-04-19T04:55:23Z","lastEditedAt":null,"updatedAt":"2019-04-19T04:55:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NDMyNDQ2NA==","url":"https://github.com/coala/coala-bears/pull/2904#issuecomment-494324464","bodyText":"@areebbeigh Did the tests pass locally, I'm having some trouble running the tests.\nnvm","diffHunk":null,"author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"createdAt":"2019-05-21T09:57:27Z","lastEditedAt":"2019-05-21T16:12:51Z","updatedAt":"2019-05-21T16:12:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzY4MjczNw==","url":"https://github.com/coala/coala-bears/pull/2904#issuecomment-513682737","bodyText":"needs a rebase\n\nDone.","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-07-22T07:55:10Z","lastEditedAt":null,"updatedAt":"2019-07-22T07:55:10Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563717334000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2905","number":2905,"title":"Add: EmberTemplateLintBear","body":"Closes #2345\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-04-29T17:54:23Z","updatedAt":"2019-07-21T13:55:34Z","closedAt":null,"state":"open","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2905","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2Mjc3Mw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279762773","bodyText":"The name is a bit confusing.","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-04-30T13:50:14Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:50:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NDg2MQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279764861","bodyText":"Can be put into separate files under test folder.","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MjcxOA==","createdAt":"2019-04-30T14:04:55Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T13:54:27Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:54:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NTAyMw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279765023","bodyText":"Rename the directory name, like template-lint-test-files","diffHunk":"@@ -0,0 +1,7 @@\n+module.exports = {","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MjczMA==","createdAt":"2019-04-30T14:05:00Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T13:54:46Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:54:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NTQ4Nw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279765487","bodyText":"We can have a new language definition (not in this PR though) if Ember (template) is a different language from existing ones.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-04-30T13:55:43Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:55:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2OTYyNg==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279769626","bodyText":"yes you are write, this file denotes a good file when a config file is used. Is good_file_with_configwill be good enough?","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-04-30T14:04:41Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:04:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2OTkzOQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279769939","bodyText":"Yeah, that would be better","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MzE5NA==","createdAt":"2019-04-30T14:10:47Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T14:05:22Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:05:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc3MTUzMg==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279771532","bodyText":"Ember is a framework of JavaScript. It is doubtful where to put it as Ember (template) only handles the template part. So one option is to put it in JS but it is totally unrelated to linting that.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-04-30T14:08:57Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:08:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxOTMwMQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r305619301","bodyText":"It needs a new language definition in coala core.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-07-21T13:55:18Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:55:18Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563934924000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2880","number":2880,"title":"Add support for yapf>=0.21.0<0.27.0 and fix filename in .ci/generate_bear_metadata.py","body":"Modify test_allow_multiline_lambdas to be\nversion specific.\nCloses #2873\nChange \"overrides\" filename from\npackage-manager-requirements.yaml to pm-requirements.yaml\nFixes #2936\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":8,"createdAt":"2019-02-20T15:14:15Z","updatedAt":"2019-07-24T02:22:04Z","closedAt":"2019-07-24T02:22:04Z","state":"merged","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"assignee":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2880","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxMzcwNTc3OQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513705779","bodyText":"Needs a rebase\n\nDone.\nHeads up: Merge conflict in bear-requirements.yaml was resolved by hand (merge both incoming changes).  Please let me know if I'm supposed to re-generate it.","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-07-22T09:01:24Z","lastEditedAt":"2019-07-22T09:02:53Z","updatedAt":"2019-07-22T09:02:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzczMzE1NA==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513733154","bodyText":"Refetch master bear-requirements.yaml\nUse .ci/generate_bear_metadata.py , and then run moban.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-22T10:20:10Z","lastEditedAt":null,"updatedAt":"2019-07-22T10:20:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc1NDM0Ng==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513754346","bodyText":".ci/generate_bear_metadata.py\n\nI'm running into:\nWarning: Both package-manager-requirements.yaml and /home/areebbeigh/.cache/moban/repos/mobans/package-manager-requirements.yaml does not exist\n\nand I suspect this is because running ci/generate_bear_metadata.py sets overrides: package-manager-requirements.yaml whereas it should be overrides: pm-requirements.yaml.\nNew issue? Although this is probably just a change in \n  \n    \n      coala-bears/.ci/generate_bear_metadata.py\n    \n    \n         Line 461\n      in\n      afb068b\n    \n    \n    \n    \n\n        \n          \n           requirements['overrides'] = 'package-manager-requirements.yaml'","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-07-22T11:33:22Z","lastEditedAt":null,"updatedAt":"2019-07-22T11:33:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc3NTE0Nw==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513775147","bodyText":"Yup; new issue.  That is a bug in my PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-22T12:42:50Z","lastEditedAt":null,"updatedAt":"2019-07-22T12:42:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc3Njk4OQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513776989","bodyText":"You can add the fix to this PR as a separate commit.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-22T12:48:33Z","lastEditedAt":null,"updatedAt":"2019-07-22T12:48:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzgxNTE5NQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513815195","bodyText":"You can add the fix to this PR as a separate commit.\n\nDone.","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-07-22T14:28:00Z","lastEditedAt":null,"updatedAt":"2019-07-22T14:28:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNDE3NzM0Mg==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-514177342","bodyText":"Sorry ; wrong button press.\n@areebbeigh , this needs another rebase, but please also revise your commit messages to follow the coala commit guidelines.  specifically the first line should start with a filename of the most important file in the commit which is being modified (usually not a file which is generated).","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-23T11:51:52Z","lastEditedAt":null,"updatedAt":"2019-07-23T11:51:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNDQ1MjQwMQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-514452401","bodyText":"I'm going to merge this despite it failing due to #2937 , which I'll fix after this is merged","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-24T02:20:22Z","lastEditedAt":null,"updatedAt":"2019-07-24T02:20:22Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563790153000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2883","number":2883,"title":"Replace dep munkres3 with munkres","body":"The official munkres now supports Python3, so\nwe don't need to use munkres3.\nCloses #2871","comments":2,"createdAt":"2019-03-04T09:32:24Z","updatedAt":"2019-07-22T10:09:13Z","closedAt":"2019-07-22T10:09:13Z","state":"merged","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2883","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTIwNzQ1MQ==","url":"https://github.com/coala/coala-bears/pull/2883#issuecomment-469207451","bodyText":"@jayvdb Please review the changes !","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-03-04T10:47:28Z","lastEditedAt":null,"updatedAt":"2019-03-04T10:47:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzYyNzc1OQ==","url":"https://github.com/coala/coala-bears/pull/2883#issuecomment-513627759","bodyText":"Commit message doesnt refer to the issue\n\nI’m so sorry for this! Will edit the commit message and push it again 😇","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-07-22T03:35:21Z","lastEditedAt":null,"updatedAt":"2019-07-22T03:35:21Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563718430000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2884","number":2884,"title":"Improve Documentation of CSVLintBear","body":"Provide some more details on what\nrespects the csv file is being validated.\nCloses #2277\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-03-05T14:28:22Z","updatedAt":"2019-07-21T14:13:50Z","closedAt":null,"state":"open","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"assignee":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2884","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQ3OTgzNQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263479835","bodyText":"Is this link necessary ?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T17:08:42Z","lastEditedAt":null,"updatedAt":"2019-03-07T17:08:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQ4MDAyNw==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263480027","bodyText":"IMO has -> does","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODM3NDU0NQ==","createdAt":"2019-03-07T18:38:29Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-07T17:09:11Z","lastEditedAt":null,"updatedAt":"2019-03-07T17:09:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQ4MTI3MA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263481270","bodyText":"What does CSV on the web means ?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T17:12:07Z","lastEditedAt":null,"updatedAt":"2019-03-07T17:12:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxMzkyOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263513928","bodyText":"Not necessary but it can provide more information about the validation process. So should I remove it?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T18:37:54Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:37:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxNDkzOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263514938","bodyText":"CSV on the web provides standard ways to express useful metadata about CSV files and other kinds of tabular data.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T18:40:44Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:40:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxOTM4NQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263519385","bodyText":"So, it isn't a validation check right ?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T18:52:44Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:52:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUyMTY3Mg==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263521672","bodyText":"If it gives more information, then OK 👍","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T18:58:34Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:58:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzMjQ3Mw==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263532473","bodyText":"No","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODM4MDYxNw==","createdAt":"2019-03-07T20:01:04Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-03-07T19:27:28Z","lastEditedAt":null,"updatedAt":"2019-03-07T19:27:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU0NTY5Ng==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263545696","bodyText":"Just replace semi-colon with and to differentiate between “ schema standards“ and “csv on the web”\nBecause both of them are different","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODM4MTAwMw==","createdAt":"2019-03-07T20:06:44Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-07T20:03:22Z","lastEditedAt":"2019-03-07T20:03:50Z","updatedAt":"2019-03-07T20:03:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU0NjE1MA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263546150","bodyText":"Use SEE_MORE.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-03-07T20:04:27Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:04:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU0OTUyNQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263549525","bodyText":"@bkhanale so you want me to replace \"Find out more at:\" with \"SEE_MORE\" followed by the link?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T20:14:28Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:14:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU1MDYzOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263550638","bodyText":"git grep SEE_MORE. You can find lot of examples.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-03-07T20:17:42Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:17:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU1NDAyMw==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263554023","bodyText":"Got it! Thanks for the review.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T20:28:21Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:28:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzY1NTY4MQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263655681","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              - delimiter-separated values (dsv) file accessible via URL, File,\n        \n          \n            \n                - delimiter-separated values (DSV) file accessible via URL, File,","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODQyNzkwMA==","createdAt":"2019-03-08T13:00:04Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-08T03:31:03Z","lastEditedAt":null,"updatedAt":"2019-03-08T03:31:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzY1NTg4Mg==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263655882","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              - against multiple schema standard and CSV on the Web\n        \n          \n            \n                - against multiple schema standards and CSV on the Web","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standard and CSV on the Web","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODQyNzg4OQ==","createdAt":"2019-03-08T12:59:53Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-08T03:32:43Z","lastEditedAt":null,"updatedAt":"2019-03-08T03:32:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjMzNjAxMA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266336010","bodyText":"need alignment of sentences in one column.","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-18T08:37:33Z","lastEditedAt":null,"updatedAt":"2019-03-18T08:37:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjM5NDAyOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266394028","bodyText":"@KVGarg I can't understand you properly. Are you talking about the misalignment of line no. 15?","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-18T11:19:15Z","lastEditedAt":null,"updatedAt":"2019-03-18T11:19:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjM5NzkzMg==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266397932","bodyText":"Yes, need a tab space before “or”","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-18T11:31:54Z","lastEditedAt":null,"updatedAt":"2019-03-18T11:31:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjM5OTI5NA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266399294","bodyText":"It was like that early on but coala or some build showed an error because of it. That is why I changed it.","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-18T11:36:11Z","lastEditedAt":"2019-03-18T11:36:36Z","updatedAt":"2019-03-18T11:36:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU1ODA1Nw==","url":"https://github.com/coala/coala-bears/pull/2884#issuecomment-513558057","bodyText":"Needs a rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-07-21T14:13:50Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:13:50Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563717854000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2889","number":2889,"title":"Pycheckbear.py: Add new PyCheckBear","body":"New Bear is added to find\nbugs in python file.\nCloses #2151\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2019-03-14T18:25:14Z","updatedAt":"2019-07-21T14:04:14Z","closedAt":null,"state":"open","user":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4"},"owner":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4"},"assignee":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"},{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2889","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTcxNDg4MA==","url":"https://github.com/coala/coala-bears/pull/2889#discussion_r265714880","bodyText":"Aren't the names inconsistent? Here you have named it PyCheckerBear but you have named the file as PyCheckBear.py","diffHunk":"@@ -0,0 +1,40 @@\n+import shlex\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.DistributionRequirement import (\n+        DistributionRequirement)\n+\n+\n+@linter(executable='pychecker',\n+        output_format='regex',\n+        output_regex=r'(?P<filename>\\w+\\.py):(?P<line>\\d+): '\n+                     r'(?P<message>.*)')\n+class PyCheckerBear:","author":{"login":"rajdeepbharati","avatarUrl":"https://avatars1.githubusercontent.com/u/30660439?v=4","name":"Rajdeep Bharati"},"reactions":[],"createdAt":"2019-03-14T18:41:54Z","lastEditedAt":null,"updatedAt":"2019-03-14T18:41:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTcxNTQ2Ng==","url":"https://github.com/coala/coala-bears/pull/2889#discussion_r265715466","bodyText":"Here you have imported PyCheckerBear from bears.python.PyCheckerBear but that file doesn't exist","diffHunk":"@@ -0,0 +1,51 @@\n+from queue import Queue\n+import os.path\n+\n+from coalib.settings.Section import Section\n+from coalib.results.Result import Result\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+\n+from bears.python.PyCheckerBear import PyCheckerBear","author":{"login":"rajdeepbharati","avatarUrl":"https://avatars1.githubusercontent.com/u/30660439?v=4","name":"Rajdeep Bharati"},"reactions":[],"createdAt":"2019-03-14T18:43:28Z","lastEditedAt":null,"updatedAt":"2019-03-14T18:43:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTcxNjQyOQ==","url":"https://github.com/coala/coala-bears/pull/2889#discussion_r265716429","bodyText":"thats by mistake i think let me correct btw thanks for pointing out","diffHunk":"@@ -0,0 +1,40 @@\n+import shlex\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.DistributionRequirement import (\n+        DistributionRequirement)\n+\n+\n+@linter(executable='pychecker',\n+        output_format='regex',\n+        output_regex=r'(?P<filename>\\w+\\.py):(?P<line>\\d+): '\n+                     r'(?P<message>.*)')\n+class PyCheckerBear:","author":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4","name":"Akshit Jain"},"reactions":[],"createdAt":"2019-03-14T18:45:52Z","lastEditedAt":null,"updatedAt":"2019-03-14T18:45:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTcxNzQzMQ==","url":"https://github.com/coala/coala-bears/pull/2889#discussion_r265717431","bodyText":"yup thats writing error i will correct it","diffHunk":"@@ -0,0 +1,51 @@\n+from queue import Queue\n+import os.path\n+\n+from coalib.settings.Section import Section\n+from coalib.results.Result import Result\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+\n+from bears.python.PyCheckerBear import PyCheckerBear","author":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4","name":"Akshit Jain"},"reactions":[],"createdAt":"2019-03-14T18:48:16Z","lastEditedAt":null,"updatedAt":"2019-03-14T18:48:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEzNDg0MQ==","url":"https://github.com/coala/coala-bears/pull/2889#discussion_r274134841","bodyText":"Just a duplicate of above declared deps variable with some new dependencies.\nAdd new dependencies in the above declared deps variable instead of overwriting it again!","diffHunk":"@@ -10,6 +10,7 @@ set -x\n export DEBIAN_FRONTEND=noninteractive\n \n deps=\"libclang1-3.4 astyle indent mono-mcs chktex r-base julia golang-go luarocks verilator cppcheck flawfinder devscripts mercurial\"\n+deps=\"libclang1-3.4 indent mono-mcs chktex r-base julia golang-go luarocks verilator cppcheck flawfinder devscripts pychecker\"","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-04-10T20:06:50Z","lastEditedAt":null,"updatedAt":"2019-04-10T20:06:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEzNjAxNw==","url":"https://github.com/coala/coala-bears/pull/2889#discussion_r274136017","bodyText":"PyChecker needs to be installed by pip. Add the compatible version of PyChecker in requirements file.","diffHunk":"@@ -0,0 +1,40 @@\n+import shlex\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.DistributionRequirement import (\n+        DistributionRequirement)\n+\n+\n+@linter(executable='pychecker',","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-04-10T20:10:26Z","lastEditedAt":null,"updatedAt":"2019-04-10T20:10:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDEzOTExNw==","url":"https://github.com/coala/coala-bears/pull/2889#discussion_r274139117","bodyText":"Use PipRequirement instead of DistributionRequirement as the bear is meant to run over python files.","diffHunk":"@@ -0,0 +1,40 @@\n+import shlex\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.DistributionRequirement import (\n+        DistributionRequirement)\n+\n+\n+@linter(executable='pychecker',\n+        output_format='regex',\n+        output_regex=r'(?P<filename>\\w+\\.py):(?P<line>\\d+): '\n+                     r'(?P<message>.*)')\n+class PyCheckerBear:\n+    \"\"\"\n+    Find bugs in your Python source code.\n+    The code for each function, class, and method is checked for possible\n+    problems. Checks for unused globals and locals(module or variable), unused\n+    method arguments and using a variable before setting it or if you are\n+    redefining a function/class/method in the same scope.\n+    \"\"\"\n+    LANGUAGES = {'Python', 'Python 2', 'Python 3'}\n+    REQUIREMENTS = {DistributionRequirement(apt_get='pychecker')}","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-04-10T20:19:22Z","lastEditedAt":null,"updatedAt":"2019-04-10T20:19:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzE4MjM4Nw==","url":"https://github.com/coala/coala-bears/pull/2889#issuecomment-473182387","bodyText":"@li-boxuan  please review this one","diffHunk":null,"author":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4","name":"Akshit Jain"},"reactions":[],"createdAt":"2019-03-15T07:13:09Z","lastEditedAt":"2019-03-15T07:25:18Z","updatedAt":"2019-03-15T07:25:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4MTg1Mjk3NA==","url":"https://github.com/coala/coala-bears/pull/2889#issuecomment-481852974","bodyText":"Sorry, it may hurt you! But I guess it will be worth mentioning in commit message about the work done by @khanchi97 in his PR #2194\n\n@KVGarg yes I know actually I know he did work but I opened this pr so as to make some changes in his pr by his permission only :)\nI will mention his work, actually due to proposal i was quite inactive towards this pr but now will edit this","diffHunk":null,"author":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4","name":"Akshit Jain"},"reactions":[{"id":"MDg6UmVhY3Rpb240MDU3Njg4Mg==","createdAt":"2019-04-10T20:54:40Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-04-10T20:39:17Z","lastEditedAt":null,"updatedAt":"2019-04-10T20:39:17Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563974124000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2890","number":2890,"title":"Update the bear requirements to allow new versions","body":"The commit updates the bear requirements to allow\nnew linter versions used. The new linter versions are\nidentified from an openSUSE build log where the\nbears' test pass.\nCloses #2877","comments":7,"createdAt":"2019-03-15T13:13:42Z","updatedAt":"2019-07-24T13:15:24Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"CFB80A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2890","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzI4OTQ1MA==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473289450","bodyText":"The sentinel build is failing due to version conflict of package colorama.\nThis is happening due to version change of package radon\nChanging back to old version of radon i.e. 1.4.0","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-03-15T13:39:55Z","lastEditedAt":null,"updatedAt":"2019-03-15T13:39:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzI5Nzk5OQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473297999","bodyText":"In the build log the test YapfBearTest.test_allow_multiline_lambdas wasn't executed. And that only test has been failing\n@jayvdb Can you take a look over it! Need help","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-03-15T14:03:39Z","lastEditedAt":null,"updatedAt":"2019-03-15T14:03:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzMzNTI4Mw==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473335283","bodyText":"@KVGarg I hope you you've seen this.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-03-15T15:40:14Z","lastEditedAt":null,"updatedAt":"2019-03-15T15:40:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzM0Nzg3MQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473347871","bodyText":"@KVGarg I hope you you've seen this.\n\nGive me some time to look over this. Will soon come with solution to this.\nAlso, @jayvdb mentioned in issue that pylint should be ignored as it is being covered by #2826\nAlso, will edit the commit message. I avoid witing desc. while I push commits to fork as if any changes are made and re-pushed the issue gets notified about that changes, that's why I avoid that.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-03-15T16:13:05Z","lastEditedAt":null,"updatedAt":"2019-03-15T16:13:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzY1NTUwOQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-513655509","bodyText":"I rebased and pushed changes but ignored bear-requirements.yaml as on the top of the file the comments mentions that it shouldn't be edited by hand. But pushing without the yaml changes the moban is failing. And now when I pushed those changes, it is passing. Is this OK?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-07-22T06:16:32Z","lastEditedAt":null,"updatedAt":"2019-07-22T06:16:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzcwMDUyMQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-513700521","bodyText":"Separate the PR into two -- one which expands the ranges, where this doesnt have problems with existing tests --- and the other that moves the ranges.\n\nSorry if it sounds silly! Does this mean that one PR to have these current changes and another one to have the version ranges(> or <) for each dependency version changes in this PR?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-07-22T08:46:37Z","lastEditedAt":null,"updatedAt":"2019-07-22T08:46:37Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563717341000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2823","number":2823,"title":"Make StyleLintBear configurable","body":"Issue: #1922\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-12-12T05:16:44Z","updatedAt":"2019-07-21T13:55:41Z","closedAt":null,"state":"open","user":{"login":"Kiy4h","avatarUrl":"https://avatars0.githubusercontent.com/u/34406802?v=4"},"owner":{"login":"Kiy4h","avatarUrl":"https://avatars0.githubusercontent.com/u/34406802?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"fbca04"},{"name":"size/XXL","color":"AA0000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2823","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxOTI0Nw==","url":"https://github.com/coala/coala-bears/pull/2823#discussion_r305619247","bodyText":"im not sure our setting system supports Union.  If it doesnt, a fix is needed in coala_utils or coala core.\nAlso, 'typing' doesnt existing on Python 3.4 core, so you need to add a dependency on pypi package typing (ideally only on py34, but that may also turn out to be difficult, so maybe we defer that atm).","diffHunk":"@@ -27,139 +29,569 @@ class StyleLintBear:\n     CAN_DETECT = {'Syntax', 'Unused Code', 'Formatting'}\n \n     @staticmethod\n-    def generate_config(filename, file):\n-        # Use standard stylelint rules\n+    def generate_config(\n+        filename, file,\n+        at_rule_empty_line_before: str = None,\n+        at_rule_name_case: str = 'lower',\n+        at_rule_name_space_after: str = 'always-single-line',\n+        at_rule_semicolon_newline_after: str = 'always',\n+        block_closing_brace_empty_line_before: str = 'never',\n+        block_closing_brace_newline_after: str = 'always',\n+        block_closing_brace_newline_before: str = 'always-multi-line',\n+        block_closing_brace_space_before: str = 'always-single-line',\n+        block_no_empty: bool = True,\n+        block_opening_brace_newline_after: str = 'always-multi-line',\n+        block_opening_brace_space_after: str = 'always-single-line',\n+        block_opening_brace_space_before: str = 'always',\n+        color_hex_case: str = 'lower',\n+        color_hex_length: str = 'short',\n+        color_no_invalid_hex: bool = True,\n+        comment_empty_line_before: str = None,\n+        comment_no_empty: bool = True,\n+        comment_whitespace_inside: str = 'always',\n+        custom_property_empty_line_before: str = None,\n+        declaration_bang_space_after: str = 'never',\n+        declaration_bang_space_before: str = 'always',\n+        declaration_block_no_duplicate_properties: bool = None,\n+        declaration_block_no_redundant_longhand_properties: bool = True,\n+        declaration_block_no_shorthand_property_overrides: bool = True,\n+        declaration_block_semicolon_newline_after: str = 'always-multi-line',\n+        declaration_block_semicolon_space_after: str = 'always-single-line',\n+        declaration_block_semicolon_space_before: str = 'never',\n+        declaration_block_single_line_max_declarations: int = 1,\n+        declaration_block_trailing_semicolon: str = 'always',\n+        declaration_colon_newline_after: str = 'always-multi-line',\n+        declaration_colon_space_after: str = 'always-single-line',\n+        declaration_colon_space_before: str = 'never',\n+        declaration_empty_line_before: str = None,\n+        font_family_no_duplicate_names: bool = True,\n+        function_calc_no_unspaced_operator: bool = True,\n+        function_comma_newline_after: str = 'always-multi-line',\n+        function_comma_space_after: str = 'always-single-line',\n+        function_comma_space_before: str = 'never',\n+        function_linear_gradient_no_nonstandard_direction: bool = True,\n+        function_max_empty_lines: int = 0,\n+        function_name_case: str = 'lower',\n+        function_parentheses_newline_inside: str = 'always-multi-line',\n+        function_parentheses_space_inside: str = 'never-single-line',\n+        function_whitespace_after: str = 'always',\n+        indentation: Union[int, str] = 2,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-21T13:53:56Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:53:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDkwODQ0MQ==","url":"https://github.com/coala/coala-bears/pull/2823#issuecomment-460908441","bodyText":"https://travis-ci.org/coala/coala-bears/jobs/488410914 has a failing stylelint test.  I assume that is related to this PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-02-06T05:48:17Z","lastEditedAt":null,"updatedAt":"2019-02-06T05:48:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MTI3MTg4Mw==","url":"https://github.com/coala/coala-bears/pull/2823#issuecomment-461271883","bodyText":"@jayvdb Yes, it's related to this PR. The problem is, the bear emits no errors for indentation_bad_file where it should. Same for no_missing_end_of_source_newline_bad_file.\nI've put comments before the test variable declarations here:\nhttps://github.com/coala/coala-bears/pull/2823/files#diff-f20f84cd43b5e24e382991c92cc94e62R828\nhttps://github.com/coala/coala-bears/pull/2823/files#diff-f20f84cd43b5e24e382991c92cc94e62R591","diffHunk":null,"author":{"login":"Kiy4h","avatarUrl":"https://avatars0.githubusercontent.com/u/34406802?v=4","name":"zeet"},"createdAt":"2019-02-07T03:00:20Z","lastEditedAt":null,"updatedAt":"2019-02-07T03:00:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MTI3NTExOA==","url":"https://github.com/coala/coala-bears/pull/2823#issuecomment-461275118","bodyText":"Then the bear or the tests need to be fixed.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-02-07T03:22:36Z","lastEditedAt":null,"updatedAt":"2019-02-07T03:22:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NzM0NTU5Ng==","url":"https://github.com/coala/coala-bears/pull/2823#issuecomment-497345596","bodyText":"Sorry for leaving this PR for a while.\nI'm having trouble fixing the 2 failing tests. Running pytest locally prints StyleLintBear: Exit code 80. Can someone explain what that is?","diffHunk":null,"author":{"login":"Kiy4h","avatarUrl":"https://avatars0.githubusercontent.com/u/34406802?v=4","name":"zeet"},"createdAt":"2019-05-30T14:17:22Z","lastEditedAt":null,"updatedAt":"2019-05-30T14:17:22Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563755437000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2828","number":2828,"title":"PyLintBear: Support pylint >= 2.0","body":"Make coala-bears support the latest version\nof the pylint dependency.\nCloses #2826\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":17,"createdAt":"2018-12-14T14:05:50Z","updatedAt":"2019-07-22T00:30:37Z","closedAt":null,"state":"open","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2828","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTYxODUzMg==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-449618532","bodyText":"Yes that's a big issue for me too. I been trying to replicate the tests on my machine but I am running into one issue after another. Everyone has suggested methods to their best but none work. All the requirements and test-requirements too installed properly but getting ModuleNotFound error for every other dependency.","diffHunk":null,"author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-12-23T07:01:27Z","lastEditedAt":null,"updatedAt":"2018-12-23T07:01:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTYxOTEwNw==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-449619107","bodyText":"Which of the tests give you the error @Akhelesh ?\nAlso, as mentioned in this step of the Newcomers' Guide, it would be a nice practice to not make changes on the Master Branch of your forked repository in the future.","diffHunk":null,"author":{"login":"shashank-b","avatarUrl":"https://avatars2.githubusercontent.com/u/22676390?v=4","name":"Shashank Batra"},"reactions":[],"createdAt":"2018-12-23T07:16:33Z","lastEditedAt":null,"updatedAt":"2018-12-23T07:16:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTY0MDA0NQ==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-449640045","bodyText":"Which of the tests give you the error @Akhelesh ?\nAlso, as mentioned in this step of the Newcomers' Guide, it would be a nice practice to not make changes on the Master Branch of your forked repository in the future.\n\n@shashank-b I don't think that would affect the build but thanks I will surely keep that in mind while working on future bugs.\nThe PyLintBearTest is what's causing the build to fail.","diffHunk":null,"author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-12-23T14:30:46Z","lastEditedAt":"2018-12-23T14:31:42Z","updatedAt":"2018-12-23T14:31:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTY1MzE3Mw==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-449653173","bodyText":"@Akhelesh, that'd definitely not affect the build 😄, it was just a suggestion.\nOkay.","diffHunk":null,"author":{"login":"shashank-b","avatarUrl":"https://avatars2.githubusercontent.com/u/22676390?v=4","name":"Shashank Batra"},"reactions":[],"createdAt":"2018-12-23T17:50:19Z","lastEditedAt":null,"updatedAt":"2018-12-23T17:50:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTcxMjY2NA==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-449712664","bodyText":"@Akhelesh Appvevor gives the error message\nPython34\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:228: in check_invalidity\n    self.assertNotEqual(len(bear_output), 0, msg=msg)\nE   AssertionError: 0 == 0 : The local bear 'PyLintBear' yields no result although it should.\n\nThe above error means that the problem is in the test case. Are you sure that you updating the Pylint version don't have to update the test cases? I mean can you verify that the functionality of the Pylint is still the same as it was in version 1.7.2\nThe Test for this bear is written here. It fails at line 31. The test file that this test use is here.\nThe appveryor fails because the test written at line 27\n  self.section.append(Setting('pylint_disable', ''))\n        self.check_invalidity(\n            self.uut,\n            [],  # Doesn't matter, pylint will parse the file\n            self.test_file)\n\nwhen run, should produce some output/error message. FYI the above test case adds line something like disable=  in the configuration filie, which basically means to disable no errors. But it seems like(from the appveyor error) that, pylint isn't producing any error message.\nIMHO I guess you should go through Pylint documentation and see what's causing this.","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNDM4ODU3Ng==","createdAt":"2018-12-24T11:14:16Z","content":"THUMBS_UP","user":{"login":"shashank-b","name":"Shashank Batra"}}],"createdAt":"2018-12-24T10:02:54Z","lastEditedAt":null,"updatedAt":"2018-12-24T10:02:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1ODE3NDc0Mw==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-458174743","bodyText":"Travis build is failing due to this issue #2843 so the build can't complete successfully until the issue is resolved.","diffHunk":null,"author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2019-01-28T15:26:04Z","lastEditedAt":null,"updatedAt":"2019-01-28T15:26:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDQ5NzgzNw==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-460497837","bodyText":"@Akhelesh would you please add a note on #2826 explaining what happens when an empty file is used for the rcfile .  That will complement your commit message.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-02-05T03:10:46Z","lastEditedAt":null,"updatedAt":"2019-02-05T03:10:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTAwMTkyNg==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-469001926","bodyText":"The travis here is failing due to a internal version conflict.\npkg_resources.ContextualVersionConflict: (six 1.10.0 (/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages), Requirement.parse('six>=1.11.0'), {'jsonschema'})\nCan you have a look at it.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-03T08:49:35Z","lastEditedAt":null,"updatedAt":"2019-03-03T08:49:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzYwMTQ5Mw==","url":"https://github.com/coala/coala-bears/pull/2828#issuecomment-513601493","bodyText":"@Akhelesh , the build system has been heavily revised.  You will need to re-run .ci/generate_bear_metadata.py which now also generates bear-metadata.yaml","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-07-22T00:30:25Z","lastEditedAt":null,"updatedAt":"2019-07-22T00:30:25Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563718288000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2509","number":2509,"title":".ci/appveyor.yml: Add Python 3.6 jobs","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-05-26T14:09:06Z","updatedAt":"2019-07-21T14:11:28Z","closedAt":"2019-07-21T14:11:28Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2509","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMDAzMA==","url":"https://github.com/coala/coala-bears/pull/2509#discussion_r305620030","bodyText":"This is a potentially useful part of this PR, but the objective of this PR has been done in #2910 , which uses a slightly different approach of first installing lxml and tries very hard to avoid letting pip select source tarballs - requiring wheels.","diffHunk":"@@ -49,7 +49,8 @@ install:\n   - \"python --version\"\n   - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n   - \"%CMD_IN_ENV% python -m pip install --upgrade setuptools==21\"\n-  - \"%CMD_IN_ENV% python -m pip install -r requirements.txt \\\n+  - \"%CMD_IN_ENV% python -m pip install --install-option=--no-cython-compile \\","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-21T14:11:06Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:11:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg1NTA4Mw==","url":"https://github.com/coala/coala-bears/pull/2509#issuecomment-397855083","bodyText":"Blocked by #2511","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T05:06:03Z","lastEditedAt":null,"updatedAt":"2018-06-17T05:06:03Z"}]}}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1563798587000,"issue":{"htmlUrl":"https://github.com/coala/documentation/pull/598","number":598,"title":"toml_config.rst: Config in TOML","body":"Documentation on how to write coala configuration file in TOML\nCloses #597\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2019-06-15T19:34:26Z","updatedAt":"2019-07-22T12:29:47Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/documentation/pull/598","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTE4MDU1Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r295180556","bodyText":"This coafile is in TOML format or in coala format? Also specify what type of format is because from the example i can't be sure and for other examples.","diffHunk":"@@ -0,0 +1,155 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three coafiles to configure your project.\n+\n+1. A project-wide coafile.\n+2. A user-wide coafile.\n+3. A system-wide coafile.\n+\n+Project-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDk2NjI0MA==","createdAt":"2019-06-19T17:16:20Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-19T08:34:36Z","lastEditedAt":null,"updatedAt":"2019-06-19T08:34:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTE4MTkwMw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295181903","bodyText":"Maybe it is useful to have like a side-by-side comparison of how the syntax is. You can start with a complex coafile in coala format and explain how it can be written in toml format because users already know how to write in coala format but not in toml.","diffHunk":"@@ -0,0 +1,155 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three coafiles to configure your project.\n+\n+1. A project-wide coafile.\n+2. A user-wide coafile.\n+3. A system-wide coafile.\n+\n+Project-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. In coala you will be using TOML strings,\n+booleans, integers and arrays as values.\n+\n+Section Inheritance\n+----------------------------\n+coala supports section inheritance. You can define section inheritance\n+explicitly by naming a section in the format ``[\"basesection.newsection\"]``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+.. note::\n+\n+    In ``[\"basesection.newsection\"]``, the quotes insides the square braces are\n+    necessary for specifying section inheritance in TOML.\n+\n+\n+Consider the following coafile::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [\"all.section1\"]\n+  overridable = 3\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [\"all.section2\"]\n+  overridable = 4\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section. This is the same file without section\n+inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Defining Aspects and Tastes\n+---------------------------\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDk2NjI0Ng==","createdAt":"2019-06-19T17:16:24Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-19T08:37:34Z","lastEditedAt":null,"updatedAt":"2019-06-19T08:37:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyNTQ3Mw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295525473","bodyText":"why string?","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:10:40Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:10:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyNTk1OA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295525958","bodyText":"If there is a case where appends can be section name then create a subheading and explain with example (what will happen when you do so)","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:12:00Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:12:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyODY3Nw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295528677","bodyText":"Mention above that if property is redefined in the inherited section then it will overwrite if appends is not mentioned","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:19:32Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:19:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzMDk2OA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295530968","bodyText":"appends can be list If I am correct, mention it here,","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:25:56Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:25:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzMjk1Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r295532956","bodyText":"What will happen when someone writes all.a, if nothing happens, mention that inherits can be a section name only","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:31:50Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:31:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNTYxOA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295535618","bodyText":"Move this in aspect section","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:39:48Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:39:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNTk1Mg==","url":"https://github.com/coala/documentation/pull/598#discussion_r295535952","bodyText":"Remove ]","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:40:48Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:40:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNjY2NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295536665","bodyText":"See other files how they have define headings with subheadings","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:43:12Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:43:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNzA3NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295537075","bodyText":"why gap","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:44:28Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:44:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzODgwMQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295538801","bodyText":"If you are putting some type of warning then you should see how we have written the docs.\nDon't forget to preview it on netlify","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'\n+ appends = 'bears'\n+ language = 'Python'\n+ remove_all_unused_imports = true\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:49:55Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:49:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzOTQ0Nw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295539447","bodyText":"In future, we will split this doc in 2 part\n\ncoafile to TOML\nTOML to coafile\n\nso you should see how they are doing it in the docs.","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'\n+ appends = 'bears'\n+ language = 'Python'\n+ remove_all_unused_imports = true\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:52:02Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:52:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2MTM5MQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r296761391","bodyText":"typo caofile","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML\n+\n+.. code::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+---------------------\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML\n+\n+.. code::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance\n+\n+.. code::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+.. code::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same in coafile format appears as\n+\n+.. code::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+.. note::\n+\n+   - If you want to append multiple settings then use ``appends`` as a list\n+     ::\n+\n+        appends = [ 'a', 'b']\n+   - If you want to inherit multiple sections use ``inherits`` as a list\n+     ::\n+\n+        inherits = [ 'section1', 'section2']\n+   - You can only inherit sections\n+   - You can only append settings\n+   - If  a setting is redefined in the inherited section then it will\n+     overwritten if appends is not used.\n+\n+Defining Aspects and Tastes\n+----------------------------\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example\n+\n+.. code::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  [python]\n+  files = '**.py'\n+  language = 'Python'\n+  inherits = 'all'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+For caofile users who want to write configuration in TOML","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-06-24T14:47:29Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:47:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2NjAxMw==","url":"https://github.com/coala/documentation/pull/598#discussion_r296766013","bodyText":"This should be rephrased as two of the three configuration files don't just affect a project but rather multiple projects.","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2019-06-24T14:56:33Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:56:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2OTE4NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r296769185","bodyText":"Do we have a list of recognized parameters a section can have such as bears, ignore, files etc. If we do, we should link it here with appropriate text.","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2019-06-24T15:02:51Z","lastEditedAt":null,"updatedAt":"2019-06-24T15:02:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg2NDkxNA==","url":"https://github.com/coala/documentation/pull/598#discussion_r296864914","bodyText":"At line 60 I have added :\nA list of settings required to write configuration can be found at\nSettings <http://api.coala.io/en/latest/Developers/coala_settings.html>","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI4MTM2NA==","createdAt":"2019-06-25T00:22:34Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2019-06-24T18:49:04Z","lastEditedAt":null,"updatedAt":"2019-06-24T18:49:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzM0MTQ0Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r297341446","bodyText":"typo: can be the same","diffHunk":"@@ -8,6 +8,9 @@ Naming, Scope and Location\n --------------------------\n \n You can use up to three configuration files to configure your project.\n+Two of these configuration files ``.coarc.toml`` and ``system_coafile.toml``\n+can be same for any number of projects but ``.coafile.toml`` can be","author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"reactions":[],"createdAt":"2019-06-25T18:50:48Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:50:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNDg2MTgyMw==","url":"https://github.com/coala/documentation/pull/598#issuecomment-504861823","bodyText":"@jayvdb  @margobra8 @ksdme Can you review this?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-06-24T05:22:18Z","lastEditedAt":null,"updatedAt":"2019-06-24T05:22:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNTA0MzgyMw==","url":"https://github.com/coala/documentation/pull/598#issuecomment-505043823","bodyText":"it looks good to me, when thinks will be changed we will update the documentation too. ack","diffHunk":null,"author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI0Mjc0OA==","createdAt":"2019-06-24T14:51:01Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-24T14:49:33Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:49:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMTg3Mjk2NA==","url":"https://github.com/coala/documentation/pull/598#issuecomment-511872964","bodyText":"@jayvdb @RaiVaibhav @Nosferatul @ksdme @margobra8 Can you review this commit 1309129","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-16T15:44:52Z","lastEditedAt":"2019-07-16T20:33:36Z","updatedAt":"2019-07-16T20:33:36Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1564466718000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/724","number":724,"title":"README.md: Remove Spacing Inconsistency","body":"Readme.md contained some spacing inconsitency\nwhich has been now removed.\nFixes #713\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":24,"createdAt":"2019-03-25T11:27:51Z","updatedAt":"2019-07-30T06:05:18Z","closedAt":null,"state":"open","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/724","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM5NzUxNA==","url":"https://github.com/coala/projects/pull/724#discussion_r269397514","bodyText":"Why has this section been removed?","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T03:52:28Z","lastEditedAt":null,"updatedAt":"2019-03-27T03:52:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM5NzU4Ng==","url":"https://github.com/coala/projects/pull/724#discussion_r269397586","bodyText":"and this added?\nThese changes are not related to the SpaceConsistencyBear issue afaik","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T03:53:01Z","lastEditedAt":null,"updatedAt":"2019-03-27T03:53:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQwODQ4MA==","url":"https://github.com/coala/projects/pull/724#discussion_r269408480","bodyText":"No your right these sections are not related. This is related to another issue #600. Actually makman2 and me were planning to fix the CI in this pr itself because gsoc is already upon us. I have discussed this with him and based on that appropriate action will be taken :)","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T05:19:14Z","lastEditedAt":null,"updatedAt":"2019-03-27T05:19:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTU5MTA2NA==","url":"https://github.com/coala/projects/pull/724#discussion_r269591064","bodyText":"That's great. Just add that issue reference to the comment/pr as well.","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T14:29:08Z","lastEditedAt":null,"updatedAt":"2019-03-27T14:29:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTU5NDI2Ng==","url":"https://github.com/coala/projects/pull/724#discussion_r269594266","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n                  - cOALA_ZIP_URL=https://github.com/coala/coala/archive/master.zip\n        \n          \n            \n                    - COALA_ZIP_URL=https://codeload.github.com/coala/coala/archive/master.zip","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala\n+      <<: *disable_global\n+      language: python\n+      python: 3.6\n+      cache: pip\n+      install:\n+        - cOALA_ZIP_URL=https://github.com/coala/coala/archive/master.zip","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTc4OTMyNQ==","createdAt":"2019-03-29T12:15:57Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2019-03-27T14:34:57Z","lastEditedAt":null,"updatedAt":"2019-03-27T14:34:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4MzU5MQ==","url":"https://github.com/coala/projects/pull/724#discussion_r269683591","bodyText":"I don't think so this is required. This was reporting InvalidLink because we were using old coala. You should run latest coala and verify if it still throws InvalidLink.","diffHunk":"@@ -164,7 +164,7 @@ investigation/review. Based on this feature, I implemented a\n [script](https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d) to\n demonstrate the ability of bootstrapping coala Go bears on a bare-metal FreeBSD\n system\n-([Screen record for the demo](https://asciinema.org/a/0poVbHE7lqehV4islFo6cptjb)),\n+([Screen record for the demo]()),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:29:42Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:29:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NDEwNw==","url":"https://github.com/coala/projects/pull/724#discussion_r269684107","bodyText":"Are these changes related to SpaceConsistency?","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:30:47Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:30:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NTgwMA==","url":"https://github.com/coala/projects/pull/724#discussion_r269685800","bodyText":"No the link bear complained even after we installed the latest version so I removed the backslash","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T17:34:16Z","lastEditedAt":"2019-03-27T17:34:32Z","updatedAt":"2019-03-27T17:34:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NjQ0MQ==","url":"https://github.com/coala/projects/pull/724#discussion_r269686441","bodyText":"I just followed up on @kriti21's PR and I think she installed the latest coala and still the bear complained.","diffHunk":"@@ -164,7 +164,7 @@ investigation/review. Based on this feature, I implemented a\n [script](https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d) to\n demonstrate the ability of bootstrapping coala Go bears on a bare-metal FreeBSD\n system\n-([Screen record for the demo](https://asciinema.org/a/0poVbHE7lqehV4islFo6cptjb)),\n+([Screen record for the demo]()),","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTYzNTI2MA==","createdAt":"2019-03-27T19:14:31Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-03-27T17:35:39Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:35:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY5MTQxMA==","url":"https://github.com/coala/projects/pull/724#discussion_r269691410","bodyText":"Then I think its better to add a new commit for this change. Actually for all invalid link changes.","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:46:28Z","lastEditedAt":"2019-03-27T17:46:51Z","updatedAt":"2019-03-27T17:46:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDM4NDc2NQ==","url":"https://github.com/coala/projects/pull/724#discussion_r270384765","bodyText":"See  @kriti21's PR.\n@sladyn98 \t, i suggest you make your PR only about fixing the spacing.  Leave the other problem to kriti.\nOr split your commit into two well written commits, as they are two distinct fixes.","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-03-29T12:17:50Z","lastEditedAt":null,"updatedAt":"2019-03-29T12:17:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDM4NjQ3Mw==","url":"https://github.com/coala/projects/pull/724#discussion_r270386473","bodyText":"@jayvdb yep agreed I made these changes intially with the aim of having my PR merged but since @kriti21 got her CI green I am removing these changes 👍","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-29T12:23:46Z","lastEditedAt":null,"updatedAt":"2019-03-29T12:23:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI2NzU0NQ==","url":"https://github.com/coala/projects/pull/724#issuecomment-477267545","bodyText":"@sladyn98 I would've really liked if there is a single PR fixing the CI. Two PRs for same purpose makes one redundant. Although this PR references changes regarding space consistency but the goal is same. Anyways, as soon as #600 is finished, you need to cherry pick that commit and push here. We should be able to see the CI green here, since that commit is has been done before than this (following linear git history).","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:27:32Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:27:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI2ODg5OA==","url":"https://github.com/coala/projects/pull/724#issuecomment-477268898","bodyText":"@sladyn98 I would've really liked if there is a single PR fixing the CI. Two PRs for same purpose makes one redundant. Although this PR references changes regarding space consistency but the goal is same. Anyways, as soon as #600 is finished, you need to cherry pick that commit and push here. We should be able to see the CI green here, since that commit is has been done before than this (following linear git history).\n\nYeah @abhishalya your bang on I will remove the changes from my PR once #600 has been fixed :)","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T17:30:27Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:30:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI3MjQ0Mg==","url":"https://github.com/coala/projects/pull/724#issuecomment-477272442","bodyText":"@abhishalya @kriti21  https://travis-ci.org/sladyn98/projects/builds/511483343 I have linked the branch which made the CI green on my local fork you can have a look.The one problem is the asci link. I do not think I should have made that change because we just cannot remove a link from someone's project.So we need to find a workaround that.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTYzNTMwMQ==","createdAt":"2019-03-27T19:15:02Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}},{"id":"MDg6UmVhY3Rpb24zOTcwNzcxOQ==","createdAt":"2019-03-28T14:14:47Z","content":"THUMBS_UP","user":{"login":"kriti21","name":"Kriti Rohilla"}}],"createdAt":"2019-03-27T17:38:15Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:38:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNjI3NjUwNQ==","url":"https://github.com/coala/projects/pull/724#issuecomment-516276505","bodyText":"@jayvdb This fixes the spacing inconsistency and is ready to be merged IMO.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-07-30T06:05:18Z","lastEditedAt":null,"updatedAt":"2019-07-30T06:05:18Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1564468673000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/657","number":657,"title":"labhub.py: Add private response","body":"Added user mentions in labhub commands\nAdded a user mention in lmgtfy plugin\nas well\nCloses #349\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2019-04-14T09:50:35Z","updatedAt":"2019-07-30T06:37:53Z","closedAt":null,"state":"open","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/657","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ4Mjk3NTM5NQ==","url":"https://github.com/coala/corobo/pull/657#issuecomment-482975395","bodyText":"@Vamshi99 @abhishalya Can you guys kindly give this a look.Thanks","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-14T13:23:49Z","lastEditedAt":null,"updatedAt":"2019-04-14T13:23:49Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1564466566000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/658","number":658,"title":"labhub.py: Add duplicate issue title check","body":"Added a duplicate issue check to warn\nthe user of a duplicate issue title.\nCloses #291\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2019-04-16T15:12:54Z","updatedAt":"2019-07-30T06:02:46Z","closedAt":null,"state":"open","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/658","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTIwMDMyOA==","url":"https://github.com/coala/corobo/pull/658#discussion_r279200328","bodyText":"There will be thousands of issues in each repository, get the right ones and then check the body, title in those issues.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-04-28T15:48:57Z","lastEditedAt":null,"updatedAt":"2019-04-28T15:48:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTIwMzQ4OA==","url":"https://github.com/coala/corobo/pull/658#discussion_r279203488","bodyText":"@Vamshi99 Im not quite sure I understand what your saying, how do I get the \"right ones\", I would have to scan all the issues in order to compare the titles, else how would I determine the duplicate one .","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-28T17:12:46Z","lastEditedAt":null,"updatedAt":"2019-04-28T17:12:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTIwOTgzOQ==","url":"https://github.com/coala/corobo/pull/658#discussion_r279209839","bodyText":"@sladyn98 You should have a look at the comments on the previous PR #332 to get the correct approach of doing this.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-04-28T19:59:07Z","lastEditedAt":null,"updatedAt":"2019-04-28T19:59:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTI0MzE5Nw==","url":"https://github.com/coala/corobo/pull/658#discussion_r279243197","bodyText":"@abhishalya Yeah I did have a look at #332 . For every assign_cmd the corresponding repo would be selected and iterated through to determine a duplicate issue list.\nAnother approach I see would be to maintain a cache of issues and their titles, but IMO that would be a unnecessary overhead because of the constant updation.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-29T06:03:43Z","lastEditedAt":null,"updatedAt":"2019-04-29T06:03:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTYxMjUyNw==","url":"https://github.com/coala/corobo/pull/658#discussion_r279612527","bodyText":"@sladyn98 Use a search query, it will give the issues which matches the text you gave, then search in those issues. See GitHub search and IGitt API if you don't know how.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-04-30T04:46:13Z","lastEditedAt":null,"updatedAt":"2019-04-30T04:46:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3NjkxMA==","url":"https://github.com/coala/corobo/pull/658#discussion_r280976910","bodyText":"How does this query help?  You need to search for open issues of coala repositories.","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-05-04T10:24:22Z","lastEditedAt":null,"updatedAt":"2019-05-04T10:24:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3Njk2Mg==","url":"https://github.com/coala/corobo/pull/658#discussion_r280976962","bodyText":"Also, I couldn't find any implementation for GitLab. Search for appropriate method in IGitt API before you do anything.","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-05-04T10:26:31Z","lastEditedAt":null,"updatedAt":"2019-05-04T10:26:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3OTEzNQ==","url":"https://github.com/coala/corobo/pull/658#discussion_r280979135","bodyText":"@Vamshi99 Yeah still working on it.Just wanted you to review the approach.Thanks\nEdit 1: GitLab doesn’t allow searching through raw queries, we might have to follow conventional approach here.","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-05-04T11:50:17Z","lastEditedAt":"2019-05-04T12:48:56Z","updatedAt":"2019-05-04T12:48:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3OTM5NQ==","url":"https://github.com/coala/corobo/pull/658#discussion_r280979395","bodyText":"How does this query help? You need to search for open issues of coala repositories.\n\n@Vamshi99 I modified the query this would help us get all the issues that have been opened that contain the current issue title open or close.Because it could be that the issue we are creating has already been solved, hence I did not include a restriction there.Thoughts?","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-05-04T12:00:12Z","lastEditedAt":"2019-05-04T12:45:55Z","updatedAt":"2019-05-04T12:45:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4NzI3MTU5Mw==","url":"https://github.com/coala/corobo/pull/658#issuecomment-487271593","bodyText":"@sladyn98 Tests?","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-04-27T09:42:23Z","lastEditedAt":null,"updatedAt":"2019-04-27T09:42:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5NDc2Mw==","url":"https://github.com/coala/corobo/pull/658#issuecomment-487294763","bodyText":"@abhishalya @Vamshi99 I added some tests I am not very sure if they are correct, could you give me a review","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-27T15:22:50Z","lastEditedAt":null,"updatedAt":"2019-04-27T15:22:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNjI3NDYxOA==","url":"https://github.com/coala/corobo/pull/658#issuecomment-516274618","bodyText":"Possible to make an exact title search to avoid too many results?\n\nActually the title search is being done at iss_title  this and the other constraints do allow us to minimize search results","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-07-30T05:57:44Z","lastEditedAt":null,"updatedAt":"2019-07-30T05:57:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNjI3NTEzNg==","url":"https://github.com/coala/corobo/pull/658#issuecomment-516275136","bodyText":"Not necessary to split the string further ;)\n\nWhere exactly ?","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-07-30T05:59:57Z","lastEditedAt":null,"updatedAt":"2019-07-30T05:59:57Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564661348000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/286","number":286,"title":" openhub/: Use openhub_django pypi package","body":"Overriding the default openhub_django URLs\nso as to define new ones and pass the\nheader and footer context of webpages and\nmake openhub_django templates look similar\nto that of commuity website.\nCloses #285","comments":0,"createdAt":"2019-08-01T12:09:08Z","updatedAt":"2019-08-01T12:09:08Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/286","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564647551000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/283","number":283,"title":"community/: Add a newcomer promotion request form","body":"Closes #281","comments":0,"createdAt":"2019-08-01T08:19:11Z","updatedAt":"2019-08-01T08:19:11Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/283","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564655870000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/284","number":284,"title":" community/: Add a feedback form","body":"Closes #274","comments":0,"createdAt":"2019-08-01T10:37:50Z","updatedAt":"2019-08-01T10:37:50Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/284","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564582254000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/277","number":277,"title":" community/: Add a form for adding calendar events","body":"Not everyone, will be able to fill forms.\nOnly the logged in users will be able to\nfill them and some of the forms, can only\nbe filled by developers or contributors\nwho are a part of more than one team.\nAt every step, the check is performed whether\nthe user is authenticated or not, to avoid\nfalse form submissions.\nCloses #270","comments":1,"createdAt":"2019-07-31T14:02:40Z","updatedAt":"2019-07-31T14:10:54Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/277","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564585061000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/278","number":278,"title":"communit/: Add a form for applying as a mentor","body":"Closes #272","comments":1,"createdAt":"2019-07-31T14:49:38Z","updatedAt":"2019-07-31T14:57:41Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/278","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564586571000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/279","number":279,"title":" community/: Add a form for adding a gsoc student","body":"Closes #273","comments":0,"createdAt":"2019-07-31T15:22:51Z","updatedAt":"2019-07-31T15:22:51Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/279","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564641524000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/282","number":282,"title":"community/: Add a request form to assign issue","body":"Closes #280","comments":0,"createdAt":"2019-08-01T06:38:44Z","updatedAt":"2019-08-01T06:38:44Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/282","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564731154000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/252","number":252,"title":"gci/: Redesign gci students web-page","body":"The redesigned web-page displays the data\nin a better UI/UX form with some additional\ninformation to make it more interactive and\nattractive.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/269","comments":6,"createdAt":"2019-06-12T12:12:05Z","updatedAt":"2019-08-02T07:32:34Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/252","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564558444000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/253","number":253,"title":"data/: Redesign the contributors webpage","body":"Closes https://gitlab.com/coala/GSoC/gsoc-2019/issues/268 , #240 , #231 ,\n#141 , #139 , #141 , #140","comments":6,"createdAt":"2019-06-14T04:23:16Z","updatedAt":"2019-07-31T07:34:04Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/253","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Mzg1MTM2NA==","url":"https://github.com/coala/community/pull/253#discussion_r293851364","bodyText":"This image looks too large IMO.","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2019-06-14T15:13:19Z","lastEditedAt":null,"updatedAt":"2019-06-14T15:13:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzkxOTc2NQ==","url":"https://github.com/coala/community/pull/253#discussion_r293919765","bodyText":"exported from Photoshop itself for web display! Adjusted the header image height to make it look good on large screen otherwise it would have taken whole visible screen to display that image.\nAny suggestions? On how can I make it better.\n\nimage looks too large","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-06-14T18:07:43Z","lastEditedAt":null,"updatedAt":"2019-06-14T18:07:43Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564558633000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/254","number":254,"title":" meta-review/: Redesign the webpage","body":"The redesigned web-page provides a nice\nUI/UX design to the web-page with \"search\"\nfeature.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/143","comments":2,"createdAt":"2019-06-15T04:17:42Z","updatedAt":"2019-07-31T07:37:13Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/254","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564558963000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/261","number":261,"title":" gamification/: Redesign the webpage ","body":"The redesigned webpages provides a enhanced\nUI/UX design to web-page with additional\nfunctionality of searching the contributors.\nCloses #260","comments":3,"createdAt":"2019-06-15T12:22:25Z","updatedAt":"2019-07-31T07:42:43Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/261","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1563780801000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/263","number":263,"title":" Add netlify-OAuth ","body":"The contributor can sign-in with either\nGitHub or GitLab account provided the\nuser is member of the organization. The\nvalidation is being performed via a http\nrequest which accepts the access_token\nretrieved from the netlify o-authentication.\nCloses #262","comments":4,"createdAt":"2019-07-11T20:24:24Z","updatedAt":"2019-07-22T07:33:21Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/263","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxMDY0MjI1Ng==","url":"https://github.com/coala/community/pull/263#issuecomment-510642256","bodyText":"The OAuth can be tested at: https://5d27924ef3c5950008706b3a--determined-goldstine-6dc504.netlify.com/","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-07-11T20:30:02Z","lastEditedAt":null,"updatedAt":"2019-07-11T20:30:02Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1563780390000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/267","number":267,"title":"community/: Add a joining netlify form","body":"The netlify form will ask some particular\ninputs that will be used for validating\nthe user - whether the user is eligible\nto be a organization member. The checks for\nit have been defined in coala webservices API\nwhich will be accepting form-submissions over\na cron-job defined. After the user submits the\nform, a success message will be displayed.\nCloses #89, #266","comments":6,"createdAt":"2019-07-20T18:10:57Z","updatedAt":"2019-07-22T07:26:30Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/267","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564508306000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/269","number":269,"title":" community/: Display contributor statistics","body":"Show the contributor statistics in the form of\ncharts. The charts will be shown for issues,\ncommits, reviews and for merge requests. And,\nan overall chart, which will display stats\nrepository wise. Apart from all these charts,\nthe type of issues the contrib has worked on\nwill be shown, with the count of issues the\nuser is working on and the last updated datetime\nthe user data was updated. All this will be shown,\nonly if there is some statistics, otherwise the\npopup option will not be shown.\n\nCloses #268","comments":0,"createdAt":"2019-07-30T17:20:32Z","updatedAt":"2019-07-30T17:38:26Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/269","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564581098000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/276","number":276,"title":"community/: Add a form for uploading google forms","body":"Not everyone, will be able to fill forms.\nOnly the logged in users will be able to\nfill them and some of the forms, can only\nbe filled by developers or contributors\nwho are a part of more than one team.\nAt every step, the check is performed whether\nthe user is authenticated or not, to avoid\nfalse form submissions.\nCloses #265","comments":1,"createdAt":"2019-07-31T13:43:48Z","updatedAt":"2019-07-31T13:51:38Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/276","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564679870000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/242","number":242,"title":"git.py: CI build pass for 1 or more remote object","body":"Running command \".ci/build.sh\" locally on pc used\nto failed the build, if there is more than one\ngit remote's.\nFixes #235","comments":6,"createdAt":"2019-05-08T07:58:40Z","updatedAt":"2019-08-01T17:17:50Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/242","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ5NDIzMzI1OA==","url":"https://github.com/coala/community/pull/242#issuecomment-494233258","bodyText":"@jayvdb Need review!\n\nBonding period milestone (https://gitlab.com/coala/GSoC/gsoc-2019/issues/12)","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-05-21T04:17:54Z","lastEditedAt":null,"updatedAt":"2019-05-21T04:17:54Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1563182966000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/245","number":245,"title":"git.py: Make netlify build pass for local branch","body":"When the forked community repo is deployed on netlify\nthe build is used to fail due to non-availability of\nattributes name, owner and resource in url attribute.\nThey're used to have None value instead of a valid\nvalue. So, to resolve this issue I've added a way to\nget valid values of these attrs from href attribute in\nurl object.\nFixes #232","comments":4,"createdAt":"2019-05-10T18:15:24Z","updatedAt":"2019-07-15T09:29:26Z","closedAt":"2019-07-15T09:29:26Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/245","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ5MTU5MjEyNw==","url":"https://github.com/coala/community/pull/245#issuecomment-491592127","bodyText":"Add a commit message about why it was failing and how did you fixed it.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"createdAt":"2019-05-12T12:39:02Z","lastEditedAt":null,"updatedAt":"2019-05-12T12:39:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzEzNzMyMw==","url":"https://github.com/coala/community/pull/245#issuecomment-493137323","bodyText":"The issue is automatically solved for now! Comment #232 (comment)\nClosing it as issue is no more valid for now 😇","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-05-16T16:23:57Z","lastEditedAt":null,"updatedAt":"2019-05-16T16:23:57Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564728870000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/250","number":250,"title":"Redesign homepage","body":"The enhancement includes addition of materialize\ncss, JQuery, responsiveness, and easy-navigation\nof website features. The easy-navigatibility is\nachieved by adding a navbar with display of meta\n-review and gamification leaderboard on homepage.\nApart from this, the activity graph url is omitted\nfrom website by displaying the graph itslef on the\nhomepage on large devices.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/142","comments":12,"createdAt":"2019-06-09T16:20:08Z","updatedAt":"2019-08-02T06:54:30Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/250","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODQyNg==","url":"https://github.com/coala/community/pull/250#discussion_r294038426","bodyText":"Any specific reason to have the import here instead of at the top of the module?\nP.S. https://stackoverflow.com/questions/128478/should-import-statements-always-be-at-the-top-of-a-module","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):\n+        org_name = get_org_name()\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team_objs = [Team.objects.get(name=team), ]\n+            contributors = Contributor.objects.filter(teams__in=team_objs)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        import requests\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:\n+            return None\n+        return {\n+            'quote': qod_data['contents']['quotes'][0]['quote'],\n+            'author': qod_data['contents']['quotes'][0]['author'],\n+        }\n+\n+    def get_top_meta_review_users(self, count):\n+        from meta_review.models import Participant","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:35:39Z","lastEditedAt":"2019-06-15T08:19:07Z","updatedAt":"2019-06-15T08:19:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODQ4NA==","url":"https://github.com/coala/community/pull/250#discussion_r294038484","bodyText":"Can we use f-Strings to do all the string formatting?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:39:20Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:39:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODU0MQ==","url":"https://github.com/coala/community/pull/250#discussion_r294038541","bodyText":"Why http instead of https?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:42:01Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:42:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODU3NA==","url":"https://github.com/coala/community/pull/250#discussion_r294038574","bodyText":"I believe we are already using it in this repo at some places, can you check?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:43:58Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:43:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzOTExOQ==","url":"https://github.com/coala/community/pull/250#discussion_r294039119","bodyText":"Add a related_name in the teams field of the Contributor model.\nGet a Team by it's name.\nGet contributors of that team by using the related_name.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NzI1Nw==","createdAt":"2019-06-15T14:00:44Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:08:28Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:08:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzOTMwMg==","url":"https://github.com/coala/community/pull/250#discussion_r294039302","bodyText":"handle should have only few lines of code, add all the other code in a separate file and use them here. E.g. see https://github.com/coala/community/blob/master/meta_review/management/commands/run_meta_review_system.py","diffHunk":"@@ -0,0 +1,119 @@\n+import logging\n+import json\n+import getorg\n+import os\n+\n+from django.core.management.base import BaseCommand\n+\n+from data.models import Contributor\n+from activity.scraper import activity_json\n+\n+\n+class Command(BaseCommand):\n+    help = 'Create a cluster map using contributors geolocation'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('output_dir', nargs='?', type=str)\n+\n+    def handle(self, *args, **options):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NjI5OA==","createdAt":"2019-06-15T13:00:06Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:15:18Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:15:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTYyMQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045621","bodyText":"Any specific reason to have the import here instead of at the top of the module?\n\nNo! Specific reason. I have seen in some of the upstream packages where they were also importing a module within a function.\nWill Move it to top of the module","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):\n+        org_name = get_org_name()\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team_objs = [Team.objects.get(name=team), ]\n+            contributors = Contributor.objects.filter(teams__in=team_objs)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        import requests\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:\n+            return None\n+        return {\n+            'quote': qod_data['contents']['quotes'][0]['quote'],\n+            'author': qod_data['contents']['quotes'][0]['author'],\n+        }\n+\n+    def get_top_meta_review_users(self, count):\n+        from meta_review.models import Participant","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:33:56Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:33:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTY4Nw==","url":"https://github.com/coala/community/pull/250#discussion_r294045687","bodyText":"Will correct it!","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:36:23Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:36:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTkzNQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045935","bodyText":"Sure! I will check it. But using .format() is an improved way of formatting the strings. Its' also mentioned in the provided link by you.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:45:06Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:45:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTk5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045995","bodyText":"We can also opt-for this one https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:47:33Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:47:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NjAzMg==","url":"https://github.com/coala/community/pull/250#discussion_r294046032","bodyText":"I believe we are already using it in this repo at some places, can you check?\n\nBoth are being used %-formatting as well as .format()","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:49:04Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:49:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjQ2Mg==","url":"https://github.com/coala/community/pull/250#discussion_r294072462","bodyText":"We can also opt-for this one https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python\n\nYeah that's what I mean, are we using these anywhere in this project?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T07:59:09Z","lastEditedAt":null,"updatedAt":"2019-06-16T07:59:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjYzOA==","url":"https://github.com/coala/community/pull/250#discussion_r294072638","bodyText":"team.contributors.count() should give you the count.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTQzNw==","createdAt":"2019-06-16T10:34:37Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:04:18Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:04:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjY4Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294072686","bodyText":"You changed string team to an object in the line 62.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T08:05:24Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:05:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Mjk0Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294072946","bodyText":"Can you do something like \n  \n    \n      community/data/contrib_data.py\n    \n    \n         Line 14\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           try:","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTExMg==","createdAt":"2019-06-16T10:08:04Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:12:13Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:12:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzE3Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294073176","bodyText":"You can directly do contributor['location'] = contributor.get('location')\nIf there is no location field you will have None. And location field can accept null values. https://github.com/coala/community/pull/250/files#diff-6556cd068e37d3b094ccb8363a7e3a7dR18","diffHunk":"@@ -32,6 +32,9 @@ def import_data(contributor):\n     try:\n         contributor['issues_opened'] = contributor.pop('issues')\n         contributor['num_commits'] = contributor.pop('contributions')\n+        contributor_location = contributor.get('location')\n+        if contributor_location:\n+            contributor['location'] = contributor_location","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTExMw==","createdAt":"2019-06-16T10:08:08Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:18:11Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:18:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzMxOA==","url":"https://github.com/coala/community/pull/250#discussion_r294073318","bodyText":"You can do def handle(output_dir='cluster_map') by default, if they provide some other dir it will be replaced by that.\nYou can also log that the cluster_map dir is used by default for this thing.","diffHunk":"@@ -0,0 +1,113 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir=None):\n+    logger = logging.getLogger(__name__)\n+\n+    if not output_dir:\n+        logger.debug('output_dir arg not provided! Setting output_dir'\n+                     ' to cluster_map/')\n+        output_dir = 'cluster_map'","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTA4MA==","createdAt":"2019-06-16T10:06:01Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:23:05Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:23:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzUxNg==","url":"https://github.com/coala/community/pull/250#discussion_r294073516","bodyText":"Add a proper documentations for any new methods you add.\nE.g. see: \n  \n    \n      community/gamification/process/update.py\n    \n    \n         Line 25\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def update_participants_data_with_mr(mr): \n        \n    \n  \n\n or \n  \n    \n      community/gamification/models.py\n    \n    \n         Line 84\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def add_points(self, points, activity_string, performed_at, updated_at):","diffHunk":"@@ -0,0 +1,113 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir=None):\n+    logger = logging.getLogger(__name__)\n+\n+    if not output_dir:\n+        logger.debug('output_dir arg not provided! Setting output_dir'\n+                     ' to cluster_map/')\n+        output_dir = 'cluster_map'\n+\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTA3NQ==","createdAt":"2019-06-16T10:05:32Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:29:08Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:29:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Mzc4Nw==","url":"https://github.com/coala/community/pull/250#discussion_r294073787","bodyText":"Btw, can you give me some good reasons on why we should have a quote on our home page? I mean how are those quote relatable to the website? 😄","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T08:34:12Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:34:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3NjYxNQ==","url":"https://github.com/coala/community/pull/250#discussion_r294076615","bodyText":"Yes! These are also being used in this repo.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:02:06Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:02:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3NjcwNg==","url":"https://github.com/coala/community/pull/250#discussion_r294076706","bodyText":"Since It's an open-source community project and is a reusable project by any of the org. And, any contributor or user visiting must receive some type of motivation in any of the manner. Showing inspirational quotes will be helpful to contributors to find some inspiration as well as motivation","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:05:19Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:05:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Njc2OQ==","url":"https://github.com/coala/community/pull/250#discussion_r294076769","bodyText":"Ohh! My bad. I will correct it 👍","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:07:50Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:07:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA4MTc4Mw==","url":"https://github.com/coala/community/pull/250#discussion_r294081783","bodyText":"Then try to use that only. They are more readable and faster.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T12:26:56Z","lastEditedAt":null,"updatedAt":"2019-06-16T12:26:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA4ODQ5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r294088495","bodyText":"Used them and pushed it! 🙂👍🏻","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T15:08:10Z","lastEditedAt":null,"updatedAt":"2019-06-16T15:08:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg3OTkwOA==","url":"https://github.com/coala/community/pull/250#discussion_r296879908","bodyText":"Have these imports in an order.\nE.g. built modules should be imported at one place. all the django imports should go at one place, etc..etc..see other files for more examples.","diffHunk":"@@ -1,28 +1,110 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n+import logging","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTMxMjE2NA==","createdAt":"2019-06-25T10:12:39Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:30:39Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:30:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4MjEyOA==","url":"https://github.com/coala/community/pull/250#discussion_r296882128","bodyText":"No, not like this, I meant have the request.get in the try:except and useraise_for_status also. Similar to what is done in \n  \n    \n      community/data/contrib_data.py\n    \n    \n         Line 9\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def get_contrib_data(): \n        \n    \n  \n\n as I said earlier.","diffHunk":"@@ -1,28 +1,110 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n+import logging\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': f'https://blog.{org_name}.io/',\n+        'twitter_url': f'https://twitter.com/{org_name}_io/',\n+        'facebook_url': f'https://www.facebook.com/{org_name}Analyzer',\n+        'repo_url': get_remote_url().href,\n+        'docs': f'https://{org_name}.io/docs',\n+        'newcomer_docs': f'https://{org_name}.io/newcomer',\n+        'coc': f'https://{org_name}.io/coc',\n+        'logo_url': (f'https://api.{org_name}.io/en/latest/_static/images/'\n+                     f'{org_name}_logo.svg'),\n+        'gitter_chat': f'https://gitter.im/{org_name}/{org_name}/',\n+        'github_core_repo': f'https://github.com/{org_name}/{org_name}/',\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team_name in teams:\n+            team = Team.objects.get(name=team_name)\n+            team_details[team] = team.contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        try:\n+            return {\n+                'quote': qod_data['contents']['quotes'][0]['quote'],\n+                'author': qod_data['contents']['quotes'][0]['author'],\n+            }","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:37:07Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:37:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4Mzg1NA==","url":"https://github.com/coala/community/pull/250#discussion_r296883854","bodyText":"Can you use double inverted commas(\"\") here, then you don't have to use \\ for ''","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:41:50Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:41:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4ODgxMQ==","url":"https://github.com/coala/community/pull/250#discussion_r296888811","bodyText":"the code should not depend on test, tests should depends on code.\nI understand the problem, can you try removing the test users from https://github.com/sks444/webservices.coala.io/blob/master/contrib.json, and see what are the existing test cases which fails(on master branch), or if we are not getting the 100 % coverage, we will try to fix those, because the original data which will come from the webservices will not have the testusers.\nI will give you access to push directly to https://github.com/sks444/webservices.coala.io/ so that you don't have to create a pr each time you have to modify the data for testing.","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI5MzgyMA==","createdAt":"2019-06-25T05:59:23Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:55:31Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:55:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4OTUxNA==","url":"https://github.com/coala/community/pull/250#discussion_r296889514","bodyText":"When you're writing the documentation under \"\"\" \"\"\" you don't have to use #","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:57:26Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:57:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5MDAxNg==","url":"https://github.com/coala/community/pull/250#discussion_r296890016","bodyText":"use f Strings.","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and\n+    # the 'map.html' file to django templates directory to get it displayed\n+    # on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                       output_dir)\n+    leaflet_destination_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI5Mzc0OA==","createdAt":"2019-06-25T05:57:15Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:58:48Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:58:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5MzAzNA==","url":"https://github.com/coala/community/pull/250#discussion_r296893034","bodyText":"I guess, you can directly do:\nIn [1]: with open('file.txt') as f:\n   ...:     for line in f:\n   ...:         print (line)\nsee https://stackoverflow.com/questions/39086/search-and-replace-a-line-in-a-file-in-python","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and\n+    # the 'map.html' file to django templates directory to get it displayed\n+    # on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                       output_dir)\n+    leaflet_destination_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                            'static')\n+\n+    # Remove existing leaflet_dir if exists\n+    for root, dirs, files in os.walk(leaflet_destination_path):\n+        for file in files:\n+            os.remove(os.path.join(leaflet_destination_path, file))\n+        os.rmdir(root)\n+\n+    os.renames(leaflet_source_path, leaflet_destination_path)\n+\n+    # Move org_locations.js to static folder\n+    locations_source_path = '{}/{}/org-locations.js'.format(os.getcwd(),\n+                                                            output_dir)\n+    locations_destination_path = '{}/{}/org-locations.js'.format(\n+        os.getcwd(), 'static')\n+    os.rename(locations_source_path, locations_destination_path)\n+\n+    # Make changes in map.html to support django syntax with needed CSS\n+    with open('{}/map.html'.format(output_dir)) as f:\n+        django_supported_htmls = []\n+        lines = f.readlines()\n+        for index in range(len(lines)):\n+            line = lines[index].strip()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTMwOTcyOA==","createdAt":"2019-06-25T09:40:52Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T20:06:52Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:06:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5ODYzNQ==","url":"https://github.com/coala/community/pull/250#discussion_r296898635","bodyText":"Can you make the whole card clickable instead of just the footer?\nI also think that these cards should look similar(in color, etc.) with the individual cards on their respective pages. What's your opinion?","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}\n+  <div class=\"center quote-of-day custom-green-color-font\">\n+    <div class=\"center apply-flex center-content\">\n+      <h3 style=\"padding-right: 15px\">~</h3>\n+      <div class=\"quote\">\n+        <p style=\"margin-bottom: 0px\">{{ quote_details.quote }}</p>\n+        <h6 style=\"margin-top: 0px\">- {{ quote_details.author }}</h6>\n+      </div>\n+      <h3 style=\"padding-left: 15px\">~</h3>\n+    </div>\n+  </div>\n+  {% endif %}{# if quote_details #}\n+\n+  <div class=\"center org-teams-stats apply-flex center-content custom-green-color-font\">\n+    {% for team_name, members_count in org.team_details.items %}\n+    <div class=\"team\" style=\"margin-right: 20px\">\n+      <h3 style=\"margin-bottom: 0\">{{ members_count }}</h3>\n+      <h4 style=\"margin-top: 0\">{{ team_name }}</h4>\n+    </div>\n+    {% endfor %}{# for team_name, members_count in org.team_details.items #}\n+  </div>\n+\n+  <div class=\"organization-map\">\n+    {% include 'map.html' %}\n+  </div>\n+\n+  <div class=\"top-contributors\">\n+    <div class=\"top-meta-reviewers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Meta-review Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for contrib in top_meta_review_users %}\n+          <tr>\n+            <td>{{ contrib.rank }}</td>\n+            <td>{{ contrib.login }}</td>\n+            <td>{{ contrib.score|floatformat:0 }}</td>\n+          </tr>\n+        {% endfor %}{# for contrib in top_meta_review_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"meta-review/\" class=\"waves-effect waves-light btn leaderboards-btn\">Contributors Meta-review</a>\n+    </div>\n+    <div class=\"top-gamifiers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Gamification Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for index, contrib in top_gamification_users %}\n+          <tr>\n+            <td>{{ index|add:\"1\" }}</td>\n+            <td>{{ contrib.username }}</td>\n+            <td>{{ contrib.score }}</td>\n+          </tr>\n+        {% endfor %}{# for index, contrib in top_gamification_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"gamification/\" class=\"waves-effect waves-light btn leaderboards-btn\">Gamification leaderboard</a>","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T20:22:00Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:22:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5OTM3Nw==","url":"https://github.com/coala/community/pull/250#discussion_r296899377","bodyText":"Is it solved? I see you're still using the team object in team_details[team] instead of a string team.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T20:23:57Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:23:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzAxNTc3NQ==","url":"https://github.com/coala/community/pull/250#discussion_r297015775","bodyText":"Won't coala raise errors! As single quotation marks are being preferred as mentioned in .coafile","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T05:52:09Z","lastEditedAt":null,"updatedAt":"2019-06-25T05:52:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzAxNjc5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r297016795","bodyText":"Ohh! I forgot to remove them","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T05:56:42Z","lastEditedAt":null,"updatedAt":"2019-06-25T05:56:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzEwOTcxMw==","url":"https://github.com/coala/community/pull/250#discussion_r297109713","bodyText":"Yeas! I will make the whole card clickable. What will make it more good is that we can add a href to each row which when clicked will redirect the user to the same user-details card on which the user has clicked.\n\nCan you make the whole card clickable instead of just the footer?\n\nI tried to give them same color (all green color variants being used in website) but it wasn't looking good, it was giving a dull-like experience. Currently, both of them are having that background colors which are going in match with header, body-background as well as text. Also, the yellow-orange color combination is one of the famous combinations.\n\nI also think that these cards should look similar(in color, etc.)\n\nWe can surely do that! but the only issue is space, we can't separate the current main-content div into two div blocks in which one div block will be used for a single card. Also, if we don't choose to create partitions then the concern is where will it be shown at top or bottom of page. Neither of the positions will have a nice UX experience. Showing at home-page will give user a glance giving a nice UX experience and with giving them an additional information that the website has two types of leaderboards related to contribs. And, a new-user to website always recognizes the website by its homepage and easy-navigability.\n\nwith the individual cards on their respective pages. What's your opinion?","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}\n+  <div class=\"center quote-of-day custom-green-color-font\">\n+    <div class=\"center apply-flex center-content\">\n+      <h3 style=\"padding-right: 15px\">~</h3>\n+      <div class=\"quote\">\n+        <p style=\"margin-bottom: 0px\">{{ quote_details.quote }}</p>\n+        <h6 style=\"margin-top: 0px\">- {{ quote_details.author }}</h6>\n+      </div>\n+      <h3 style=\"padding-left: 15px\">~</h3>\n+    </div>\n+  </div>\n+  {% endif %}{# if quote_details #}\n+\n+  <div class=\"center org-teams-stats apply-flex center-content custom-green-color-font\">\n+    {% for team_name, members_count in org.team_details.items %}\n+    <div class=\"team\" style=\"margin-right: 20px\">\n+      <h3 style=\"margin-bottom: 0\">{{ members_count }}</h3>\n+      <h4 style=\"margin-top: 0\">{{ team_name }}</h4>\n+    </div>\n+    {% endfor %}{# for team_name, members_count in org.team_details.items #}\n+  </div>\n+\n+  <div class=\"organization-map\">\n+    {% include 'map.html' %}\n+  </div>\n+\n+  <div class=\"top-contributors\">\n+    <div class=\"top-meta-reviewers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Meta-review Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for contrib in top_meta_review_users %}\n+          <tr>\n+            <td>{{ contrib.rank }}</td>\n+            <td>{{ contrib.login }}</td>\n+            <td>{{ contrib.score|floatformat:0 }}</td>\n+          </tr>\n+        {% endfor %}{# for contrib in top_meta_review_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"meta-review/\" class=\"waves-effect waves-light btn leaderboards-btn\">Contributors Meta-review</a>\n+    </div>\n+    <div class=\"top-gamifiers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Gamification Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for index, contrib in top_gamification_users %}\n+          <tr>\n+            <td>{{ index|add:\"1\" }}</td>\n+            <td>{{ contrib.username }}</td>\n+            <td>{{ contrib.score }}</td>\n+          </tr>\n+        {% endfor %}{# for index, contrib in top_gamification_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"gamification/\" class=\"waves-effect waves-light btn leaderboards-btn\">Gamification leaderboard</a>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T10:08:18Z","lastEditedAt":null,"updatedAt":"2019-06-25T10:08:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzExMTE3Mg==","url":"https://github.com/coala/community/pull/250#discussion_r297111172","bodyText":"Yeah! Its solved. Also, will change to make it more clear to team_name instead of object","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T10:12:02Z","lastEditedAt":null,"updatedAt":"2019-06-25T10:12:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMwODU3Ng==","url":"https://github.com/coala/community/pull/250#discussion_r297308576","bodyText":"line is looping variable, don't use the same variable name to store the line after the modfication(use newline maybe). It might work in this case, but it's not the correct way to do it, it will not behave expectedly always.\nDo change it everywhere you're doing this.","diffHunk":"@@ -0,0 +1,132 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    logger.info(\"'cluster_map/' is the default directory for storing\"\n+                \" organization map related files. If arg 'output_dir'\"\n+                ' not provided it will be used as a default directory by'\n+                \" 'getorg' package.\")\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug(f'{contrib.login} location {user_location}'\n+                         f' added on map')\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    Move static files from 'output_dir' to django static folder and\n+    the 'map.html' file to django templates directory to get it displayed\n+    on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = f'{os.getcwd()}/{output_dir}/leaflet_dist/'\n+    leaflet_destination_path = f'{os.getcwd()}/static/leaflet_dist/'\n+\n+    # Remove existing leaflet_dir if exists\n+    for root, dirs, files in os.walk(leaflet_destination_path):\n+        for file in files:\n+            os.remove(os.path.join(leaflet_destination_path, file))\n+        os.rmdir(root)\n+\n+    os.renames(leaflet_source_path, leaflet_destination_path)\n+\n+    # Move org_locations.js to static folder\n+    locations_source_path = f'{os.getcwd()}/{output_dir}/org-locations.js'\n+    locations_destination_path = f'{os.getcwd()}/static/org-locations.js'\n+    os.rename(locations_source_path, locations_destination_path)\n+\n+    # Make changes in map.html to support django syntax with needed CSS\n+    with open('{}/map.html'.format(output_dir)) as f:\n+        django_supported_htmls = []\n+        for line in f:\n+            line = line.strip()\n+            if line.__contains__('<html>'):\n+                django_supported_htmls.append('{% load staticfiles %}\\n')\n+                django_supported_htmls.append(line + '\\n')\n+            elif line.__contains__('</head>'):\n+                adjust_prop = '''\n+                <style>\n+                    #map {\n+                    width: 60%;\n+                    height: 300px;\n+                    margin: auto;\n+                    box-shadow: 0px 0px 25px 2px;\n+                    }\n+                    @media only screen and (max-width:750px){\n+                        #map {\n+                            width: 90%\n+                        }\n+                    }\n+                </style>\\n\n+                '''\n+                meta_charset = '<meta charset=\"utf-8\">'\n+                adjust_prop = adjust_prop.strip().replace('    ', '')\n+                django_supported_htmls.insert(6, meta_charset + '\\n')\n+                django_supported_htmls.append(adjust_prop + '\\n')\n+                django_supported_htmls.append(line + '\\n')\n+            elif line.__contains__('https://'):\n+                line = line.replace('https:', '').replace(' />', '>')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTM1MTEyMQ==","createdAt":"2019-06-25T17:48:51Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-25T17:36:07Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:36:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMDcxODU0Ng==","url":"https://github.com/coala/community/pull/250#issuecomment-500718546","bodyText":"@sks444 @damngamerz @margobra8\nPlease review, Thnx","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-11T07:18:23Z","lastEditedAt":null,"updatedAt":"2019-06-11T07:18:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMjM0NjE4OQ==","url":"https://github.com/coala/community/pull/250#issuecomment-502346189","bodyText":"Create an issue in this repo and close that one, do not close the gitlab issues from here.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NjY2MA==","createdAt":"2019-06-15T13:24:24Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:20:43Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:20:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzQwOTE1NA==","url":"https://github.com/coala/community/pull/250#issuecomment-517409154","bodyText":"@sks444 I was thinking, to add the map.html generated by getorg in the commit. Doing this, will allow us to skip a bunch a of code, which may be time consuming","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-01T18:40:09Z","lastEditedAt":null,"updatedAt":"2019-08-01T18:40:09Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564729152000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/251","number":251,"title":"Create build logs webapge","body":"The newly created webpage combines the previous\ntwo webpages- info.txt and log/index.html. This\nweb-page combines the results of both the pages\nand shows them in a better UI/UX with additional\nfeatures of filtering and searching within the\nexisting logs. The logs are fetched from a JSON\nfile which is created from the logs stored in\nthe log file _site/community.log\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/145","comments":3,"createdAt":"2019-06-10T20:00:27Z","updatedAt":"2019-08-02T06:59:12Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/251","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxNDI5Ng==","url":"https://github.com/coala/community/pull/251#discussion_r297314296","bodyText":"from community.git import (\n    get_org_name,\n    get_owner,\n    get_deploy_url,\n    get_upstream_deploy_url,\n)","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:49:10Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:49:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxNTI4OQ==","url":"https://github.com/coala/community/pull/251#discussion_r297315289","bodyText":"data is already dict right? Then why you're converting it to dict again?","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:51:28Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:51:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxODczNA==","url":"https://github.com/coala/community/pull/251#discussion_r297318734","bodyText":"You should directly do with open('./_site/community.log') as log_file: as it was done earlier without above three lines.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:58:57Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:58:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzMDE1OA==","url":"https://github.com/coala/community/pull/251#discussion_r297330158","bodyText":"I am not sure in what condition this line will execute, you have already set  previous_found_level to None, and I am not seeing getting it overridden anywhere except the if condition.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T18:24:57Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:24:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzMzYxNA==","url":"https://github.com/coala/community/pull/251#discussion_r297333614","bodyText":"Earlier it was raising some kind of error when we try to open the template as there .items is being used in django templates. Now, its working fine. I don't how. I will make it change","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:32:47Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:32:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzNTQ1MA==","url":"https://github.com/coala/community/pull/251#discussion_r297335450","bodyText":"I'm doing this because the message in html page will shown accordingly. If the file doesn't exists a different message will be displayed asking user to run the build command. 31f2135#diff-b640fac2a47fbe8bce3f0bfc4a528452R67","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:37:10Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:37:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzNjI3Nw==","url":"https://github.com/coala/community/pull/251#discussion_r297336277","bodyText":"It will get execute in case we have a Traceback error or a long error message being logged in multiple lines. That log message will be depending upon the previous line which mentions what type of log it is!","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:39:04Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:39:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMjk3NA==","url":"https://github.com/coala/community/pull/251#discussion_r297502974","bodyText":"Our README.md should explain how to setup the project and how to run it.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T06:34:57Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:34:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMzk1MA==","url":"https://github.com/coala/community/pull/251#discussion_r297503950","bodyText":"Yeah! It should. Already created a task in phase-3 where all the required information will updated in repositories README’s as well as docs.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:38:34Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:38:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMzk5Mw==","url":"https://github.com/coala/community/pull/251#discussion_r297503993","bodyText":"I still did't get you.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T06:38:44Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:38:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwNDQ5MQ==","url":"https://github.com/coala/community/pull/251#discussion_r297504491","bodyText":"Allow me to explain this via an example.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:40:38Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:40:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwODMzOA==","url":"https://github.com/coala/community/pull/251#discussion_r297508338","bodyText":"2019-06-26 06:50:10,770 [ERROR] django.request: Internal Server Error: /CI/Build/\nTraceback (most recent call last):\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 34, in inner\n    response = get_response(request)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 124, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 88, in dispatch\n    return handler(request, *args, **kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 149, in get\n    context = self.get_context_data(**kwargs)\n  File \"/home/kvgarg/GSoC/community/ci_build/view_log.py\", line 92, in get_context_data\n    context['build_logs_stored'] = list(self.get_build_logs())\nTypeError: 'bool' object is not iterable\nSince the Traceback doesn't have any kind of log-level specified, So it is clear that it will depend upon the log-line just before it i.e. 2019-06-26 06:50:10,770 [ERROR] django.request: Internal Server Error: /CI/Build/ therefore the Traceback error log will be appended in Error dict list.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:54:36Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:54:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxMTA4Mw==","url":"https://github.com/coala/community/pull/251#discussion_r297811083","bodyText":"You should directly do with open('./_site/community.log') as log_file: as it was done earlier without above three lines.\n\nSo, I think we can go ahead with the above solution? Any way if the file doesn't exist the other commands will fail, right?\n\nI'm doing this because the message in html page will shown accordingly. If the file doesn't exists a different message will be displayed asking user to run the build command. 31f2135#diff-b640fac2a47fbe8bce3f0bfc4a528452R67","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T18:36:15Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:36:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxNTk2MA==","url":"https://github.com/coala/community/pull/251#discussion_r297815960","bodyText":"No what I meant is how will you enter into this loop?\nsomething = None\nd = 3\nif d == 3:\n    something = 'something'\nelif something:\n    print(\"how can it get printed?\")\nSorry, if I am missing something.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T18:47:58Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:47:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxNjU2NQ==","url":"https://github.com/coala/community/pull/251#discussion_r297816565","bodyText":"Yeah! They’ll fail to get executed","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T18:49:30Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:49:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgyMTU5Mg==","url":"https://github.com/coala/community/pull/251#discussion_r297821592","bodyText":"Initially previous_found_level is None but once the for-loop begins it will never have the value None. And, the levels will either be empty or containing atmost one entry representing the log-level..\nSince, the traceback like log-messages will not contain any type of log-level enclosed in brackets which will return an empty regex match which in turn will execute this code.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T19:02:44Z","lastEditedAt":null,"updatedAt":"2019-06-26T19:02:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgyMjE0Nw==","url":"https://github.com/coala/community/pull/251#discussion_r297822147","bodyText":"In the example you have taken the value of d Will be getting changed. It will either have a value or will be None","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T19:04:21Z","lastEditedAt":null,"updatedAt":"2019-06-26T19:04:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMyNzI0MA==","url":"https://github.com/coala/community/pull/251#discussion_r298327240","bodyText":"Understood.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTU0MzU5Nw==","createdAt":"2019-06-27T19:21:46Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-27T19:08:46Z","lastEditedAt":null,"updatedAt":"2019-06-27T19:08:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMyNzgxMA==","url":"https://github.com/coala/community/pull/251#discussion_r298327810","bodyText":"Btw, can we break this function into smaller ones?","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-27T19:10:22Z","lastEditedAt":null,"updatedAt":"2019-06-27T19:10:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMzMTg1OA==","url":"https://github.com/coala/community/pull/251#discussion_r298331858","bodyText":"Yeah! In new changes I’ve breaked up this functions into multiple functions\nTalked about org_map func here 😅\nYeah! We can divide this one too.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-27T19:21:39Z","lastEditedAt":"2019-06-27T19:32:36Z","updatedAt":"2019-06-27T19:32:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMDcxODU3NA==","url":"https://github.com/coala/community/pull/251#issuecomment-500718574","bodyText":"@sks444 @damngamerz @margobra8\nPlease review, Thnx","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-11T07:18:30Z","lastEditedAt":null,"updatedAt":"2019-06-11T07:18:30Z"}]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false},{"id":"MDU6TGFiZWwxMjE4ODkyMjU4","name":"area/dependencies","color":"96f7bf","default":false}]},{"repoOwner":"coala","repoName":"coala-bears","labels":[{"id":"MDU6TGFiZWwzMjcwNDg3MDQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MDU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjA=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjE=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjI=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjM=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMjczNjcxMTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2Mjg=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Mjg=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Nzg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwzMjg1NDk4MDg=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNjA=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNzU=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjk2MDc1MDg=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDg1MjY=","name":"type/test","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MDg5MTQ=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDkwMDM=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODU=","name":"importance/low","color":"70e870","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODY=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkzNDM=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4MjA=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4Nzk=","name":"type/codestyle","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMjk2MTE5MTA=","name":"status/needs design","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MTI5MjU=","name":"status/needs info","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0MzI=","name":"status/wontfix/accepting patches","color":"555555","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0OTA=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjk2MTkwMDc=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzNDg2NTk2MzE=","name":"area/lintbears","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzNDg2NjY2Mzk=","name":"area/documentation","color":"c5def5","default":false},{"id":"MDU6TGFiZWwzNzM3ODc1MzY=","name":"type/dependencies","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MTMxOTIzMjY=","name":"bear proposal","color":"ADFF2F","default":false},{"id":"MDU6TGFiZWw0MzQ3MDk3MDU=","name":"long-term-project","color":"c5def5","default":false},{"id":"MDU6TGFiZWw0MzYzMTQwNDQ=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM4MDEzOTY=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTI0NDE0NjI=","name":"hacktoberfest","color":"b60205","default":false},{"id":"MDU6TGFiZWw0ODM0OTI0NTY=","name":"area/newsettings","color":"006b75","default":false},{"id":"MDU6TGFiZWw0ODM1MDQ5MzQ=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw1MDkwMjY0MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1MjgxMjIzMjY=","name":"area/genericbears","color":"D01975","default":false},{"id":"MDU6TGFiZWw1NjYwNzE5MDc=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODUzMzI3NDM=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw1OTQ2NzgyMDM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw1OTQ2Nzg1MzM=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWw1OTQ3MzEwMDQ=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjAxNjU4NzE=","name":"area/ci","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjcxMTYzNTY=","name":"type/performance","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2ODA4NDE3NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDE2NzkwNjI=","name":"area/tests","color":"c5def5","default":false},{"id":"MDU6TGFiZWw3NDE2NzYzNDI=","name":"language/ruby","color":"dd27c8","default":false},{"id":"MDU6TGFiZWw3NDY4NzgxOTQ=","name":"status/needs discussion","color":"ead40e","default":false},{"id":"MDU6TGFiZWw4Njc1NzI1Mjk=","name":"area/install","color":"0b14bc","default":false},{"id":"MDU6TGFiZWw4NzU1ODUyMzk=","name":"status/non-free","color":"8f0dbf","default":false},{"id":"MDU6TGFiZWw5MDY3ODUyNjk=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5ODMyMTYyMDQ=","name":"needs rebase","color":"f4cd69","default":false},{"id":"MDU6TGFiZWw5OTg4NjE3NjI=","name":"type/style","color":"168fe0","default":false},{"id":"MDU6TGFiZWwxMDAwNDgxMzgw","name":"type/spelling","color":"50b5f4","default":false},{"id":"MDU6TGFiZWwxMDQzNzk3ODQ0","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMTAxMTE5MjMz","name":"language/c","color":"a0e5e4","default":false},{"id":"MDU6TGFiZWwxMTAxMTMzNDcx","name":"language/go","color":"4345cc","default":false},{"id":"MDU6TGFiZWwxMTAxMTM1MDA2","name":"language/python","color":"0a8474","default":false},{"id":"MDU6TGFiZWwxMTAxMTQ1MDYx","name":"area/globalbears","color":"3cc9a8","default":false},{"id":"MDU6TGFiZWwxMTAxMTc1MjE3","name":"area/nativebear","color":"36c14d","default":false},{"id":"MDU6TGFiZWwxMTAxMTgxMDYx","name":"language/javascript","color":"5abbfc","default":false},{"id":"MDU6TGFiZWwxMTAxMTg4MDY1","name":"language/perl","color":"b867ea","default":false}]},{"repoOwner":"coala","repoName":"documentation","labels":[{"id":"MDU6TGFiZWwzNDcxNjk0NTI=","name":"bug","color":"fc2929","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTM=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTQ=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTU=","name":"help wanted","color":"159818","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTc=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw0Mjc0OTIzNjA=","name":"area/documentation","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjE=","name":"cool and awesome","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjI=","name":"difficulty/medium","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzc=","name":"difficulty/newcomer","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzg=","name":"importance/low","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0Mjc0OTY0NjQ=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDE2Nzc=","name":"status/needs design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDIyNjA=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDE=","name":"area/usability","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDI=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc1MDMzOTg=","name":"importance/high","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0Mjc1MTA5MTA=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MzEwMDExMDM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0MzEwMDExODE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0MzE0MzQ5NzY=","name":"size/S","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0MzE0MzgxNjg=","name":"size/XS","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzE0NTI5ODI=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzIwNTAyMDE=","name":"size/M","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM1Njc4Mzk=","name":"size/L","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw0NDQzODgyODI=","name":"size/XL","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTI0NDIxNDQ=","name":"hacktoberfest","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTYxMTgwNzE=","name":"review carefully!","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTg1NDUwOTI=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MTAyNTE0Nzk=","name":"initiatives/gci","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDQxODE=","name":"status/stale","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NjE4MjQ3MDA=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw4MTg0NDUyNjI=","name":"status/needs info","color":"9bf2cf","default":false},{"id":"MDU6TGFiZWw4MzI2ODAwMzk=","name":"status/needs discussion","color":"f4ab8b","default":false},{"id":"MDU6TGFiZWw4NDcxMDQ2MDk=","name":"area/ci","color":"f49093","default":false},{"id":"MDU6TGFiZWwxMjA4OTMyMDQ0","name":"type/bug","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMjIzMDYwNDc4","name":"area/sphinx","color":"47c3cc","default":false}]},{"repoOwner":"coala","repoName":"projects","labels":[{"id":"MDU6TGFiZWw1MjAwNDU5MzU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5MzY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDE=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4MTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4Mzg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMTI2NDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMzA5ODU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MjAxMzgzMjY=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjAxNDgxNzc=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxNzM1OTQ=","name":"design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw1MjAxOTc5MjE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAyMDYyNTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA0MTEwMTk=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3MTI=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3NjI=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MjE5NDE2MTI=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjQzODgxMzc=","name":"community_team","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTM4ODMyNzI=","name":"Project Proposal","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDM5NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzAzNzE5NDQ=","name":"initiatives/gci","color":"fc7d0f","default":false},{"id":"MDU6TGFiZWw3MzgxODI0MzY=","name":"upstream","color":"ffb5bd","default":false},{"id":"MDU6TGFiZWw3NTE3NjE0NTk=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw4MzYzNjUxNjE=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw4MzcxMjA3OTA=","name":"importance/low","color":"2fe055","default":false},{"id":"MDU6TGFiZWw4MzcxNjY3NTk=","name":"difficulty/medium","color":"9dea67","default":false},{"id":"MDU6TGFiZWw4MzcxNzIzOTI=","name":"importance/medium","color":"f2db30","default":false},{"id":"MDU6TGFiZWw4NjIyMDU3MjQ=","name":"status/needs info","color":"71fcb7","default":false},{"id":"MDU6TGFiZWw4NzgxODM1OTc=","name":"status/blocked","color":"e56994","default":false},{"id":"MDU6TGFiZWw5MTIxODM1MTc=","name":"status/needs design","color":"f9a7df","default":false},{"id":"MDU6TGFiZWwxMDUxNDM0NjAx","name":"status/wontfix","color":"f2a90c","default":false}]},{"repoOwner":"coala","repoName":"devops","labels":[{"id":"MDU6TGFiZWw2MDkyNjQ4MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjQyMjkyMzE=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWw2MjU3NzY1MzM=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWw2MjgxNTMwNjk=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxNTM3MTA=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTM4NzI=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWw2MjgxNTQwODM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjgxNTQzMjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxNTQ4OTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTUwODE=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWw2MjgxNTU0NjE=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWw2MjgxOTMwNTQ=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjgxOTMxNTM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTM4OTE=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTQwMjk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQxMDI=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTQyMDI=","name":"status/invalid","color":"668866","default":false},{"id":"MDU6TGFiZWw2MjgxOTQzMzA=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ1MDg=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ2NTI=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ3NTk=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ5MDg=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTUwMjk=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTUyMjA=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTUzOTA=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjgxOTU3OTU=","name":"area/security","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxOTYwMzQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MjgxOTY5Nzg=","name":"scope/internal","color":"D01975","default":false},{"id":"MDU6TGFiZWw2MjgxOTczNjQ=","name":"area/ops","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjgxOTg4Nzc=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NDk5ODc=","name":"service/venus","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAwNDQ=","name":"service/nginx","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxNTg=","name":"service/cobot","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxODc=","name":"service/cherry-pick-bot","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAzMzU=","name":"type/new service","color":"006b75","default":false},{"id":"MDU6TGFiZWw2Mjg0NTA0NzA=","name":"area/web development","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTE2MDI=","name":"area/communication","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTY3ODQ=","name":"service/landing","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyMjI=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyOTQ=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0MTQ=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0Nzg=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1Mjk=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1NjU=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MzI5MTU0MTY=","name":"service/corobo","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTcyOTQ=","name":"area/CD","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTkwNjM=","name":"service/ikari","color":"ab78ff","default":false},{"id":"MDU6TGFiZWw2MzI5MTkzMzI=","name":"area/monitoring","color":"aaff88","default":false},{"id":"MDU6TGFiZWw2MzI5MTk4MjE=","name":"cool and awesome","color":"aaffdd","default":false},{"id":"MDU6TGFiZWw2ODA4NDM4MTA=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2ODU2MDMyOTc=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw3MzI4OTUxMTk=","name":"initiatives/gci","color":"936ed3","default":false},{"id":"MDU6TGFiZWw5MjY3OTg3OTc=","name":"process/pending_review","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"corobo","labels":[{"id":"MDU6TGFiZWw2MDExMDE3NTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjE=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDEzNTc0Mjk=","name":"importance/low","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2MDEzNTc0ODc=","name":"importance/high","color":"e99695","default":false},{"id":"MDU6TGFiZWw2MDEzNTc1OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MDEzNTc2NzE=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MDEzNTc3NDk=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWw2MDEzOTE3OTY=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MDEzOTMxOTY=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDE0MDQ2Mjc=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MDM2ODcwMTM=","name":"stretch goal","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3Mjk=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3NjU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MTQ2OTYxMzE=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MTUyODM2MTU=","name":"ready","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUyODUyMzI=","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUzNjgxODU=","name":"documentation","color":"5319e7","default":true},{"id":"MDU6TGFiZWw2MTcwNzUyNDA=","name":"pr available","color":"cccccc","default":false},{"id":"MDU6TGFiZWw2MTg0MTI1ODU=","name":"cool and awesome","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTg0MTMzNTk=","name":"plugin proposal","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2MTg5NjE5MDA=","name":"poll","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTk4NTMxNzU=","name":"design","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjI2MjMyMzE=","name":"decided","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjI3MTg0NTE=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw2MjI3MTg1MDE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjM0MDU1NTE=","name":"difficulty/newcomer","color":"65c8ff","default":false},{"id":"MDU6TGFiZWw2MjQyMzcwMjQ=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjQ3NzY3ODg=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjY3NDQ0MzY=","name":"deployment","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjY4NTIxOTM=","name":"non-existent","color":"ededed","default":false},{"id":"MDU6TGFiZWw2Mjc5NjE1Mjc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjkyODg1NDY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzA0NTUwODk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzIxMzg2ODg=","name":"upstream","color":"b60205","default":false},{"id":"MDU6TGFiZWw2NTc1NjY5MTY=","name":"gsoc2017/phase3","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2ODA4NDM3ODg=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MjY4ODMyMzQ=","name":"initiatives/gci","color":"f79e9f","default":false},{"id":"MDU6TGFiZWw3Mzk0NDIzNzA=","name":"status/cannot reproduce","color":"000000","default":false},{"id":"MDU6TGFiZWw3NDI4NzcxODA=","name":"importance/medium","color":"ddba61","default":false},{"id":"MDU6TGFiZWw3NTg3MDM2MzA=","name":"area/ui","color":"dd02cf","default":false},{"id":"MDU6TGFiZWw3NTg3MDQzNDU=","name":"area/labhub","color":"63ccf9","default":false},{"id":"MDU6TGFiZWw3NTg3MDUyNDY=","name":"area/security","color":"fc6805","default":false},{"id":"MDU6TGFiZWw3NjE3NTA5NTc=","name":"type/markdown","color":"2a0582","default":false},{"id":"MDU6TGFiZWw3NjE3OTU1NzE=","name":"type/regex","color":"d453e2","default":false},{"id":"MDU6TGFiZWw3NjE5NDI5ODM=","name":"area/errbot","color":"ed3d9b","default":false},{"id":"MDU6TGFiZWw3NjE5NDMzNTQ=","name":"backend/gitter","color":"7cf9c1","default":false},{"id":"MDU6TGFiZWw3NjE5NDQwMDg=","name":"backend/zulip","color":"0a546b","default":false},{"id":"MDU6TGFiZWw3NjE5NjI2ODg=","name":"backend/telegram","color":"e26858","default":false},{"id":"MDU6TGFiZWw3NjIwMTE4MTI=","name":"area/config","color":"60a1db","default":false},{"id":"MDU6TGFiZWw3NjIwMTIyNTM=","name":"area/tests","color":"5facd8","default":false},{"id":"MDU6TGFiZWw3NjIwMjkyMTI=","name":"status/needs info","color":"8e081e","default":false},{"id":"MDU6TGFiZWw3NjI0MTgyNzI=","name":"area/documentation","color":"969bdd","default":false},{"id":"MDU6TGFiZWw3NjY2Mzc1ODM=","name":"area/ci","color":"ab04e8","default":false},{"id":"MDU6TGFiZWw5OTg4NjM0Nzc=","name":"type/style","color":"567c09","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5NjE2","name":"hoster/github","color":"e57be5","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5ODMz","name":"hoster/gitlab","color":"bc4c32","default":false}]},{"repoOwner":"coala","repoName":"community","labels":[{"id":"MDU6TGFiZWw3NjYwMTk2MDQ=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDU=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDY=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDc=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDg=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDk=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTE=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NjYyMTU3OTg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw3NjYyMTU4NzE=","name":"initiatives/gci","color":"ff9549","default":false},{"id":"MDU6TGFiZWw3NjYyMTY0Njc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NjYyMzg3OTg=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3NjYzMjMwMjc=","name":"needs design","color":"db81c7","default":false},{"id":"MDU6TGFiZWw3Njc0MjMzMDE=","name":"process/wip","color":"f2d815","default":false},{"id":"MDU6TGFiZWw3Njg2NDc1NDg=","name":"upstream","color":"fcc4c5","default":false},{"id":"MDU6TGFiZWw3Njg3NTEyNzk=","name":"importance/low","color":"9cc6fc","default":false},{"id":"MDU6TGFiZWw3Njg3NTE3Nzc=","name":"importance/high","color":"e0401d","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyMTA=","name":"process/pending review","color":"9fe589","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyNDg=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4Njc2NDE=","name":"status/blocked","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzAxOTkwODc=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw3NzAzMDQ4MTY=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzA0MTk0MTA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzI2MTI0MzU=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzM5NDU4NjU=","name":"importance/medium","color":"ccf945","default":false},{"id":"MDU6TGFiZWw3Nzg1OTkxODY=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Nzg3Mzk5MjY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE1NTY4MzY=","name":"initiatives/gsoc","color":"ed95c1","default":false},{"id":"MDU6TGFiZWw3ODIxMTU0NDM=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODI1Njg2MjA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjI0MDg1NzI=","name":"area/ci","color":"4c95ad","default":false},{"id":"MDU6TGFiZWw5OTg4NjI4MTU=","name":"type/style","color":"93f486","default":false},{"id":"MDU6TGFiZWwxMDA1MjQ0Mjgx","name":"area/tests","color":"7b68dd","default":false},{"id":"MDU6TGFiZWwxMDQ0MDM3Njc3","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMDg3MDEwODA4","name":"area/documentation","color":"f296f0","default":false},{"id":"MDU6TGFiZWwxMDk1NjQxNTQ4","name":"importance/critical","color":"e21f98","default":false}]},{"repoOwner":"coala","repoName":"gci-leaders","labels":[{"id":"MDU6TGFiZWw3NjkyMjg1NTg=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NTk=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjA=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjE=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjI=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjM=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjQ=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjU=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw3Njk1ODQ5MjM=","name":"difficulty/low","color":"59db91","default":false},{"id":"MDU6TGFiZWw3Njk1ODQ5OTY=","name":"initiatives/gci","color":"98e9f9","default":false},{"id":"MDU6TGFiZWw3Njk1ODY4NTA=","name":"difficulty/newcomer","color":"ffcce2","default":false},{"id":"MDU6TGFiZWw3Njk1OTg5ODY=","name":"difficulty/medium","color":"ff91cd","default":false},{"id":"MDU6TGFiZWw3Njk2NDAyNjg=","name":"difficulty/high","color":"a667f7","default":false},{"id":"MDU6TGFiZWw3Njk2NDExNDk=","name":"status/blocked","color":"cc4158","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzMjE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzNjI=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk3MDg3Mjg=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw3Njk5MzE3MTA=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzAxMDE1MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw3NzA3MzgyMDU=","name":"area/ui","color":"442cf7","default":false},{"id":"MDU6TGFiZWw3NzA4MTQwMjk=","name":"type/bug","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzA5NDg4ODk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzEwOTQ3Njg=","name":"area/i18n","color":"ffccee","default":false},{"id":"MDU6TGFiZWw3NzQ3MTc4OTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzQ4ODI2ODM=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzYyNjk4NzM=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE0NTgxMTg=","name":"importance/low","color":"fcf1a6","default":false},{"id":"MDU6TGFiZWw3ODQxMDY0NDM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5NDc0NjU=","name":"importance/high","color":"dd007d","default":false},{"id":"MDU6TGFiZWwxMDUxMjg1NDUx","name":"importance/critical","color":"ed0e79","default":false},{"id":"MDU6TGFiZWwxMTE1NTM4NDMy","name":"importance/medium","color":"c595db","default":false}]},{"repoOwner":"coala","repoName":"gh-board","labels":[{"id":"MDU6TGFiZWw3NTM5MzE2OTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTg=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTk=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDA=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDE=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDI=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NTU4MTU1MzQ=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NzQyNDUxNDA=","name":"difficulty/low","color":"07eded","default":false},{"id":"MDU6TGFiZWw3NzQyNDU1NDI=","name":"initiatives/gci","color":"e5ce95","default":false},{"id":"MDU6TGFiZWw3ODU0MzEyMDI=","name":"difficulty/medium","color":"d30a8d","default":false},{"id":"MDU6TGFiZWw4NDA0NzA4Njk=","name":"process/wip","color":"ead483","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2MTg=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2OTE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NjI0NjY2NTA=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAwMjc1NTE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAxOTA1NTk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAyMzc5NDc=","name":"difficulty/high","color":"e88e53","default":false},{"id":"MDU6TGFiZWw5MjIzNjc2Nzg=","name":"importance/medium","color":"65f23e","default":false},{"id":"MDU6TGFiZWw5MjM2MTYxMTQ=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5ODk3ODk=","name":"upstream","color":"6ded77","default":false},{"id":"MDU6TGFiZWw5MzA1Mzc3NzI=","name":"importance/low","color":"1394a0","default":false},{"id":"MDU6TGFiZWw5MzgzMTQ4MjE=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTg5MTUwMDI=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk1OTUyODA=","name":"difficulty/newcomer","color":"33a7bf","default":false},{"id":"MDU6TGFiZWwxMDExNjQ0Mjg5","name":"area/dependencies","color":"ef88a2","default":false},{"id":"MDU6TGFiZWwxMDY1MDEyNTI5","name":"in progress","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"coala-html","labels":[{"id":"MDU6TGFiZWwzMjY1MzQ5Nzg=","name":"type/bug","color":"fc2929","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5Nzk=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODE=","name":"status/wontfix/accepting patches","color":"777777","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODI=","name":"status/invalid","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODM=","name":"status/need-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODQ=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NTU=","name":"difficulty/newcomer","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NjQ=","name":"difficulty/low","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3OTU=","name":"difficulty/medium","color":"fef2c0","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4MzE=","name":"difficulty/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4NzU=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzM=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzQ=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzODI=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTA=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTE=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTk=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMzI5NTk1MTI=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWwzMzMxMzU3NDk=","name":"status/blocked","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzMyNDI0NDU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMzMzNDE1OTY=","name":"status/needs design","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYyMDYxOTQ=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYzMTg0NTQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2ODA4NDQzNjM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzEwMjg5NTk=","name":"initiatives/gci","color":"f78589","default":false}]},{"repoOwner":"coala","repoName":"landing-frontend","labels":[{"id":"MDU6TGFiZWw1MjE2NDU4MTA=","name":"type/bug","color":"ee0701","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTE=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTQ=","name":"status/wontfix/not happening","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTU=","name":"needs-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTY=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjE3MDE0OTc=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjE3MDE1MzY=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MzE1MzAwNjE=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MzE1OTEwMDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE2MTQzODU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE3NDgxNzc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE4MzA2ODg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzIxNzM0NTY=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1NTk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1OTE=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjM0NzM5Mjg=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2NjkxNjAwOTA=","name":"status/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjkxNjEwODA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODc1ODI1ODg=","name":"area/documentation","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDU3ODgwNzM=","name":"needs-discussion","color":"aa52aa","default":false},{"id":"MDU6TGFiZWw3MzAzNTE0NDc=","name":"initiatives/gci","color":"f2d5a4","default":false},{"id":"MDU6TGFiZWw3NDgzMDE3MzE=","name":"difficulty/high","color":"f762d7","default":false},{"id":"MDU6TGFiZWw3ODQ4Mzc1NjQ=","name":"difficulty/medium","color":"dbc255","default":false},{"id":"MDU6TGFiZWw3ODYxOTA3MzM=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4Njc1Nzc2MzI=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw4ODM0MDIxNDI=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4OTU1MjU0NDM=","name":"enhancement","color":"097287","default":true}]},{"repoOwner":"coala","repoName":"coalaCSS","labels":[{"id":"MDU6TGFiZWw2MDk0OTkxNzc=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzg=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzk=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODA=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODE=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODI=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODM=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw2MzAzNTEzNDg=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzAzNTE1MjU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgyNTE=","name":"area/landing-frontend","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgzMzY=","name":"area/projects","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MzQ3OTg0ODU=","name":"design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MzQ3OTkzMjk=","name":"importance/critical","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mzk0NDkwNTc=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODEwMjUyMzA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzMwNDk1MjU=","name":"initiatives/gci","color":"ee79f7","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE0Nzc=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE2MDY=","name":"importance/low","color":"99c1dd","default":false},{"id":"MDU6TGFiZWw3Mzk1MDA1OTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NTEzMzIxMzA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDkxMjMwMjk=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw4NDkxMjM4OTY=","name":"difficulty/medium","color":"0052cc","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2019-07-28T08:59:35Z"},{"repoOwner":"coala","repoName":"coala-bears","isPrivate":false,"lastSeenAt":"2019-07-30T07:30:05Z"},{"repoOwner":"coala","repoName":"documentation","isPrivate":false,"lastSeenAt":"2019-07-22T12:29:47Z"},{"repoOwner":"coala","repoName":"projects","isPrivate":false,"lastSeenAt":"2019-07-30T06:05:18Z"},{"repoOwner":"coala","repoName":"devops","isPrivate":false,"lastSeenAt":"2018-08-18T10:36:44Z"},{"repoOwner":"coala","repoName":"corobo","isPrivate":false,"lastSeenAt":"2019-07-30T06:37:53Z"},{"repoOwner":"coala","repoName":"community","isPrivate":false,"lastSeenAt":"2019-08-02T07:32:34Z"},{"repoOwner":"coala","repoName":"gci-leaders","isPrivate":false,"lastSeenAt":"2019-02-24T20:30:03Z"},{"repoOwner":"coala","repoName":"gh-board","isPrivate":false,"lastSeenAt":"2019-07-19T22:02:38Z"},{"repoOwner":"coala","repoName":"coala-html","isPrivate":false,"lastSeenAt":"2019-06-12T09:15:25Z"},{"repoOwner":"coala","repoName":"landing-frontend","isPrivate":false,"lastSeenAt":"2019-05-31T11:46:34Z"},{"repoOwner":"coala","repoName":"coalaCSS","isPrivate":false,"lastSeenAt":"2018-11-23T05:07:32Z"}]}