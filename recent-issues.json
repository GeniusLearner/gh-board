{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535600730000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5740","number":5740,"title":"Add language for SASS","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:30Z","updatedAt":"2018-08-30T03:45:30Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535591311000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5738","number":5738,"title":"Fix mistake in Writing_Good_Commits.rst","body":"On line 36 it should be Closes instead of Fixes\nProbably a good newcomer issue.","comments":0,"createdAt":"2018-08-30T01:07:20Z","updatedAt":"2018-08-30T01:08:31Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535600703000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5739","number":5739,"title":"Add language for scss","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:03Z","updatedAt":"2018-08-30T03:45:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534750954000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5725","number":5725,"title":"Listing bears failes with ImportError: attempted relative import with no known parent package","body":"Overview Description\nListing bears failes with ImportError: attempted relative import with no known parent package\nSteps to Reproduce\n\npip3 install --user coala-bears\npython3.6 ~/.local/lib64/python3.6/site-packages/coalib/coala.py -B\n\nActual Results\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\nGlobalBear\nLocalBear\n\n\nExpected Results\nA list of bears.\nReproducibility\nFull\nAdditional Information:\n\ncoalib version 0.11.0\ncoala_utils 0.6.7","comments":0,"createdAt":"2018-08-20T07:41:20Z","updatedAt":"2018-08-20T07:42:34Z","closedAt":null,"state":"open","user":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"owner":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753851000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5726","number":5726,"title":"Add language file for D","body":"","comments":0,"createdAt":"2018-08-20T08:25:23Z","updatedAt":"2018-08-20T08:30:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535416866000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5730","number":5730,"title":"Add json language definition","body":"A JSON Language definition for coala in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions","comments":0,"createdAt":"2018-08-25T06:49:06Z","updatedAt":"2018-08-28T00:41:06Z","closedAt":"2018-08-28T00:41:06Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535581545000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5737","number":5737,"title":"Discard ** in ignore = foo/**","body":"An ignore glob of ignore = foo/** will walk the entire structure of foo/, which is silly.\nThat is #3655 .\nBut a quicker problem to solve : ignore = foo/** can be rewritten as ignore = foo/ and suddenly it doesnt walk foo/ .\ncoala should recognise foo/** in the ignore and warn the user , and then remove the**` internally.","comments":2,"createdAt":"2018-08-29T12:25:03Z","updatedAt":"2018-08-29T22:25:45Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533541805000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5694","number":5694,"title":"Modify `Linter` module for aspects","body":"Linter module needs to be modified so that the Result object makes use of aspects. It can be made similar to the implementation in the Result module plus more features can be added to make it even more usable.","comments":0,"createdAt":"2018-08-06T07:45:07Z","updatedAt":"2018-08-06T07:50:05Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533576774000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5695","number":5695,"title":"Add graphQL in language definitions","body":"https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions","comments":0,"createdAt":"2018-08-06T17:31:30Z","updatedAt":"2018-08-06T17:32:54Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991654000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5697","number":5697,"title":"Support File Proxies","body":"cola can only perform analysis on disk files as of now, it should also support analysis on in-memory files. This should be done using File Proxies so that it fits into current ecosystem.\nRefer: cEP-0028","comments":1,"createdAt":"2018-08-08T14:33:27Z","updatedAt":"2018-08-11T12:47:34Z","closedAt":"2018-08-11T12:47:34Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533947025000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5702","number":5702,"title":"Add meta-review process into newcomer guide","body":"Newcomers should do at least one meta-review or receive a meta-review before becoming developers.\nPlease assign this to me ;)","comments":0,"createdAt":"2018-08-10T13:57:23Z","updatedAt":"2018-08-11T00:23:45Z","closedAt":"2018-08-11T00:23:45Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534320371000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5708","number":5708,"title":"Files to be checked debug log entry is emitting a message for every file","body":"59f78c1 resulting in very volumous log entries for each file.","comments":0,"createdAt":"2018-08-15T07:25:05Z","updatedAt":"2018-08-15T08:06:11Z","closedAt":"2018-08-15T08:06:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534339942000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5710","number":5710,"title":"Create separate language definitions for varieties of Shell","body":"There is one language 'Shell' in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions .\nFor coala/coala-bears#2665 , we need at least the four varieties supported by ShellCheck","comments":2,"createdAt":"2018-08-15T09:13:07Z","updatedAt":"2018-08-15T13:32:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535181515000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5722","number":5722,"title":"LocalBearTestHelper.check_results allow regex as message text","body":"Sometimes the message text varies based on linter version, as we see at coala/coala-bears#2678,  or is incredibly long and not helpful to match the entire text.\nIt should be possible to specify only a regex to match the message text.","comments":0,"createdAt":"2018-08-17T13:48:14Z","updatedAt":"2018-08-25T07:18:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535046202000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5724","number":5724,"title":"Release notes not published at http://api.coala.io","body":"https://github.com/coala/coala/blob/master/RELEASE_NOTES.rst is not published in the api docs\n(or in the user docs, but that will be a bit more effort)","comments":5,"createdAt":"2018-08-19T13:22:57Z","updatedAt":"2018-08-23T17:43:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533378692000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5667","number":5667,"title":"Can not invoke coala as a Python modules","body":"$ python3.7 -m coala --bears TextLintBear --files README.rst \n/bin/python3.7: No module named coala\npython3.7 -m coalib --bears TextLintBear --files README.rst \n/bin/python3.7: No module named coalib","comments":8,"createdAt":"2018-07-26T09:09:26Z","updatedAt":"2018-08-04T10:31:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535582280000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5668","number":5668,"title":"Add Jekyll Liquid language","body":"We use Liquid language in Jekyll sites.\nWe should have a language definition for it.","comments":3,"createdAt":"2018-07-26T10:53:09Z","updatedAt":"2018-08-29T22:38:00Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534329612000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5674","number":5674,"title":"TestUtilities.execute_coala should check for timeouts","body":"If there was a timeout during a test using execute_coala, pytest-timeout will emit Failed: Timeout >35.0s (number may change) and the timeout failure will be lost inside execute_coala/bear_test_module.\nThe test module will continue with the assertions, and cause various errors, as these coala output will be in a strange incomplete state.\nThis is one of the problems affecting #5571 and #5390\nA quick workaround is to detect Failed: Timeout is stderr inside execute_coala and re-raise the problem with the complete stderr and stdout for debugging purposes.","comments":4,"createdAt":"2018-07-28T02:19:42Z","updatedAt":"2018-08-15T10:40:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"starlord1311","avatarUrl":"https://avatars3.githubusercontent.com/u/32419214?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533965471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5683","number":5683,"title":"deprecate_settings to support splitting a value to two new args","body":"I would like to split the checkstyle_configs arg into two args, as they are two different data-types.\nIt seems @deprecate_settings and FunctionMetadata cant support this, as they expect a deprecated arg to only be used once.\nHere is a more detailed look at what I tried to do, and failed.\ndef get_name(value):\n    if value in known_checkstyles.keys():\n        return value\n\ndef get_path(value):\n    if value not in known_checkstyles.keys():\n        return value\n\nclass CheckstyleBear:\n    ...\n\n    @deprecate_settings(\n        java_style_name=('checkstyle_configs',\n                         get_name),\n        checkstyle_config=('checkstyle_configs',\n                           get_path),\n    )\n    def create_arguments(\n            self, filename, file, config_file,\n            checkstyle_config: path = None,\n            java_style_name: CheckstyleStyle = 'google',\n            ...","comments":0,"createdAt":"2018-07-31T02:49:26Z","updatedAt":"2018-08-11T05:31:11Z","closedAt":"2018-08-11T05:31:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533555354000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5685","number":5685,"title":"Inappropriate prompt message","body":"When coala is invoked with --single-action, a menu is shown with a prompt saying [ ] Enter number (Ctrl-D to exit): but valid input is a letter, not a number.\nNeeds a fix in:\nSTR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format('Z' if platform.system() == 'Windows' else 'D')\nDifficulty: Newcomer","comments":6,"createdAt":"2018-08-04T09:35:38Z","updatedAt":"2018-08-06T11:35:54Z","closedAt":"2018-08-06T11:35:54Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991680000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5689","number":5689,"title":"Add tag based section filters.","body":"We need to have a way using which sections can be tagged and specific tags can be invoked. For example:\n[samples]\ntags = tag_one\nbears = SomeLongBear\n\n[other_sample]\nbears = SomeLongBear\n\nWhen run using coala --tags tag_one tag_two only samples section should be invoked.\nPart of cEP-0028.","comments":1,"createdAt":"2018-08-05T14:41:33Z","updatedAt":"2018-08-11T12:48:00Z","closedAt":"2018-08-11T12:48:00Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533581367000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5692","number":5692,"title":"Add XML language in definitions","body":"c.f https://gitlab.com/coala/bears/coala-antlr/merge_requests/25/diffs?commit_id=36142dfb4456b6dd9ee4255e042ab313eab894b2#note_92551492\nRequired by XMLIndentBear","comments":1,"createdAt":"2018-08-05T16:36:07Z","updatedAt":"2018-08-06T18:49:27Z","closedAt":"2018-08-06T18:49:27Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421399000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5603","number":5603,"title":"Add alias Node to language JavaScript","body":"'node' is a common alias for JavaScript.","comments":0,"createdAt":"2018-07-07T04:41:35Z","updatedAt":"2018-08-28T01:56:39Z","closedAt":"2018-08-28T01:56:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148882000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5605","number":5605,"title":"Newcomers_Guide.rst: display \"move on to more difficult issues\" message as note block","body":"On Newcomers Guide page there is a message saying:\n\nNote: After you have solved a difficulty/newcomer issue, please don’t take up any more. Instead, move on to more difficult issues.\n\nAs this message starts with \"Note:\", maybe it would be more logical to have this marked as \"Note\" block (similar to \"Don’t just fix a newcomer issue!\" message which is lower on that page).","comments":1,"createdAt":"2018-07-07T15:08:50Z","updatedAt":"2018-08-24T22:14:42Z","closedAt":null,"state":"open","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"assignee":{"login":"InquiridorTechie","avatarUrl":"https://avatars1.githubusercontent.com/u/31249906?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421576000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5621","number":5621,"title":"Create doc page about moban","body":"moban is now fairly established in coala repos.\nIt is time for some docs.\nEspecially about how to do sync PR whenever it is needed.","comments":5,"createdAt":"2018-07-10T14:16:38Z","updatedAt":"2018-08-28T01:59:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534260434000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5636","number":5636,"title":"Python 3.3 unsupported check failing due to pytest 3.6.1 not available for that version","body":"Collecting pytest~=3.6.1 (from -r requirements.txt (line 20))\n  Could not find a version that satisfies the requirement pytest~=3.6.1 (from -r requirements.txt (line 20)) (from versions: 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.3.5, 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.7.0, 2.7.1, 2.7.2, 2.7.3, 2.8.0, 2.8.1, 2.8.2, 2.8.3, 2.8.4, 2.8.5, 2.8.6, 2.8.7, 2.9.0, 2.9.1, 2.9.2, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.1.0, 3.1.1, 3.1.2, 3.1.3, 3.2.0, 3.2.1, 3.2.2, 3.2.3, 3.2.4, 3.2.5)\nNo matching distribution found for pytest~=3.6.1 (from -r requirements.txt (line 20))\n\nSee https://travis-ci.org/coala/coala/builds/404413480 for example","comments":0,"createdAt":"2018-07-17T09:02:11Z","updatedAt":"2018-08-14T15:27:14Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533312840000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5637","number":5637,"title":"Make `LocalBearTestHelper` compatible with aspects","body":"LocalBearTestHelper needs to be modified to use aspects as well in order to test aspect functionality in bears.","comments":0,"createdAt":"2018-07-18T07:05:34Z","updatedAt":"2018-08-03T16:14:00Z","closedAt":"2018-08-03T16:14:00Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583275000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5442","number":5442,"title":"CachingUtilities.pickle_load and .pickle_dump docstring refers to non-existant filename","body":"Docstring is\ndef pickle_load(log_printer, identifier, fallback=None):\n    \"\"\"\n    Get the data stored in ``filename`` present in the user\n    config directory. Example usage:\n    ...\n    \"\"\"\nBut filename is not a parameter.  A better description is needed to explain which file is loaded.\nThe same applies to pickle_dump.","comments":5,"createdAt":"2018-05-05T05:16:49Z","updatedAt":"2018-08-29T22:54:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534551601000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5508","number":5508,"title":"Undeclared coalib dependency on pytest-timeout","body":"coalib currently depends on pytest-timeout, which isnt listed as a dependency in requirements.txt\n$ git grep pytest coalib/\ncoalib/testing/LocalBearTestHelper.py:import pytest\ncoalib/testing/LocalBearTestHelper.py:    @pytest.mark.timeout(timeout)\n\nThis was done in 328bce6, and released in 0.9.0.\nIt originally came from coala/coala-bears@9d02f80\nWe would not want to add pytest-timeout or even pytest in the dependencies of coalib, as that makes any enviroment with coala dicate the test environment versions that the coala user must use, which may conflict with their own needs.\nPossibly we need to move the test helpers to a separate repo, in order to avoid our test needs poluting the environment of our users.","comments":1,"createdAt":"2018-06-09T23:22:37Z","updatedAt":"2018-08-18T00:20:01Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534335534000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5509","number":5509,"title":"Incorrect syntax in HelloWorldBear","body":"Incorrect syntax\nlogging.debug(\"Hello World! Checking file\", filename, \".\")\nhttp://api.coala.io/en/latest/Developers/Writing_Native_Bears.html#a-hello-world-bear","comments":14,"createdAt":"2018-06-10T00:13:00Z","updatedAt":"2018-08-15T12:18:54Z","closedAt":"2018-06-15T18:24:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533994812000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5510","number":5510,"title":"Typo in parse_cli","body":"docstring and function signature for parse_cli method uses variable name comment_seperators, should be comment_separators to fix spelling and to align with function signature of Setting class definition.\nProbably a good newcomer issue.","comments":10,"createdAt":"2018-06-10T00:37:26Z","updatedAt":"2018-08-11T13:40:12Z","closedAt":"2018-08-11T13:40:12Z","state":"closed","user":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"owner":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533963951000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5515","number":5515,"title":"Create taste `min_file_length`","body":"Create a taste min_file_length (under FileLength aspect) corresponding to LineCountBear setting min_lines_per_file https://github.com/coala/coala-bears/blob/master/bears/general/LineCountBear.py#L21.\nIt can be of the same format as the taste max_file_length as per the cEP https://github.com/coala/cEPs/blob/master/cEP-0010.md.","comments":0,"createdAt":"2018-06-13T04:40:57Z","updatedAt":"2018-08-11T05:05:51Z","closedAt":"2018-08-11T05:05:51Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753145000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5519","number":5519,"title":"Rename the `Formatting` aspect of the doctest","body":"The Formatting aspect in the doctests (here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/root.py#L18) needs to be renamed to some crazy name as a workaround till #5518 is resolved.","comments":4,"createdAt":"2018-06-13T10:09:57Z","updatedAt":"2018-08-20T08:19:05Z","closedAt":"2018-08-20T08:19:04Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534023718000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5532","number":5532,"title":"Multiple += in single settings section","body":"The following should work\n[foo]\nignore += blah\nignore += baz","comments":9,"createdAt":"2018-06-16T04:13:00Z","updatedAt":"2018-08-11T21:41:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535708043000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5537","number":5537,"title":"Add module docstrings to core nextgen components","body":"As part of #5359 , nextgen core component (coalib/core/) needs module docstrings which explain the purpose of each module.\nThey should conform with pep257, and be tested with pydocstyle.","comments":2,"createdAt":"2018-06-17T03:48:18Z","updatedAt":"2018-08-31T09:34:03Z","closedAt":"2018-08-31T09:34:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533484589000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5550","number":5550,"title":"Improve the Review Doc","body":"Recently I saw this happen #5521 (comment)\nBoth the duplicate PRs had reviews from developers even I was about to review it when I found out that both the newcomers didn't ask for assignment on the related issue thread.\nMaybe we should add a few points to our review docs http://api.coala.io/en/latest/Developers/Review.html#for-the-reviewers that the reviewers should check for whether the author asked for assignment or not and what to do in case there are duplicate PRs for the same issue and neither have been assigned to their respective authors (imo all of the unassigned ones should be closed)\nThis seems like a newcomer issue","comments":2,"createdAt":"2018-06-21T15:48:13Z","updatedAt":"2018-08-05T15:56:29Z","closedAt":null,"state":"open","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533997034000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5567","number":5567,"title":"Add `escape_quotes` to language definitions","body":"escape_quotes (like \\\", \\' and \"\", '') need to be added to the language definition as per the language compatibility and preference. This will be helpful for designing respective tastes for the QuotesBear as well as for the usage in the bear itself.","comments":1,"createdAt":"2018-06-26T04:44:19Z","updatedAt":"2018-08-11T14:17:14Z","closedAt":"2018-08-11T14:17:14Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533790471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5329","number":5329,"title":"Diff.py: Update ``split_diff`` docstring","body":"In the docstring of split_diff function, Line 323 should be updated to - If ``-1`` is given, every change....\nThis is needed to prevent bear developers from using any arbitrary negative value (and use a common value) in order to ease out the process of implementing changes to the current behavior in future.\ndifficulty/newcomer\narea/documentation","comments":5,"createdAt":"2018-04-06T15:29:52Z","updatedAt":"2018-08-09T04:54:31Z","closedAt":"2018-08-09T04:54:31Z","state":"closed","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"assignee":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534727663000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5333","number":5333,"title":"Make all blocks even colored in Newcomers Guide","body":"See #5119\nThe grey colored patches over yellow background are due to the extra colon before the exemplar commands. Just remove one colon and it will look fine.","comments":17,"createdAt":"2018-04-07T11:45:51Z","updatedAt":"2018-08-20T01:14:23Z","closedAt":null,"state":"open","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533471909000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5341","number":5341,"title":"Processing.instantiate_processes: Remove superfluous parameter in inner function call to `collect_files`","body":"The None in here is unnecessary:\n    filename_list = collect_files(\n        glob_list(section.get('files', '')),\n        None,\n        ...","comments":4,"createdAt":"2018-04-08T12:17:06Z","updatedAt":"2018-08-05T12:25:09Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"riddhyasona","avatarUrl":"https://avatars1.githubusercontent.com/u/32356489?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533552560000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5389","number":5389,"title":"Remove E133, E242 and E303 from pycodestyle_ignore list of .coafile","body":"These 2 checks are important to select and will not affect any code.\ndifficulty/newcomer","comments":7,"createdAt":"2018-04-15T14:40:05Z","updatedAt":"2018-08-06T10:49:20Z","closedAt":"2018-08-06T10:49:20Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535425850000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5398","number":5398,"title":"\"filters\" rewrite","body":"Foremost,\n[['language', 'c', 'java'], ['can_fix', 'syntax']]\n\nis just wrong on every level.\nVery worst case it should be tuples, not lists.\nHowever it should be a dict, or OrderedDict if the order matters.\n{'language': ['c', 'java'], 'can_fix': 'syntax'}\n\nAnd better yet it should be a proper class, so that it can be used in type annotations.\nIn some places this 'structure' is given argument name filters, which hints it may contain multiple items.\nIn other places (e.g. apply_filter) it is filter_name.\nAnd for is_valid_filter, the arg name is filter, which is a builtin function.","comments":6,"createdAt":"2018-04-17T06:25:33Z","updatedAt":"2018-08-28T03:10:50Z","closedAt":"2018-08-28T03:10:50Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535472169000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5403","number":5403,"title":"Add git commit to Newcomers guide","body":"Part of Step 4 (Sending Your Changes) is \"create a commit\"\nBut the command to do this is not shown.","comments":15,"createdAt":"2018-04-18T22:14:46Z","updatedAt":"2018-08-28T16:02:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535081523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5109","number":5109,"title":"Writing native bears tutorial: use the `format` string method in an example","body":"In the first example code of the tutorial \"Guide to Writing a Native Bear\" (in the section \"A Hello World Bear\"), the call to debug should be passed one argument: a string that would be formatted using the methode format.","comments":21,"createdAt":"2018-01-24T18:02:15Z","updatedAt":"2018-08-24T03:32:03Z","closedAt":"2018-08-24T03:32:02Z","state":"closed","user":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"owner":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534079847000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5188","number":5188,"title":"persistent_hash: Missing support for collection types with not guaranteed iteration order","body":"Like dict and set. sorted can be used to sort the data beforehand.","comments":14,"createdAt":"2018-02-19T22:31:05Z","updatedAt":"2018-08-12T13:17:27Z","closedAt":"2018-08-12T13:17:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535448350000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5202","number":5202,"title":"In `ask_for_action_and_apply()`, if `apply_single` is non-False, function should return when match is found","body":"In the function ask_for_action_and_apply() in ConsoleInteraction.py, if the apply_single parameter is non-False, then the for loop inside it iterates through the entire metadata_list before returning False.\nIMHO we should include a break statement inside the if block (which is in the for loop) such that the function may return after a match is found because there is no need to go through the remaining actions in metadata_list.","comments":15,"createdAt":"2018-02-23T18:17:22Z","updatedAt":"2018-08-28T09:25:50Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535396095000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4861","number":4861,"title":"ConsoleInteractionTest.test_ask_for_actions_and_apply is defined twice","body":"Just like #4859 and also useful for properly testing of PRs like #4179\ncc @mrtes @Nosferatul @Adrianzatreanu @yukiisbored","comments":8,"createdAt":"2017-11-12T15:29:04Z","updatedAt":"2018-08-27T18:54:55Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"pkcod","avatarUrl":"https://avatars3.githubusercontent.com/u/29246710?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148976000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4904","number":4904,"title":"docs: Explain unack usage explicitly","body":"Explain that unack is used for disapprove commit that is ack-ed by someone else.\ndifficulty/newcomer\nOpened by @mamat-rahmat at Gitter","comments":7,"createdAt":"2017-11-24T01:58:29Z","updatedAt":"2018-08-24T22:16:16Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"darthgera123","avatarUrl":"https://avatars1.githubusercontent.com/u/30871411?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535581277000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4604","number":4604,"title":"Write a Mesos scheduler for coala!","body":"Distributed code checking! Imagine running complex analysis on the Linux repo, but instead of taking 2 days, it takes 1h :)\nThis package may be the choice for the Mesos Framework API:\nhttps://github.com/daskos/mentor","comments":2,"createdAt":"2017-08-01T14:32:06Z","updatedAt":"2018-08-29T22:21:17Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/very-high","color":"e11d21"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534985203000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4188","number":4188,"title":"argparse.ArgumentParser is wrongly named ArgParser several times","body":"(In doc strings)\nRealized while reviewing: #4161 (comment)\n> grep -R ArgParser coalib\ncoalib/coala.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/coala_main.py:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/coala_main.py.orig:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/misc/BuildManPage.py:            --parser=coalib.parsing.DefaultArgParser:default_arg_parser\ncoalib/parsing/CliParsing.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/parsing/CliParsing.py:    :param arg_parser:                  Instance of ArgParser that is used to\ncoalib/parsing/DefaultArgParser.py:    This function creates an ArgParser to parse command line arguments.\ncoalib/parsing/DefaultArgParser.py.orig:    This function creates an ArgParser to parse command line arguments.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:  An ``ArgParser`` object.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:       Instance of ArgParser that is used to parse\n\nBut actually argparse.ArgumentParser is meant there. So those occurrences should be changed accordingly to clearly know what is meant. Otherwise it looks like some coala-internal ArgParser class\n@Udayan12167 @supergr35 @JohnS-01","comments":14,"createdAt":"2017-05-07T19:55:11Z","updatedAt":"2018-08-23T00:46:43Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534589257000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4090","number":4090,"title":"Replace pytest-timeout with pytest-faulthandler","body":"https://pypi.python.org/pypi/pytest-faulthandler activates on a timeout, but dumps out much more useful info.\nNot sure we want this, as mostly our timeouts are network timeouts, and the cause is fairly self-evident.\nSee docker timeout issues.\nKeeping this issue open as a place to record any new timeouts we encounter, to see if there is occasions we need more info than pytest-timeout provides.","comments":1,"createdAt":"2017-04-11T03:11:53Z","updatedAt":"2018-08-18T10:47:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534324248000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3807","number":3807,"title":"An automated way to measure speed-up over time","body":"I was learning about Amdahl's law today and I thought it'd be neat to have a graphical representation of how fast coala has been over time. A good measure would be running coala on the coalib codebase and logging the completion time for each commit progressively.","comments":7,"createdAt":"2017-02-28T11:56:27Z","updatedAt":"2018-08-15T09:10:48Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534350610000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3843","number":3843,"title":"Git Basics: Mention Xcode for MacOS","body":"Following on from #3256 , the macos note should mention that git may be installed via Xcode.\nhttps://www.atlassian.com/git/tutorials/install-git#mac-os-x\nXcode has other useful tools for developers, so it should be a preferred and recommended way to get these tools.","comments":1,"createdAt":"2017-03-03T15:28:47Z","updatedAt":"2018-08-15T16:30:10Z","closedAt":"2018-08-15T14:19:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Rddhima-R","avatarUrl":"https://avatars0.githubusercontent.com/u/22348449?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535679808000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3717","number":3717,"title":"Coverage.py warning: Could not parse Python file","body":"We are seeing a lot of \"Coverage.py warning: Could not parse Python file .....py\"  on Travis only.\ne.g.\nhttps://travis-ci.org/coala/coala/jobs/199030440#L514\nIt may be a problem with codecov-bash, or with coverage.","comments":6,"createdAt":"2017-02-07T22:35:16Z","updatedAt":"2018-08-31T01:43:28Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535081569000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3755","number":3755,"title":"Mention \"Adding CI\" in Newcomers guide","body":"It should be mentioned in step 4 5\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2017-02-16T16:15:34Z","updatedAt":"2018-08-24T03:32:49Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535782416000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2683","number":2683,"title":"CommitBear: Check proper use of `https` when referencing issues","body":"https://github.com/coala/coala-bears/blob/master/bears/vcs/CommitBear.py#L360 matches links and tags, e.g. fix #123, fix https://github.com\nThis would also pass the test Closes http://github.com. However, this would not trigger GitHub autolinked reference feature. The commit message should be Closes https://github.com instead.\nFor those who are not familiar with autolinked reference feature, I did a simple experiment. I created an issue first li-boxuan/github-playground#1\nThen I create a pr, aiming to close that issue. See commit message https://github.com/li-boxuan/github-playground/pull/2/commits. However, after this pr gets merged, it doesn't close the corresponding issue automatically.\nFinally, this pr https://github.com/li-boxuan/github-playground/pull/3/commits closes the corresponding issue automatically when it's merged. Check commit messages carefully to see the difference.\nThat means we should check proper usage of https, at least for GitHub. Not sure if GitLab has similar features.","comments":0,"createdAt":"2018-09-01T06:09:48Z","updatedAt":"2018-09-01T06:13:36Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535356417000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2681","number":2681,"title":"Install only some selected bears instead of all bears","body":"Hi,\nIs there a way to install only some of the selected bears instead of all bears. cib is mentioned in documentation but it is broken. So, is there some other way of doing this?\nThanks!","comments":4,"createdAt":"2018-08-19T05:23:00Z","updatedAt":"2018-08-27T07:53:37Z","closedAt":null,"state":"open","user":{"login":"ankita240796","avatarUrl":"https://avatars3.githubusercontent.com/u/15226041?v=4"},"owner":{"login":"ankita240796","avatarUrl":"https://avatars3.githubusercontent.com/u/15226041?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535603841000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2682","number":2682,"title":"CSSCombBear: do not use stdin","body":"csscomb 's languages should be expanded to add SCSS and SASS\ncsscomb determines file type using file extension, so therefore it is critical that the filename be given on the command line, and not use stdin.","comments":0,"createdAt":"2018-08-30T04:37:21Z","updatedAt":"2018-08-30T04:37:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534125895000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2673","number":2673,"title":"Clang bears on Windows","body":"Currently we use the following on Windows to avoid certain bears\n\npython -m pytest --cov -k \"not  ClangASTPrintBear and not ClangCloneDetectionBear and not ClangComplexityBear and not ClangCountVectorCreator and not ClangCountingConditions\"\n\nWe need to avoid that list of not somehow, so that Windows can use the standard templates without that special hack.","comments":0,"createdAt":"2018-08-13T02:04:55Z","updatedAt":"2018-08-13T02:04:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534219993000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2674","number":2674,"title":"Handle Github temporary merge commit in GitCommitMetadataBear","body":"GitHub temporary merge commit is a commit that's created by GitHub in refs/<PR_number>/merge ref. Travis-CI pulls that ref in their CI for testing which makes GitCommitMetadataBear fetch the temporary merge commit instead of the actual commit. This would make GitCommitMetadataBear doesn't work properly, and so it dependants.\nMore info #2501\ncc @kriti21","comments":1,"createdAt":"2018-08-14T01:48:10Z","updatedAt":"2018-08-14T04:13:13Z","closedAt":null,"state":"open","user":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"owner":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"assignee":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535391445000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2677","number":2677,"title":"Extra commas and missing braces in JSON","body":"The bear could detect extra commas and remove them.\nAlso It could add missing braces wherever needed.","comments":3,"createdAt":"2018-08-17T02:37:29Z","updatedAt":"2018-08-27T17:37:25Z","closedAt":null,"state":"open","user":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"owner":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"importance/low","color":"70e870"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535581747000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2678","number":2678,"title":"BanditBear test_jinja2_templating failing ","body":"Error:\n\nUsing jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.\n\nhttps://travis-ci.org/coala/coala-bears/jobs/417074263","comments":1,"createdAt":"2018-08-17T04:01:24Z","updatedAt":"2018-08-29T22:29:07Z","closedAt":"2018-08-29T22:29:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"type/test","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533990735000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2660","number":2660,"title":"Allow version 1.3.x for autopep8","body":"PEP8 bear should also allow version 1.3.x","comments":3,"createdAt":"2018-08-07T16:34:00Z","updatedAt":"2018-08-11T12:32:15Z","closedAt":"2018-08-11T12:32:04Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"status/invalid","color":"000000"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533750776000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2662","number":2662,"title":".coafile: Set max line characters to 80","body":"This is a partial revert of #580\nThe line feed at the end is never counted when counting line length.  If for no other reason that it differs per OS.\nThe idea behind that issue was ok, but it was just one repo, while the other repos stayed at 80cpl , especially as it was often hard-coded into their .coafile such as https://github.com/coala/coala/blob/master/.coafile#L7.\nIt would be rather disruptive to change coala core to be 79 cpl, for no benefit.\nWe have occasionally discussed increasing it to a much higher number, such as 120 , so increasing it now to 80 is going in the right direction.","comments":0,"createdAt":"2018-08-08T15:03:59Z","updatedAt":"2018-08-08T17:52:56Z","closedAt":"2018-08-08T17:52:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"type/codestyle","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533798200000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2664","number":2664,"title":"Travis CI failing due to infer breakage","body":"Recent travis build for python 3.6 fail while trying to build infer.\nError: No implementations provided for the following modules:\n         CamomileLibrary__UTF8 referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__UChar referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__ referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\nCommand exited with code 2.\nmake[2]: *** [build_java] Error 10\nmake[2]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer/src'\nmake[1]: *** [java] Error 2\nmake[1]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer'\nmake: *** [java] Error 2\n  compilation failure; you can try running\n    make clean\n    ./build-infer.sh java\nThe command \".ci/deps.opam.sh\" failed and exited with 1 during .\n\nhttps://travis-ci.org/coala/coala-bears/jobs/413575180","comments":2,"createdAt":"2018-08-08T17:04:00Z","updatedAt":"2018-08-09T07:03:20Z","closedAt":null,"state":"open","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534324415000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2665","number":2665,"title":"ShellCheckBear: replace shell setting with language","body":"Following up from #2532 (comment)\nSetting shell should be deprecated and replaced with a language setting.\nThis depends on having a coalang definition for all four of the shell variations.","comments":2,"createdAt":"2018-08-10T09:17:39Z","updatedAt":"2018-08-15T09:13:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/lintbears","color":"fbca04"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533965828000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2668","number":2668,"title":"CheckStyleBear: Split and deprecate known_checkstyle_or_path","body":"c.f. #2532 (comment) and coala/coala#5701","comments":0,"createdAt":"2018-08-11T05:33:24Z","updatedAt":"2018-08-11T05:37:08Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534406877000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2669","number":2669,"title":"GNUIndentBear: max_line_length=0 does not work","body":"#2255 did nothing at all, having set the max_line_length after the CLI option had been created.","comments":3,"createdAt":"2018-08-11T12:40:51Z","updatedAt":"2018-08-16T08:07:57Z","closedAt":"2018-08-16T08:07:57Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534008259000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2670","number":2670,"title":"GofmtBear tests do not skip if not installed","body":"#1727 forgot to add the skip decorator on the new test class\n@generate_skip_decorator(GofmtBear)","comments":0,"createdAt":"2018-08-11T14:49:41Z","updatedAt":"2018-08-11T17:24:19Z","closedAt":"2018-08-11T17:24:19Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534040587000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2672","number":2672,"title":"Trailing comma bear","body":"https://www.python.org/dev/peps/pep-0008/?#when-to-use-trailing-commas\nhttps://pypi.org/project/flake8-commas/ and https://pypi.org/project/add-trailing-comma/","comments":0,"createdAt":"2018-08-12T02:22:28Z","updatedAt":"2018-08-12T02:23:07Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534091553000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2635","number":2635,"title":"Add settings for EslintBear","body":"Add language setting to EslintBear to support using various parsers and plugins available for the linter.","comments":1,"createdAt":"2018-07-22T11:22:43Z","updatedAt":"2018-08-12T16:32:33Z","closedAt":"2018-08-12T16:32:33Z","state":"closed","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533125209000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2637","number":2637,"title":"xo eslint cli","body":"https://github.com/xojs/xo\nAnother eslint based linter than can be a separate bear , easily, after the eslintbear upgrade @anctartica is working on","comments":1,"createdAt":"2018-07-23T09:12:23Z","updatedAt":"2018-08-01T12:06:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534337484000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2651","number":2651,"title":"Bump lxml version?","body":"Any particular reason that we are pinning lxml==3.6.0 despite the newest being 4.2.3? The new version fixes installation issues on my Mac (macos 10.13, Python 3.7.0).","comments":2,"createdAt":"2018-08-01T06:40:36Z","updatedAt":"2018-08-15T12:51:24Z","closedAt":null,"state":"open","user":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"owner":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533965321000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2653","number":2653,"title":"Migrate `PEP8Bear` to aspects","body":"Migrate PEP8Bear to the Root.Formatting.Length.LineLength aspect with max_line_length as taste.","comments":0,"createdAt":"2018-08-05T05:31:28Z","updatedAt":"2018-08-11T05:28:41Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533646619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2656","number":2656,"title":"Migrate `PycodestyleBear` to aspects","body":"Migrate PycodestyleBear to the Root.Formatting.Length.LineLength aspect with max_line_length as taste.","comments":0,"createdAt":"2018-08-05T18:17:57Z","updatedAt":"2018-08-07T12:56:59Z","closedAt":"2018-08-07T12:56:59Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534179215000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2659","number":2659,"title":"Jinja2Bear: Allow end of block to not have a comment","body":"The docstring of this bear mentions \"Control labels: ...\" and requires a trailing comment for every block\n                {% for x in y %}\n                  do something\n                {% endfor %}{# for x in y %}\nThat might seem nice, but it creates a mess when the for or if is a complicated expression.\nAs a result we have turned off the bear on some repos.\nAdd the ability for this rule to be disabled, so that we can continue using the rest of the bears functionality.","comments":1,"createdAt":"2018-08-06T14:33:52Z","updatedAt":"2018-08-13T16:53:35Z","closedAt":"2018-08-13T16:53:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534985037000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2583","number":2583,"title":".ci/adjust_version_number.py: Use single quotes","body":"This file isnt in line with coala style.\nc.f. #2582","comments":2,"createdAt":"2018-07-06T01:32:19Z","updatedAt":"2018-08-23T00:43:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533473401000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2585","number":2585,"title":"ClangBear.py: Rename variable range","body":"range is a python builtin and shouldn't be redefined. Rename occurrences at 1 and 2.\nDifficulty: Newcomer","comments":12,"createdAt":"2018-07-06T10:53:39Z","updatedAt":"2018-08-05T12:50:01Z","closedAt":"2018-08-05T12:50:01Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533342711000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2602","number":2602,"title":"Migrate `LineLengthBear` to aspects","body":"Migrate LineLengthBear to the following aspects and tastes:\nRoot.Formatting.Length.LineLength aspect with max_line_length as taste.","comments":0,"createdAt":"2018-07-10T05:54:50Z","updatedAt":"2018-08-04T00:31:51Z","closedAt":"2018-08-04T00:31:51Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534402619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2611","number":2611,"title":"coala requires 3.4.4 but coala-bears requires 3.4.0","body":"coala/coala#4350 updated the minimum version of Python to 3.4.4, and coala-bears version checks were not updated at the same time.\nWe have two jobs which check the error message for other versions of Python, and even after 6906e54 they passed.  They should have failed.\nThose jobs were still installing the released package of coala, not the master.\nThe cause of that was https://gitlab.com/coala/mobans/issues/63","comments":0,"createdAt":"2018-07-16T23:50:26Z","updatedAt":"2018-08-16T06:56:59Z","closedAt":"2018-08-16T06:56:59Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533990472000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2618","number":2618,"title":"Generate php composer dependencies","body":".ci/generate_bear_requirements.py generates bear-requirements.yaml which moban uses to generate package.json, bear-requirements.txt, Gemfile, and coala-bears.cabal.\nThe same process should generate composer requirements in an format usable by php composer, using jinja2 templates.","comments":0,"createdAt":"2018-07-19T04:54:50Z","updatedAt":"2018-08-11T12:27:52Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533581461000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2621","number":2621,"title":"Bump pyflakes version to 2.0.0","body":"Difficulty: Newcomer","comments":1,"createdAt":"2018-07-19T07:10:45Z","updatedAt":"2018-08-06T18:51:01Z","closedAt":"2018-08-06T18:51:01Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533450442000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2479","number":2479,"title":"Generate languages.yaml","body":"https://github.com/coala/coala-bears/blob/master/.ci/generate_bear_requirements.py loads all bears and only generates bear-requirements.yaml.\nIt should provide more information in yaml format.\nA very useful dataset to create is a mapping of languages to bears.\nThat will allow the list of languages to be generated by moban if we templatise README.md: #2169","comments":3,"createdAt":"2018-05-12T07:42:30Z","updatedAt":"2018-08-05T06:27:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533152064000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2482","number":2482,"title":" Generate R dependencies","body":".ci/generate_bear_requirements.py generates package.json, bear-requirements.txt and Gemfile.  It should generate R requirements in an format usable by a R dependency management tool, using jinja2 templates.\ne.g. a DESCRIPTION file, containing\nPackage: coala\nVersion: 0.10\nDepends: R (>= 3.1.0), lintr, formatR","comments":1,"createdAt":"2018-05-12T07:59:04Z","updatedAt":"2018-08-01T19:34:24Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534402619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2488","number":2488,"title":"Issues with python3.3 travis check","body":"We only check for the unsupported python versions now on very specific PRs (direct push to master branch only), so it is hard to see it happening in other cases as well.\nThe issue as quoted from travis builds:\nSearching for bandit~=1.2\nReading https://pypi.python.org/simple/bandit/\nBest match: bandit 1.4.0\nDownloading https://files.pythonhosted.org/packages/45/b2/f5a4adb1e7773e6d631481b784ad49e6ec56aa81e9fdafcabf0fe3e0241a/bandit-1.4.0.tar.gz#sha256=cb977045497f83ec3a02616973ab845c829cdab8144ce2e757fe031104a9abd4\nProcessing bandit-1.4.0.tar.gz\nWriting /tmp/easy_install-euwn9c/bandit-1.4.0/setup.cfg\nRunning bandit-1.4.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-euwn9c/bandit-1.4.0/egg-dist-tmp-ib9fmh\nERROR:root:Error parsing\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/pbr/core.py\", line 111, in pbr\n    attrs = util.cfg_to_args(path, dist.script_args)\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/pbr/util.py\", line 248, in cfg_to_args\n    kwargs = setup_cfg_to_setup_kwargs(config, script_args)\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/pbr/util.py\", line 382, in setup_cfg_to_setup_kwargs\n    cmd = cls(dist)\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/setuptools/__init__.py\", line 124, in __init__\n    _Command.__init__(self,dist)\n  File \"/opt/python/3.3.6/lib/python3.3/distutils/cmd.py\", line 57, in __init__\n    raise TypeError(\"dist must be a Distribution instance\")\nTypeError: dist must be a Distribution instance\nerror: Setup script exited with error in setup command: Error parsing /tmp/easy_install-euwn9c/bandit-1.4.0/setup.cfg: TypeError: dist must be a Distribution instance\n+retval=1\n+set +x\nsetup.py error code 1 ok\n\nneeds more investigation,\nExample builds of this issue:\nhttps://travis-ci.org/virresh/coala-bears/builds/380033068\nhttps://travis-ci.org/coala/coala-bears/builds/378397254","comments":1,"createdAt":"2018-05-17T13:31:42Z","updatedAt":"2018-08-16T06:56:59Z","closedAt":"2018-08-16T06:56:59Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533517545000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2503","number":2503,"title":"JSONFormatBear: Message not appropriate when settings are omitted","body":"This file can be reformatted by sorting keys and following indentation.\n\nis always displayed, regardless whether you have actually enabled json_sort (to sort keys) or not. Especially it's displayed when you omit the setting altogether, and the default is actually false. So you think that the default is true.\nThe message has to be flexible for different parameters, so a user won't become confused.\nAcceptance criteria:\n\nThe JSONFormatBear produces following messages for results in case that reformatting is possible:\n\nWhen json_sort is False, the result message should be just This file can be reformatted by following indentation..\nWhen json_sort is True, the result message should be like before (This file can be reformatted by sorting keys and following indentation.)","comments":1,"createdAt":"2018-05-24T15:20:13Z","updatedAt":"2018-08-06T01:05:45Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533966176000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2532","number":2532,"title":"Adding type annotations to bears","body":"This can be performed in 3 ways:\n\nUsing the contracts module\nUsing python default type hinting\nManually checking using decorators or the bears run() or create_arguments() method.\n\nUsing contracts\nWe we need custom checks for settings which only accept a discrete set of values. The only option seems to follow is use custom contract type eg.\nnew_contract('valid_name', lambda s: isinstance(s, str) and len(s)>0)\n@contract(names='dict(int: (valid_name, int))')\ndef process_accounting(records):\n    ...\n\nThe problem occurring over here is the function name provided to the new_contract method gets the value of the argument implicitly as the one and only argument. Since this doesn't even receive the self or any other kind of variable its impossible to access other objects from inside this method which means we can't populate a class for storing metadata of the acceptable set of values and unless we modify contracts itself or define the acceptable set of values in the function itself. When defining the acceptable values in the function itself it is impossible to access those values outside the method thus defeating the purpose. contracts also follows a strict syntax which makes it impossible to predefine a custom set of methods for each kind of setting in the base classes to which the actual bear can just pass the acceptable values and the setting list to compare against. Everything needs to be implemented in each bear itself. Summing up things like\n[new_contract(i, lambda s: isinstance(s, str) and len(s)>0) for i in in setting_list]\n\nalso doesn't work which makes the code much more difficult to read. The usage of contracts module also provides difficulty when the some default values of the bear setting are assumed in case of the value to the setting is not provided or invalid value is given.\nUsing Type hints provided by python\nThese are pretty much worthless. They can be only used for documentation purposes unless the type checking is performed specially with loading the mypy module which just checks for type hint inconsistencies and doesn't actually run the program. (Haven't tested this out with custom classes). Normal runs of the code don't point out any inconsistencies in invalid types according to type hints.\nWriting code and manual checks for each setting in some way or the other\nThis should be the last resort unless an elegant way is devised. Can be done using decorators or the bear code is itself but a common set of classnames have to be come upon which will be used by all the bears to extract out information about these settings. This can be performed by adding classes to the base class and asking the bear writers to fill them up. Functions can also be made in the base classes to test out settings to automatically provide just the setting and the default values, calling the correct function for the correct setting type and checking whether the value provided is valid or not.","comments":16,"createdAt":"2018-06-10T06:59:58Z","updatedAt":"2018-08-11T05:42:56Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534394227000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2304","number":2304,"title":"GitCommitBearTest.py : Typo in line 50","body":"There's a typo at https://github.com/coala/coala-bears/blob/master/tests/vcs/git/GitCommitBearTest.py#L50\nmessgae -> message","comments":5,"createdAt":"2018-03-03T17:52:58Z","updatedAt":"2018-08-16T04:37:07Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"codeKAMAT","avatarUrl":"https://avatars3.githubusercontent.com/u/36402247?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535295907000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2383","number":2383,"title":"Add package-lock.json to .gitignore","body":"package-lock.json is a lock file of JS dependencies.\ndifficulty/new comer","comments":8,"createdAt":"2018-03-28T10:41:40Z","updatedAt":"2018-08-26T15:05:07Z","closedAt":"2018-05-24T13:22:08Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535723025000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2453","number":2453,"title":"CIRCLE_NODE_INDEX hack for travis is not required anymore","body":".travis.yml sets CIRCLE_NODE_INDEX=-1 to avoid being a circle worker\nRemove code related to this hack as pip deps are no more called from travis","comments":2,"createdAt":"2018-04-26T16:47:58Z","updatedAt":"2018-08-31T13:43:45Z","closedAt":null,"state":"open","user":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"owner":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534436530000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2062","number":2062,"title":"JSONFormatBear complains about number representation","body":"Let's say I have a file test.json for a simulation I'm running,\n{\n    \"expansion-coefficient\": 23.4e-6\n}\nNow, when I run coala -b JSONFormatBear --files=test.json, it wants to change the number to 2.34e-05, which is of course mathematically equivalent. But I often have an intuition about numbers in a certain \"exponent\", changing that is often not helpful. Consider \"length\": 3.2e-3 as 3.2mm, when coala applies the patch it wants to, that changes to \"length\": 0.0032, as in 0.0032m, which is not as intuitive.","comments":13,"createdAt":"2017-10-03T09:44:29Z","updatedAt":"2018-08-16T16:22:10Z","closedAt":null,"state":"open","user":{"login":"Psirus","avatarUrl":"https://avatars1.githubusercontent.com/u/1187292?v=4"},"owner":{"login":"Psirus","avatarUrl":"https://avatars1.githubusercontent.com/u/1187292?v=4"},"assignee":{"login":"Psirus","avatarUrl":"https://avatars1.githubusercontent.com/u/1187292?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"area/newsettings","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534168425000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2080","number":2080,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":3,"createdAt":"2017-10-25T16:30:52Z","updatedAt":"2018-08-13T13:53:45Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"chetasr","avatarUrl":"https://avatars3.githubusercontent.com/u/12978868?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534085537000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2214","number":2214,"title":"Bear Proposal: Gherkin-lint","body":"https://github.com/vsiakka/gherkin-lint","comments":2,"createdAt":"2018-01-06T08:17:05Z","updatedAt":"2018-08-12T14:52:17Z","closedAt":"2018-08-12T14:52:17Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534077232000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2226","number":2226,"title":"Bear Proposal: bashate","body":"https://github.com/openstack-dev/bashate","comments":7,"createdAt":"2018-01-08T21:53:56Z","updatedAt":"2018-08-12T12:33:52Z","closedAt":"2018-08-12T12:33:52Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533991357000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2249","number":2249,"title":"GNUIndentBear: Add infinite line length when max_line_length is set to 0","body":"difficulty/low\nI would like to work on it.","comments":4,"createdAt":"2018-01-22T06:26:39Z","updatedAt":"2018-08-11T12:42:37Z","closedAt":"2018-04-06T04:32:43Z","state":"closed","user":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"owner":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534071130000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1888","number":1888,"title":"RuboCopBear: Missing documentation","body":"Missing documentation of rubocop_config: str='' in create_arguments(...).\ndifficulty/newcomer\narea/documentation","comments":7,"createdAt":"2017-07-05T05:36:26Z","updatedAt":"2018-08-12T10:52:10Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"AKG001","avatarUrl":"https://avatars2.githubusercontent.com/u/34455289?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534091549000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1951","number":1951,"title":"JSStandardBear: Document rules","body":"Since we're aiming for high quality bears, inclusion of settings becomes trivial.\nThey can be found here. Refer to the StylintBear for reference.\ndifficulty/low\narea/documentation","comments":12,"createdAt":"2017-07-27T04:23:08Z","updatedAt":"2018-08-12T16:32:29Z","closedAt":"2018-08-12T16:32:29Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"area/newsettings","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535522865000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1965","number":1965,"title":"ApertiumLintBear: Incomplete and incorrect line break","body":":param repeated_attributes_pardef:\n            This issue is responsible for checking any repeated entries in\n            the attributes associated with an entry in the parameter\n            definition section\n            n monodix files.\n\nshould be corrected to :\n:param repeated_attributes_pardef:\n            This issue is responsible for checking any repeated entries in\n            the attributes associated with an entry in the parameter\n            definition in monodix files.\n\ndifficulty/newcomer\narea/documentation","comments":13,"createdAt":"2017-08-01T06:41:19Z","updatedAt":"2018-08-29T06:07:45Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533886757000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1976","number":1976,"title":"GitCommitBear: Require [ci skip] for changes only modifying non-tested files  ","body":"[ci skip]/[skip ci] are supported by most CI providers.\ncommits which only modify files not covered by .coafile, or tests, etc, shouldnt cause CI to run.","comments":2,"createdAt":"2017-08-04T05:04:13Z","updatedAt":"2018-08-10T07:39:17Z","closedAt":"2018-08-10T07:39:17Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535780366000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1733","number":1733,"title":"Use Test in test class module names","body":"The following use verify_local_bear to create a test class, but then do not use the word Test in the stored class name, which is confusing by itself as the name should describe what it does.\n\nTailorBearTest.py\n\nTailorBearWithoutConfig = verify_local_bear(TailorBear, ...)\nTailorBearWithConfig = verify_local_bear(TailorBear, ...)\nTailorBearWithSetting = verify_local_bear(TailorBear, ...)\n\n\nTSLintBearTest.py\n\nTSLintBearWithoutConfig = verify_local_bear(TSLintBear, ...)\nTSLintBearOtherOptions = verify_local_bear(TSLintBear, ...)\n\n\n\nAdd Test to those variable name, like is done in most other test modules that use verify_local_bear.","comments":7,"createdAt":"2017-05-14T15:01:38Z","updatedAt":"2018-09-01T05:39:26Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533990321000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1307","number":1307,"title":"Check copied files are identical copies of upstream","body":"fossasia/gci16.fossasia.org#614 was raised due to ads appearing on the Github Pages site, and there was concern, initially at least, that this had occurred because someone had added something to a minified file that had been copied from upstream.\nIt would be good to check that any files that are copies of upstream are identical to a specified upstream URL.  This would also help with license checks, as a list of all upstream resources would be kept.  The fetched upstream file should be cached appropriately to avoid slowing down CI and potentially breaking CI in the event of a network problem.\ndifficulty medium\nOpened via gitter by @jayvdb","comments":4,"createdAt":"2017-01-14T17:54:12Z","updatedAt":"2018-08-11T12:25:21Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533634125000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1119","number":1119,"title":"hlint minimum version 1.9.1 not recorded","body":"HaskellLintBear should say that the hlint minimum version is 1.9.1, due to the use of the --json argument.\nNeeds either coala/coala#3237 or coala/coala#3236 fixed first.","comments":4,"createdAt":"2016-12-13T16:01:50Z","updatedAt":"2018-08-07T09:28:45Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-25T06:12:11Z","dueOn":"2017-06-30T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala-bears/milestone/13","description":""},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533742323000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1199","number":1199,"title":"Move generate_package.py to a helper script","body":"As noted on #1000 , there is not much in \"bears\" except plugins.  If we can empty out \"bears\" of everything not loaded via setuptools entry points, all dependencies belong to each plugin, and there is no developer API in \"bears\", so no need for API backwards compatibility, only user settings backwards compatibility.\nRemoving all python files from the top bears directory is also necessary for adopting PEP 420 -- Implicit Namespace Packages.\nThis should probably be done after #617 .","comments":2,"createdAt":"2016-12-24T05:50:24Z","updatedAt":"2018-08-08T15:32:03Z","closedAt":"2018-08-08T15:32:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1534168440000,"issue":{"htmlUrl":"https://github.com/coala/documentation/issues/472","number":472,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coalafor reference.\nlabel: initiative/gci\nOpened by @Monal5031 at gitter/coala/gci","comments":6,"createdAt":"2017-10-25T16:04:46Z","updatedAt":"2018-08-13T13:54:00Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"bfd4f2"},{"name":"status/blocked","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535269488000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/652","number":652,"title":"Cohesive Editor Support: update related issues","body":"coala/coala-eclipse#25 is closed.\ncoala/coala-eclipse#51 should be mentioned instead\ncoala/coala-emacs#11 is also closed, and should be simply removed.\nThe body of the project says\n\nFor VI and emacs, we will most likely use a testing framework such as Vimcasts.\n\nemacs should be removed as testing for it was implemented.","comments":2,"createdAt":"2018-08-24T04:03:16Z","updatedAt":"2018-08-26T07:44:48Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534775810000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/648","number":648,"title":"Create git-bug project","body":"https://github.com/MichaelMure/git-bug cc @MichaelMure who has agreed to mentor.\nInitial concept is bidirectional sync to GitHub issues with support for bridge impersonating multiple users, e.g. so corobo could be used to create issues as the person who used the bot (or maybe gitmate)\nAnother idea is GitLab issues support.\nAnother is a meta-git-bug for handling lots of projects, e.g. super repo with subtrees/submodules/etc of git-bug repos , or housing many GitHub sync'd repos of issue in a single git-bug repo\nUltimately this needs to be quite a broad project definition at this stage as many medium sized enhancements planned now might be completed before GSoC begins in 2019\nAlso worth investigating is git-appraise .","comments":0,"createdAt":"2018-08-20T14:36:50Z","updatedAt":"2018-08-20T14:36:50Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534775838000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/649","number":649,"title":"Create MargeBot project","body":"","comments":0,"createdAt":"2018-08-20T14:37:18Z","updatedAt":"2018-08-20T14:37:18Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534447769000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/628","number":628,"title":"Reports: add live contribution list links","body":"There are some fantastic websites for listing a GitHub usernames contributions.\nOne of them should be added by the template , using the GitHub username from social:\nAlso if possible we should find a decent GitLab one and do the same.","comments":2,"createdAt":"2018-08-11T13:13:21Z","updatedAt":"2018-08-16T19:29:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535367222000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/636","number":636,"title":"Update status of 2018 GSoC projects","body":"The following are done:\n\nhttps://projects.coala.io/#/projects?project=integrate_antlr_v4_into_coala\nhttps://projects.coala.io/#/projects?project=automate_whitelist_creation_for_vulture\nhttps://projects.coala.io/#/projects?project=coala_language_server\nhttps://projects.coala.io/#/projects?project=commit_content_inspection\nhttps://projects.coala.io/#/projects?project=convert_bears_to_aspects\nhttps://projects.coala.io/#/projects?project=corobo_enhancements(security,_configurability_and_tests)\nhttps://projects.coala.io/#/projects?project=debug_and_profile_bears\nhttps://projects.coala.io/#/projects?project=implement_gitmate_plugins_for_coala\nhttps://projects.coala.io/#/projects?project=improve_installation_of_coala_and_coala-bears\nhttps://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala_\nhttps://projects.coala.io/#/projects?project=meta-review\nhttps://projects.coala.io/#/projects?project=newcomer_metrics_and_gamification\nhttps://projects.coala.io/#/projects?project=optimize_caching\nhttps://projects.coala.io/#/projects?project=quickstart_green_mode\n\nThe following were not started, and should be available again:\n\nhttps://projects.coala.io/#/projects?project=handle_nested_programming_languages\n\nThe following are incomplete / still in progress, and will need to be closed or heavily revised, and should be marked disabled:\n\nhttps://projects.coala.io/#/projects?project=improve_lint_bear_quality\nhttps://projects.coala.io/#/projects?project=automation_of_dependency_management_using_repology\nhttps://projects.coala.io/#/projects?project=git_task_list\nhttps://projects.coala.io/#/projects?project=linter_dependency_management_from_a_bare-metal_system\n\nNon GSoC projects with status unknown:\n\nhttps://projects.coala.io/#/projects?project=cohesive_editor_support\nhttps://projects.coala.io/#/projects?project=implement_jira_support_for_gitmate","comments":1,"createdAt":"2018-08-13T02:44:44Z","updatedAt":"2018-08-27T10:53:42Z","closedAt":"2018-08-27T10:53:42Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/medium","color":"f2db30"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534304692000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/642","number":642,"title":"Update the GSoC information link in FAQ's","body":"The link for 'further information of GSoC' in the FAQ's section is now not supported and has been moved on to a new address. This link needs to be updated.\nLink to the page referred: http://projects.coala.io/#/faq","comments":1,"createdAt":"2018-08-14T20:15:38Z","updatedAt":"2018-08-15T03:44:52Z","closedAt":null,"state":"open","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534523063000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/644","number":644,"title":"Fix grammatical mistakes in _reports/NitanshuVashistha.md","body":"This report got merged when time for completing GSoC final evaluation was running out. I messed up the language in the bio. Here are the changes that'd most probably correct the grammar of the .\n-  My project was dedicated make corobo secure by reducing its surface\n-  vulnerability. I also implemented a better testing infrastructure to test\n-  plugins , as well as to made the existing plugins configurable so that they\n+  My project was dedicated to make corobo secure by reducing its surface\n+  vulnerability. I also implemented a better testing infrastructure to test the\n+  plugins, as well as to make the existing plugins configurable so that they","comments":0,"createdAt":"2018-08-17T15:13:51Z","updatedAt":"2018-08-17T16:24:23Z","closedAt":"2018-08-17T16:24:23Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533302151000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/606","number":606,"title":"Gitmate: Contextually sensitive actions on PRs","body":"Currently Gitmate adds a lot of noise to PRs.\nIt shouldnt repeat messages it has already put on PRs.\nIt could add a note to the existing message that the problem was seen again in the latest commit.\nIt should hide as 'Outdated' messages for errors which have been resolved.\netc","comments":4,"createdAt":"2018-08-02T11:47:43Z","updatedAt":"2018-08-03T13:15:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533653118000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/608","number":608,"title":"Enhance report.md to support year","body":"_layouts/report.md currently emits \"2017\" all the time.\nIt should derive it from other information.\nThe 2017 ones all have a year in the URL, so that should be able to be used somehow\nSee #359","comments":1,"createdAt":"2018-08-03T10:12:42Z","updatedAt":"2018-08-07T14:45:18Z","closedAt":"2018-08-07T14:45:18Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534068099000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/615","number":615,"title":"Update GSoC report template","body":"https://github.com/coala/projects/blob/master/reports/example.md needs an update\nAdd OpenHub profile link","comments":4,"createdAt":"2018-08-09T15:19:57Z","updatedAt":"2018-08-12T10:01:39Z","closedAt":"2018-08-12T10:01:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535082641000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/616","number":616,"title":"2017 GSoC report activity yaml should be 1 based, not 0 based","body":"The yaml being submitted currently contains\nactivity:\n- 0:\n  - repo: name\n  - link: URL\n  - details: shortlog\n\nIt should be either 1 based, or be an array like\nactivity:\n\nrepo: name\nlink: URL\ndetails: shortlog\nrepo: name2\nlink: URL2\ndetails: shortlog2","comments":1,"createdAt":"2018-08-09T15:24:40Z","updatedAt":"2018-08-24T03:50:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534004192000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/620","number":620,"title":"Typo in commit_based_perftest.md","body":"Variable name for project should be changed from intiatives to initiatives to fix spelling and to align with projects.liquid.\nProbably a good newcomer issue.","comments":1,"createdAt":"2018-08-11T00:42:11Z","updatedAt":"2018-08-11T16:16:32Z","closedAt":"2018-08-11T16:16:32Z","state":"closed","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535324545000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/623","number":623,"title":"reports/adhikasp.md: Split PRs into commits","body":"reports/adhikasp.md links only to the pull requests.\nThey are all merged.\nIt should link to the commits in those pull requests, which is often a few commits per pull request.","comments":1,"createdAt":"2018-08-11T03:56:41Z","updatedAt":"2018-08-26T23:02:25Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533960009000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/624","number":624,"title":"reports/ : Use pull/123/commits/deadbeef","body":"For the GitHub links, I think it is more usefull to link to repo/pull/123/commits/deadbeef , as this gives the PR and the commit , and also shows big purple merged at the top.\nOtherwise, if only linking to repo/commit/deadbeef , ir only shows \"master\" as the branch to verify that it is a merged commit.","comments":0,"createdAt":"2018-08-11T04:00:09Z","updatedAt":"2018-08-11T04:00:09Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533993221000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/627","number":627,"title":"reports: Add tarball hash","body":"The reports should include a tarball hash , as a variable in the yaml and this should be displayed beside the tarball in the HTML.\nMentors should check that the hash is correct before approving work reports.","comments":1,"createdAt":"2018-08-11T13:09:44Z","updatedAt":"2018-08-11T13:13:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533568764000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/583","number":583,"title":".coafile: Set max line length for project pages","body":"Similar to coala/cEPs#134 , the project pages (i.e. pages in https://github.com/coala/projects/tree/master/_projects) should have a reasonable line length to improve the ability to read & code review them.\nc.f. coala/cEPs#157\nTry length 120 for existing files so it requires less disruptive changes to the existing files.\nThen add another section which requires 80 cpl and excludes the existing files.","comments":13,"createdAt":"2018-05-23T11:53:53Z","updatedAt":"2018-08-06T15:19:24Z","closedAt":"2018-08-06T15:19:24Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533946333000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/589","number":589,"title":"Rule based ignores","body":"Currently coala can ignore rules based on in-source comments.\nThat can get very messy when particular rules sgould always be ignored in common but well defined scenarios.\nIn those case it is better to define a rule about the relevant lines.\nSee flake8-putty, which uses regex to describe scenarios.\nThe solution for this project should be more generic that flake8-putty, possibly using bears to define ranges when custom actions which ignore results.","comments":0,"createdAt":"2018-06-03T15:24:13Z","updatedAt":"2018-08-11T00:12:13Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533284765000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/597","number":597,"title":"Windows bears","body":"There are many bears which are not being tested on Windows, and very likely some which do not work on Windows and we dont know about it.\nThis project would bring our bears CI to 100% coverage, fixing all bugs in bears that are related to Windows.","comments":1,"createdAt":"2018-07-02T06:44:02Z","updatedAt":"2018-08-03T08:26:05Z","closedAt":"2018-08-03T08:26:05Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533990342000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/603","number":603,"title":"Proposal: Gitmate to submit patches when available from master builds","body":"If coala dependencies update, new fixes may be automatically available.\nThey may come from new versions of linter tools, new releases of bears, or new data used by old bears.\nThe most common case for coala is updates to our mobans repo which need to be rolled out to all repos.\nFor this we will need a MobanBear .\nThe mechanism for creating PRs is simple, but will require some improvements to IGitt.\nThe logic for how to do this sanely in a constantly moving repo with humans involved is harder and needs a careful design and more careful implementation. We can and should do better than greenkeeper and similar.","comments":2,"createdAt":"2018-07-23T06:32:53Z","updatedAt":"2018-08-11T12:25:42Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533753399000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/605","number":605,"title":"Vulture : use pyflakes as an initial parse basis","body":"Pyflakes does a lot of analysis which can be used by vulture.\npyflakes has long ago decided that it will not report dead code.\nHowever it does need to report other problems caused by dead code, and this can be done by tracking dead code.\nThere is a POC at\nhttps://github.com/jayvdb/pyflakes/tree/dead-code\nvulture can use this base on which to do more sophisticated analysis which is beyond scope of vulture.\nOne of the key benefits of using pyflakes is errors in the code can be detected by pyflakes base and vulture can fail when those errors would make vulture results unreliable.","comments":4,"createdAt":"2018-08-01T10:01:06Z","updatedAt":"2018-08-08T18:36:39Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534089008000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/529","number":529,"title":"Add .md to whitespace consistency rule","body":"Whaaa\nhttps://github.com/coala/projects/blob/master/.coafile#L30\nhttps://github.com/coala/projects/blob/ec5c428/.coafile#L35","comments":8,"createdAt":"2018-03-25T11:48:07Z","updatedAt":"2018-08-12T15:50:08Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/medium","color":"f2db30"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533286523000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/547","number":547,"title":"Update nested language proposal","body":"The examples are confusing rather than helpful.\nPhp/HTML is a good example.\nAnother great example is reStructuredText, which allows specification of a language for a code block.  And Markdown now has a similar concept.  Our rstcheck bear already uses this and lints the code blocks.  Ideally this project would re-implement the rstcheck's linting of code blocks, so the splitting and spawning of linters is done inside coala instead of inside rstcheck, and the same functionality would be available for markdown without a custom bear.","comments":1,"createdAt":"2018-04-07T03:29:03Z","updatedAt":"2018-08-03T08:55:23Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"labels":[{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534730652000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/552","number":552,"title":"Disable jetbrains project ","body":"@traff isnt mentoring atm; project needs to be disabled until he plans to be a mentor again.","comments":2,"createdAt":"2018-04-13T12:47:25Z","updatedAt":"2018-08-20T02:04:12Z","closedAt":"2018-08-20T02:04:12Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533918114000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/555","number":555,"title":"JSON result reporter tool","body":"The coala json format provides a stable output.\nThere are other formats which are useful for reporting tests and failures.\nMost commonly used is JUnit format. (which isnt really a specified format; see https://blog.ilias.xyz/unit-test-output-formats-a-state-of-affairs-5734b4c8e577)\nConverting the static analysis results into a test results format has been done a few times, such as early PEP8 plugins to Jenkins.  The mapping isnt exact, but the benefits of using the test result format is tight integration with various system.\nCircleCI can accept this format: https://circleci.com/docs/2.0/collect-test-data/\nAppVeyor can receive a test results XML format, in the format output by xunit, presumably the same as JUnit.\nhttps://www.appveyor.com/docs/running-tests/#uploading-xml-test-results\nThe first project phase could involve converting the JSON to JUnit format and uploading into Circle CI and Appveyor.\nThe JUnit format should also be tested with a Jenkins install, to ensure it is uploading correctly there.  This would mean our Jenkins project is much less important.\nAnother common format is TAP.\nAnd there is Clover XML format.\nThen there are some system, such as Phabricator, which have a custom format they expect.\nc.f. facebook/infer#673\nThe above probably doesnt fill 3 months.\nPulling the coala results from CI using this format could be a way to inform newbies of the style problems with their PRs.\nAnother way to expand this project is to also push the unit test results as XML to the CI (using combination XML files if necessary)","comments":3,"createdAt":"2018-04-17T11:07:57Z","updatedAt":"2018-08-10T16:21:54Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533284698000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/564","number":564,"title":"Split repology project into two projects","body":"We have two different projects both utilising Repology for installation.\nAnd there is only one repology project here: https://github.com/coala/projects/blob/master/_projects/automate_dependacy_repology.md\nAlso relevant is the cib project, which will also be improving our dependency management, but it will be fixing an end-user tool, and will likely be trying to leverage conda to help get the dependencies installed.\nAs a result, the cib project will inevitable be solving the pip dependencies.\nThe 'Go on BSD' project is clearly about Go, and only Go.  The meat of this project is supporting lots of versions of Go, and different BSD, and possible also other more obscure OS like Alpine Linux.\nThe current repology project is about getting 'all' linters linked to Repology.\nI suspect the timeline is not allowing enough time for the process of creating Repology packages for linters that are not yet in Repology, and it seems large numbers of them are missing.  So this will take quite a bit longer than planned.  We'll need to look at various methods of automating the process.  Maybe we rename it to be the 'repology metadata' project.  It will still need to include implementation of the installation routines, but it probably wont have time to solve installation of every bear.  Perhaps it should focus only on linters managed via ruby bundler, and or npm.  That will avoid most conflicts with the other two projects.\n@yzgyyang , the first step is for you to create a new very basic proposal page for your project.","comments":8,"createdAt":"2018-04-24T20:57:14Z","updatedAt":"2018-08-03T08:24:58Z","closedAt":"2018-08-03T08:24:58Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534142636000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/573","number":573,"title":"Remove trailing underscore in pyflakes URL","body":"The pyflakes project link is\nhttp://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala_\nWithout the underscore it doesnt work.\nhttp://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala\nWe need both to work, and the former redirect to the latter.\nIt might be possible to use Netlify _redirects to do the redirect.","comments":7,"createdAt":"2018-05-12T05:51:53Z","updatedAt":"2018-08-13T06:43:56Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534168445000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/374","number":374,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coalafor reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":1,"createdAt":"2017-10-25T16:16:19Z","updatedAt":"2018-08-13T13:54:05Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/needs info","color":"71fcb7"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533289110000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/391","number":391,"title":"Project proposal: lint rst single vs double backticks","body":"There isnt any clear guidance on single vs double backticks in RST, especially when RST is not embedded within Python, however a rule of thumb is that single backticks should be implicit references to something.\nhttps://stackoverflow.com/questions/22256995/restructuredtext-in-sphinx-and-docstrings-single-vs-double-back-quotes-or-back\nhttps://mail.zope.org/pipermail/grok-dev/2008-December/006823.html\nFor documentation especially, it would be helpful to have a checker that finds a section heading somewhere in the docs for anything in single backticks, and errors if it cant be found.\nhttps://github.com/myint/rstcheck would likely be the best spot for this to be implemented.\nAnd myint/rstcheck#32 would be an ideal task to be done to familiarise oneself with the project.","comments":2,"createdAt":"2017-11-01T13:18:54Z","updatedAt":"2018-08-03T09:38:30Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533946764000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/452","number":452,"title":"Create CheckStyle project","body":"","comments":2,"createdAt":"2018-02-14T13:43:08Z","updatedAt":"2018-08-11T00:19:24Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534158331000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/470","number":470,"title":"Add support for multiple status labels on a project card","body":"Proposed by @sims1253 on #285\nFor example a card can have \"High Involvement\" as well as \"In Progress\" as status.","comments":1,"createdAt":"2018-03-10T05:50:24Z","updatedAt":"2018-08-13T11:05:31Z","closedAt":"2018-08-13T11:05:31Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533946418000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/480","number":480,"title":"Meta-review project","body":"An important aspect of newcomer gamification and the undefined developer->maintainer process is good feedback on their reviews.\nAny 'points' should be held in waiting until the PRs have been merged, and a developer or maintainer has given feedback on review comments which were given by the newcomer or developer.\nA more complete write up is at coala/coala#3615","comments":6,"createdAt":"2018-03-18T15:39:20Z","updatedAt":"2018-08-11T00:13:38Z","closedAt":"2018-08-11T00:13:38Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533210240000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/488","number":488,"title":"gitmate plugins","body":"coala uses http://gitmate.io to automate our systems.\nWhile it works very well, there are a number of plugins which need extra complexity to better suit coala, and there are new plugin ideas we have all the time, but never get around to building.  As these are coala-centric enhancements, they often fall off the gitmate priority list.  The extensible framework is there; we need to utilise it better.","comments":11,"createdAt":"2018-03-19T09:32:53Z","updatedAt":"2018-08-02T11:44:00Z","closedAt":"2018-08-02T11:44:00Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534507346000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/224","number":224,"title":"Broken link and typo in Gitmate for GitLab","body":"The goals for the project Implement GitLab and Bitbucket Support for GitMate\nhas a few typos and a broken link.\nDifficulty/Newcomer\nOpened via gitter by @nemaniarjun","comments":6,"createdAt":"2017-02-15T11:30:33Z","updatedAt":"2018-08-17T12:02:26Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535084976000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/359","number":359,"title":"reports: Make a report list page","body":"Task Description :\n\n\nA proper webpage must be in place using which we can show the list of work submission urls / profiles of GCI and GSOC students.\n\n\nAn overview of webpage structure\n\n\n\nLinks of work submission of GSoC Students, sorted yearwise\nLinks of work submission / profile of GCI students, sorted yearwise\n\nSteps :\n\n\nCreate  a new layout (.md file) in _layouts directory, and use Jekyll + Liquid syntax to obtain array of all the pages where layout is report  (such pages are in https://github.com/coala/projects/tree/master/reports) .\n\n\nThen you can iterate over this array as many times and show lists of links pertaining to GSoC and GCI, in separate markup sections.","comments":6,"createdAt":"2017-08-29T13:37:40Z","updatedAt":"2018-08-24T04:29:36Z","closedAt":"2018-08-24T04:29:36Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"}]}},{"repoOwner":"coala","repoName":"devops","updatedAtMs":1534168514000,"issue":{"htmlUrl":"https://github.com/coala/devops/issues/86","number":86,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T13:57:22Z","updatedAt":"2018-08-13T13:55:14Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"status/stale","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"devops","updatedAtMs":1534588604000,"issue":{"htmlUrl":"https://github.com/coala/devops/issues/87","number":87,"title":"Add PULL_REQUEST_TEMPLATE.md","body":"Add a file named PULL_REQUEST_TEMPLATE.md which includes general information and guidelines for the author of Pull Request, you can see PULL_REQUEST_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T17:02:12Z","updatedAt":"2018-08-18T10:36:44Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"status/stale","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535418483000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/617","number":617,"title":"webservices.raml: Remove comment about merged todo","body":"webservices.raml includes a note about https://gitlab.com/coala/landing/merge_requests/39 , which is now merged.\nThe comment should be removed.","comments":4,"createdAt":"2018-08-17T02:34:56Z","updatedAt":"2018-08-28T01:08:03Z","closedAt":"2018-08-28T01:08:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533820982000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/611","number":611,"title":"100% branch coverage","body":"https://travis-ci.org/jayvdb/corobo/builds/413532424 shows quite a few corners where the tests dont reach","comments":0,"createdAt":"2018-08-08T13:10:59Z","updatedAt":"2018-08-09T13:23:02Z","closedAt":"2018-08-09T13:23:02Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534473227000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/615","number":615,"title":"Make explain plugin configurable","body":"explain currently uses hardcoded coala explanations. Configuring sub-directories explain/generic and explain/<org name> so that other organizations can include their culture-specific explanations.","comments":0,"createdAt":"2018-08-16T09:08:49Z","updatedAt":"2018-08-17T02:33:47Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"documentation","color":"5319e7"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533439136000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/603","number":603,"title":"Alert whenever a @mention is of someone not in the room","body":"Similar to #317 , but for room membership.\nThe wording needs to be moderately toned, as it isnt 'bad' to mention a org member who isnt in the room - on gitter, they will get a notification to join the room, and they can read the room without joining, so it is OK to ping them, and they can ignore it.\nAlso c.f. #602","comments":1,"createdAt":"2018-08-05T03:14:46Z","updatedAt":"2018-08-05T03:18:56Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"e99695"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533729974000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/607","number":607,"title":"Create LabHubTestCase for testing LabHub dependent plugins and adapt GitStats tests","body":"The role of this TestCase is to do the setUp necessary for testing a plugin which depends on LabHub.","comments":0,"createdAt":"2018-08-07T19:09:24Z","updatedAt":"2018-08-08T12:06:14Z","closedAt":"2018-08-08T12:06:14Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533819290000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/609","number":609,"title":"DefaultConfigMixin needs 100% branch coverage","body":"The directory utils was omitted from coverage, and so this work was not completed to the coala standard.\nutils/mixin.py 26 20 14 0 15% 7-9, 12-15, 18-22, 25-38","comments":5,"createdAt":"2018-08-08T10:18:50Z","updatedAt":"2018-08-09T12:54:50Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533729654000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/610","number":610,"title":"ban command needs 100% branch test coverage","body":"plugins/ban.py 37 0 18 6 89% 21->24, 38->36, 42->36, 56->59, 72->70, 76->70\nhttps://travis-ci.org/jayvdb/corobo/builds/413532424","comments":0,"createdAt":"2018-08-08T10:56:15Z","updatedAt":"2018-08-08T12:00:54Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533117817000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/586","number":586,"title":"Implement DefaultConfigurationMixin","body":"DefaultConfigurationMixin will allow configuration of plugins from config.py so that admins won't have to configure the plugin every time the bot is deployed.","comments":0,"createdAt":"2018-07-20T19:18:25Z","updatedAt":"2018-08-01T10:03:37Z","closedAt":"2018-08-01T10:03:37Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533117817000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/587","number":587,"title":"Adapt SpammingAlert plugin to use the DefaultConfigurationMixin","body":"","comments":0,"createdAt":"2018-07-20T19:19:04Z","updatedAt":"2018-08-01T10:03:37Z","closedAt":"2018-08-01T10:03:37Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533950015000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/593","number":593,"title":"Remove dependency on nltk","body":"This was an unused dependency, and the import was removed in #589\nThe entry in requirements.txt also needs to be removed.","comments":2,"createdAt":"2018-07-29T05:05:00Z","updatedAt":"2018-08-11T01:13:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534168618000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/594","number":594,"title":"Minor refractoring in labhub tests","body":"Do minor changes in labhub_tests as asked here #572 (review) (see below)\ndifficulty/low","comments":10,"createdAt":"2018-07-31T10:23:08Z","updatedAt":"2018-08-13T13:56:58Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"ssg2526","avatarUrl":"https://avatars2.githubusercontent.com/u/22372359?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/low","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534045735000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/596","number":596,"title":"DefaultConfigurationMixin: Modify implementation ","body":"Current implementation is either DEFAULT_CONFIG or CONFIG_TEMPLATE. But a better implementation will be if we can store the default values in CONFIG_TEMPLATE and then allow a subset of those config variables overridden in the config.py's DEFAULT_CONFIG.\nThis way we can provide the partial configuration in the CONFIG_TEMPLATE, and allow partial reconfiguration through config.py's DEFAULT_CONFIG.","comments":0,"createdAt":"2018-08-04T14:23:01Z","updatedAt":"2018-08-12T03:48:55Z","closedAt":"2018-08-12T03:48:55Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535723018000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/600","number":600,"title":"spam plugin should implement check_configuration","body":"MAX_LINES = 1 is invalid, as it will mean anyone writing one line is spamming, which is silly.\nMAX_MSG_LEN <= length of BOT_PREFIX is invalid, as means invoking a command is spamming, which is silly.","comments":9,"createdAt":"2018-08-05T02:26:47Z","updatedAt":"2018-08-31T13:43:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"CodeSparkle","avatarUrl":"https://avatars3.githubusercontent.com/u/40273492?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/newcomer","color":"65c8ff"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533476654000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/601","number":601,"title":"plugins/coatils.py: Remove empty `__init__`","body":"The __init__ in this module only invokes super, which will happen anyway if the __init__ is removed.\nThis is medium importance because we do not want any plugin to be using __init__, as they should be using activate. (c.f. #577)","comments":0,"createdAt":"2018-08-05T02:48:23Z","updatedAt":"2018-08-05T13:44:14Z","closedAt":"2018-08-05T13:44:14Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534548304000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/602","number":602,"title":"Make LabHub is_room_member a private function of the module","body":"LabHub.is_room_member is unnecessarily a static method of the class.\nIt can be moved to a private function _is_room_member at the module level, and then the tests can be improved to remove the need to do special plugin mocking.\nSee #572 (comment) for context","comments":1,"createdAt":"2018-08-05T03:08:45Z","updatedAt":"2018-08-17T23:25:04Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534135080000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/574","number":574,"title":"[Poll]: Configuration of corobo","body":"Since corobo lives inside a Docker container and is deployed after every commit.\nTo use the configuration templates, we'll need a way to pre-configure the plugins so that bot admins don't have to configure them after every deployment.\nIn the comment section, are the different proposed option than can be implemented to auto-configure the plugins at the time of deployment.\nPlease use a ' 👍  ' to vote for the best-suited implementation.\ncc @meetmangukiya @gbin @jayvdb","comments":8,"createdAt":"2018-06-24T10:34:28Z","updatedAt":"2018-08-13T04:38:00Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534143697000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/579","number":579,"title":"searchdocs_test: change `http://` links to 'https://`","body":"Change http to https\n\n  \n    \n      corobo/tests/searchdocs_test.py\n    \n    \n         Line 7\n      in\n      de4fbaf\n    \n    \n    \n    \n\n        \n          \n           'http://api.coala.io/en/latest/search.html?q=this+is+search+string') \n        \n    \n  \n\n\ndifficulty/newcomer","comments":8,"createdAt":"2018-07-06T08:00:34Z","updatedAt":"2018-08-13T07:01:37Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"difficulty/newcomer","color":"65c8ff"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533647423000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/519","number":519,"title":"Change nevermind plugin regex","body":"Currently corobo says sorry, whenever there is nm or nevermind in a sentence(when corobo is first word), so make it a full match. It should only respond when we say corobo nm  or corobo nevermind.\nlabel: type/regex difficulty/newcomer","comments":3,"createdAt":"2018-04-02T13:37:54Z","updatedAt":"2018-08-07T13:10:23Z","closedAt":"2018-08-07T13:10:23Z","state":"closed","user":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"owner":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534363356000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/536","number":536,"title":".gitignore: Add .pytest_cache","body":"difficulty/newcomer","comments":3,"createdAt":"2018-06-01T15:39:32Z","updatedAt":"2018-08-15T20:02:36Z","closedAt":"2018-06-20T23:47:48Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533953463000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/543","number":543,"title":"Fix indentation in labhub_test.py","body":"Example: https://github.com/coala/corobo/blob/master/tests/labhub_test.py#L52\nThere are many similar lines where indentation needs to be fixed.","comments":7,"createdAt":"2018-06-05T06:20:15Z","updatedAt":"2018-08-11T02:11:03Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"status/blocked","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533893719000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/554","number":554,"title":"Use activate instead of __init__ for LabHub plugins","body":"","comments":1,"createdAt":"2018-06-09T11:31:15Z","updatedAt":"2018-08-10T09:35:19Z","closedAt":"2018-08-10T09:35:19Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/labhub","color":"63ccf9"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136747000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/328","number":328,"title":"Assign: Eligibility error should give the precise problem","body":"Currently it gives a list of possible problems, which is long and doesnt give precise guidance for what is the next step\nOpened by @jayvdb at Gitter","comments":6,"createdAt":"2017-11-07T06:55:07Z","updatedAt":"2018-08-13T05:05:47Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535089082000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/345","number":345,"title":"Mention the coala StackOverflow tag in lmgtfy ","body":"https://gitlab.com/coala/cobot/issues/23","comments":15,"createdAt":"2017-11-22T09:40:16Z","updatedAt":"2018-08-24T05:38:02Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"type/markdown","color":"2a0582"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534166423000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/358","number":358,"title":"Limit pitchfork command to developers","body":"#36 requested \"When issued by an authorized person to cobot,..\" , however that bit wasnt done.\nThis needs to be fixed before GCI or there will be mayhem when this easter egg is found.","comments":7,"createdAt":"2017-11-22T13:56:31Z","updatedAt":"2018-08-13T13:20:23Z","closedAt":"2018-08-13T13:20:23Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"b60205"},{"name":"status/blocked","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533654811000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/359","number":359,"title":"Limit test commands to only operate in test rooms","body":"In the same vein as #358 , commands like corobo render test should not be possible on the main rooms, even not in offtopic rooms.","comments":7,"createdAt":"2017-11-22T14:12:57Z","updatedAt":"2018-08-07T15:13:31Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533435506000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/380","number":380,"title":"Move constants into config using get_configuration_template","body":"plugins/constants.py should be removed, replaced with config variables defined using get_configuration_template\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":2,"createdAt":"2017-11-26T12:43:37Z","updatedAt":"2018-08-05T02:18:26Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534045736000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/381","number":381,"title":"answers plugin: Should use get_configuration_template","body":"Replace environment variables with config variables\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":1,"createdAt":"2017-11-26T12:49:43Z","updatedAt":"2018-08-12T03:48:56Z","closedAt":"2018-08-12T03:48:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533893719000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/382","number":382,"title":"labhub plugin: Should use get_configuration_template","body":"Replace environment variables with config variables\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":1,"createdAt":"2017-11-26T12:49:43Z","updatedAt":"2018-08-10T09:35:19Z","closedAt":"2018-08-10T09:35:19Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534045736000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/383","number":383,"title":"wolfram_alpha plugin: Should use get_configuration_template","body":"Replace environment variables with config variables\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":2,"createdAt":"2017-11-26T12:49:45Z","updatedAt":"2018-08-12T03:48:56Z","closedAt":"2018-08-12T03:48:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534869998000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/385","number":385,"title":"Mention Zulip backend in README.md","body":"Opened by @jayvdb","comments":4,"createdAt":"2017-11-26T14:28:13Z","updatedAt":"2018-08-21T16:46:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"documentation","color":"5319e7"},{"name":"type/markdown","color":"2a0582"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534137845000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/412","number":412,"title":"Update the default channel list","body":"The default list is stored in config.py\nlow, newcomer, gci\nOpened by @jayvdb at Gitter","comments":7,"createdAt":"2017-11-28T21:15:23Z","updatedAt":"2018-08-13T05:24:05Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533429176000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/441","number":441,"title":"Repeated invite message ","body":"Please refer to https://gitter.im/coala/coala?at=5a2198e9540c78242d7146a9 for more information\ndifficulty/newcomer\nOpened by @RaiVaibhav at Gitter","comments":5,"createdAt":"2017-12-01T18:08:14Z","updatedAt":"2018-08-05T00:32:56Z","closedAt":"2018-08-05T00:30:32Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534153238000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/496","number":496,"title":"Travis CI invokes pip three times","body":"117c747#diff-354f30a63fb0907d4ad57269548329e3R18\npip install coala-bears\npip install -r requirements.txt\npip install -r test-requirements.txt\n\nWIP at #466\nHowever due to coala outdated pinned dependency on colorlog , it is hard to fix this because a more recent version of colorlog can be installed.","comments":1,"createdAt":"2017-12-20T12:57:01Z","updatedAt":"2018-08-13T09:40:38Z","closedAt":"2018-08-13T09:40:38Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136654000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/296","number":296,"title":"Mention that users need to be a developer (and point to the requirements) if they try to assign a medium issue","body":"Opened by @adtac at gitter/coala/coala","comments":2,"createdAt":"2017-09-24T09:13:01Z","updatedAt":"2018-08-13T05:04:14Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533654484000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/306","number":306,"title":"Only allow GCI students to claim issues with \"initiative/gci\" label","body":"How to determine who are GCI students TBD.\nOpened by @jayvdb at gitter/coala/gci","comments":17,"createdAt":"2017-10-18T12:41:13Z","updatedAt":"2018-08-07T15:08:04Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"labels":[{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/high","color":"b319e7"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534588559000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/316","number":316,"title":"Add PULL_REQUEST_TEMPLATE.md","body":"Add a file named PULL_REQUEST_TEMPLATE.md which includes general information and guidelines for the author of Pull Request, you can see PULL_REQUEST_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T17:03:23Z","updatedAt":"2018-08-18T10:35:59Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533470781000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/317","number":317,"title":"Issue warning whenever someone is mentioned using `@` if the target is not a member of the org","body":"difficulty/low initiative/gci\nOpened by @jayvdb at gitter/coala/coala","comments":6,"createdAt":"2017-10-28T04:56:00Z","updatedAt":"2018-08-05T12:06:21Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"e99695"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534834548000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/185","number":185,"title":"Error message when gh-board does not exist is confusing","body":"See https://gitter.im/coala/community?at=5b7baa45d8d36815e56a0c8a","comments":0,"createdAt":"2018-08-21T06:55:48Z","updatedAt":"2018-08-21T06:55:48Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ccf945"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534479556000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/182","number":182,"title":"Add support for Django 2.x","body":"We were initially using Django 2.x but at that time django-distill doesn't has the support for the same, so we downgraded to a lesser version. But as replied at this issue they have fixed the problem. So, I think we could update this repo to use Django 2.x with some minor changes.","comments":1,"createdAt":"2018-08-17T03:44:08Z","updatedAt":"2018-08-17T04:19:16Z","closedAt":null,"state":"open","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"area/ci","color":"4c95ad"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1535181371000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/184","number":184,"title":"Make .ci/build.sh re-runnable","body":".ci/build.sh contains commands like mkdir private _site public, which assume a clean repository.\nIt should be enhanced to expect to be re-run after a partial or compete build is finished.","comments":1,"createdAt":"2018-08-20T23:04:53Z","updatedAt":"2018-08-25T07:16:11Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"9cc6fc"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533564335000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/175","number":175,"title":"Reach 100% test coverage","body":"This will take a while, but we can break it up into smaller achievable sub-tasks.","comments":0,"createdAt":"2018-08-06T14:05:35Z","updatedAt":"2018-08-06T14:05:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533829497000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/176","number":176,"title":"Get 100% coverage for the data app","body":"Related to #175","comments":0,"createdAt":"2018-08-08T10:58:27Z","updatedAt":"2018-08-09T15:44:57Z","closedAt":"2018-08-09T15:44:57Z","state":"closed","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534806867000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/181","number":181,"title":"Add meta-review to Gamification app","body":"We have both meta-review and gamification.\nAnd the rules for 'Developer' just changed to require use of meta-review, so that needs to be added to gamification\ncoala/coala@42a3ffa","comments":4,"createdAt":"2018-08-11T13:16:08Z","updatedAt":"2018-08-20T23:14:27Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ccf945"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533393130000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/165","number":165,"title":"gitorg.py: Unused variable","body":"Pyflakes error report =>\n./gci/gitorg.py:55: local variable 'e' is assigned to but never used\n\ndifficulty/newcomer","comments":2,"createdAt":"2018-07-19T11:42:32Z","updatedAt":"2018-08-04T14:32:10Z","closedAt":"2018-08-04T14:32:10Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"cypher-naman","avatarUrl":"https://avatars1.githubusercontent.com/u/36116312?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/style","color":"93f486"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533810075000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/172","number":172,"title":".travis.yml: Disable AUTH=true job for PRs ","body":"Travis PR builds do not get tokens, so we have effectively two identical jobs running for PRs.  And AUTH=true is confusing as it suggests some auth might exist.\nWe do want two jobs running for builds on forks, and for master builds.\nSee coala core .travis.yml for how to disable jobs on PRs","comments":0,"createdAt":"2018-07-28T15:34:10Z","updatedAt":"2018-08-09T10:21:15Z","closedAt":"2018-08-09T10:21:15Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"4c95ad"},{"name":"bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533565454000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/129","number":129,"title":"Add jinja bear to .coafiles","body":"The templates are in jinja format.\nWe have a bear for those.","comments":0,"createdAt":"2018-04-19T03:09:08Z","updatedAt":"2018-08-06T14:24:14Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ccf945"},{"name":"status/blocked","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533989380000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/136","number":136,"title":"Setup gamification app","body":"For the Newcomer metrics and Gamification project, we need an app name gamification with models User,  Activity, Level, and Badge with their required methods.","comments":1,"createdAt":"2018-05-23T06:01:13Z","updatedAt":"2018-08-11T12:09:40Z","closedAt":"2018-08-11T12:09:39Z","state":"closed","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533185915000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/83","number":83,"title":"Import GitHub and GitLab mrs data","body":"When webservices will be up it will provide all the mrs of coala on GitHub and GitLab through an API,\nthat should be imported here to build the gamification app.","comments":1,"createdAt":"2018-02-24T10:23:08Z","updatedAt":"2018-08-02T04:58:35Z","closedAt":"2018-08-02T04:58:35Z","state":"closed","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"gci-leaders","updatedAtMs":1535475858000,"issue":{"htmlUrl":"https://github.com/coala/gci-leaders/issues/2","number":2,"title":"Create a README.md","body":"The new README should explain the\n\nbasic objects of the projects, and\nthe technologies used,\nhow developers can build it","comments":3,"createdAt":"2017-12-05T00:58:41Z","updatedAt":"2018-08-28T17:04:18Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"ffcce2"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533793109000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/154","number":154,"title":"Inline source links render badly","body":"This comment\n#147 (comment)\nrenders very badly in meta-review","comments":0,"createdAt":"2018-08-09T05:38:25Z","updatedAt":"2018-08-09T05:38:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533893725000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/151","number":151,"title":"Enable source map in production","body":"Real production apps might not want this, but we want this to ease reviewing of MR preview and easier reporting of bugs in general.\nThis will give proper stack traces just like in development mode.","comments":1,"createdAt":"2018-08-07T13:47:15Z","updatedAt":"2018-08-10T09:35:25Z","closedAt":"2018-08-10T09:35:25Z","state":"closed","user":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"owner":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"assignee":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533830430000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/152","number":152,"title":"README.md: Add meta-review section","body":"I'll take this ;)","comments":0,"createdAt":"2018-08-09T00:53:03Z","updatedAt":"2018-08-09T16:00:30Z","closedAt":"2018-08-09T16:00:30Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533274086000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/145","number":145,"title":"Use released version of etherpad-lite-client-js","body":"We have been given a green light at tomassedovic/etherpad-lite-client-js#15 to push a necessary patch into upstream.\nOnce that is released, the dependency can be updated to point to the new release.","comments":0,"createdAt":"2018-08-03T05:28:06Z","updatedAt":"2018-08-03T05:28:06Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"upstream","color":"6ded77"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533801317000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/146","number":146,"title":"Implement ability to do meta-reviews directly on gh-board","body":"s.t. users can add/remove reactions directly on gh-board.","comments":0,"createdAt":"2018-08-04T02:29:56Z","updatedAt":"2018-08-09T07:55:17Z","closedAt":"2018-08-09T07:55:17Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535710229000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/148","number":148,"title":"package.json: tab is mistakenly used","body":"gh-board/package.json\n    \n    \n         Line 110\n      in\n      3638063\n    \n    \n    \n    \n\n        \n          \n           ]","comments":2,"createdAt":"2018-08-04T02:55:01Z","updatedAt":"2018-08-31T10:10:29Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533428783000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/149","number":149,"title":"meta-review ignore content has wrong regular expression","body":"gh-board/src/github-client.js\n    \n    \n         Line 226\n      in\n      d1a7ea3\n    \n    \n    \n    \n\n        \n          \n           const ignoreContent = '@gitmate-bot @rultor /^(unack|ack)/g'; \n        \n    \n  \n\n\n\n  \n    \n      gh-board/script/fetch-issues.js\n    \n    \n         Line 34\n      in\n      d1a7ea3\n    \n    \n    \n    \n\n        \n          \n           '@gitmate-bot @rultor /^(unack|ack)/g'; \n        \n    \n  \n\n\nShould be\n^(ack|unack)\ninstead.\nSee difference:\n> 'ack 123'.match(/^(ack|unack)/g)\n[ 'ack' ]\n> 'ack 123'.match('/^(ack|unack)/g')\nnull\n> 'ack 123'.match('^(ack|unack)')\n[ 'ack', 'ack', index: 0, input: 'ack 123' ]","comments":1,"createdAt":"2018-08-04T07:08:57Z","updatedAt":"2018-08-05T00:26:23Z","closedAt":"2018-08-05T00:26:23Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535305857000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/137","number":137,"title":"router.jsx  'replace' is defined but never used ","body":"/home/travis/build/coala/gh-board/src/router.jsx\n30:22  warning  'replace' is defined but never used  no-unused-vars","comments":10,"createdAt":"2018-07-29T14:27:17Z","updatedAt":"2018-08-26T17:50:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ANURADHAJHA99","avatarUrl":"https://avatars2.githubusercontent.com/u/34815869?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533254443000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/138","number":138,"title":"Refactor pre-fetch using newly built graphql client wrapper","body":"c.f. #67 (comment)","comments":0,"createdAt":"2018-07-29T14:33:06Z","updatedAt":"2018-08-03T00:00:43Z","closedAt":"2018-08-03T00:00:43Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533263356000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/140","number":140,"title":"Netlify should fail if issues.json was not created","body":"Netlify currently runs script/build.sh, and deploys .\nCreate a netlify.toml to build and do basic sanity checks.","comments":0,"createdAt":"2018-08-01T01:56:52Z","updatedAt":"2018-08-03T02:29:16Z","closedAt":"2018-08-03T02:29:16Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533139023000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/141","number":141,"title":"Switch from npm to yarn","body":"Now we are using npm, but facing some problems:\n\n\nWe are committing package-lock.json. If a contributor uses npm@6, there will be lots of carets before version number \"^1.0.2\". However, if another contributor uses npm@5, there will not be carets. See npm/npm#20434 (comment).\n\n\nAn issue regarding non-optional packages. See #87","comments":0,"createdAt":"2018-08-01T15:53:57Z","updatedAt":"2018-08-01T15:57:03Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533142116000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/143","number":143,"title":"Use released version of Level","body":"Currently depending on \"level-js\": \"philschatz/level.js#master\" , which has one extra commit from a branch 108 commits behind master of https://github.com/Level/level-js\nThe latest released version of level-js is quite different, and likely includes the needed configurability which that extra commit provided.","comments":1,"createdAt":"2018-08-01T16:10:02Z","updatedAt":"2018-08-01T16:48:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/dependencies","color":"ef88a2"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533261552000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/129","number":129,"title":"Setup test framework","body":"Current integration test relies on selenium. The test is incomplete and unstable, failing occasionally.\nIt would be better to set up unit tests/snapshot tests.","comments":2,"createdAt":"2018-07-28T14:51:01Z","updatedAt":"2018-08-03T01:59:12Z","closedAt":"2018-08-03T01:59:12Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533343950000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/84","number":84,"title":"UI Enhancements","body":"Listing few general areas where the UI can be enhanced and made easier to use:\n\nIt'd be great to have some breathing space around the emoji button row and between the buttons as well. That'd\n\n\nwould remove cluttering\nbe easily clickable\nfont size of emoji's needs to grow 2x to have a clear view\n\n\n\nMeta Review button click action - Clicking on a button should add a small chip / banner on this card telling that it has been meta-reviewed by you or some check mark which shows that reviewer has clicked an emoji button.\n\nAlso a nice idea would be to add a \"+1\" inside the button indicating that it has been clicked, like github does.","comments":3,"createdAt":"2018-07-21T16:43:23Z","updatedAt":"2018-08-04T00:52:30Z","closedAt":"2018-08-04T00:52:30Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535334667000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/88","number":88,"title":"log \"warning: no available reaction data! ... error: undefined\"","body":"https://travis-ci.org/jayvdb/gh-board/jobs/408352263#L1581\ncould it be 'errors: 0'\nOr something shorter.\nExcessive logging makes it harder to spot real problems.","comments":3,"createdAt":"2018-07-26T09:34:26Z","updatedAt":"2018-08-27T01:51:07Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"},{"name":"importance/low","color":"1394a0"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535711938000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/100","number":100,"title":"Org logos","body":"Repos should show the logo of their org / user","comments":1,"createdAt":"2018-07-27T07:17:51Z","updatedAt":"2018-08-31T10:38:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1534730278000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/6","number":6,"title":"Add configuration support","body":"#1 is going to need to include configurability, so that repos with different structure can work in different ways.  i.e. we need to at least support @philschatz 's label system and derived gh-board layout, and support what @ryanprior likes, and what @coala needs, so that our patches will be able to make it back through the forks to the main repo (c.f. #2 )\nThere is one existing configuration item upstream, which is 'SAMPLE_REPOS' , and coala has added 'REPOSITORIES' for the pre-fetching.  I am surprised that there are no forks which have modified this (c.f. #5), as that seems like a logical easy way to improve the front page (c.f. #3).\nIncluding configuration in the master branch causes forks to diverge.  We need to avoid that.\nSome options for where to put the configuration:\n\nthe wiki\na different branch\nan issue ;-)\n\nOr, the configuration could be all derived from GitHub, if we ignore SAMPLE_REPOS. (and if we build a way to easily configure the front page, nobody will try to abuse this anyway.)  It will increase build time to extract an ideal layout based on GitHub org/repo metadata.  Also fetching the list of repos for an org requires an extra scope which orgs may not want in their Travis env vars, and if they use secure vars in the .travis.yml , their fork diverges.","comments":1,"createdAt":"2017-12-22T05:38:50Z","updatedAt":"2018-08-20T01:57:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"d30a8d"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533154995000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/28","number":28,"title":"Travis npm caching problem","body":"https://travis-ci.org/coala/gh-board/builds/375797083#L462","comments":3,"createdAt":"2018-05-07T11:52:18Z","updatedAt":"2018-08-01T20:23:15Z","closedAt":"2018-08-01T20:23:15Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535416989000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/29","number":29,"title":"Undefined function in issue-blurb.jsx","body":"onClickIcon is used here but defined nowhere.\nIt seems onClick attribute is not being used by the library react-octicons: https://github.com/philschatz/react-octicons/blob/master/build.js#L29, which is why the undefined onClickIcon doesn't lead to an exception.\nNeeds investigation.\nRelated to #17 (comment)","comments":3,"createdAt":"2018-05-07T14:40:51Z","updatedAt":"2018-08-28T00:43:09Z","closedAt":"2018-08-28T00:43:09Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533261552000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/45","number":45,"title":"Add codecov","body":"After the test suite is working again, add codecov. c.f.\ncoala/git-task-list#45","comments":4,"createdAt":"2018-06-07T05:45:20Z","updatedAt":"2018-08-03T01:59:12Z","closedAt":"2018-08-03T01:59:12Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"coala-html","updatedAtMs":1534168336000,"issue":{"htmlUrl":"https://github.com/coala/coala-html/issues/126","number":126,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coalafor reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-25T16:13:17Z","updatedAt":"2018-08-13T13:52:16Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535448116000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/277","number":277,"title":"Bookmarkable example on homepage","body":"Currently, when selecting to a language example, we have no way to bookmark it.\n\nThis can be done via adding a query parameter to the url after the selection.\nand add\ndocument.getElementById('example').scrollIntoView();\n\nafter adding id to the example's div","comments":3,"createdAt":"2018-05-23T09:19:20Z","updatedAt":"2018-08-28T09:21:56Z","closedAt":null,"state":"open","user":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"owner":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"area/documentation","color":"ededed"},{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"type/bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535417879000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/270","number":270,"title":"\"Add Bear\" Button : Change font family to Roboto from Times New Roman","body":"From coala Online :","comments":8,"createdAt":"2018-04-09T11:11:20Z","updatedAt":"2018-08-28T00:57:59Z","closedAt":"2018-08-28T00:57:59Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1534168319000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/237","number":237,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":3,"createdAt":"2017-10-27T13:56:07Z","updatedAt":"2018-08-13T13:51:59Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535711995000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/69","number":69,"title":"allow users to copy code snippets to clipboard with a single button","body":"https://clipboardjs.com/ is a non flash based method to do this\nOpened via gitter by @sudheesh001","comments":5,"createdAt":"2017-01-30T11:33:57Z","updatedAt":"2018-08-31T10:39:55Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"coalaCSS","updatedAtMs":1534168429000,"issue":{"htmlUrl":"https://github.com/coala/coalaCSS/issues/21","number":21,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T16:39:11Z","updatedAt":"2018-08-13T13:53:49Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"coalaCSS","updatedAtMs":1534588545000,"issue":{"htmlUrl":"https://github.com/coala/coalaCSS/issues/22","number":22,"title":"Add PULL_REQUEST_TEMPLATE.md","body":"Add a file named PULL_REQUEST_TEMPLATE.md which includes general information and guidelines for the author of Pull Request, you can see PULL_REQUEST_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T17:11:23Z","updatedAt":"2018-08-18T10:35:45Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535720549000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5742","number":5742,"title":"Collectors.py: Discard trailing ** in ignore glob","body":"Remove the trailing globstar from ignore glob patterns and warn the user\nabout it. This ensures that the entire directory is not globbed.\nCloses #5737\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-31T13:02:23Z","updatedAt":"2018-08-31T13:02:29Z","closedAt":null,"state":"open","user":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"owner":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"assignee":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5742","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535582077000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5736","number":5736,"title":"ConsoleInteraction.py: Added break statement Fixes https://github.com…","body":"Closes #5202\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-29T11:24:47Z","updatedAt":"2018-08-29T22:34:37Z","closedAt":null,"state":"open","user":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"owner":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/performance","color":"fef2c0"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5736","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEyODQ1MQ==","url":"https://github.com/coala/coala/pull/5736#issuecomment-417128451","bodyText":"I've sent an invite to @rak-shit .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T22:32:13Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:32:13Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535693823000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5741","number":5741,"title":"CachingUtilities.py: Fix description","body":"Fix description for pickle_dump and pickle_load\nfunctions.\nFixes #5442\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-30T17:23:16Z","updatedAt":"2018-08-31T05:37:03Z","closedAt":null,"state":"open","user":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"owner":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5741","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535357489000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5732","number":5732,"title":"Joe bugfix","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-27T08:08:19Z","updatedAt":"2018-08-27T08:11:29Z","closedAt":"2018-08-27T08:08:52Z","state":"closed","user":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"owner":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5732","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjE1MDA2MA==","url":"https://github.com/coala/coala/pull/5732#issuecomment-416150060","bodyText":"I am so sorry, this is a mistake pull request. I am trying to commit to my friend repository to learn & test and not coala/coala.","diffHunk":null,"author":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4","name":null},"createdAt":"2018-08-27T08:11:29Z","lastEditedAt":null,"updatedAt":"2018-08-27T08:11:29Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535416866000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5733","number":5733,"title":"JSON.py: Add language definition for JSON","body":"Closes #5730","comments":4,"createdAt":"2018-08-27T17:12:45Z","updatedAt":"2018-08-28T00:41:06Z","closedAt":"2018-08-28T00:41:06Z","state":"merged","user":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"owner":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5733","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxMzAyOA==","url":"https://github.com/coala/coala/pull/5733#issuecomment-416413028","bodyText":"Ack 36b52e5","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T00:39:47Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:39:47Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535470935000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5734","number":5734,"title":"Wilson branch","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-28T15:20:07Z","updatedAt":"2018-08-28T15:42:15Z","closedAt":"2018-08-28T15:38:35Z","state":"closed","user":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"owner":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XL","color":"FF0000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5734","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535585042000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5735","number":5735,"title":"Added the break statement in ask_for_action_and_apply()","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-28T17:43:39Z","updatedAt":"2018-08-29T23:24:02Z","closedAt":"2018-08-29T11:03:48Z","state":"closed","user":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"owner":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5735","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkwMjU0NQ==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416902545","bodyText":"@palash25 Yes I have done the commit from my own laptop but the username is my dad's name. May be that is making you think that the commit is made from someone else laptop.","diffHunk":null,"author":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4","name":"Rakshit"},"createdAt":"2018-08-29T10:19:25Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:19:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkwNjc2Mw==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416906763","bodyText":"username is my dad's name.\n\nWow, your dad uses git. That's cool.\n\nMaybe that is making you think that the commit is made from someone else laptop.\n\nyou need to set your credentials in your git config. Please look it up.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-08-29T10:36:09Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:36:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkxMDk0OA==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416910948","bodyText":"@palash25 Help needed! How do I squash my commits?","diffHunk":null,"author":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4","name":"Rakshit"},"createdAt":"2018-08-29T10:53:11Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:53:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkxNzEwMA==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416917100","bodyText":"https://robots.thoughtbot.com/git-interactive-rebase-squash-amend-rewriting-history @rak-shit\nAlso never close your PRs without asking. Please reopen this and don't close it until a maintainer tells you to 😉","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-08-29T11:18:33Z","lastEditedAt":null,"updatedAt":"2018-08-29T11:18:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEzOTQwNg==","url":"https://github.com/coala/coala/pull/5735#issuecomment-417139406","bodyText":"@rak-shit cant reopen this as they also deleted their fork.  @rak-shit , read https://coala.io/newcomer and https://coala.io/git  very carefully otherwise you'll be banned.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T23:24:02Z","lastEditedAt":null,"updatedAt":"2018-08-29T23:24:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534394647000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5719","number":5719,"title":"Newcomers_Guide.rst: Fix Colored Blocks","body":"This fixes to make all blocks even colored blocks.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T20:38:43Z","updatedAt":"2018-08-16T04:44:07Z","closedAt":"2018-08-16T04:44:07Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5719","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzQyNDQ3NQ==","url":"https://github.com/coala/coala/pull/5719#issuecomment-413424475","bodyText":"By creating 8 PRs, all broken, instead of working on fixing one, you have demonstrated you did not read https://coala.io/newcomer , https://coala.io/git , etc , and are not suitable for @coala yet.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T04:44:07Z","lastEditedAt":null,"updatedAt":"2018-08-16T04:44:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534397067000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5720","number":5720,"title":"Newcomers_Guide.rst: Fix Colored Blocks","body":"Fixes colored blocks to be of even color.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-16T05:09:48Z","updatedAt":"2018-08-16T05:24:27Z","closedAt":"2018-08-16T05:24:27Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5720","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534446552000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5721","number":5721,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-16T13:48:10Z","updatedAt":"2018-08-16T19:09:12Z","closedAt":"2018-08-16T19:09:12Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5721","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjM3NQ==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602375","bodyText":"we dont want this file.","diffHunk":"@@ -0,0 +1,40 @@\n+.. image:: https://cloud.githubusercontent.com/assets/5716520/24838296/a9cf5f04-1d45-11e7-855c-47b816ce1e09.png","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:49:40Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:49:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjYwNQ==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602605","bodyText":"this is a bug I have solved in a moban template and am waiting on the mobans repo to be unbroken","diffHunk":"@@ -27,7 +27,6 @@ addopts =\n   --instafail\n   --profile\n   --reorder 'requirements.txt' 'test-requirements.txt' '*'\n-  --ignore=tests/collecting/collectors_test_dir/bears/incorrect_bear.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:50:11Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:50:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjg1Nw==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602857","bodyText":"We have another MR in the mobans repo which will finally solve this for all repos.","diffHunk":"@@ -16,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:50:49Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:50:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY2Nzg1NA==","url":"https://github.com/coala/coala/pull/5721#discussion_r210667854","bodyText":"This bug fix has been solved","diffHunk":"@@ -27,7 +27,6 @@ addopts =\n   --instafail\n   --profile\n   --reorder 'requirements.txt' 'test-requirements.txt' '*'\n-  --ignore=tests/collecting/collectors_test_dir/bears/incorrect_bear.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T16:52:53Z","lastEditedAt":null,"updatedAt":"2018-08-16T16:52:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY2NzkxMg==","url":"https://github.com/coala/coala/pull/5721#discussion_r210667912","bodyText":"This MR has been merged","diffHunk":"@@ -16,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T16:53:04Z","lastEditedAt":null,"updatedAt":"2018-08-16T16:53:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535582930000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5723","number":5723,"title":"LocalBearTestHelper: Decommission timeout","body":"LocalBearTestHelper had an undeclared dependency on pytest-timeout\nso it would not work unless the user had install pytest-timeout.\nNone of our bear test suites use this timeout argument, as the\ntimeout set in their repo configuration is sufficient.\nFixes #5508\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-18T00:10:57Z","updatedAt":"2018-08-29T22:48:50Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5723","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAyMTE4OQ==","url":"https://github.com/coala/coala/pull/5723#issuecomment-414021189","bodyText":"Note coala/coala-bears#2680 ( https://travis-ci.org/coala/coala-bears/builds/417500622 ) was the only use of it, and I suspect that was because Julia was really slow back then.  It is much faster now, so finishes in time.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-18T01:04:42Z","lastEditedAt":null,"updatedAt":"2018-08-18T01:04:42Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535171443000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5727","number":5727,"title":"Release notes now published at api docs","body":"Release Notes are now published at api docs.\nI was not familiar with reStructuredText.\nI was initially trying to add Release Notes in\n.. toctree::\n   :caption: Home\n   :hidden:\n\n   Welcome <self>\n   Homepage <http://coala.io/#/home>\n   Release Notes <release_notes>\n   Code of Conduct <http://coala.io/coc>\nbut it was giving out every title in this toctree, which is not suitable so I shifted Release Notes to it's own toctree.\nAlso to commit release_notes.rst i have to exclude it from .gitignore.\nCloses: #5724\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-21T17:31:34Z","updatedAt":"2018-08-25T04:30:43Z","closedAt":null,"state":"open","user":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4"},"owner":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5727","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkyMTMwMw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-414921303","bodyText":"Don't ask for review in Pull Request description. It is useless, either ask in gitter channel or in PR comments.","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-22T06:01:57Z","lastEditedAt":null,"updatedAt":"2018-08-22T06:01:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk3ODE3OQ==","url":"https://github.com/coala/coala/pull/5727#issuecomment-414978179","bodyText":"@Man-Jain I'll keep in mind next time.","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-22T09:53:03Z","lastEditedAt":null,"updatedAt":"2018-08-22T09:53:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI0NDk4Mw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415244983","bodyText":"@aaqaishtyaq , you need to fix this PR, otherwise there is no next time.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:26:56Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:26:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI4NjE1NA==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415286154","bodyText":"@jayvdb looks good now?","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-23T04:26:50Z","lastEditedAt":null,"updatedAt":"2018-08-23T04:26:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTQyNjMxMg==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415426312","bodyText":"@jayvdb Squash both commit into one. Also changed commit message and description as suggested by @Man-Jain","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-23T14:06:37Z","lastEditedAt":null,"updatedAt":"2018-08-23T14:06:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTUwOTE0Mw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415509143","bodyText":"@aaqaishtyaq The commit body contains more than 72 characters per line. You will have to fix that.","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-23T17:49:18Z","lastEditedAt":null,"updatedAt":"2018-08-23T17:49:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYyMTQwMg==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415621402","bodyText":"@Man-Jain do not repeat what gitmate-bot is saying. I can read that.\nFYI Already fixed that, just see commit message.","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-24T01:19:41Z","lastEditedAt":null,"updatedAt":"2018-08-24T01:19:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYzNDIyNw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415634227","bodyText":"@aaqaishtyaq Yeah you did. My bad. Sorry","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-24T02:43:32Z","lastEditedAt":null,"updatedAt":"2018-08-24T02:43:32Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421399000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5728","number":5728,"title":"JavaScript.py: Add alias 'node' to language JavaScript","body":"Closes #5603\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-08-23T19:45:17Z","updatedAt":"2018-08-28T01:56:39Z","closedAt":"2018-08-28T01:56:39Z","state":"merged","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5728","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNzkwNA==","url":"https://github.com/coala/coala/pull/5728#issuecomment-416417904","bodyText":"Reack 82917c0","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T01:10:58Z","lastEditedAt":null,"updatedAt":"2018-08-28T01:10:58Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535704600000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5729","number":5729,"title":"Newcomers_Guide.rst: Mention \"Adding CI\"","body":"Mentioned Adding CI info in Step 4 of Newcomers' Guide.\nCloses #3755.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-24T07:59:32Z","updatedAt":"2018-08-31T08:36:40Z","closedAt":null,"state":"open","user":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"owner":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"assignee":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5729","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjc4ODQ3MQ==","url":"https://github.com/coala/coala/pull/5729#discussion_r212788471","bodyText":"dont use \"here\".  Describe the link using normal words that actually describe the link target.\nAlso, put See <long link> on the next line, to keep lines under 80cpl wherever possible.","diffHunk":"@@ -355,6 +355,9 @@ to be merged, create a commit and push it to your fork, using:\n \n where ``myfork`` is the name of your fork that you added at the previous step.\n \n+After making the changes, you can test the code on your forked repository by\n+adding the required CI tools. See `here <http://api.coala.io/en/latest/Developers/Adding_CI.html>`_.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-25T04:32:34Z","lastEditedAt":null,"updatedAt":"2018-08-25T04:32:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535417081000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5731","number":5731,"title":"for testing purpose","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-26T09:36:45Z","updatedAt":"2018-08-28T00:44:41Z","closedAt":"2018-08-28T00:44:27Z","state":"closed","user":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"owner":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"status/invalid","color":"000000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5731","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533790471000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5700","number":5700,"title":"Diff.py: Modify docstring of split_diff function","body":"This changes condition of the third example in the docstring to\n'If -1 is given'.\nIt prevents bear developers from using any arbitrary negative value.\nCloses #5329\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-09T04:19:47Z","updatedAt":"2018-08-09T04:54:31Z","closedAt":"2018-08-09T04:54:31Z","state":"merged","user":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"owner":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"assignee":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5700","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533965490000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5701","number":5701,"title":"deprecate_settings: Support splitting setting","body":"Adds support for splitting deprecated arg into multiple new args.\nAdds test for it as well.\nCloses #5683\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-10T13:56:42Z","updatedAt":"2018-08-11T05:31:30Z","closedAt":"2018-08-11T05:31:11Z","state":"merged","user":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4"},"owner":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5701","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxMzkxMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209413910","bodyText":"Please use [xy] instead\n\nThis needs to be improved.\nAnd we also need a test to cover the other scenario:\n\n'The value of {} and {} are conflicting. {} will be used instead.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T02:32:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:32:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDIyMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414220","bodyText":"Please use [xy] instead\n\nThis needs to be improved.\n\nNot sure if you/I understand correctly, but this is a regex, so the actual error is \"Please use x instead\" or \"Please use y instead\". The reason this needs a regex is that the order of args seems to depend on the version of the py(py3.4 has the message with y, py3.5 with x). This test, therefore, passes both.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T02:46:06Z","lastEditedAt":"2018-08-11T02:46:26Z","updatedAt":"2018-08-11T02:46:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDQxMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414410","bodyText":"And we also need a test to cover the other scenario:\n\n'The value of {} and {} are conflicting. {} will be used instead.\n\n\nAdded.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T02:58:51Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:58:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDg5MA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414890","bodyText":"Does it give two error messages?\nIf it only gives one error message, it should say \"Please use x & y instead\"\nIf it gives two error messages, sort them and check both as you did for test_splitting_with_conflict","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T03:23:14Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:23:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNTAwMg==","url":"https://github.com/coala/coala/pull/5701#discussion_r209415002","bodyText":"No, there's only a single error message. This seems to be a deliberate choice in a22ec25.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T03:29:55Z","lastEditedAt":"2018-08-11T03:32:42Z","updatedAt":"2018-08-11T03:32:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI1MTQxMA==","url":"https://github.com/coala/coala/pull/5701#issuecomment-412251410","bodyText":"reack 7122a12","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T05:07:50Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:07:50Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534131247000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5703","number":5703,"title":"appveyor.yml: Install test requirements first","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-10T13:58:37Z","updatedAt":"2018-08-13T03:34:07Z","closedAt":"2018-08-13T03:34:02Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5703","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533951712000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5704","number":5704,"title":"Newcomers_Guide.rst: Add meta-review process","body":"Closes #5702\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-10T14:00:59Z","updatedAt":"2018-08-11T01:41:52Z","closedAt":"2018-08-11T00:23:45Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5704","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534322140000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5705","number":5705,"title":".travis.yml: Disable install on unsupported","body":"Unsupported versions do not need requirements\npre-installed.  This also prevents version\nconstraints in dependencies from breaking the job.\nCloses #5636\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-14T15:07:47Z","updatedAt":"2018-08-15T08:35:40Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5705","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIwMzY3MA==","url":"https://github.com/coala/coala/pull/5705#discussion_r210203670","bodyText":"note this convention is being used in lots of coala repos now\nhttps://github.com/coala/coala-bears/blob/master/.travis.yml#L9","diffHunk":"@@ -12,15 +12,19 @@ stages:\n   - name: unsupported\n     if: branch = master AND type = push\n \n+.disable_global: &disable_global","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T08:35:40Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:35:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjkxMjIwMA==","url":"https://github.com/coala/coala/pull/5705#issuecomment-412912200","bodyText":"Example build with unsupported jobs: https://travis-ci.org/jayvdb/coala/builds/415949300","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-14T15:26:43Z","lastEditedAt":null,"updatedAt":"2018-08-14T15:26:43Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534287815000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5706","number":5706,"title":"FileFactory: Add missing magic methods","body":"__len__ and __getitem__ are missing magic methods of\ndict needed to be emulated in order to be backwards compatible.\nThese are needed by coala-quickstart green mode to work on master.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-14T15:41:42Z","updatedAt":"2018-08-14T23:03:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5706","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzA0MzM5Nw==","url":"https://github.com/coala/coala/pull/5706#issuecomment-413043397","bodyText":"I'll write tests, but waiting for @Makman2 's thoughts first.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzk0NjQ0Mg==","createdAt":"2018-08-15T09:41:20Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-14T23:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-14T23:03:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583023000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5707","number":5707,"title":"FilterHelper.py: Rewrite filters","body":"Change the filters input from list to dict\nFixes #5398\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":17,"createdAt":"2018-08-15T05:48:44Z","updatedAt":"2018-08-29T22:50:23Z","closedAt":"2018-08-28T03:10:50Z","state":"merged","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5707","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTQ1MA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199450","bodyText":"I believe you do not require *.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:16:46Z","lastEditedAt":"2018-08-15T10:43:18Z","updatedAt":"2018-08-15T10:43:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTc1OA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199758","bodyText":"key should be arg or filter_arg.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:18:02Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:18:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTk5MQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199991","bodyText":"As @jayvdb says, we should at least use tuples.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:18:59Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:18:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIwMDM5Nw==","url":"https://github.com/coala/coala/pull/5707#discussion_r210200397","bodyText":"Please explain the need for this.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:20:50Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:20:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyMzg3OQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210223879","bodyText":"To convert a list of lists into a list. --> [['C', 'java']] ==> ['C', 'java']","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:03:51Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:03:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyNzIxNQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210227215","bodyText":"The top level for filter_name, *filter_args in filters.items() already iterates over all the filters. This should be pretty straight forward and not requires this kind of looping.\ndict_filters = {}\n\nfor filter_name, *filter_args in filters:\n  filter_args = tuple(filter_args)\n  dict_filters[filter_name] = filter_args\nWhy won't this work?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:21:27Z","lastEditedAt":"2018-08-15T10:23:33Z","updatedAt":"2018-08-15T10:23:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyODkyMg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210228922","bodyText":"In the original code filter_args gave a list instead of a single variable. (['syntax'] instead of syntax)\nOn using filter_args I got a single variable and *filter_args gave a list so I sticked with the original result because I didn't know if this change could give an error.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:30:30Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:30:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMDUxOQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210230519","bodyText":"This would give the following result\nlanguage\n('c', 'java')\ncan_fix\n('s', 'y', 'n', 't', 'a', 'x')\nsection_tags\n('s', 'a', 'v', 'e')\n\ninstead of what I am aiming for\nlanguage\n['c', 'java']\ncan_fix\n['syntax']\nsection_tags\n['save']\n\nI wrote this extra code to change the filter args from\n[['c', 'java']]\n['syntax']\n['save']\n\nto\n['c', 'java']\n['syntax']\n['save']","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:38:21Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:38:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMTUxMA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210231510","bodyText":"filters is a list right?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:43:41Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:43:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjMzNg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232336","bodyText":"The original code takes filters as a list but according to my understanding the issue aims to change filters from a list to a dict as an argument. I might have misunderstood the issue.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:47:09Z","lastEditedAt":"2018-08-15T10:47:26Z","updatedAt":"2018-08-15T10:47:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjYyNQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232625","bodyText":">>> filters = [['langauge', 'c', 'java'], ['can_fix', 'syntax']]\n>>> dict_filters = {}\n>>> \n>>> for filter_name, *filter_args in filters:\n...   filter_args = tuple(filter_args)\n...   dict_filters[filter_name] = filter_args\n... \n>>> \n>>> dict_filters\n{'langauge': ('c', 'java'), 'can_fix': ('syntax',)}\n>>> \nWhat am I doing wrong here?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:48:34Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:48:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjk1Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232956","bodyText":"I changed filters from a list into a dict.\nThe new filters is\n{'language': ['c', 'java'], 'can_fix': 'syntax', 'section_tags': 'save'}","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:50:24Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:50:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzNTc5Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210235792","bodyText":"Ok, so my understanding is you have already performed partial conversion to a dict based filter structure. A few remarks here:\n\nUse OrderedDicts, filtering order is important here.\nUse tuples for holding args, not lists.\nDo not partially convert the filters, you should rather have all the filter args as tuples. {'language': ('c', 'java'), 'can_fix': ('syntax',), 'section_tags': ('save',)} otherwise it will force all the other unrelated methods to handle this case.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T11:03:41Z","lastEditedAt":"2018-08-15T11:04:01Z","updatedAt":"2018-08-15T11:04:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzNjE5Nw==","url":"https://github.com/coala/coala/pull/5707#discussion_r210236197","bodyText":"I would suggest doing this step wise to understand it better. Make everything work with tuple right now and then introduce dicts.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T11:05:47Z","lastEditedAt":null,"updatedAt":"2018-08-15T11:05:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTEwNDQ5Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r211104492","bodyText":"this lines aren't the same with 135:140 from FilterHelper.py ? Maybe you can write a function inside FilterHelper with this lines and call it at the start of apply_filters instead of here, i don't think is the proper place. Also you can use that function instead of 135:140 to avoid duplicate code.","diffHunk":"@@ -70,6 +70,11 @@ def main(debug=False):\n                 # Each iteration of the following loop applies\n                 # filters one by one provided as arguments\n                 try:\n+                    items = {}","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2018-08-19T14:16:56Z","lastEditedAt":null,"updatedAt":"2018-08-19T14:16:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMjk0Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r211622942","bodyText":"Why new line here?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for filter_arg in filter_args:\n+            if isinstance(filter_arg, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:18:05Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:18:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMzY3MQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r211623671","bodyText":"fil -> filter?","diffHunk":"@@ -123,10 +126,20 @@ def collect_filters(args, arg_list=None, arg_parser=None):\n         Instance of ArgParser that is used to parse arg list.\n     :return:\n         List of filters in standard filter format, i.e\n-        ``[['filter_name', 'arg1', 'arg2']]``.\n+        ``{'filter_name': ['arg1', 'arg2']}``.\n     \"\"\"\n     if args is None:\n         arg_parser = default_arg_parser() if arg_parser is None else arg_parser\n         args = arg_parser.parse_args(arg_list)\n \n-    return getattr(args, 'filter_by', None) or []\n+    filters = getattr(args, 'filter_by', None) or []\n+    filters = list_to_dict(filters)\n+    return filters\n+\n+\n+def list_to_dict(filters):\n+    items = {}\n+    for fil in filters:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:19:59Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:19:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyNDY2OA==","url":"https://github.com/coala/coala/pull/5707#discussion_r211624668","bodyText":"Ideally, the doc string here should also be changed.","diffHunk":"@@ -60,8 +60,8 @@ def apply_filters(filters, bears=None, sections=None):\n \n     :param filters:\n         List of args based on ``bears`` has to be filtered. For example:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:22:30Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:22:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYzMjI2Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r211632266","bodyText":"What should be changed?","diffHunk":"@@ -60,8 +60,8 @@ def apply_filters(filters, bears=None, sections=None):\n \n     :param filters:\n         List of args based on ``bears`` has to be filtered. For example:","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-21T14:41:15Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:41:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYzMjI4Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r211632286","bodyText":"Please name this appropriately, list_to_dict does not explain its purpose.","diffHunk":"@@ -123,10 +126,20 @@ def collect_filters(args, arg_list=None, arg_parser=None):\n         Instance of ArgParser that is used to parse arg list.\n     :return:\n         List of filters in standard filter format, i.e\n-        ``[['filter_name', 'arg1', 'arg2']]``.\n+        ``{'filter_name': ['arg1', 'arg2']}``.\n     \"\"\"\n     if args is None:\n         arg_parser = default_arg_parser() if arg_parser is None else arg_parser\n         args = arg_parser.parse_args(arg_list)\n \n-    return getattr(args, 'filter_by', None) or []\n+    filters = getattr(args, 'filter_by', None) or []\n+    filters = list_to_dict(filters)\n+    return filters\n+\n+\n+def list_to_dict(filters):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-21T14:41:17Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:41:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzEzMDU0MQ==","url":"https://github.com/coala/coala/pull/5707#issuecomment-413130541","bodyText":"https://github.com/coala/coala/blob/master/coalib/coala.py#L69 might require some patch work too.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:31:47Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:31:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzEzMTE2OA==","url":"https://github.com/coala/coala/pull/5707#issuecomment-413131168","bodyText":"Would you consider doing this in stages? First let us transition this into tuple based structures and then worry about introducing dicts (OrderedDicts) or class based filters.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzk1OTc2NQ==","createdAt":"2018-08-15T14:40:02Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-15T08:34:15Z","lastEditedAt":"2018-08-15T08:34:35Z","updatedAt":"2018-08-15T08:34:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA3NTE0Mw==","url":"https://github.com/coala/coala/pull/5707#issuecomment-416075143","bodyText":"The test failing is tests/coalaTest.py::coalaTest::test_coala_with_color, you can ignore that, it happens sometimes.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-26T21:52:36Z","lastEditedAt":null,"updatedAt":"2018-08-26T21:52:36Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534320371000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5709","number":5709,"title":"Processing.py: Fix file dict logging","body":"Fix logging message related to file dict collection.\nFixes #5708\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-15T07:27:18Z","updatedAt":"2018-08-15T08:06:11Z","closedAt":"2018-08-15T08:06:11Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"assignee":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5709","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534357007000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5711","number":5711,"title":"docs: Update Newcomers_Guide.rst","body":"The update makes all the blocks even colored in Newcomers_Guide\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-15T14:39:41Z","updatedAt":"2018-08-15T18:16:47Z","closedAt":"2018-08-15T18:16:47Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5711","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyNTA1NQ==","url":"https://github.com/coala/coala/pull/5711#issuecomment-413225055","bodyText":"@imnotkk , the bot says there is a problem with your commit message, and it is reporting that rstcheck doesnt like one of the lines.\nCould you investigate a little, and if you need help come onto https://coala.io/chat .  Thanks","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T14:59:28Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:59:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyNzY3Mg==","url":"https://github.com/coala/coala/pull/5711#issuecomment-413227672","bodyText":"I suggest you come onto https://coala.io/chat and ask for help ; you've made a number of mistakes , and it is easier to fix them with someone helping you to avoid making a mess in public .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T15:07:24Z","lastEditedAt":null,"updatedAt":"2018-08-15T15:07:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583291000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5712","number":5712,"title":"Definition","body":"Checklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":8,"createdAt":"2018-08-15T15:57:57Z","updatedAt":"2018-08-29T22:54:51Z","closedAt":null,"state":"open","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5712","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTExNzc3MA==","url":"https://github.com/coala/coala/pull/5712#discussion_r211117770","bodyText":"Please check all keywords.\nE.g. https://unix.stackexchange.com/questions/86270/how-do-you-use-the-command-coproc-in-various-shells","diffHunk":"@@ -0,0 +1,16 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class KornShell:\n+    extensions = '.ksh'\n+    comment_delimiters = '#',\n+    multiline_comment_delimiters = {\": '\": \"'\"}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '`': '`'}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'[': ']', '{': '}'}\n+    keywords = [\n+        'if', 'then', 'else', 'elif', 'fi', 'case', 'coproc', 'esac',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T22:40:44Z","lastEditedAt":null,"updatedAt":"2018-08-19T22:40:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTIxMzgwMw==","url":"https://github.com/coala/coala/pull/5712#discussion_r211213803","bodyText":"Please remove this file . And read your PR diff after uploading it to find such obvious mistakes before wasting reviewer time.","diffHunk":"@@ -0,0 +1,18 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T10:27:25Z","lastEditedAt":null,"updatedAt":"2018-08-20T10:27:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMTY1Ng==","url":"https://github.com/coala/coala/pull/5712#discussion_r211621656","bodyText":"This should be a tuple.","diffHunk":"@@ -0,0 +1,16 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Bash:\n+    extensions = '.bash'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-21T14:14:48Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:14:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTkyNzIwNQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r211927205","bodyText":"Your commit message says you are only adding language definitions, then why is this file here?","diffHunk":"@@ -0,0 +1,206 @@\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+import logging\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class ConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = without_section\n+    [foo]\n+    to be ignored","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-08-22T11:59:51Z","lastEditedAt":null,"updatedAt":"2018-08-22T11:59:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTkyODc2NQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r211928765","bodyText":"I don't know how this got generated.Will remove this at once.","diffHunk":"@@ -0,0 +1,206 @@\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+import logging\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class ConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = without_section\n+    [foo]\n+    to be ignored","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T12:05:43Z","lastEditedAt":null,"updatedAt":"2018-08-22T12:05:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE1ODM4OQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r212158389","bodyText":"Wow -- this review comment was pinned on a file called something.orig iirc , and GitHub has now pinned it to ZShell.py.  Very strange.","diffHunk":"@@ -0,0 +1,18 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:23:36Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:23:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE1ODUwMA==","url":"https://github.com/coala/coala/pull/5712#discussion_r212158500","bodyText":"this is not in alpha order.","diffHunk":"@@ -61,6 +63,7 @@\n     'Vala',\n     'VisualBasic',\n     'm4',\n+    'ZShell',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:24:27Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:24:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1NzY1Mw==","url":"https://github.com/coala/coala/pull/5712#discussion_r213857653","bodyText":"why this change removing JSON?  How is this relevant to your change?\nAnd please never rebase using a merge, like you did in 8a71a76 .  It is ugly.  Now this PR has three commits.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T22:44:47Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:44:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1ODc1OQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r213858759","bodyText":"Because I was getting an assertion error in\nCollectorsTest.py : test_get_all_languages_without_unknown\nwhich said that 'JSON' is present in 'set(LANGUAGE_NAMES)' but not in 'languages '.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-29T22:51:05Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:51:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1OTQyNQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r213859425","bodyText":"Also,you already have 'JavaScript Object Notation' as a qualname .So I don't think there is any need of having  JSON in TestUtilities.py when you already have 'JavaScript Object Notation' sitting there.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-29T22:54:51Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:54:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkzMzc2OA==","url":"https://github.com/coala/coala/pull/5712#issuecomment-414933768","bodyText":"@li-boxuan Can you review my changes once?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T07:07:53Z","lastEditedAt":null,"updatedAt":"2018-08-22T07:07:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk2MjYzMg==","url":"https://github.com/coala/coala/pull/5712#issuecomment-414962632","bodyText":"@jayvdb I guess I have made the necessary changes.Please review.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T08:57:31Z","lastEditedAt":null,"updatedAt":"2018-08-22T08:57:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk4MzYzMg==","url":"https://github.com/coala/coala/pull/5712#issuecomment-415983632","bodyText":"Please refer to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html for writing commit messages.","diffHunk":null,"author":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4","name":"Amandeep Srivastava"},"createdAt":"2018-08-25T17:12:26Z","lastEditedAt":null,"updatedAt":"2018-08-25T17:12:26Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534356437000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5713","number":5713,"title":"docs: Updated Newcomers_Guide","body":"Updated the Newcomers_Guide.rst so that all Colored boxes are Even Colored\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-15T17:54:45Z","updatedAt":"2018-08-15T18:07:17Z","closedAt":"2018-08-15T18:03:58Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5713","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534356880000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5714","number":5714,"title":"docs: Fix Even Colored Blocks","body":"Updated to make every block Even Colored.\nCloses: #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:10:50Z","updatedAt":"2018-08-15T18:14:40Z","closedAt":"2018-08-15T18:13:10Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5714","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534357238000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5715","number":5715,"title":"docs: Fix Colored Blocks","body":"Updated to make every block Even Colored.\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:19:11Z","updatedAt":"2018-08-15T18:20:38Z","closedAt":"2018-08-15T18:20:26Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5715","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534395387000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5716","number":5716,"title":" docs: Fix Colored Blocks ","body":"Updated to fix even block color.\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T18:26:04Z","updatedAt":"2018-08-16T04:56:27Z","closedAt":"2018-08-15T18:56:02Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5716","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534359760000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5717","number":5717,"title":"Newcomer_Guide.rst: Fix Even Colored Blocks","body":"Fixed to make all blocks even colored.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:44:33Z","updatedAt":"2018-08-15T19:02:40Z","closedAt":"2018-08-15T19:02:40Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5717","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534365479000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5718","number":5718,"title":"docs: Fix Colored Blocks","body":"Fixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-15T19:05:33Z","updatedAt":"2018-08-15T20:37:59Z","closedAt":"2018-08-15T20:37:59Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5718","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzMwMzU0MQ==","url":"https://github.com/coala/coala/pull/5718#issuecomment-413303541","bodyText":"@jayvdb I have updated the code according to issue #5333 but here it says \"Unexpected possible title overline or transition.\".\nIs there any way you can help?","diffHunk":null,"author":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4","name":"Kranthi Kiran"},"createdAt":"2018-08-15T19:10:59Z","lastEditedAt":null,"updatedAt":"2018-08-15T19:10:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534985252000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5661","number":5661,"title":"changes ArgParser to ArgumentParser in doc strings","body":"Fixes #4188\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!\nFor issue #4188 . I had a earlier PR #5649 but don't know how to change commit messages so closing that.","comments":3,"createdAt":"2018-07-23T06:27:31Z","updatedAt":"2018-08-23T00:47:32Z","closedAt":null,"state":"open","user":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"owner":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5661","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1ODkwNg==","url":"https://github.com/coala/coala/pull/5661#discussion_r205958906","bodyText":"bad indentation","diffHunk":"@@ -469,8 +469,8 @@ def gather_configuration(acquire_settings,\n     :param log_printer:      The log printer to use for logging. The log level\n                              will be adjusted to the one given by the section.\n     :param arg_list:         CLI args to use\n-    :param arg_parser:       Instance of ArgParser that is used to parse\n-                             none-setting arguments.\n+    :param arg_parser:       Instance of argparse.ArgumentParser that is used\n+                            to parse none-setting arguments.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T02:28:49Z","lastEditedAt":null,"updatedAt":"2018-07-29T02:28:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYzMDY5MA==","url":"https://github.com/coala/coala/pull/5661#issuecomment-408630690","bodyText":"@jayvdb done!","diffHunk":null,"author":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4","name":"Darshan Baid"},"createdAt":"2018-07-28T19:43:27Z","lastEditedAt":null,"updatedAt":"2018-07-28T19:43:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY4OTM2Mg==","url":"https://github.com/coala/coala/pull/5661#issuecomment-408689362","bodyText":"Sorry missed that! Now done @jayvdb","diffHunk":null,"author":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4","name":"Darshan Baid"},"createdAt":"2018-07-29T16:33:07Z","lastEditedAt":null,"updatedAt":"2018-07-29T16:33:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTQzMzg1OA==","url":"https://github.com/coala/coala/pull/5661#issuecomment-409433858","bodyText":"#5661 (review)\nnot done","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T03:01:20Z","lastEditedAt":null,"updatedAt":"2018-08-01T03:01:20Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533545769000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5666","number":5666,"title":"Profile_Bears: Add Profiling Interface doc","body":"Related to #565","comments":6,"createdAt":"2018-07-25T16:49:24Z","updatedAt":"2018-08-06T08:56:09Z","closedAt":"2018-08-06T08:55:41Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5666","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjE1Ng==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382156","bodyText":"shouldn't be there another newline here? Not sure if RST requires that","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzAyNDkzNQ==","createdAt":"2018-07-26T14:00:42Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-26T09:05:43Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:05:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjI0OQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382249","bodyText":"provides ;) --> https://www.gymglish.com/en/english-grammar/the-s-in-the-third-person-singular-form :D","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:06:05Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:06:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjI4Ng==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382286","bodyText":"an overview","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:06:10Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:06:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjU0NQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382545","bodyText":"I think plural sounds better:\nThe Profiling Interfaces provides abilities to Pprofile Bears code","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:06:51Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:06:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MzY4OA==","url":"https://github.com/coala/coala/pull/5666#discussion_r205383688","bodyText":"You should omit the part \"consumes most the bears time\", that's an assumption that is usually satisfied for larger setups.\nAlso you actually describe the real reason below :)\n-->\nThe profiler will start by profiling the run() method of bears because it\nconsumes most of the bears time. So, this is the part where bear writers will spend time on ...","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:10:08Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:10:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4Mzc1Mg==","url":"https://github.com/coala/coala/pull/5666#discussion_r205383752","bodyText":"writers","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writer will have the ability to directly dump the raw profile output","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:10:22Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:10:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4NDE1Mg==","url":"https://github.com/coala/coala/pull/5666#discussion_r205384152","bodyText":"Since this is an \"unspecified quantity\" of people you are referring two, you have to choices in fact:\n\nA bear writer\nBear writers","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writer will have the ability to directly dump the raw profile output","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:11:32Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:11:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQ2Nzg4NA==","url":"https://github.com/coala/coala/pull/5666#discussion_r205467884","bodyText":"Both will work fine IMO.","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-26T14:00:26Z","lastEditedAt":null,"updatedAt":"2018-07-26T14:00:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3NjU4Mw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206076583","bodyText":"an abilities","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T09:59:16Z","lastEditedAt":null,"updatedAt":"2018-07-30T09:59:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3Njg4Mg==","url":"https://github.com/coala/coala/pull/5666#discussion_r206076882","bodyText":"I guess it won't work if you enablelel the profiler, but it will if you are Enabling it ;P","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T10:00:21Z","lastEditedAt":null,"updatedAt":"2018-07-30T10:00:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3Njk0OQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206076949","bodyText":"at a the same time","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T10:00:34Z","lastEditedAt":null,"updatedAt":"2018-07-30T10:00:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NTU3MQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206095571","bodyText":"into an error.","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:13:52Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:13:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NTY3NA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206095674","bodyText":"(binary output)\n\nIs that relevant?","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:14:20Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:14:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NTgzNA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206095834","bodyText":"Typo ;)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:15:15Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:15:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NjMxNA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206096314","bodyText":"I guess all this belongs into the Usage section. It should be maybe stripped as well since you describe already how to enable the profiler below. But the FileExistsError is important, that could go directly below the Usage paragraph, describing how paths are treated.","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:17:19Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:17:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NjQ4Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206096487","bodyText":"should be enclosed in backticks ;)\n``{section.name}...prof``","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:18:00Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:18:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwMzYzNQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206103635","bodyText":"i.e. ?\nThose sentences do not connect very well :)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:48:59Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:48:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwMzc5Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206103797","bodyText":"to dumped profiled files to a specified directory: (<-- note the colon)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:49:37Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:49:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwMzk0Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206103947","bodyText":"choose one, dirname or dirpath, as well as write it completely lower-case to match the same style as <filename>","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:50:10Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:50:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNDA3Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206104077","bodyText":"I would add \"as well\":\n\nUsers can specify to profile bears using a .coafile as well:","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile``:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:50:42Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:50:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNDEyNA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206104124","bodyText":"Same here, sentences do not connect","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile``:\n+\n+To dump profiled files in current working directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:50:52Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:50:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNDE5NQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206104195","bodyText":"dumped profiled ...: (<-- note the colon again)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile``:\n+\n+To dump profiled files in current working directory.\n+\n+::\n+\n+    [all]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    profile = True\n+\n+Or to dumped profiled files to a specified directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:51:11Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:51:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjMxMTQxNw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206311417","bodyText":"If the specified directory does not exists it will be created create one. If the specified path points to an already existing file a FileExistsError is thrown.","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled\n+files will be saved to current working directory. If specified directory does\n+not exists it will create one and if path specified is already a file path then","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T20:32:35Z","lastEditedAt":null,"updatedAt":"2018-07-30T20:32:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjMxMTU4MA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206311580","bodyText":"dirname or dirpath, choose wisely :P","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled\n+files will be saved to current working directory. If specified directory does\n+not exists it will create one and if path specified is already a file path then\n+it will throw ``FileExistsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format ``{section.name}_{bear.name}.prof``.\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument.\n+\n+- To dump profile files in current working directory:\n+\n+  .. code:: shell\n+\n+      $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+- To dump profile files to a specified directory:\n+\n+  .. code:: shell\n+\n+      $coala -b PEP8Bear,MypyBear -f <filename> --profile <dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile`` as well.\n+\n+- To dump profile files in current working directory:\n+\n+  ::\n+\n+      [all]\n+      bears = PEP8Bear,MypyBear\n+      files = <filename>\n+      profile = True\n+\n+- To dump profile files to a specified directory:\n+\n+  ::\n+\n+      [all]\n+      bears = PEP8Bear,MypyBear\n+      files = <filename>\n+      profile = DirName/Dirpath","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUyNA==","createdAt":"2018-08-04T08:05:39Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-30T20:33:07Z","lastEditedAt":null,"updatedAt":"2018-07-30T20:33:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjY1NTgwOQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206655809","bodyText":"When reading this sounds a bit confusing, it reads like it takes either \"an additional parameter\", or either a \"directory name\" or a \"directory path\". Would recommend following:\n\n... accepts an additional parameter: a directory path where profiled files will be ...","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI1OTI0Mw==","createdAt":"2018-07-31T21:56:51Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-31T19:32:40Z","lastEditedAt":null,"updatedAt":"2018-07-31T19:32:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjY1NTk5OQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206655999","bodyText":"question is what that means to the regular user, but let's put that aside for now, I'm not sure how coala should handle such \"user-exceptions\" properly (which are intended to generate an error-log and exit).","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled\n+files will be saved to current working directory. If the specified directory\n+does not exist it will be created. If the specified path points to an already\n+existing file a ``FileExistsError`` is thrown.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI1OTIzNw==","createdAt":"2018-07-31T21:56:46Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-31T19:33:20Z","lastEditedAt":null,"updatedAt":"2018-07-31T19:33:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc5ODU3OA==","url":"https://github.com/coala/coala/pull/5666#discussion_r207798578","bodyText":": on line above is incompatible with the , here.\nIf you use a colon, you are allowed one phrase after that.  No more.\nThen start a new sentence.","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter: a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T07:41:51Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:41:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc5ODc5MA==","url":"https://github.com/coala/coala/pull/5666#discussion_r207798790","bodyText":"Profiled files will get overwritten, if specified directory\n\nI thought this was will cause an error?\nIf I am correct, you obviously have not re-checked this document and it shouldnt be up for review.","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter: a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be\n+saved to current working directory. If the specified directory does not exist\n+it will be created. If the specified path points to an already existing file\n+a error is raised. Profiled files will get overwritten, if specified directory","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T07:42:48Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:42:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwMDA0NQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r207800045","bodyText":"FileExistsError will be thrown and it raise SystemExit when user provide a filepath in --profile but if user provide a directory path and that directory already have profiled files then in the next run of coala file with the same name gets overwritten","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter: a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be\n+saved to current working directory. If the specified directory does not exist\n+it will be created. If the specified path points to an already existing file\n+a error is raised. Profiled files will get overwritten, if specified directory","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4NDc1MA==","createdAt":"2018-08-06T07:54:41Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T07:48:07Z","lastEditedAt":"2018-08-06T07:48:40Z","updatedAt":"2018-08-06T07:48:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwNTM1MQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r207805351","bodyText":"ill avoid the next grammar lesson.\nAfter dumped add a full stop.  Add two carraige returns.\nShort simple intros are what people will read.  If the short intro is stuffed into a large paragraph, they will try to avoid it.\nThen explain the profile arg options in a new paragraph.  And this usage section should not mention \"True\" , the title case Python constant, as there are multiple ways to enable profiling, and many do not require the Python keyword True.  Dumb it down.  Use prose.","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T08:08:57Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:08:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYxNjY3NQ==","url":"https://github.com/coala/coala/pull/5666#issuecomment-410616675","bodyText":"As #565 is still open, I guess this could be Closes ... ?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4NTE0Ng==","createdAt":"2018-08-06T08:03:06Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-06T07:40:01Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:40:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533249511000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5677","number":5677,"title":"Bear: Remove debugger from init","body":"Add initial Fix the API breakage problem\nbecause of debugger flag in bear base\nclass.\nRelated to #5676","comments":6,"createdAt":"2018-07-28T10:45:43Z","updatedAt":"2018-08-02T22:38:31Z","closedAt":"2018-08-01T03:54:15Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/S","color":"B1CF0A"},{"name":"status/ci-approved","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5677","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0MDM3Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205940373","bodyText":"these changes are already reflected in Profiler interface PR once these changes gets merge there I will rebase (the purpose of reflecting these changes here is preventing the coverage and test failure problem)","diffHunk":"@@ -566,8 +567,8 @@ def test_yield_ignore_ranges(self):\n     def test_loaded_bears_with_error_result(self):\n         class BearWithMissingPrerequisites(Bear):\n \n-            def __init__(self, section, queue, timeout=0.1, debugger=False):\n-                Bear.__init__(self, section, queue, timeout, debugger)\n+            def __init__(self, *args, **kwargs):\n+                Bear.__init__(self, *args, **kwargs)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T10:48:47Z","lastEditedAt":null,"updatedAt":"2018-07-28T10:48:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0NzIxMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205947211","bodyText":"put this in a helper function.  You will use it again for profile","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T16:20:55Z","lastEditedAt":null,"updatedAt":"2018-07-28T16:20:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0NzI1Mg==","url":"https://github.com/coala/coala/pull/5677#discussion_r205947252","bodyText":"why changing to GlobalBear ?","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T16:23:01Z","lastEditedAt":null,"updatedAt":"2018-07-28T16:23:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1NDEyMA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205954120","bodyText":"I just made test more clear check the line 627 (just like a enhancement of test), it will also run fine without changing it to GlobalBear","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T21:13:33Z","lastEditedAt":null,"updatedAt":"2018-07-28T21:13:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1NDE3MA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205954170","bodyText":"@jayvdb I didn't get, you want me to make a different private method which do the same work?\n\nYou will use it again for profile\n\nI don't think so as debug_bears accept different argument then profile, If I try to mix both it will create a extra code","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T21:15:51Z","lastEditedAt":null,"updatedAt":"2018-07-28T21:15:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDQzMw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205960433","bodyText":"Also IMO creating a helper will not help as both debug_bears and profile take different argument and accordingly logic change in both case.","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T04:29:24Z","lastEditedAt":null,"updatedAt":"2018-07-29T04:29:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDc2MA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205960760","bodyText":"the helper would take an argument obviously for the setting name.\nIf necessary, create two helpers.\nAt the moment these are gibberish logic which I am assuming is similar because it isnt python code which is readable and intuitive.","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEyNjQ5OA==","createdAt":"2018-07-29T05:05:47Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-29T04:57:06Z","lastEditedAt":"2018-07-29T04:57:24Z","updatedAt":"2018-07-29T04:57:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDk1NQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205960955","bodyText":"If the test runs fine without changing it to GlobalBear, please do not change the tests.\nCreate an issue and explain why you think it should be changed.\nAnd it would probably be a newcomer issue.","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T05:10:11Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:10:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MjIwMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205962201","bodyText":"Sorry for the confusion please nvm the above comment, that change was meaningfull actually GlobalBear gets one more arg file_dict compare to other Bears. so I changed that to GlobalBear here, these changes will be needed when I put *args and **kwargs here","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T06:19:14Z","lastEditedAt":"2018-07-29T06:22:50Z","updatedAt":"2018-07-29T06:22:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MjMyMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205962321","bodyText":"Nvm this PR will get merge first.","diffHunk":"@@ -566,8 +567,8 @@ def test_yield_ignore_ranges(self):\n     def test_loaded_bears_with_error_result(self):\n         class BearWithMissingPrerequisites(Bear):\n \n-            def __init__(self, section, queue, timeout=0.1, debugger=False):\n-                Bear.__init__(self, section, queue, timeout, debugger)\n+            def __init__(self, *args, **kwargs):\n+                Bear.__init__(self, *args, **kwargs)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T06:25:39Z","lastEditedAt":null,"updatedAt":"2018-07-29T06:25:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzA1NA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967054","bodyText":"what does this do?\nthe function name should describe it.\nthe docstring should explain it.","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEyOTAxMg==","createdAt":"2018-07-29T09:53:42Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-29T09:35:34Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:35:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzA2Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967063","bodyText":"help the reader follow the logic.  one step at a time.\nif 'debug_bears' not in bear.section:\n    return False\nif ...:\n    ....","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T09:35:55Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:35:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzE0OA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967148","bodyText":"you do not need elif if the previous branch did a return.\navoiding the elif means you can also do some computation and use variables before the next if, instead of putting so much unreadable stuff into an if clause like you have done here","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T09:38:31Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:38:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzE1NA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967154","bodyText":"bool(bear.section['debug_bears'])","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T09:39:11Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:39:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzUxMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967511","bodyText":"Please check this I am following the previous instructions also for the value like na or non etc this will raise ValueError","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T09:55:44Z","lastEditedAt":"2018-07-29T09:56:06Z","updatedAt":"2018-07-29T09:56:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2Nzc1Mg==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967752","bodyText":"Please test what I suggested before saying it will raise an exception .\nAnd see StringConverter.__bool__ for why it should work.\nIf it doesnt work, it is because there is something else wrong with the debug_bears Setting.","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T10:06:37Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:06:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2Nzg4Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967883","bodyText":"Check this https://bpaste.net/show/1faff582d756","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T10:10:31Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:10:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2Nzk2Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967963","bodyText":">>> section.append(Setting('abc', 'nop'))\n>>> bool(section['abc'])\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.6/dist-packages/coala_utils/string_processing/StringConverter.py\", line 46, in __bool__\n    raise ValueError\nValueError\n>>>","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T10:12:51Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:12:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2ODQ5OA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205968498","bodyText":"Actually, I've seen that this is kinda buggy because we don't use coala's FALSE_STRINGS, but coala_util's FALSE_STRINGS, which isn't so comprehensive than coala's list. However, @jayvdb is right to use bool on Section, it works in principle and that's what our section system uses.","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-29T10:33:13Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:33:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2ODU4Nw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205968587","bodyText":"you can return the result of bear.name.lower() in ... directly instead of using an if, it's like if True: return True else: return False now","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2NDkxNw==","createdAt":"2018-07-30T13:14:31Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yNzE2NDkyMQ==","createdAt":"2018-07-30T13:14:35Z","content":"LAUGH","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-29T10:35:23Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:35:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyNzg1NA==","url":"https://github.com/coala/coala/pull/5677#discussion_r206127854","bodyText":"@Makman2 , so we need to enhance coala_util's FALSE_STRINGS ?  better create an issue quick as those libraries need to get released soon","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T13:15:21Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:15:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyOTQ1NQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r206129455","bodyText":"Can you review this code 😅\nI will create a issue after getting green from Makman","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T13:20:30Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:20:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyOTYyNg==","url":"https://github.com/coala/coala/pull/5677#discussion_r206129626","bodyText":"If possible I will solve that but later (sorry GSoC pressure). 👍","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T13:21:02Z","lastEditedAt":"2018-07-30T13:21:34Z","updatedAt":"2018-07-30T13:21:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyODI3NQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r206128275","bodyText":"this is not a \"setter\".  It doesnt set anything.\nIt determines the value of the debugger setting.","diffHunk":"@@ -20,10 +20,29 @@\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_flag_setter(bear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T13:16:45Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:16:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEzNTM0OQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r206135349","bodyText":"what is typed_list(bool)(bear.section['debug_bears'])[0] ?\nthat is buggy as.  I know what you are trying to do.  You want to hide the ValueError exceptions which could happen.  But it only hides some of them, because that is not what typed_list(bool) is designed to do.\nYou need to let go of that horrible or you have in the return.  It is forcing you to write more complicated and buggy code.\nbool(bear.section['debug_bears']) can raise exceptions.  So, you need to catch them.  We even have a MR related to it at https://gitlab.com/coala/coala-utils/merge_requests/34/diffs .\nThen after you have finished checking if it is a bool, then do another check if it is a list of bear names.\nAnd do not use typed_list(str).  bear.section['debug_bears'] is already the appropriate type.  Read the documentation about that type for how to use it correctly.","diffHunk":"@@ -20,10 +20,29 @@\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_flag_setter(bear):\n+    \"\"\"\n+    Set the value of `debugger` flag.\n+\n+    :param bear: Bear object\n+    :return:     True if ``debug_bears`` is ``True`` or if bear name specified\n+                 in ``debug_bears`` setting matched with the name of parameter\n+                 bear.\n+    \"\"\"\n+    if bear is None:\n+        return False\n+    if 'debug_bears' not in bear.section:\n+        return False\n+    return (bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or\n+            typed_list(bool)(bear.section['debug_bears'])[0])","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T13:39:03Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:39:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEzNzg5Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r206137893","bodyText":"I didn't get this part\n\nAnd do not use typed_list(str). bear.section['debug_bears'] is already the appropriate type\n\nCan you tell me how am I going to make this --> 'ABear, Bbear' to a list without using typed_list?","diffHunk":"@@ -20,10 +20,29 @@\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_flag_setter(bear):\n+    \"\"\"\n+    Set the value of `debugger` flag.\n+\n+    :param bear: Bear object\n+    :return:     True if ``debug_bears`` is ``True`` or if bear name specified\n+                 in ``debug_bears`` setting matched with the name of parameter\n+                 bear.\n+    \"\"\"\n+    if bear is None:\n+        return False\n+    if 'debug_bears' not in bear.section:\n+        return False\n+    return (bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or\n+            typed_list(bool)(bear.section['debug_bears'])[0])","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T13:46:13Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:46:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODU5ODgzMg==","url":"https://github.com/coala/coala/pull/5677#issuecomment-408598832","bodyText":"[WIP]","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T10:45:54Z","lastEditedAt":null,"updatedAt":"2018-07-28T10:45:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODg1MjExMg==","url":"https://github.com/coala/coala/pull/5677#issuecomment-408852112","bodyText":"@Makman2 @jayvdb  can you take a look, please, I want this to be merge today so that I can update the Profiler Interface code asap.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T12:51:02Z","lastEditedAt":"2018-07-30T12:53:23Z","updatedAt":"2018-07-30T12:53:23Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533174716000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5678","number":5678,"title":"done","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-07-28T12:27:19Z","updatedAt":"2018-08-02T01:51:56Z","closedAt":null,"state":"open","user":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"owner":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"labels":[{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5678","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwOTcyMjUzOQ==","url":"https://github.com/coala/coala/pull/5678#issuecomment-409722539","bodyText":"Which issue is this fixing?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T21:04:33Z","lastEditedAt":null,"updatedAt":"2018-08-01T21:04:33Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533830589000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5680","number":5680,"title":" setup.cfg: Allow non-coverage of sys.exit(main())","body":"Related to #4166\nSplit off from #4169\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-07-29T03:06:48Z","updatedAt":"2018-08-09T16:03:09Z","closedAt":"2018-08-09T16:03:09Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5680","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwODkyMg==","url":"https://github.com/coala/coala/pull/5680#discussion_r207708922","bodyText":"We can have a alternate way, check this out https://medium.com/@george.shuklin/how-to-test-if-name-main-1928367290cb","diffHunk":"@@ -67,3 +67,4 @@ exclude_lines =\n   pragma ${PLATFORM_SYSTEM}: no cover\n   pragma ${OS_NAME}: no cover\n   pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover\n+  sys.exit\\(main\\(\\)\\)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1MjEwNg==","createdAt":"2018-08-04T13:52:13Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-04T13:39:36Z","lastEditedAt":null,"updatedAt":"2018-08-04T13:39:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk2ODExOQ==","url":"https://github.com/coala/coala/pull/5680#discussion_r208968119","bodyText":"I've explained on https://gitlab.com/coala/mobans/issues/84 why I think that is unnecessary.\nIf necessary, we have a check script which verifies that all entry points defined in the yaml have exactly these two lines at end of the file.  That prevents these sequences from being different in multiple entry points, and also ensures they are identical on all repos with entry points.","diffHunk":"@@ -67,3 +67,4 @@ exclude_lines =\n   pragma ${PLATFORM_SYSTEM}: no cover\n   pragma ${OS_NAME}: no cover\n   pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover\n+  sys.exit\\(main\\(\\)\\)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzcwMTAxMw==","createdAt":"2018-08-09T15:33:48Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T15:10:46Z","lastEditedAt":null,"updatedAt":"2018-08-09T15:10:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5NDc4OQ==","url":"https://github.com/coala/coala/pull/5680#issuecomment-410494789","bodyText":"Also outdated - needs to use the new moban variables.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T04:23:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:23:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533476599000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5682","number":5682,"title":"BearRunning: Test exceptions","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-31T00:17:59Z","updatedAt":"2018-08-05T13:43:19Z","closedAt":"2018-08-05T13:43:19Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5682","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzM3Mg==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727372","bodyText":"Didn't get why do you calling run here one more time?\nSame in test_bear_impossible","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        run(self.file_name_queue,","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-05T07:05:43Z","lastEditedAt":"2018-08-05T07:06:00Z","updatedAt":"2018-08-05T07:06:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzUwMg==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727502","bodyText":"Nvm above ^^","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        run(self.file_name_queue,","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-05T07:10:26Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:10:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzU0NQ==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727545","bodyText":"code repetition here, no need to reassign the same value","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2MzUzMQ==","createdAt":"2018-08-05T09:24:11Z","content":"THUMBS_DOWN","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-05T07:12:47Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:12:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzU0Ng==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727546","bodyText":"same ^^","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2MzUzNA==","createdAt":"2018-08-05T09:24:18Z","content":"THUMBS_DOWN","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-05T07:13:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:13:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzczMDM0Ng==","url":"https://github.com/coala/coala/pull/5682#discussion_r207730346","bodyText":"The queue is empty after the previous coala run. Needs new items in the queue otherwise it does nothing in the next lines.","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T09:23:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:23:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzczMDM2OA==","url":"https://github.com/coala/coala/pull/5682#discussion_r207730368","bodyText":"Oh yes 👍","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-05T09:24:00Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:24:00Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533834643000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5684","number":5684,"title":"__main__.py: Invokes coala as module","body":"__main__.py: Invokes coala as module\nThis allow coala to be invoked as a module by\nusing the -m tag.\nCloses #5667\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":40,"createdAt":"2018-08-04T09:00:42Z","updatedAt":"2018-08-09T17:10:43Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5684","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533460157000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5686","number":5686,"title":"coala_main.py: Changed Variable name and value of STR_ENTER_NUMBER","body":"ConsoleInteraction.py: Changed Variable name and value of STR_ENTER_NUMBER\nChanged the Variable name from STR_ENTER_NUMBER to STR_ENTER_LETTER\nChanged the value of Variable from 'Enter number (Ctrl-D to exit)' to 'Enter letter (Ctrl-D to exit)'\nFixes #5685\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-04T18:23:38Z","updatedAt":"2018-08-05T09:09:17Z","closedAt":"2018-08-05T09:09:17Z","state":"closed","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5686","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNTM1Ng==","url":"https://github.com/coala/coala/pull/5686#discussion_r207725356","bodyText":"This change is unnecessary. This changes the ouput message we get, when we call coala without the -A tag.","diffHunk":"@@ -75,7 +75,7 @@ def highlight_text(no_color, text, style, lexer=TextLexer()):\n                          'cannot be printed because it refers to a line '\n                          \"that doesn't seem to exist in the given file.\")\n STR_PROJECT_WIDE = 'Project wide:'\n-STR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format(\n+STR_ENTER_LETTER = 'Enter letter (Ctrl-{} to exit): '.format(","author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-08-05T04:52:27Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:52:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNTM2Nw==","url":"https://github.com/coala/coala/pull/5686#discussion_r207725367","bodyText":"This change is unnecessary too. Please don't change it.","diffHunk":"@@ -654,7 +654,7 @@ def choose_action(console_printer, actions, apply_single=False):\n                 color_letter(console_printer, format_lines(output.format(\n                     i, action.desc), symbol='['))\n \n-            line = format_lines(STR_ENTER_NUMBER, symbol='[')\n+            line = format_lines(STR_ENTER_LETTER, symbol='[')","author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-08-05T04:53:18Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:53:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5NTg4Mw==","url":"https://github.com/coala/coala/pull/5686#issuecomment-410495883","bodyText":"Please change your shortlog of the commit message. Refer Writing Commit message","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-08-05T04:56:50Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:56:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUwNjUwMQ==","url":"https://github.com/coala/coala/pull/5686#issuecomment-410506501","bodyText":"I am closing this I'll send you a new pull request","diffHunk":null,"author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2018-08-05T09:09:17Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:09:17Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533559899000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5687","number":5687,"title":"coala_main.py: Change variable name and value","body":"Changed the Variable name from STR_ENTER_NUMBER to STR_ENTER_LETTER\nChanged the value of Variable from 'Enter number (Ctrl-D to exit)' to 'Enter letter (Ctrl-D to exit)'\nFixes #5685\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":25,"createdAt":"2018-08-05T09:09:48Z","updatedAt":"2018-08-06T12:51:39Z","closedAt":"2018-08-06T11:35:54Z","state":"merged","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"process/needs rebase","color":"e52db1"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5687","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUyMjk0OA==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410522948","bodyText":"@Utkarsh1308 , please rebase.  And also please change the two capital V to lowercase v in your commit shortlog.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T14:13:31Z","lastEditedAt":null,"updatedAt":"2018-08-05T14:13:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUyOTAyMQ==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410529021","bodyText":"Still needs to be rebased.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T15:50:22Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:50:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMTIxMw==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410531213","bodyText":"That is not how you rebase according to https://coala.io/git","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T16:24:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T16:24:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU2MTk2Mw==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410561963","bodyText":"Still needs to be rebased.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T00:58:03Z","lastEditedAt":null,"updatedAt":"2018-08-06T00:58:03Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533872004000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5688","number":5688,"title":"Modified:   coalib/parsing/CliParsing.py","body":"Changed variable name comment_seperators to comment_separators.\nFixes #5510\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":6,"createdAt":"2018-08-05T11:14:18Z","updatedAt":"2018-08-10T03:33:24Z","closedAt":"2018-08-10T03:33:24Z","state":"closed","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5688","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMzQ1Nw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-410533457","bodyText":"@jayvdb This PR got a label of newcomer.So,this should be ready for reviewing from your side,right?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T17:03:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:03:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzNDI1Mw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-410534253","bodyText":"Get rid of the incorrect attempt at fixing the typo. It is wrong. You are not assigned to do\n#5510 (comment)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T17:15:50Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:15:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTk2NTQxMw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-411965413","bodyText":"Duplicate of #5696","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-10T03:33:24Z","lastEditedAt":null,"updatedAt":"2018-08-10T03:33:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533896454000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5690","number":5690,"title":"Section Tags Filter","body":"PTAL cEP-0028","comments":5,"createdAt":"2018-08-05T15:20:05Z","updatedAt":"2018-08-10T10:20:54Z","closedAt":"2018-08-10T10:20:54Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"size/M","color":"eb6420"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5690","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDMwMg==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740302","bodyText":"This belongs before --bear-dirs , probably after --files .\nLets wait for more feedback on position","diffHunk":"@@ -177,6 +177,10 @@ def default_arg_parser(formatter_class=None):\n         '-d', '--bear-dirs', type=PathArg, nargs='+', metavar='DIR',\n         help='additional directories which may contain bears')\n \n+    inputs_group.add_argument(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2Nzg1NA==","createdAt":"2018-08-05T15:44:01Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:35:45Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:35:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDMzMA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740330","bodyText":"please use exampes from your cEP, and your own real needs.\nthis looks like language , not a tag which should be an arbitrary grouping which couldnt be achieved via any other means.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tags', ('java',)]``","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NzgzOA==","createdAt":"2018-08-05T15:42:57Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:37:04Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:37:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDM1MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740350","bodyText":"again, dont use tags that are a language .  it is confusing.","diffHunk":"@@ -68,3 +105,53 @@ def apply_filters(filters, bears=None):\n         filter_name, *filter_args = filter\n         bears = apply_filter(filter_name, filter_args, bears)\n     return bears\n+\n+\n+def apply_section_filters(filters, sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filters``. It returns\n+    intersection of sections if more than one element is present in ``filters``\n+    list.\n+\n+    :param filters:\n+        List of args based on ``sections`` has to be filtered.\n+        For example:\n+        ``[['tags', ('save', 'change')], ['exclude', ('css', '!python')]]``","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NzgzOQ==","createdAt":"2018-08-05T15:43:09Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:38:06Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:38:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDQ0Mw==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740443","bodyText":"move the '-c', back to the next line, so you dont modify that line.\nit is also confusing to have the '-c', on this line when its arg is on the next line.","diffHunk":"@@ -198,12 +198,16 @@ def test_merge_defaults(self):\n                 gather_configuration(lambda *args: True,\n                                      self.log_printer,\n                                      arg_list=['-S', 'value=1', 'test.value=2',\n-                                               '-c', escape(temporary, '\\\\')] +\n+                                               '--tags', 'save', '-c',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2Nzg0NA==","createdAt":"2018-08-05T15:43:20Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:41:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:41:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDUyNw==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740527","bodyText":"I used them as examples, but I will update it.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tags', ('java',)]``","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-05T15:43:43Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:43:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDk4MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740980","bodyText":"Currently,\nInputs:\n  -b, --bears           names of bears to use\n  -f, --files           files that should be checked\n  -i, --ignore          files that should be ignored\n  --limit-files         filter the `--files` argument's matches further\n  -d, --bear-dirs       additional directories which may contain bears\n  -t, --tags            tags of sections to execute\n\nI think tags should definitely be above bear-dirs.","diffHunk":"@@ -177,6 +177,10 @@ def default_arg_parser(formatter_class=None):\n         '-d', '--bear-dirs', type=PathArg, nargs='+', metavar='DIR',\n         help='additional directories which may contain bears')\n \n+    inputs_group.add_argument(","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-05T15:59:29Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:59:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDM1MQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764351","bodyText":"nope.\nlets improve the filters system to support sections.\ndef foo_filter(thing, args):\nevery filter than checks whether is knows what is in thing, e.g. using isinstance , and raises NotImplementedError if it doesnt get it.  Existing filters only know about Bear.\nYou make a small chance to the existing filters to make them compliant with the new API by adding a raise NotImplementedError to them.\n(Actually most of them understand could easily be improved to understand Section, but that is beyond the scope of your change, and each will need to be carefully done wrt the CLI args to ensure we build a good user experience)","diffHunk":"@@ -1,11 +1,17 @@\n from coalib.parsing.InvalidFilterException import InvalidFilterException\n-from coalib.parsing.filters import available_filters\n+from coalib.parsing.filters import (\n+    available_filters, available_section_filters)\n+from coalib.parsing.DefaultArgParser import default_arg_parser\n \n \n def is_valid_filter(filter):\n     return filter in available_filters\n \n \n+def is_valid_section_filter(filter):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:54:27Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:54:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDU3MQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764571","bodyText":"not needed.  below you would catch NotImplementedError and ignore it.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tag_section_filter', ('save', 'change')]``\n+    :param all_sections:\n+        List of sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_section_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_section_filters[filter_name]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:57:03Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:57:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDgxMA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764810","bodyText":"I agree with @shreyans800755 that this doesnt belong in the filter.\nksdme@f8fc69c#r29964403\nThe cli section should be kept hidden inside coalib/settings, as a special case implementation detail.  It annoys me that we have any UI messages that mention this section -- the user cant see it, so they shouldnt hear about it.\nAnd likewise developers in other parts of coalib shouldnt need to deal with that section.","diffHunk":"@@ -0,0 +1,21 @@\n+def tag_section_filter(section, args):\n+    \"\"\"\n+    Filters the sections by ``tags``. ``cli`` is always accepted.\n+\n+    :param section: Section object.\n+    :param args:    Set of tags on which ``section`` is to be filtered.\n+    :return:        ``True`` if this section matches the criteria inside args,\n+                    ``False`` otherwise.\n+    \"\"\"\n+    if section.name == 'cli':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T03:00:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T03:00:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2OTAxOQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207769019","bodyText":"I think we could remove the last ,","diffHunk":"@@ -159,6 +161,15 @@ def run_coala(console_printer=None,\n                 (section_name, sections[section_name])\n                 for section_name in targets)\n \n+        # Collect all the section filters which are based on args,","author":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4","name":"Ce Gao"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ5NDg1MQ==","createdAt":"2018-08-06T11:33:29Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T03:54:24Z","lastEditedAt":null,"updatedAt":"2018-08-06T03:54:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTA0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025049","bodyText":"Let's call it items rather than things","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUyNzAxOA==","createdAt":"2018-08-06T21:48:44Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T20:50:01Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:50:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTQ0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025449","bodyText":"Do we have any practical case for this condition ?\nIf so, is there way we can check this before calling this function ?","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUyNzIyNw==","createdAt":"2018-08-06T21:53:21Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T20:51:36Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:51:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTU4NA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025584","bodyText":"Because this is not the job of this function. This function is just a getter","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-06T20:52:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:52:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MDI2MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208040260","bodyText":"move this after the apply_filters function so that the diff better aligns, and probably at the end as it is a private function","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDIyOA==","createdAt":"2018-08-07T06:01:04Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T21:49:53Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:49:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MTM1Nw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208041357","bodyText":"It looks like a helper for the tests , so should be moved into the tests.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T21:54:38Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:54:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MjA4Ng==","url":"https://github.com/coala/coala/pull/5690#discussion_r208042086","bodyText":"(almost) very generic ... belongs in coala_utils::decorators.py\nand this is enforce_duck_type or enforce_duct_tape ? ;-)\nand to make calling generic, use\n@typed_filter(bear='bearclass')\ndef language_filter(bear, args):\n```","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDM0Mw==","createdAt":"2018-08-07T06:04:06Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}},{"id":"MDg6UmVhY3Rpb24yNzc1MjkyNQ==","createdAt":"2018-08-10T13:30:01Z","content":"THUMBS_UP","user":{"login":"aashutoshrathi","name":"Aashutosh Rathi"}}],"createdAt":"2018-08-06T21:58:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:58:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MjI0OA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208042248","bodyText":"thing -> obj or object_","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):\n+    \"\"\"\n+    Used to enforce type of the first argument of a method\n+    by its class name as string. Raises NotImplementedError\n+    if the type does not match. Primarily used to enforce\n+    type of a filter.\n+\n+    :param type_classes:    list or tuple of acceptable class names\n+                            as strings for the first argument of the\n+                            method being decorated.\n+    :param msg:             Message to pass with NotImplementedError.\n+    \"\"\"\n+    if (type(type_classes) not in (tuple, list)):\n+        type_classes = (type_classes,)\n+\n+    def decorator(filter):\n+\n+        @wraps(filter)\n+        def decorated_filter(thing, *args, **kargs):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDIwMA==","createdAt":"2018-08-07T06:00:22Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T21:58:48Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:58:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MzI0NA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208043244","bodyText":"it was going so well until you mentioned filter here.\nthe thing you are wrapping has a name, which you are using here.\nThis decorator is a developer helper ... to catch when they have done the wrong thing.  it shouldnt give pretty names ... the caller needs to detect this and make it user-friendly.\nWhy should a NotImplementedError say \"language_filter filter\" .. ?  language_filter is better, and the backtrace is even better, so no need to tidy it up.\nTo help, create a subclass of NotImplementedError and stuff into it extra attributes to record what went wrong, such as the callee, expected classes, and the incorrect object which was encountered.   Then whoever is catching it can understand what went wrong and create a user-friendly message.","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):\n+    \"\"\"\n+    Used to enforce type of the first argument of a method\n+    by its class name as string. Raises NotImplementedError\n+    if the type does not match. Primarily used to enforce\n+    type of a filter.\n+\n+    :param type_classes:    list or tuple of acceptable class names\n+                            as strings for the first argument of the\n+                            method being decorated.\n+    :param msg:             Message to pass with NotImplementedError.\n+    \"\"\"\n+    if (type(type_classes) not in (tuple, list)):\n+        type_classes = (type_classes,)\n+\n+    def decorator(filter):\n+\n+        @wraps(filter)\n+        def decorated_filter(thing, *args, **kargs):\n+            thing_class = thing.__class__\n+            all_bases = list(map(lambda klass: klass.__name__,\n+                                 getmro(thing_class)))\n+\n+            for type_class in type_classes:\n+                if str(type_class) in all_bases:\n+                    break\n+            else:\n+                raise NotImplementedError(\n+                    msg or '\\'{filter}\\' filter can only handle {type_name}. '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T22:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-06T22:03:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0NDM1Nw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208044357","bodyText":"section_tag_filter","diffHunk":"@@ -0,0 +1,31 @@\n+from coalib.parsing.filters.decorators import typed_filter\n+\n+\n+@typed_filter(('bearclass', 'Bear', 'Section'))\n+def tag_section_filter(section_or_bear, args):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUzOTkxNQ==","createdAt":"2018-08-07T05:50:37Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T22:09:14Z","lastEditedAt":null,"updatedAt":"2018-08-06T22:09:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwODU2MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208108560","bodyText":"run_coala\n\n:param arg_parser:        Instance of ArgParser that is used to non-setting arguments.\n:param arg_list:              The CLI argument list.\n:param args:                   Alternative pre-parsed CLI arguments.\n\nThis is not just about the tests, since args to run_coala() can be optionally passed instead of arg_list, I think we need to merge opts from both, so as to enable the internal usage of this filter. Tests also use can use this by directly calling run_coala() with an arg list.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-07T06:11:39Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:11:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwODgwMw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208108803","bodyText":"run_coala\n\n:param arg_parser:        Instance of ArgParser that is used to non-setting arguments.\n:param arg_list:              The CLI argument list.\n:param args:                   Alternative pre-parsed CLI arguments.\n\nThis is not just about the tests, since args to run_coala() can be optionally passed instead of arg_list, I think we need to merge opts from both, so as to enable the internal usage of this filter. Tests also use can use this by directly calling run_coala() with an arg list.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc0MjI4Mg==","createdAt":"2018-08-10T09:25:27Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-07T06:12:25Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:12:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE5OTI0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r209199249","bodyText":"belongs in coala_utils::decorators.py\n\nUnfortunately not ...\nBecause we are not allowed to do imports here!  argh.\nIt was built: https://gitlab.com/coala/coala-utils/merge_requests/82","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T09:23:37Z","lastEditedAt":null,"updatedAt":"2018-08-10T09:23:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDgzOTE1OQ==","url":"https://github.com/coala/coala/pull/5690#issuecomment-410839159","bodyText":"Updated to use --filter-by (can be used by doing coala --filter-by section_tags save) for both section filters and bear filters. Known issues:\n\nRequires update to --filter-by documentation.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-06T20:15:22Z","lastEditedAt":"2018-08-06T20:17:40Z","updatedAt":"2018-08-06T20:17:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533552812000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5691","number":5691,"title":".coafile: Change in pycodestyle_ignore list","body":"Removed E133,E242 and E303 from pycodestyle_ignore list.\nFixes #5389\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":21,"createdAt":"2018-08-05T15:31:05Z","updatedAt":"2018-08-06T10:53:32Z","closedAt":"2018-08-06T10:49:20Z","state":"merged","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5691","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMTcwMg==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410531702","bodyText":"@jayvdb My PR can't seem to pass this one test.What changes do I need to make?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T16:32:30Z","lastEditedAt":null,"updatedAt":"2018-08-05T16:32:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzNDY1OA==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410534658","bodyText":"@jayvdb Please review this.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T17:21:37Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:21:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzNzc0MA==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410537740","bodyText":"@jayvdb I have done rebasing.Please review this.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T18:13:28Z","lastEditedAt":null,"updatedAt":"2018-08-05T18:13:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzOTA2NQ==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410539065","bodyText":"If you see a test failing, check out the detailed logs, try to find the error. You can ask for help on gitter.\nFor now, I see there's timeout error in your ci (which causes trouble sometimes). It's nothing to do with your PR so don't worry.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-08-05T18:36:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T18:36:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU0MDA5Ng==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410540096","bodyText":"@pareksha  I have changed my shortlog message.And,concerning the error,as it is due to timeout,is there anything that I need to do?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T18:54:58Z","lastEditedAt":null,"updatedAt":"2018-08-05T18:54:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU1MTgzMg==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410551832","bodyText":"This is not rebased.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T22:03:05Z","lastEditedAt":null,"updatedAt":"2018-08-05T22:03:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU3MDYxNQ==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410570615","bodyText":"\"Change made as per requirement\" is an inappropriate https://coala.io/commit shortlog","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T02:18:32Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:18:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYxNzU3Mg==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410617572","bodyText":"\"Change in .coalafile\" also does not describe what was changed.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T07:43:31Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:43:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDY0OTc5MA==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410649790","bodyText":"ok, the shortlog is good enough.\nNext, #5389 does not say it is a bug, so you need the final line to say Closes https://github.com/coala/coala/issues/5389 -- not Fixes https://github.com/coala/coala/issues/5389","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T09:39:50Z","lastEditedAt":null,"updatedAt":"2018-08-06T09:39:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDY1MTUwMQ==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410651501","bodyText":"Awesome.  Now we let that build, and ping me on gitter for the next step.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T09:45:57Z","lastEditedAt":null,"updatedAt":"2018-08-06T09:45:57Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533768077000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5693","number":5693,"title":"XML.py: Add language definition for XML","body":"Closes #5692\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-05T17:26:17Z","updatedAt":"2018-08-08T22:41:17Z","closedAt":"2018-08-06T18:49:27Z","state":"merged","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5693","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0OTY4Ng==","url":"https://github.com/coala/coala/pull/5693#discussion_r207749686","bodyText":"Please see how this is used by core and bears. I believe there are no equivalent in xml.","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4NTkzMQ==","createdAt":"2018-08-06T08:19:07Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-05T21:57:16Z","lastEditedAt":null,"updatedAt":"2018-08-05T21:57:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0OTcyNA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207749724","bodyText":"Also add cdata","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUxMDE4Nw==","createdAt":"2018-08-06T16:06:25Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-08-05T21:58:58Z","lastEditedAt":null,"updatedAt":"2018-08-05T21:58:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwNzM1MQ==","url":"https://github.com/coala/coala/pull/5693#discussion_r207807351","bodyText":"Why blank line here?","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T08:16:49Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:16:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwODA3MA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207808070","bodyText":"And if < > is considered, </ > should also be","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T08:19:36Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:19:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk0NzY2Mg==","url":"https://github.com/coala/coala/pull/5693#discussion_r207947662","bodyText":"@jayvdb @pareksha\nI referred https://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/html.py\nfor referring to how we use markups in language definitions,\nI am not particularly sure of how these are used by core\nCould only find one place in bears repo (the IndentationBear) where these were used, and considering that, I believe these are also sufficient to determine indents of tags ?\nAlso @pareksha , </> is a subset of <>, note the same literal opens and ends tag","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-06T16:09:56Z","lastEditedAt":null,"updatedAt":"2018-08-06T16:09:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk0Nzc4MA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207947780","bodyText":"c.f https://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/html.py#L8\nhttps://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/Shell.py#L7\nSo I think this is some kind of convention and I followed it :)","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-06T16:10:22Z","lastEditedAt":"2018-08-06T16:12:45Z","updatedAt":"2018-08-06T16:12:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk5MjcwMQ==","url":"https://github.com/coala/coala/pull/5693#discussion_r207992701","bodyText":"I suspect this is 'not right, but also not wrong'. Not bad for v1.","diffHunk":"@@ -0,0 +1,14 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+    versions = 1.0,\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '<![CDATA[': ']]>'}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T18:47:35Z","lastEditedAt":null,"updatedAt":"2018-08-06T18:47:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533994825000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5696","number":5696,"title":"CliParsing.py,ConfParser.py : Change in variable name","body":"Corrected typo in variable name comment_seperator and changed it to comment_separator.\nAdded comment_seperator as a deprecated argument.\nCloses #5510\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":37,"createdAt":"2018-08-07T19:10:35Z","updatedAt":"2018-08-11T13:40:25Z","closedAt":"2018-08-11T13:40:12Z","state":"merged","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5696","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTIwOTExNg==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411209116","bodyText":"@jayvdb I checked the piece of code that I added to my local machine and it works fine.I am not sure why it is not passing the build tests.Where have I gone wrong?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-07T21:30:26Z","lastEditedAt":null,"updatedAt":"2018-08-07T21:30:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTYyODY1OA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411628658","bodyText":"You need to rebase your patch.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T03:54:27Z","lastEditedAt":null,"updatedAt":"2018-08-09T03:54:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTY4MDMyNg==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411680326","bodyText":"@jayvdb Have done rebase.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-09T08:31:39Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:31:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTgwOTg3MA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411809870","bodyText":"Needs another rebase due to a different PR getting merged","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T16:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-09T16:03:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTg0MzkxNQ==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411843915","bodyText":"There is another PR which is duplicate of this at #5688 .","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-09T17:57:56Z","lastEditedAt":null,"updatedAt":"2018-08-09T17:57:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0NTg1NA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-412245854","bodyText":"Test is failing\nhttps://travis-ci.org/coala/coala/jobs/414626526#L794","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T02:45:55Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:45:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI2NTE4MQ==","url":"https://github.com/coala/coala/pull/5696#issuecomment-412265181","bodyText":"Rebase please.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T10:04:31Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:04:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533795185000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5698","number":5698,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-08T14:36:28Z","updatedAt":"2018-08-09T06:13:05Z","closedAt":"2018-08-09T06:13:05Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5698","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODY3MzMwNw==","url":"https://github.com/coala/coala/pull/5698#discussion_r208673307","bodyText":"undo this line please.\nthis is why it is breaking, and is a special problem that I need to fix.","diffHunk":"@@ -13,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs\n+pytest-reqs~=0.0.6","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T17:44:44Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:44:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533973252000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5699","number":5699,"title":"Add Support for FileProxies","body":"Adds support for FileProxies and analysis of in-memory files.\nKnown Shortcomings:\n\nCannot yet work with apply-patch actions.\nFile Proxies cannot yet work with caching disabled.","comments":5,"createdAt":"2018-08-08T14:52:12Z","updatedAt":"2018-08-11T07:40:52Z","closedAt":"2018-08-11T07:40:52Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"size/L","color":"FF8888"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5699","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNTU2MQ==","url":"https://github.com/coala/coala/pull/5699#discussion_r208805561","bodyText":"this could be moved to the common path in instantiate_processes after the dict has been obtained.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-09T04:49:27Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:49:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNTYyNw==","url":"https://github.com/coala/coala/pull/5699#discussion_r208805627","bodyText":"you sure you need this?\nit isnt doing anything afaics","diffHunk":"@@ -0,0 +1,363 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)\n+\n+\n+class FileNameError(LookupError):\n+    def __init__(self, error_message):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4MjA4NA==","createdAt":"2018-08-09T09:52:40Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-09T04:50:11Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:50:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgyNTcyMA==","url":"https://github.com/coala/coala/pull/5699#discussion_r208825720","bodyText":"I think we need to maintain compatibility with FileDictFileCache, since it uses the default implementation of get_file_dict() it logs locally as soon as files are collected. Moving this to instantiate_processes() will cause logging twice for FileDictFileCache. I think we can have a separate issue for this once this gets merged.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-09T07:07:36Z","lastEditedAt":"2018-08-09T07:07:57Z","updatedAt":"2018-08-09T07:07:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgyNjAxOA==","url":"https://github.com/coala/coala/pull/5699#discussion_r208826018","bodyText":"I wanted to have a distinct error to denote bad file names. I will use ValueError instead.","diffHunk":"@@ -0,0 +1,363 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)\n+\n+\n+class FileNameError(LookupError):\n+    def __init__(self, error_message):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-09T07:09:12Z","lastEditedAt":null,"updatedAt":"2018-08-09T07:09:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDQ0MQ==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414441","bodyText":"I mean that the default get_file_dict(..) should also not log this message.\ninstantiate_processes can do that for all implementations.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T03:00:27Z","lastEditedAt":"2018-08-11T03:00:43Z","updatedAt":"2018-08-11T03:00:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDYzMA==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414630","bodyText":"no trailing , if followed by )","diffHunk":"@@ -0,0 +1,358 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzUwNA==","createdAt":"2018-08-11T05:30:01Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-11T03:10:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:10:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDY5Mg==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414692","bodyText":"strange indentation.\nfour space indent, from beginning of previous line.","diffHunk":"@@ -177,3 +182,102 @@ def test_caching_multi_results(self):\n             self.assertIn(\n                 'Implicit \\'Default\\' section inheritance is deprecated',\n                 stderr)\n+\n+\n+class FileDictFileCacheTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        log_printer = LogPrinter(NullPrinter())\n+        self.cache = FileDictFileCache(\n+            log_printer, 'coala_test', flush_cache=True)\n+\n+    def test_build_as_file_cache(self):\n+        self.assertTrue(isinstance(self.cache, FileCache))\n+\n+        self.cache.track_files({'test.c', 'file.py'})\n+        self.assertEqual(self.cache.data, {'test.c': -1, 'file.py': -1})\n+\n+    def test_get_file_dict(self):\n+        with prepare_file(['line\\n'], None) as (_, file):\n+            self.assertEqual(self.cache.get_file_dict([file]),\n+                             get_file_dict([file]))\n+\n+\n+class ProxyMapFileCacheTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        log_printer = LogPrinter(NullPrinter())\n+        self.cache = ProxyMapFileCache(\n+            log_printer, 'coala_test', flush_cache=True)\n+\n+    def test_build_as_file_cache(self):\n+        self.assertTrue(isinstance(self.cache, FileCache))\n+\n+    def test_get_dict_no_file_proxy_map(self):\n+        with self.assertRaises(ValueError) as context:\n+            self.cache.get_file_dict([])\n+\n+        self.assertIn('set_proxymap() should be called to set proxymap'\n+                      'of ProxyMapFileCache instance',\n+                      str(context.exception))\n+\n+    def test_get_file_dict_with_proxy_map(self):\n+        with prepare_file([], None) as (_, file):\n+            proxy = FileProxy(file, None, 'coala\\n')\n+            proxymap = FileProxyMap([proxy])\n+            self.cache.set_proxymap(proxymap)\n+\n+            file_dict = self.cache.get_file_dict([file])\n+            self.assertEqual(file_dict, {file: ('coala\\n',)})\n+\n+    def test_get_file_dict_unicode_error(self):\n+        with make_temp() as filename:\n+            with open(filename, 'wb') as file:\n+                file.write(bytearray([120, 3, 255, 0, 100]))\n+\n+            self.cache.set_proxymap(FileProxyMap())\n+            file_dict = self.cache.get_file_dict([filename])\n+\n+            self.assertEqual(len(file_dict), 0)\n+\n+            self.cache.set_proxymap(FileProxyMap())\n+            file_dict = self.cache.get_file_dict([filename],\n+                                                 allow_raw_files=True)\n+\n+            self.assertEqual(len(file_dict), 1)\n+            self.assertIn(filename, file_dict)\n+\n+    def test_get_file_dict_file_not_found(self):\n+        self.cache.set_proxymap(FileProxyMap())\n+\n+        file_dict = self.cache.get_file_dict(['nofile.pycoala'])\n+        self.assertEqual(len(file_dict), 0)\n+\n+    def test_file_cache_proxy_integration(self, debug=False):\n+        with bear_test_module(), \\\n+                prepare_file(['disk-copy\\n'], None) as (_, filename):\n+\n+            memory_data = 'in-memory\\n'\n+            proxy = FileProxy(filename, None, memory_data)\n+            proxymap = FileProxyMap([proxy])\n+            self.cache.set_proxymap(proxymap)\n+\n+            results, exitcode, file_dicts = run_coala(\n+                                    console_printer=ConsolePrinter(),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T03:13:26Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:13:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTYyMzEyNQ==","url":"https://github.com/coala/coala/pull/5699#issuecomment-411623125","bodyText":"/cc @jayvdb","diffHunk":null,"author":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4","name":"Ce Gao"},"reactions":[],"createdAt":"2018-08-09T03:15:07Z","lastEditedAt":null,"updatedAt":"2018-08-09T03:15:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534238069000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5538","number":5538,"title":"__init__.py: Add module docstring which confirm to PEP 257","body":"Closes #5536 (comment)\n\nMulti-line docstrings consist of a summary line just like a one-line docstring, followed by a blank line, followed by a more elaborate description. The summary line may be used by automatic indexing tools; it is important that it fits on one line and is separated from the rest of the docstring by a blank line. The summary line may be on the same line as the opening quotes or on the next line. The entire docstring is indented the same as the quotes at its first line (see example below).\nThe docstring for a module should generally list the classes, exceptions and functions (and any other objects) that are exported by the module, with a one-line summary of each. (These summaries generally give less detail than the summary line in the object's docstring.)","comments":3,"createdAt":"2018-06-17T07:40:12Z","updatedAt":"2018-08-14T09:14:29Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5538","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNDk2Nw==","url":"https://github.com/coala/coala/pull/5538#discussion_r195924967","bodyText":"It must be prose. High level summary. See pep 257. It is hard .. ;)","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE5NTUzOQ==","createdAt":"2018-06-17T10:39:55Z","content":"CONFUSED","user":{"login":"ishanSrt","name":"Ishan Srivastava"}}],"createdAt":"2018-06-17T10:36:16Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:36:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNDk4OQ==","url":"https://github.com/coala/coala/pull/5538#discussion_r195924989","bodyText":"No listing members. That is redundant to the TOC autogenerated from members, and it gets out of date quickly","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T10:37:43Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:37:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNTAzNw==","url":"https://github.com/coala/coala/pull/5538#discussion_r195925037","bodyText":"So remove the listing?","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:39:32Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNTA3NQ==","url":"https://github.com/coala/coala/pull/5538#discussion_r195925075","bodyText":"if it is prose then it is not detailed","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:40:42Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:40:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk3NjI5Mg==","url":"https://github.com/coala/coala/pull/5538#discussion_r195976292","bodyText":"The first line should not be detailed.  It is a summary.\nAfter the blank line, you add as many lines of prose as you want, where it can be quite detailed.","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-18T06:46:24Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:46:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk3NjMxNg==","url":"https://github.com/coala/coala/pull/5538#discussion_r195976316","bodyText":"yes, replace with prose","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-18T06:46:35Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:46:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjAyMjI2NA==","url":"https://github.com/coala/coala/pull/5538#discussion_r196022264","bodyText":"ok I get you","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-18T09:52:58Z","lastEditedAt":null,"updatedAt":"2018-06-18T09:52:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg4MTE0MA==","url":"https://github.com/coala/coala/pull/5538#discussion_r209881140","bodyText":"this is not correct.  This has all the stuff needed to make bear arg annotation work","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.\n+- **class Section:** Parses the Settings given in each section in config file.\n+- **class FunctionMetadata:** Provides indexing tools from python docstrings.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T09:14:23Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:14:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg2ODk4NQ==","url":"https://github.com/coala/coala/pull/5538#issuecomment-397868985","bodyText":"ping @jayvdb I have tried to follow the PEP 257, but one line description means fuzzy explanations, also following the line lengths.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:19:15Z","lastEditedAt":"2018-06-17T10:24:50Z","updatedAt":"2018-06-17T10:24:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg2OTAzMw==","url":"https://github.com/coala/coala/pull/5538#issuecomment-397869033","bodyText":"not added the functions as their docstrings have short and precise explanation there itself","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:20:15Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:20:15Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534521029000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5564","number":5564,"title":"BaseTestHelper.py: Improve AssertionError message","body":"This improves the AssertionError message generated from\nassert_result_equal(...) method by inheriting unittest\nin BaseTestHelper class.\nCloses #5533","comments":2,"createdAt":"2018-06-24T13:21:17Z","updatedAt":"2018-08-17T15:50:29Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5564","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODgxNDEzNQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r198814135","bodyText":"why was this removed?  the assertion might change slightly, but we need to check the assertion message still.\nfyi, see #3374 and #3808\nYou can also add Related to https://github.com/coala/coala/issues/3808 in your commit message as that is what this PR is also doing","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T11:59:12Z","lastEditedAt":null,"updatedAt":"2018-06-28T11:59:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODg3MjY2OA==","url":"https://github.com/coala/coala/pull/5564#discussion_r198872668","bodyText":"It was differing in different python version. I tried here. Still, I am trying it once again.\n\nwhy was this removed? the assertion might change slightly, but we need to check the assertion message still.\n\nI will do that. 😄\n\nYou can also add Related to https://github.com/coala/coala/issues/3808 in your commit message as that is what this PR is also doing","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-28T14:55:28Z","lastEditedAt":null,"updatedAt":"2018-06-28T14:55:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODkwMzY3NQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r198903675","bodyText":"It is done now @jayvdb. Take a look. Thanks.","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-28T16:22:48Z","lastEditedAt":null,"updatedAt":"2018-06-28T16:22:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkwMjEwOA==","url":"https://github.com/coala/coala/pull/5564#discussion_r199902108","bodyText":"yields?  -> raises ...","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-03T18:04:43Z","lastEditedAt":null,"updatedAt":"2018-07-03T18:04:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkwMjYwMw==","url":"https://github.com/coala/coala/pull/5564#discussion_r199902603","bodyText":"put them into an array, and then format them at the end when raising the exception","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = ''","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjEyODM5Mg==","createdAt":"2018-07-07T09:45:40Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-07-03T18:06:32Z","lastEditedAt":null,"updatedAt":"2018-07-03T18:06:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgwNzg5MA==","url":"https://github.com/coala/coala/pull/5564#discussion_r200807890","bodyText":"Changes are done @jayvdb","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-07T09:45:30Z","lastEditedAt":null,"updatedAt":"2018-07-07T09:45:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1MDUyOA==","url":"https://github.com/coala/coala/pull/5564#discussion_r210950528","bodyText":"When running test_jinja2_templating (due to coala/coala-bears#2678) which isnt the best of test approaches, but far from the worst, here are my error results\n>               raise AssertionError(messages)\nE               AssertionError: 'Usin[68 chars]o XSS. Ensure autoescape=True to mitigate XSS vulnerabilities.' != 'Usin[68 chars]o XSS. Use autoescape=True to mitigate XSS vulnerabilities.'\nE               - Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True to mitigate XSS vulnerabilities.\nE               ?                                                                                ^^ --\nE               + Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True to mitigate XSS vulnerabilities.\nE               ?                                                                                ^\nE                : message_base mismatch.\n\n../coala/coalib/testing/LocalBearTestHelper.py:136: AssertionError\n\nNow how can I work out which of the five Result that was about?\nThis entire test system is fundamentally flawed.\ntest helpers should help diagose, not help write tests which are unable to be diagnosed.\nIf I change it to assert sorted(bear_output) == sorted(results), I see nothing because these Comparable objects are impossible for pytest to automatically inspect dynamically.  And self.assertCountEqual has also been busted: the output is a mess.  We are breaking the standard Python testing tools, and replacing them with something less helpful.\nSo at the moment, with pytest and unittest builtin systems not working on Result objects, we are reliant on this Comparable class and this helper to actually help decode the problem.  It doesnt do that before this patch, and this patch doesnt make it much better.","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and raises messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = []\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (\n+                    Comparable.__eq__(expected, observed)):\n+                for attribute in observed.__compare_fields__:\n+                    try:\n+                        self.assertEqual(getattr(observed, attribute),\n+                                         getattr(expected, attribute),\n+                                         msg='{} mismatch.'.format(attribute))\n+                    except AssertionError as ex:\n+                        messages.append(str(ex))\n+            else:\n+                self.assertEqual(observed, expected)\n+\n+        if messages:\n+            raise AssertionError('\\n\\n'.join(message for message in messages))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:39:27Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:39:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1MTA4MQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r210951081","bodyText":"this makes the test suite reliant on pytest output, which differs whenever pytest finds a way to improve their messages.","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and raises messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = []\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (\n+                    Comparable.__eq__(expected, observed)):\n+                for attribute in observed.__compare_fields__:\n+                    try:\n+                        self.assertEqual(getattr(observed, attribute),\n+                                         getattr(expected, attribute),\n+                                         msg='{} mismatch.'.format(attribute))\n+                    except AssertionError as ex:\n+                        messages.append(str(ex))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:40:50Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:40:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1Mjc1NQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r210952755","bodyText":"use textwrap.dedent to make this more readable.","diffHunk":"@@ -9,23 +7,41 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)\n+        self.assertEqual(\"'b' != 'c'\\n\"\n+                         '- b\\n'\n+                         '+ c\\n', str(ex.exception))\n \n     def test_comparable_assert_result_equal(self):\n         expected = [Result.from_values(origin='AnyBea',\n                                        message='This file has 2 lines.',\n                                        file='anyfile')]\n         observed = [Result.from_values(origin='AnyBear',\n-                                       message='This file has 2 lines.',\n+                                       message='This file has 3 lines.',\n                                        file='anyfile')]\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(expected, observed)\n-        assert ('origin mismatch: AnyBea, This file has 2 lines. != AnyBear, '\n-                'This file has 2 lines.\\n\\n') == str(ex.value)\n+        self.assertEqual(\"'AnyBea' != 'AnyBear'\\n\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:46:01Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:46:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1Mjg2OA==","url":"https://github.com/coala/coala/pull/5564#discussion_r210952868","bodyText":"these tests now rely on the output of pytest - see note above about capturing the assertion and converting it into a string.\nThat isnt helpful.\nAnd these test cases are not helpful.\nWhat we need are tests of multiple complicated Result objects, and showing that the error message is helpful for real scenarios.\nAnd our messages should not use pytest's messages, because they are dumb -- they are automatic and can not know the context of the situation, or know what the bear debugger needs to see in order to be able to diagnose the problem.","diffHunk":"@@ -9,23 +7,41 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:46:25Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:46:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjI0MDk5Mw==","url":"https://github.com/coala/coala/pull/5564#issuecomment-402240993","bodyText":"Ping @jayvdb, need your review.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-03T17:50:59Z","lastEditedAt":null,"updatedAt":"2018-07-03T17:50:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTAyNzk3Nw==","url":"https://github.com/coala/coala/pull/5564#issuecomment-405027977","bodyText":"@jayvdb, I think all the changes are done. Have a look, please. 😄","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-14T14:45:35Z","lastEditedAt":null,"updatedAt":"2018-07-14T14:45:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535714203000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5585","number":5585,"title":"core/__init__.py: Add module docstrings","body":"Closes #5537\ncc @jayvdb @Makman2\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-07-01T21:40:05Z","updatedAt":"2018-08-31T11:16:43Z","closedAt":"2018-08-31T09:34:03Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5585","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MTY5OA==","url":"https://github.com/coala/coala/pull/5585#discussion_r203951698","bodyText":"Run pydocstyle on this.  I believe it will complain about the Provides and lack of trailing . .","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T06:49:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T06:49:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MjM0MQ==","url":"https://github.com/coala/coala/pull/5585#discussion_r203952341","bodyText":"As a module docstring doesnt need to be a listing of components, these should be ordered to help the reader understand the module.\nAnd more prose used to help the reader understand what it is.\nI feel Core should be first, or the description of Core should mention it is about execution of bears.\nis Core about tasks or bears?\nIf bears are just a type of task, and other tasks could also be performed using Core, then the concept of a task should be mentioned in prose before mentioning any bears.","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core\n+\n+- ``Bear``: Base class for all the NextGen Bears.\n+- ``Core``: Maintains sessions for coala's execution.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T06:53:02Z","lastEditedAt":null,"updatedAt":"2018-07-20T06:53:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3MzYxNA==","url":"https://github.com/coala/coala/pull/5585#discussion_r206073614","bodyText":"It's both, it runs tasks offloaded by bears","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core\n+\n+- ``Bear``: Base class for all the NextGen Bears.\n+- ``Core``: Maintains sessions for coala's execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUyOQ==","createdAt":"2018-08-04T08:06:22Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-30T09:48:26Z","lastEditedAt":null,"updatedAt":"2018-07-30T09:48:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA0MjMxOA==","url":"https://github.com/coala/coala/pull/5585#discussion_r211042318","bodyText":"Please put DependencyBear on new line","diffHunk":"@@ -0,0 +1,21 @@\n+\"\"\"\n+The core package provides an API for coala's NextGen-Core.\n+\n+The ``Core`` module is responsible for maintaining sessions for coala's\n+execution and also running the tasks offloaded by the bears. The ``Bear``\n+module provides a base class for all the NextGen Bears.\n+\n+``FileBear`` provides a Bear base class to parallelize tasks for each file.\n+``ProjectBear`` on the other hand provides a base class for bears that run on\n+the whole codebase. ``DependencyBear`` is a Bear base class that parallelizes","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-17T21:59:21Z","lastEditedAt":null,"updatedAt":"2018-08-17T21:59:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA0MjUyNQ==","url":"https://github.com/coala/coala/pull/5585#discussion_r211042525","bodyText":"It can then be used for caching results.","diffHunk":"@@ -0,0 +1,21 @@\n+\"\"\"\n+The core package provides an API for coala's NextGen-Core.\n+\n+The ``Core`` module is responsible for maintaining sessions for coala's\n+execution and also running the tasks offloaded by the bears. The ``Bear``\n+module provides a base class for all the NextGen Bears.\n+\n+``FileBear`` provides a Bear base class to parallelize tasks for each file.\n+``ProjectBear`` on the other hand provides a base class for bears that run on\n+the whole codebase. ``DependencyBear`` is a Bear base class that parallelizes\n+tasks for dependency results.\n+\n+The ``DependencyTracker`` module registers and\n+manages dependencies between objects. The circular dependency errors are\n+handled by ``CircularDependencyError``. The ``Graphs`` detects cyclicity\n+in dependency graphs and raises ``CircularDependencyError`` if found.\n+\n+``PersistentHash`` module generates a unique hash for every task object\n+first by pickling them and then using the pickled object to generate a sha1\n+hash. These persistent hashes can then be used for caching results.","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-17T22:00:39Z","lastEditedAt":null,"updatedAt":"2018-08-17T22:00:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzk4MzY2NQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-413983665","bodyText":"@jayvdb updated.\nNot sure why appveyor is failing though. I also don't see a rebuild button on appveyor is there no way to re run appveyor jobs except for a force push?","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-17T20:46:13Z","lastEditedAt":"2018-08-17T20:47:09Z","updatedAt":"2018-08-17T20:47:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzk5OTEwOQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-413999109","bodyText":"Not sure why appveyor is failing though. I also don't see a rebuild button on appveyor is there no way to re run appveyor jobs except for a force push?\n\nOnly admins have access to rebuild button. Go for force push.","diffHunk":null,"author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODEwODQxMw==","createdAt":"2018-08-18T06:53:16Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-17T22:02:08Z","lastEditedAt":null,"updatedAt":"2018-08-17T22:02:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAxMjMxMA==","url":"https://github.com/coala/coala/pull/5585#issuecomment-414012310","bodyText":"Any time you see timeout is the log , assume it is our intermittent timeout problem, which is complicated by #5674 .  On AppVeyor, force push is all you can do until we get corobo back online and implement job restart commands in corobo.  But dont feel like you have to keep force pushing to get it green - if travis or circle pass, a note that appveyor timeouted is enough for us to keep the PR in the review queue even if appveyor is red.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODEwODM5Mw==","createdAt":"2018-08-18T06:50:03Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-17T23:31:56Z","lastEditedAt":null,"updatedAt":"2018-08-17T23:31:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAzOTEwOQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-414039109","bodyText":"Updated @shreyans800755 @jayvdb","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-18T07:38:44Z","lastEditedAt":null,"updatedAt":"2018-08-18T07:38:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533537231000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5599","number":5599,"title":"Add: Profiling Interface","body":"Add Profiler Interface.\nRelated to #565","comments":8,"createdAt":"2018-07-05T12:30:54Z","updatedAt":"2018-08-06T06:33:51Z","closedAt":"2018-08-06T06:33:30Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"size/M","color":"eb6420"},{"name":"status/ci-approved","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5599","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ1OTkzMg==","url":"https://github.com/coala/coala/pull/5599#discussion_r201459932","bodyText":"check against boolean values, not string:\nif self.profile is True:","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:05:37Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:05:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2MDA3Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r201460076","bodyText":"superfluous","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:06:03Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:06:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2MjU3MA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462570","bodyText":"please name them properly ;) proper naming automatically makes code documented :)","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+    def profile_run(self, *args, **kwargs):\n+        prof1 = cProfile.Profile()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:15:56Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:15:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2MjYxMw==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462613","bodyText":"not Iterable instead of GeneratorType?","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+    def profile_run(self, *args, **kwargs):\n+        prof1 = cProfile.Profile()\n+        bear_results = prof1.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, types.GeneratorType):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:16:08Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:16:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2Mjg2Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462866","bodyText":"redundant","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:17:02Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:17:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2Mjg3OQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462879","bodyText":"redundant","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:17:05Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:17:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDI5OA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464298","bodyText":"documentation missing ;)","diffHunk":"@@ -262,7 +265,8 @@ def __init__(self,\n                  section: Section,\n                  message_queue,\n                  timeout=0,\n-                 debugger=False):\n+                 debugger=False,\n+                 profile=False):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:22:08Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:22:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDQzNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464434","bodyText":"path is only used in the else branch, please move it there","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:22:42Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:22:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDYzMA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464630","bodyText":"you should check if it's actually an absolute path. So\n\nit's a relative path: append it to os.getcwd\nit's an absolute path: ignore os.getcwd","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:23:30Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:23:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDkyNg==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464926","bodyText":"I guess the API saving the dumps already respect that, so in fact you don't need the join below, just pass self.profile to prof.dump_stats :)","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:24:41Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:24:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NTUwNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201465504","bodyText":"Looks like a bit copied from above. How about doing\nself.filename = '{}_{}.prof'.format(self.section.name, self.name) if self.profile is True else self.profile","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:26:50Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:26:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NTY0Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r201465643","bodyText":"Why not actually running everything in the same profile object?","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+    def profile_run(self, *args, **kwargs):\n+        prof1 = cProfile.Profile()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:27:16Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:27:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NjE0MA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201466140","bodyText":"what arguments does it take?","diffHunk":"@@ -249,6 +249,9 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True, help='Profile Bears')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:29:09Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:29:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTI2Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203475263","bodyText":"why do you introduce documentation about the debugger in the commit for the profiler?","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0OTYwNg==","createdAt":"2018-07-18T19:31:11Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:01:36Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:01:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTQ1MA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203475450","bodyText":"mismatch with the actual parameter name profile. But I guess you should call it profiler in the signature, analogous to debugger","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:02:08Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:02:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTQ5NQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203475495","bodyText":"Ppath","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:02:19Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:02:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3ODUzMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203478531","bodyText":"so you won't create a dump file? It has to exist already? Sounds not so good\ndon't print, rather exceptions, since it's an invalid state for the bear with profiling enabled.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:11:52Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:11:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3ODc3Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203478776","bodyText":"please deduplicate the code, you use self.setup_profile twice in both branches.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)\n+\n+    def profile_run(self, *args, profile=None, **kwargs):\n+        profile = cProfile.Profile() if profile is None else profile\n+        bear_results = profile.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, collections.Iterable):\n+            results = []\n+            iterator = iter(bear_results)\n+            while True:\n+                try:\n+                    result = profile.runcall(next, iterator)\n+                    results.append(result)\n+                except StopIteration:\n+                    break\n+            self.setup_profile(profiler=profile)\n+            return results\n+        else:\n+            self.setup_profile(profiler=profile)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:12:39Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:12:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3ODk1NA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203478954","bodyText":"what if profile and debugger are both given? I thought that's an invalid state, thus an exception should be raised?","diffHunk":"@@ -283,6 +291,7 @@ def __init__(self,\n         self.message_queue = message_queue\n         self.timeout = timeout\n         self.debugger = debugger\n+        self.profile = profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzIyOTg2NQ==","createdAt":"2018-07-31T13:42:30Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:13:15Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:13:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3OTU0Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203479547","bodyText":"function name doesn't resemble what it's doing","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0OTY5MQ==","createdAt":"2018-07-18T19:32:53Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:15:13Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:15:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3OTczNw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203479737","bodyText":"Function name should be preceded with an underscore, I guess nobody should directly call that^^","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0OTY4OQ==","createdAt":"2018-07-18T19:32:47Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:15:45Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:15:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3OTkyMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203479921","bodyText":"True is allowed as well^^","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file\n+                              will dump.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:16:13Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:16:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ4MDQ3Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203480476","bodyText":"PS:\n3. I don't understand the message^^\n4. sys.stdout is default for print","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:18:06Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:18:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ4MTE4Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203481183","bodyText":"not sure this behaviour is too complicated... why not just allowing True/False and put it either into the working directory or a subdirectory like profile/profile-data/bear-profiling/... ?","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:20:28Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:20:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ4MjI5Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203482293","bodyText":"since how do we want to configure it for many bears if the user can pick the filename? Specifying individual file names for each bears as a feature is not necessarily helpful^^ people usually just want the data, if the filenames are not to their likings, they should reformat.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:24:10Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:24:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5NTE0Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203495147","bodyText":"@Makman2\n\n\nfirst it will check the value of self.profile if its True then it will dump the profiler files in the current working directory,\n\n\nelse  it will check whether the path given or directory name or in self.profile  already exists and also check it is a directory if yes then it will dump the profiler files in that directory.\n\n\nelse it will check whether the path given or directory name is already a file (not directory) if it is not a file then it will create a directory with the name passed in self.profile or the path passed and dump the profiler files in this directory.\n\n\nelse last case which left is user is passing the filename or filepath in self.profile then it becomes obvious that it is not possible to dump profiler files in file (I will raise the exception in this case instead of printing a message)","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:05:33Z","lastEditedAt":"2018-07-19T04:07:43Z","updatedAt":"2018-07-19T04:07:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5NTU5OQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203495599","bodyText":"What it the bear return is not iterable I know you already said a bear which return none is a buggy bear but that bear can be profiled IMO","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)\n+\n+    def profile_run(self, *args, profile=None, **kwargs):\n+        profile = cProfile.Profile() if profile is None else profile\n+        bear_results = profile.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, collections.Iterable):\n+            results = []\n+            iterator = iter(bear_results)\n+            while True:\n+                try:\n+                    result = profile.runcall(next, iterator)\n+                    results.append(result)\n+                except StopIteration:\n+                    break\n+            self.setup_profile(profiler=profile)\n+            return results\n+        else:\n+            self.setup_profile(profiler=profile)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:07:06Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:07:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5NzcyOA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203497728","bodyText":"No its not, If I understand here correctly then you are talking about this filename = '{}_{}.prof'.format(self.section.name, self.name) this part was added in cEP and also it is also giving a useful information like suppose some bear ABCBear in 2 different sections of .coafile then it will create a files with name sectionOne_ABCBear and sectionTwo_ABCBear. (here section name is my assumption)","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:14:45Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:14:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5ODcxOA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203498718","bodyText":"not sure this behaviour is too complicated\n\nI don't think its complicated 😅","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:18:22Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:18:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzUwMjExMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203502111","bodyText":"Yeah I accidentally squashed in my last update","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:31:08Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:31:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5NzM3Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203597373","bodyText":"actually, the cli argument is --profile so I am directly using the profile keyword and passing same to bear init , do you want me to change it to --profiler or make it self.profiler = profile?","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-19T04:16:19Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:16:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5Nzk2Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203597967","bodyText":"verified one more time its working for all the case, the mistake I have done is a for every bear run it will print directory and filename cannot be same and I have to solve this warning thing 👍","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-19T04:22:25Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:22:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYyNjMzOQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203626339","bodyText":"IMO this also get the ouput we want and also cover the case where user pass the path or filename which is actually a file not a directory it will give a proper error which user can understand easily (as we can't create a file and directory with the same name)\ni.e., FileExistsError: [Errno 17] File exists: '/home/vaibhav/test/my.txt'\nBut if /home/vaibhav/test/my.txt is a directory then it will not give any error\n, what I was not wanted was to halt the coala normal execution and I am hoping this is the thing you wanted?\n    def setup_profile(self, profiler=None):\n        filename = '{}_{}.prof'.format(self.section.name, self.name)\n        if self.profile is True:\n            profiler.dump_stats(filename)\n        else:\n            if os.path.exists(self.profile) and os.path.isdir(self.profile):\n                profiler.dump_stats(os.path.join(self.profile, filename))\n            else:\n                os.mkdir(os.path.join(self.profile))\n                profiler.dump_stats(os.path.join(self.profile, filename))","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-19T07:31:01Z","lastEditedAt":"2018-07-19T07:33:17Z","updatedAt":"2018-07-19T07:33:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYyOTQ0Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203629446","bodyText":"It's okay to halt coala's execution, if the user requested to profile code, but you can't profile because of such filename issues, you want to rather stop and make the user fix it. Otherwise you do a full coala run (that depending on the setup could take minutes) without profiling which wastes time.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:44:53Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:44:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMDUyNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203630524","bodyText":"And yeah, your code looks better 👍 However one doubt: So if the user specifies a path in self.profile, we want to make it a directory, right?\nBesides two improvements:\n\nIn the first else branch, you execute profiler.dump_stats(os.path.join(...)) regardless on which branch, that can be moved outside the if ;)\nsince in the end you will always do dump_stats, and the only thing that changes is the filename, how about doing:\n\n    def setup_profile(self, profiler=None):\n        filename = '{}_{}.prof'.format(self.section.name, self.name)\n        if self.profile is True:\n            path = filename\n        else:\n            if not (os.path.exists(self.profile) and os.path.isdir(self.profile)):\n                os.mkdir(os.path.join(self.profile))\n            \n            path = os.path.join(self.profile, filename)            \n\n        profiler.dump_stats(path)","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:49:06Z","lastEditedAt":"2018-07-19T07:49:33Z","updatedAt":"2018-07-19T07:49:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMTE3Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203631173","bodyText":"that's not what I mean ;) In both branches you use self.setup_profile, so in any case self.setup_profile will be executed. You can make the code a bit more compact by moving that out of the if clause:\nif ...\n   results = ... # I know this name is already used here, but choose some other good name or so.\nelse ...\n   results = ...\n\nself.setup_profile(profiler=profile)\nreturn results","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)\n+\n+    def profile_run(self, *args, profile=None, **kwargs):\n+        profile = cProfile.Profile() if profile is None else profile\n+        bear_results = profile.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, collections.Iterable):\n+            results = []\n+            iterator = iter(bear_results)\n+            while True:\n+                try:\n+                    result = profile.runcall(next, iterator)\n+                    results.append(result)\n+                except StopIteration:\n+                    break\n+            self.setup_profile(profiler=profile)\n+            return results\n+        else:\n+            self.setup_profile(profiler=profile)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:52:06Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:52:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMTcxNw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203631717","bodyText":"you are talking about this filename = '{}_{}.prof'.format(self.section.name, self.name)\n\nNope, that is totally okay :) However, with the above code changes by you, my doubts may do not apply any more. So nvm for now :3","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:54:04Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:54:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMTk3NQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203631975","bodyText":"Ah right. Then keep the name profile, however, the docstring has to be corrected ;)","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:55:14Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:55:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MTU1Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203861557","bodyText":"The docstring doesn't really apply here. Since this is working directly on a bear, it's not tied to the debug_bears setting in the section. The step where debug_bears is parsed and bears are selected to be debugged happens before. Just say simply that if True, a debugger is started.","diffHunk":"@@ -276,6 +276,8 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:31:13Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:31:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MTYzMA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203861630","bodyText":"missing colon after :param profile","diffHunk":"@@ -273,6 +276,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param profile        A flag which enable profiler on bears of a","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:31:27Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:31:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MjMwMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203862301","bodyText":"--> A flag which enables profileing on this bear.\nIt's not really a flag then, is it? Since it accepts paths as well.\nNothing is mentioned that True is a valid value (a bit confusing is that you mention \"if none provided then...\", which suggests that None will do the trick)","diffHunk":"@@ -273,6 +276,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param profile        A flag which enable profiler on bears of a\n+                              section. Contains path or name of directory where\n+                              profiled files will dump if none provided then\n+                              profiled files will dump in current directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:33:57Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:33:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MjM1NA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203862354","bodyText":"bump","diffHunk":"@@ -283,6 +291,7 @@ def __init__(self,\n         self.message_queue = message_queue\n         self.timeout = timeout\n         self.debugger = debugger\n+        self.profile = profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:34:08Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:34:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MjgwNQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203862805","bodyText":"which files are profiled? ;) --> the name has to become better still :)","diffHunk":"@@ -305,6 +313,34 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def _dump_profiled_files(self, profiler):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:35:53Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:35:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MzA3OQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203863079","bodyText":"since you use path only here, you could inline it","diffHunk":"@@ -305,6 +313,34 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def _dump_profiled_files(self, profiler):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        else:\n+            if not (os.path.exists(self.profile) and\n+                    os.path.isdir(self.profile)):\n+                os.mkdir(os.path.join(self.profile))\n+            path = os.path.join(self.profile, filename)\n+            profiler.dump_stats(path)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:36:48Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:36:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2Mzk1Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203863957","bodyText":"the exception should be inside __init__. Don't allow to create bears that can't run.","diffHunk":"@@ -318,8 +354,13 @@ def run_bear_from_section(self, args, kwargs):\n             self.warn('The bear {} cannot be executed.'.format(\n                 self.name), str(err))\n             return\n-        if self.debugger:\n+        if self.profile and self.debugger:\n+            raise ValueError('Invalid argument passed, run debugger or '\n+                             'profiler one at a time.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:39:36Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:39:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjExNw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866117","bodyText":"a Performant Bears --> performant bears\nNever use \"a\" for plurals. A plural form without \"a\" is equivalent and a grammatical correct sentence.","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:47:11Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:47:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjI1Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866256","bodyText":"to to","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:47:40Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:47:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjM1OA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866358","bodyText":"all the bears","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:48:02Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:48:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjUzNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866534","bodyText":"will get profile be profiled","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:48:40Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:48:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NzYwMA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203867600","bodyText":"I would place a period here so it's easier to read:\n\"In a section will be profiled. Profile data will be saved in the specified directory or path.\"","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:52:29Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:52:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2Nzc2OA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203867768","bodyText":"Up to you: Maybe we shouldn't document that, people will understand what the naming scheme means once they see a profile dump.","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'\n+        ' or the path with name format {section.name}_{bear.name}.prof.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjczMDg1MA==","createdAt":"2018-07-20T05:24:57Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-19T20:53:03Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:53:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2ODIxOQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203868219","bodyText":"and what if it's false? ;) This is not so bullet proof, especially as coala allows words like \"yes\", \"nope\" ... as boolean values. I know we have done it for the debugger feature like this, but maybe now is the time to start thinking about that.","diffHunk":"@@ -312,6 +312,11 @@ def instantiate_bears(section,\n     :param console_printer:  Object to print messages on the console.\n     :return:                 The local and global bear instance lists.\n     \"\"\"\n+    profile = (False if 'profile' not in section or (\n+                section['profile'].value == 'False') else (","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:54:41Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:54:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkzNjA3Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203936077","bodyText":"Makman we are not handeling the ValueError in processing.py should I handle the ValueError so that other bear can initialize and  run?","diffHunk":"@@ -318,8 +354,13 @@ def run_bear_from_section(self, args, kwargs):\n             self.warn('The bear {} cannot be executed.'.format(\n                 self.name), str(err))\n             return\n-        if self.debugger:\n+        if self.profile and self.debugger:\n+            raise ValueError('Invalid argument passed, run debugger or '\n+                             'profiler one at a time.')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-20T04:37:49Z","lastEditedAt":null,"updatedAt":"2018-07-20T04:37:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk0MDQxNg==","url":"https://github.com/coala/coala/pull/5599#discussion_r203940416","bodyText":"Although this will be included in Profiling Interface doc but I want to be here as sometimes people like me use --help to get the information about flag 😛","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'\n+        ' or the path with name format {section.name}_{bear.name}.prof.')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-20T05:24:26Z","lastEditedAt":"2018-07-20T05:24:47Z","updatedAt":"2018-07-20T05:24:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDEwOTMzMQ==","url":"https://github.com/coala/coala/pull/5599#issuecomment-410109331","bodyText":"@RaiVaibhav , you might need the Windows trick that is being used at https://github.com/coala/coala-bears/pull/2523/files#diff-c3fb76c94bc425a8cdc7577d5d0e3e31R60","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUxMA==","createdAt":"2018-08-04T08:03:45Z","content":"THUMBS_DOWN","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-03T00:40:43Z","lastEditedAt":null,"updatedAt":"2018-08-03T00:40:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDEzNjE3Ng==","url":"https://github.com/coala/coala/pull/5599#issuecomment-410136176","bodyText":"shutil.rmtree will throw NotADirectoryError as I am checking for the file :)","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUwNw==","createdAt":"2018-08-04T08:03:40Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-03T03:46:42Z","lastEditedAt":null,"updatedAt":"2018-08-03T03:46:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDEzNjQwMA==","url":"https://github.com/coala/coala/pull/5599#issuecomment-410136400","bodyText":"I findout the reason of previous problem here  https://www.logilab.org/blogentry/17873\nSo instead of hardcoding I used NamedTemporaryFile + with so solve the problem.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODQ5NQ==","createdAt":"2018-08-04T08:03:02Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-03T03:48:34Z","lastEditedAt":null,"updatedAt":"2018-08-03T03:48:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533270038000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5610","number":5610,"title":"Bears.py: Add Debugger Setting toolset","body":"Add the code of Settings inspection\ntoolset so that user can access the\nsettings of a Bear in Debug environment\nand add initial test.\nRelated to #5545","comments":11,"createdAt":"2018-07-08T14:11:00Z","updatedAt":"2018-08-03T04:20:38Z","closedAt":"2018-07-27T09:32:03Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"},{"name":"status/ci-approved","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5610","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2ODEyNg==","url":"https://github.com/coala/coala/pull/5610#discussion_r201468126","bodyText":"why not just declaring an optional argument bear=None? Then you don't need to pop it off from kwargs","diffHunk":"@@ -26,6 +26,11 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, **kwargs):\n+        self.bear = kwargs.get('bear', None)\n+        kwargs.pop('bear', None)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjI2NDAxMQ==","createdAt":"2018-07-10T20:30:51Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-10T19:36:33Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:36:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3MDU3MA==","url":"https://github.com/coala/coala/pull/5610#discussion_r201470570","bodyText":"that should be\nself.message('%s = %r' % (param, section_params_dict[param] if param in section_params_dict else md.optional_params[param][2]))","diffHunk":"@@ -34,6 +39,19 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        md = self.bear.get_metadata()\n+        section_params_dict = md.create_params_from_section(self.bear.section)\n+        for param in md.non_optional_params:\n+            self.message('%s = %r' % (param, section_params_dict[param]))\n+        for param in md.optional_params:\n+            if param in section_params_dict:\n+                self.message('%s = %r' % (param, section_params_dict[param]))\n+            else:\n+                self.message('%s = %r' % (param,\n+                                          md.optional_params[param][2]))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjI2MzkwMg==","createdAt":"2018-07-10T20:29:08Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-10T19:45:50Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:45:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTgzNjk3NQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r201836975","bodyText":"redundant braces after else","diffHunk":"@@ -34,6 +38,17 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        md = self.bear.get_metadata()\n+        section_params_dict = md.create_params_from_section(self.bear.section)\n+        for param in md.non_optional_params:\n+            self.message('%s = %r' % (param, section_params_dict[param]))\n+        for param in md.optional_params:\n+            self.message('%s = %r' % (param, section_params_dict[param] if\n+                                      param in section_params_dict else (","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-11T20:58:44Z","lastEditedAt":null,"updatedAt":"2018-07-11T20:58:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTgzNzc4Ng==","url":"https://github.com/coala/coala/pull/5610#discussion_r201837786","bodyText":"with_self_onscope?","diffHunk":"@@ -489,6 +498,16 @@ def test_debug_run_with_no_return(self, runcall):\n         kwargs = {}\n         self.assertIsNone(my_bear.run_bear_from_section(args, kwargs))\n \n+    def test_debugger_settings_with_self_onscope(self):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-11T21:01:27Z","lastEditedAt":null,"updatedAt":"2018-07-11T21:01:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTgzNzk5Nw==","url":"https://github.com/coala/coala/pull/5610#discussion_r201837997","bodyText":"maybe put bear=None after *args?","diffHunk":"@@ -26,6 +26,10 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, bear=None, *args, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-11T21:02:10Z","lastEditedAt":null,"updatedAt":"2018-07-11T21:02:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU0MDU0MQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r202540541","bodyText":"when there bear object is none i.e., debug_run(self.run, Debugger(bear=None), *args, **kwargs) then if use tries to use the settings commands it will give a message \"Name 'settings' is not defined.\" (self.error is actually print function so it will be like a error message)","diffHunk":"@@ -34,6 +38,21 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        if self.bear is not None:\n+            md = self.bear.get_metadata()\n+            section_params_dict = md.create_params_from_section(\n+                                  self.bear.section)\n+            for param in md.non_optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param]))\n+            for param in md.optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param] if\n+                                          param in section_params_dict else\n+                                          md.optional_params[param][2]))\n+            return 1\n+        else:\n+            self.error(\"Name 'settings' is not defined.\")","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-15T11:38:13Z","lastEditedAt":"2018-07-15T11:39:33Z","updatedAt":"2018-07-15T11:39:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjg4ODk5Mg==","url":"https://github.com/coala/coala/pull/5610#discussion_r202888992","bodyText":"Can't changed to debug_run(self.run, *args, Debugger(bear=self), **kwargs) for python3.4 during running pytest it will throw SyntaxError SyntaxError: only named arguments may follow *expression","diffHunk":"@@ -319,7 +338,7 @@ def run_bear_from_section(self, args, kwargs):\n                 self.name), str(err))\n             return\n         if self.debugger:\n-            return debug_run(self.run, Debugger(), *args, **kwargs)\n+            return debug_run(self.run, Debugger(bear=self), *args, **kwargs)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjcxNzM3NA==","createdAt":"2018-07-19T21:00:26Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-07-17T04:06:21Z","lastEditedAt":null,"updatedAt":"2018-07-17T04:06:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDExNjg5Mw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204116893","bodyText":"invoke super.__init__ always as soon as possible.","diffHunk":"@@ -26,6 +26,10 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        self.bear = bear\n+        super(Debugger, self).__init__(*args, **kwargs)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T17:33:30Z","lastEditedAt":null,"updatedAt":"2018-07-20T17:33:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDExNzMxOA==","url":"https://github.com/coala/coala/pull/5610#discussion_r204117318","bodyText":"It's a good habit to not run into weird states of the object, since you don't know what might happen to self.bear in the meanwhile. C++ for example enforces you to initialize other supers first (a slightly different syntax though), or Java does the same, which is often a good decision.","diffHunk":"@@ -26,6 +26,10 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        self.bear = bear\n+        super(Debugger, self).__init__(*args, **kwargs)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T17:35:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T17:35:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyMjc1Mw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204122753","bodyText":"If not passing a bear is an erroneous state, raise an exception while instantiating the debugger. This is easiest and will always require you to initialize the debugger properly.","diffHunk":"@@ -34,6 +38,21 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        if self.bear is not None:\n+            md = self.bear.get_metadata()\n+            section_params_dict = md.create_params_from_section(\n+                                  self.bear.section)\n+            for param in md.non_optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param]))\n+            for param in md.optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param] if\n+                                          param in section_params_dict else\n+                                          md.optional_params[param][2]))\n+            return 1\n+        else:\n+            self.error(\"Name 'settings' is not defined.\")","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjc2NTg1MQ==","createdAt":"2018-07-20T18:20:57Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-20T17:53:54Z","lastEditedAt":null,"updatedAt":"2018-07-20T17:53:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNDk1OQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r204124959","bodyText":"without checking that the settings are actually printed this test is not very representative^^","diffHunk":"@@ -489,6 +498,18 @@ def test_debug_run_with_no_return(self, runcall):\n         kwargs = {}\n         self.assertIsNone(my_bear.run_bear_from_section(args, kwargs))\n \n+    def test_do_settings(self):\n+        section = Section('name', None)\n+        section.append(Setting('x', '85'))\n+        section.append(Setting('y', 'kbc3'))\n+        section.append(Setting('z', '75'))\n+        my_bear = TestOneBear(section, self.queue)\n+        dbg = Debugger(bear=my_bear)\n+        arg = ()\n+        self.assertEqual(dbg.do_settings(arg), 1)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:01:58Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:01:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyOTcxMg==","url":"https://github.com/coala/coala/pull/5610#discussion_r204129712","bodyText":"@Makman2  I think thats why we created a ideal test DebugBearsTest ?, I will try with mock and make test more effective","diffHunk":"@@ -489,6 +498,18 @@ def test_debug_run_with_no_return(self, runcall):\n         kwargs = {}\n         self.assertIsNone(my_bear.run_bear_from_section(args, kwargs))\n \n+    def test_do_settings(self):\n+        section = Section('name', None)\n+        section.append(Setting('x', '85'))\n+        section.append(Setting('y', 'kbc3'))\n+        section.append(Setting('z', '75'))\n+        my_bear = TestOneBear(section, self.queue)\n+        dbg = Debugger(bear=my_bear)\n+        arg = ()\n+        self.assertEqual(dbg.do_settings(arg), 1)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-20T18:19:34Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:19:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5ODE2Nw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204498167","bodyText":"since bear is actually not optional, you should remove the default value None","diffHunk":"@@ -26,6 +26,14 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T17:54:32Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:54:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5ODQ3Mw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204498473","bodyText":"I would actually just say \"Bear missing\". That is short and easy to understand :P","diffHunk":"@@ -26,6 +26,14 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        if bear is None:\n+            raise ValueError('Invalid argument passed. Bear object '\n+                             'must passed as a argument for inspecting bear '\n+                             'settings in debugging environment.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T17:55:27Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:55:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5ODU4Ng==","url":"https://github.com/coala/coala/pull/5610#discussion_r204498586","bodyText":"Maybe make even a type-check: if not isinstance(bear, Bear)","diffHunk":"@@ -26,6 +26,14 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        if bear is None:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T17:55:49Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:55:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDg5OTUzNA==","url":"https://github.com/coala/coala/pull/5610#discussion_r204899534","bodyText":"bear should be before *args","diffHunk":"@@ -26,6 +26,12 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-24T20:27:23Z","lastEditedAt":null,"updatedAt":"2018-07-24T20:27:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDg5OTY0MQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r204899641","bodyText":"hm now it's not really missing, but it's not a bear ^^","diffHunk":"@@ -26,6 +26,12 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear, **kwargs):\n+        if not isinstance(bear, Bear):\n+            raise ValueError('Bear missing.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-24T20:27:49Z","lastEditedAt":null,"updatedAt":"2018-07-24T20:27:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDE0MDE1MQ==","url":"https://github.com/coala/coala/pull/5610#issuecomment-410140151","bodyText":"Related to #1101","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-03T04:20:38Z","lastEditedAt":null,"updatedAt":"2018-08-03T04:20:38Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534073165000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5627","number":5627,"title":"Integrate FileFactory with the core","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":26,"createdAt":"2018-07-11T18:35:17Z","updatedAt":"2018-08-12T11:26:05Z","closedAt":"2018-08-12T11:25:28Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5627","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg0OTEwMQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203849101","bodyText":"hm okay so right now we actually try to be smart and detect the encoding... maybe we should really offer different encodings when accessing FileFactory.string (or provide a separate decode function, while string is utf-8 by default). But let's save that for later","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T19:46:17Z","lastEditedAt":null,"updatedAt":"2018-07-19T19:46:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg0OTIyMQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203849221","bodyText":"please a comment why we do this here :) (accessing .string without using its value)","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T19:46:47Z","lastEditedAt":null,"updatedAt":"2018-07-19T19:46:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NDczOQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203854739","bodyText":"ah only list works here? :)","diffHunk":"@@ -498,6 +500,8 @@ def yield_ignore_ranges(file_dict):\n         if file is None:\n             continue\n \n+        file = list(file.lines)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:06:41Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:06:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NjM0Mg==","url":"https://github.com/coala/coala/pull/5627#discussion_r203856342","bodyText":"It's still a dict, isn't it?","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:12:45Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:12:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NjY0Mw==","url":"https://github.com/coala/coala/pull/5627#discussion_r203856643","bodyText":"we could actually override __getitem__ for FileFactory, then you don't have to use lines explicitly ;) However, this is clearer anyway.","diffHunk":"@@ -221,7 +222,7 @@ def print_lines(console_printer,\n                               color=FILE_LINES_COLOR,\n                               end='')\n \n-        line = file_dict[sourcerange.file][i - 1].rstrip('\\n')\n+        line = file_dict[sourcerange.file].lines[i - 1].rstrip('\\n')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:13:56Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:13:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MDE4OA==","url":"https://github.com/coala/coala/pull/5627#discussion_r203860188","bodyText":"file is now a FileFactory? This doesn't seem to be backwards compatible^^ Everybody has to change bears^^","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:26:05Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:26:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MDM5MQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203860391","bodyText":"I want to do the switch of actually using file factories in the nextgen-core. So internally we already work with them, but at bears side nothing changes.","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:26:49Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:26:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMjg3NA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204002874","bodyText":"We talked about not calling it a file_dict and instead a file_set but that was a long time ago before GSoC I think. I will change it back to a file_dict for now and we can decide on a better name afterwards.","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:31:42Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:31:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMzUxOA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204003518","bodyText":"Its to invoke FileFactory.string in case of raw files to raise a UnicodeDecode error so that we can move into the except clause that handles the raw files. Its the only workaround we have for the old core. I think you suggested this to me.\nI will add a comment explaining it 👍","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:34:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:34:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwNzE3NQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r204007175","bodyText":"you are right that's unnecessary tuple works too 😅\nRemoved list","diffHunk":"@@ -498,6 +500,8 @@ def yield_ignore_ranges(file_dict):\n         if file is None:\n             continue\n \n+        file = list(file.lines)","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:51:32Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:51:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAyMjIyMw==","url":"https://github.com/coala/coala/pull/5627#discussion_r204022223","bodyText":"So the FileFactories are all collected in get_file_dict and then they are passed around in the bears for analysis right. So before this the bears used to receive the file-contents.\nCan you explain this to me a little better? What would the bears receive now to run the analysis on whether it is FileFactory or FileFactory.lines? I don't know all the details of a coala run.\nIs there a part of the codebase where we can make changes so that all the bears receive only the file contents and not the objects so that we don't have to change the bears implementation individually, you know like a middleware between the collection of objects and the actual analysis?","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T12:04:05Z","lastEditedAt":"2018-07-20T12:05:16Z","updatedAt":"2018-07-20T12:05:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwNjUwMA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204106500","bodyText":"Can you explain this to me a little better? What would the bears receive now to run the analysis on whether it is FileFactory or FileFactory.lines? I don't know all the details of a coala run.\n\nDefinitely FileFactory.lines for now. The old bears expect that currently.\n\nIs there a part of the codebase where we can make changes so that all the bears receive only the file contents and not the objects so that we don't have to change the bears implementation individually, you know like a middleware between the collection of objects and the actual analysis?\n\nYeah inside Processing.py. Instead of giving bears the file factory objects, give them file_factory.lines. I know we currently loose the lazy-loading capability with that, but that's easiest for now.\nIf you want to keep the lazy loading capabilities, we could write (like you suggested) some kind of \"middleware\", meaning we have a proxy dict object that gives access to file contents that works the same way as before for bears, but calls the right functions of FileFactory in the background.\nLike:\nclass FileDict:  # mimics dict\n    def __getitem__(self, filename):\n        return self._my_file_middlewares[filename]\n    #...\n\nclass FileMiddleware:\n    def __getitem__(self, lineindex):\n        return self._underlying_file_proxy.lines[lineindex]\n    #...","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T16:54:36Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:54:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNTkyMw==","url":"https://github.com/coala/coala/pull/5627#discussion_r204125923","bodyText":"fine with me 👍","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T18:05:27Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:05:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNjI3OA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204126278","bodyText":"Its to invoke FileFactory.string in case of raw files to raise a UnicodeDecode error so that we can move into the except clause that handles the raw files. Its the only workaround we have for the old core. I think you suggested this to me.\n\nI know, I just wanted to encourage you to explain it to others reading the code as well that are not into the topic ;)","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T18:06:44Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:06:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNDI5MTY1OQ==","url":"https://github.com/coala/coala/pull/5627#issuecomment-404291659","bodyText":"These are the failing tests out of which the ignore ranges tests seems to be the toughest one to fix.\nFAIL tests/coalaCITest.py::coalaCITest::test_find_no_issues\nFAIL tests/coalaCITest.py::coalaCITest::test_find_no_issues_debug\nFAIL tests/coalaCITest.py::coalaCITest::test_section_ordering\nFAIL tests/coalaTest.py::coalaTest::test_coala_with_color\nFAIL tests/coalaTest.py::coalaTest::test_coala_without_color\nFAIL tests/output/ConsoleInteractionTest.py::ConsoleInteractionTest::test_print_results_multiple_ranges\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_yield_ignore_ranges\nFAIL tests/results/result_actions/ShowPatchActionTest.py::ShowPatchActionTest::test_apply\nFAIL tests/testing/LocalBearTestHelperTest.py::LocalBearCheckResultsTest::test_bad_assertComparableObjectsEqual\nFAIL tests/testing/LocalBearTestHelperTest.py::LocalBearCheckResultsTest::test_good_assertComparableObjectsEqual","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-11T19:58:51Z","lastEditedAt":"2018-07-13T14:15:40Z","updatedAt":"2018-07-13T14:15:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533312843000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5638","number":5638,"title":"LocalBearTestHelper: Modify for `aspects` testing","body":"This modifies LocalBearTestHelper to make it compatible\nfor testing aspects in coala-bears.\nCloses #5637\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-07-18T08:16:49Z","updatedAt":"2018-08-03T16:14:03Z","closedAt":"2018-08-03T16:14:00Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/needs rebase","color":"e52db1"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5638","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzM2MDYxMQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r203360611","bodyText":"It is better to make a new AspectsTestBear instead of changing the TestBear IMO.","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0NTE4Ng==","createdAt":"2018-07-18T18:08:43Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-18T12:35:13Z","lastEditedAt":null,"updatedAt":"2018-07-18T12:35:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ0NDU0OQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r203444549","bodyText":"I don't think there's a need for that, after all each of the existing actual coala bear code will be modified to make it compatible with aspects, we won't be creating new bears which work with aspects. That is what is to be tested here.","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-18T16:24:20Z","lastEditedAt":null,"updatedAt":"2018-07-18T16:24:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTY4Mw==","url":"https://github.com/coala/coala/pull/5638#discussion_r203475683","bodyText":"But we need tests to ensure the old bear system does not break.\nPlease create a subclass AspectsTestBear","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-18T18:02:53Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:02:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NzM3MQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r203477371","bodyText":"This should be aspects=[get_aspect('Indentation')] only, and even that should not be necessary. This info can be obtained by default from the bear metadata (if not we need to fix it).\nAll this dirty work must be done in verify_local_bear.","diffHunk":"@@ -26,6 +30,22 @@\n                               valid_files=files,\n                               invalid_files=())\n \n+language = str(TestBear.languages[0])\n+aspect_list = [get_aspect('Indentation')(language, allow_trailing_spaces=True)]\n+\n+invalidAspectTest = verify_local_bear(TestBear,\n+                                      valid_files=(),\n+                                      invalid_files=files,\n+                                      settings={'result': False},\n+                                      aspects=AspectList(aspect_list),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-18T18:08:24Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:08:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYwNjcwNg==","url":"https://github.com/coala/coala/pull/5638#discussion_r203606706","bodyText":"@jayvdb prior to this design, I had tried to make the aspect_list in verify_local_bear only, doing something like this\naspect_list = []\nfor aspect_setting, value in aspects.items():\n    aspect, taste = aspect_setting\n    aspect_list.append([get_aspect(aspect)(language, taste=value)])\naspects = AspectList(aspect_list)\n\nBut aspects are not interpreting this to AspectList([get_aspect('TrailingSpace')(language, allow_trailing_spaces=True)]) while passing aspect_list={('TrailingSpace', 'allow_trailing_spaces'): True} from the tests. This is because taste=value is interpreting as taste=True not allow_trailing_spaces=True, even tried string 'allow_trailing_spaces'=True gives an error that you can't assign to a string literal.  Even tried passing dictionary to it but no good. And we can't set the tastes after creating the aspect object in the current aspect core.\nI spent 4 hours brainstorming on this, but of no use. That is why I redesigned the whole thing. And this is the design we have been following for tests in mapping functions like map_setting_to_aspect as well (\n  \n    \n      coala/tests/bearlib/aspects/DecoratorsTest.py\n    \n    \n         Line 47\n      in\n      2843072\n    \n    \n    \n    \n\n        \n          \n           self.section.aspects = AspectList([ \n        \n    \n  \n\n).","diffHunk":"@@ -26,6 +30,22 @@\n                               valid_files=files,\n                               invalid_files=())\n \n+language = str(TestBear.languages[0])\n+aspect_list = [get_aspect('Indentation')(language, allow_trailing_spaces=True)]\n+\n+invalidAspectTest = verify_local_bear(TestBear,\n+                                      valid_files=(),\n+                                      invalid_files=files,\n+                                      settings={'result': False},\n+                                      aspects=AspectList(aspect_list),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-19T05:39:27Z","lastEditedAt":null,"updatedAt":"2018-07-19T05:39:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTczODEzOQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r205738139","bodyText":"Now it's being tested using AspectsGeneralTestBear created in the languages=all patch.","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-27T10:57:43Z","lastEditedAt":null,"updatedAt":"2018-07-27T10:57:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODA4NQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928085","bodyText":"finish this line at the open (, and dedent everything after it to start at 4 spaces and keep indenting from there.\nthen you wont hit 80cpl so quickly and need to squish everything in the last 10 chars.","diffHunk":"@@ -25,6 +30,25 @@\n validTest = verify_local_bear(TestBear,\n                               valid_files=files,\n                               invalid_files=())\n+min_files = ('This is valid.',)\n+max_files = ('This is particularly an invalid file',)\n+AspectTest = verify_local_bear(AspectsGeneralTestBear,\n+                               valid_files=min_files,\n+                               invalid_files=max_files,\n+                               aspects=AspectList([\n+                                    get_aspect('LineLength')(\n+                                        'Unknown', max_line_length=20),\n+                                    ]),\n+                               )\n+PriorityAspectsTest = verify_local_bear(AspectsGeneralTestBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:12:37Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:12:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODEwMQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928101","bodyText":"revise the layout to use the 80 cpl effectively.","diffHunk":"@@ -25,6 +30,25 @@\n validTest = verify_local_bear(TestBear,\n                               valid_files=files,\n                               invalid_files=())\n+min_files = ('This is valid.',)\n+max_files = ('This is particularly an invalid file',)\n+AspectTest = verify_local_bear(AspectsGeneralTestBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:13:05Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:13:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODIxOA==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928218","bodyText":"default to None, not empty list.\nmake adjustments anywhere else that breaks when it encounters None.","diffHunk":"@@ -275,7 +295,9 @@ def check_line_result_count(self,\n                                 force_linebreaks=True,\n                                 create_tempfile=True,\n                                 tempfile_kwargs={},\n-                                settings={}):\n+                                settings={},\n+                                aspects=[],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:16:37Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:16:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODIyOA==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928228","bodyText":"aspects=None,","diffHunk":"@@ -314,6 +340,7 @@ def verify_local_bear(bear,\n                       invalid_files,\n                       filename=None,\n                       settings={},\n+                      aspects=[],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:16:56Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:16:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODI2OA==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928268","bodyText":"only set this if aspects has a value.","diffHunk":"@@ -352,6 +381,7 @@ def setUp(self):\n                             queue.Queue())\n             for name, value in settings.items():\n                 self.section.append(Setting(name, value))\n+            self.section.aspects = aspects","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:18:05Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:18:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjc4MTYyMw==","url":"https://github.com/coala/coala/pull/5638#issuecomment-406781623","bodyText":"Blocked until it is working correctly in a bears repo PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T08:48:54Z","lastEditedAt":null,"updatedAt":"2018-07-21T08:48:54Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533480610000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5422","number":5422,"title":"Update .coafile","body":"Issue link - #5389\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-04-24T16:54:40Z","updatedAt":"2018-08-05T14:50:10Z","closedAt":"2018-05-03T15:53:45Z","state":"closed","user":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4"},"owner":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5422","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4NDAwNjcyOQ==","url":"https://github.com/coala/coala/pull/5422#issuecomment-384006729","bodyText":"please follow our commit guidelines: https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html :)","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-04-24T17:02:00Z","lastEditedAt":"2018-04-24T17:02:29Z","updatedAt":"2018-04-24T17:02:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDAwNzgxMA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-384007810","bodyText":"@anctartica Thanks for guidance :)","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-04-24T17:05:33Z","lastEditedAt":null,"updatedAt":"2018-04-24T17:05:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjAyMzk3Ng==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386023976","bodyText":"change your commit according to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-02T15:44:15Z","lastEditedAt":null,"updatedAt":"2018-05-02T15:44:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjAyNDcyOA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386024728","bodyText":"Hey @anctartica I see you haven't followed the commit guidelines. I cannot see the shortlog and issue link in your commit message. Use git commit --amend to change your commit message.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-05-02T15:46:32Z","lastEditedAt":null,"updatedAt":"2018-05-02T15:46:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMyODc4Mw==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386328783","bodyText":"@ishanSrt  , I have changed the commits please check","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-03T15:08:38Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:08:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMyOTk3MA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386329970","bodyText":"@vishal3410 your commit has unnecessary changes. Are you using the same branch for different issues? Please remove all the extra stuff.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-03T15:12:17Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:12:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMzMzk5Mw==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386333993","bodyText":"@ishanSrt till now i have only removed those 3 things and i didn't altered any other files but still it shows 5 files changed i don't know how and i am not working on any other issue,how to remove the other things ? sorry for silly questions","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-03T15:24:17Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:24:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMzNDY5Mw==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386334693","bodyText":"@vishal3410 that question is more suited for google and stackoverflow. So fix it! 😉","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-03T15:26:17Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:26:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjM0NDM2Ng==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386344366","bodyText":"@vishal3410 please go through the newcomer's guide once more and see a git tutorial. Closing PRs is highly discouraged 😕","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-03T15:54:50Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:54:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjM0NTY5OQ==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386345699","bodyText":"Accidently closed trying to reopen","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-03T15:58:57Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:58:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Njc2OTk2OA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386769968","bodyText":"@vishal3410 , if you commit new changes to your branch, this PR might re-open.\nBut maybe because you deleted the branch, it may be irreversible.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-05T01:32:30Z","lastEditedAt":null,"updatedAt":"2018-05-05T01:32:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjgxOTM0Mg==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386819342","bodyText":"so should i submit a new pr ?","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-05T16:54:51Z","lastEditedAt":null,"updatedAt":"2018-05-05T16:54:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYyNTc5NQ==","url":"https://github.com/coala/coala/pull/5422#issuecomment-408625795","bodyText":"No, do not create a new PR.\nYou will need to rebase, and repush, and this PR should re-open magically (or I may have to re-open it after you've done that).\nCome onto https://coala.io/chat if you need help with that.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T18:14:01Z","lastEditedAt":null,"updatedAt":"2018-07-28T18:14:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533480611000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5462","number":5462,"title":".coafile: Remove pycodestyle_ignore list items","body":"This change removes specified items from the pycodestyle_ignore variable\nCloses #5389","comments":20,"createdAt":"2018-05-15T20:24:14Z","updatedAt":"2018-08-05T14:50:11Z","closedAt":"2018-05-16T17:56:56Z","state":"closed","user":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"owner":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5462","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQ2MTIyNg==","url":"https://github.com/coala/coala/pull/5462#discussion_r188461226","bodyText":"Why add this into .gitignore?\nIt does not seem to be related to the issue.","diffHunk":"@@ -52,3 +52,4 @@ GTAGS\n GRTAGS\n GPATH\n GSYMS\n+/.vs","author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-15T22:59:59Z","lastEditedAt":null,"updatedAt":"2018-05-15T22:59:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODUxMTU0MA==","url":"https://github.com/coala/coala/pull/5462#discussion_r188511540","bodyText":"I agree with @z1ggy-o, this change needs to be removed from your commit.\nIt is a separate problem. and should not be included in your PR.","diffHunk":"@@ -52,3 +52,4 @@ GTAGS\n GRTAGS\n GPATH\n GSYMS\n+/.vs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-16T06:10:18Z","lastEditedAt":null,"updatedAt":"2018-05-16T06:10:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODYxNTA1MA==","url":"https://github.com/coala/coala/pull/5462#discussion_r188615050","bodyText":"I removed the addition in line right from Github and it looks like it passed all tests.\nI will figure out how to prevent that from happening at the source. Let me know if I need to provide additional edits.","diffHunk":"@@ -52,3 +52,4 @@ GTAGS\n GRTAGS\n GPATH\n GSYMS\n+/.vs","author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:01:35Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:01:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTMzNzU4OA==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389337588","bodyText":"Maybe you need to change the commit's shortlog.\nBy documentation about commit, the shortlog should starts with a capital letter, and be written in imperative present tense.","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-15T22:45:52Z","lastEditedAt":null,"updatedAt":"2018-05-15T22:45:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTM1NzU0Nw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389357547","bodyText":"I'm unsure how to keep Visual Studio from creating that file. When I choose to ignore the vs folder that's made when I make updates, it creates that entry in the file.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T00:35:02Z","lastEditedAt":null,"updatedAt":"2018-05-16T00:35:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxMDQzMg==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389510432","bodyText":"You may need to squash the commits and modify you commit message to follow the commit rules.\nHere is the tutorial about how to do that.","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-16T13:02:58Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:02:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxMjQxMg==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389512412","bodyText":"@z1ggy-o Please review my commit message at the top of the pull request. It adheres to the instructions found here: https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html\nIt may have looked odd before because I didn't remove the auto-inserted text when one opens a pull request for this project. I didn't know if that would have been suppressed when I submitted the request, so I left it. It didn't suppress the boilerplate text and so that's why my commit message looked incorrect. I've since removed the boilerplate and the remaining message adheres to the standards, unless there are different standards now being used. Please advise specifically what I would need to do from now to get the PR merged.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:09:40Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:09:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxNjQwMw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389516403","bodyText":"Check my first comment.\nThe shortlog part ^ ^.","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-16T13:22:47Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:22:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxNzg0MQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389517841","bodyText":"Ok, how does that look now?","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:27:13Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:27:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUyMTE4OQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389521189","bodyText":"Your commit message is not correct.  You need to use imperative tense for the shortlog.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-16T13:37:20Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:37:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUyMTU2NQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389521565","bodyText":"emm.. You just changed this PR's title.\ncommit message is the message that is added when you do git commit in git.\nDid you read the tutorial?","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-16T13:38:29Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:38:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUyMzkwNQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389523905","bodyText":"Please forgive my ignorance. I'm still new to contributing to git/visual studio/contributing to open source projects. I have read the tutorial and it's not difficult to follow what's required. What's confusing is how to submit changes to commit messages from Visual Studio when you don't necessarily have to make changes to any file in the code repository. Please be patient with me as I attempt to put through this change.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:45:37Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:45:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU0NzgyMQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389547821","bodyText":"This has become quite the mess. I want to make the contribution because the change is well within my reach, but the barrier to entry on the changes is very high for a new comer. There is an option to have someone clean up the commit for me if I don't plan to contribute long term to the project and I think I'll have to use that option. I'll keep an eye on issues and provide assistance as I can, but I don't see myself being able to adhere to this commit process given the problems I'm having with my IDEs. Let me know if you can do that and if not, feel free to discard my branch. Apologies for the headaches.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T14:52:19Z","lastEditedAt":null,"updatedAt":"2018-05-16T14:52:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2ODA5Ng==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389568096","bodyText":"but the barrier to entry on the changes is very high for a new comer\n\nThat is just our way to train developers.\nPlease don't give up @jgarciabu I can  help you out with this PR if you are willing to work again. It isn't that tough to follow the commit guidelines . I had the same problems with my first PR but didn't give up the issue. I have been contributing for about a year now.\nSo please give it another shot.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T15:47:13Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:47:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2ODY3Mw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389568673","bodyText":"If I can delete this pull request and start over, I will try again.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T15:48:44Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:48:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2OTA2MQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389569061","bodyText":"No we will work on this same PR. Do you still have this branch locally?","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T15:49:48Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:49:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2OTE1OQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389569159","bodyText":"I do. I don't understand why my commit message is failing. This is what I want to submit and as far as I know, it adheres to the standards:\n.coafile: Remove pycodestyle_ignore list items\nThis change removes specified items from the pycodestyle_ignore variable\nCloses #5389","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T15:50:06Z","lastEditedAt":"2018-05-16T15:52:09Z","updatedAt":"2018-05-16T15:52:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU3MTg2Nw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389571867","bodyText":"Now go read this guide on how to squash your commits http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html\nOnce you enter the command in your terminal you will be taken to a screen listing all the commits that you want to squash into. Just delete all the unnecessary commit messages and keep the one with the appropriate message.\nOnce you are done squashing rebase\ngit fetch origin\ngit rebase origin/master\nthen force push\ngit push -f myfork <branch-name>","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T15:57:42Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:57:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU4OTY4Ng==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389589686","bodyText":"I've broken something on my end. I squashed into someone else entirely's commits. I don't know how that's possible but it is. I apparently squashed everything into e775013e on my end.\nI don't use git through the command prompt. I do everything through Viz studio.\nI really think a fresh start is warranted here.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T16:52:53Z","lastEditedAt":"2018-05-16T16:53:54Z","updatedAt":"2018-05-16T16:53:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU5MjEzNg==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389592136","bodyText":"Hey can you ask on the coala/coala channel on gitter its hard to help you out on this thread. We can all figure out whats the problem there.\nJust explain it what you did and someone will get back to you.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T17:00:04Z","lastEditedAt":null,"updatedAt":"2018-05-16T17:00:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533963947000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5475","number":5475,"title":"Formatting: Add tastes to `FileLength` aspect","body":"This adds min_file_length and include_blank_lines\nas tastes to FileLength aspect.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-05-22T08:50:35Z","updatedAt":"2018-08-11T05:05:47Z","closedAt":"2018-08-11T05:05:47Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5475","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NDQwMzM4Mg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-394403382","bodyText":"The description of minimum line length is not clear.\nIn some languages will it always return 1 since it is possible to combine multiple lines all into one line.\nFor example, what would the min line length be of this code sample?\nfunction fizzBuzz()\n{ \t\n   //for each number between 1 &100\n   for(var i=1;i<=100;i++)\n   {\n      //print Fizz if divisible by 3\n      if(i%3 === 0)\n      {\n         print('Fizz'); \t\n      }\n      //print Buzz if divisible by 5\n      if(i%5 === 0)\n      {\n         print('Buzz');\n      }\n      // otherwise print the number\n      if(i%3 !== 0 && i%5 !== 0)\n      {\n        print(i);\n      }\n   }\n }","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-04T15:47:16Z","lastEditedAt":"2018-06-04T21:08:49Z","updatedAt":"2018-06-04T21:08:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTAwMTI5Mg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-395001292","bodyText":"@jschwarzwalder you are exactly on point. This is the thing me and John have been debating on, all this time. Most probably, implementation of line-counting algorithms will be required to correctly predict the complexity of the code and accordingly show the number of lines.\nI had proposed min_line_length and include_blank_lines tastes as part of the FileLength aspect considering the current design of the bear (LineCountBear https://github.com/coala/coala-bears/blob/master/bears/general/LineCountBear.py) and it feels now that the bear itself needs a redesign on this plus supporting aspects on top of it.\nI think you should see coala/cEPs#148 (comment) and furthermore coala/cEPs#148 (comment) to know more.\nLay your opinions too on this.\nAnd IMO this PR needs to be closed.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-06T09:12:24Z","lastEditedAt":null,"updatedAt":"2018-06-06T09:12:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTk3MzAwNg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-395973006","bodyText":"While these mins and maxs are not very well designed, I think it is worthwhile keeping min_file_length and discarding include_blank_lines.\nmin_file_length can be used to reject really short files, especially 0 line files.  It isnt an especially useful tool, but it isnt a bad concept, and has some limited usefulness.\nAlso this min only compliments the existing max, so we are not making the problem 'worse' that it already is.\nHowever as we've established, include_blank_lines creates new problems, and the user will want other tastes as include_blank_lines is fairly limited, and we can not implement them easily.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T14:21:11Z","lastEditedAt":null,"updatedAt":"2018-06-09T14:21:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjAxODE0Ng==","url":"https://github.com/coala/coala/pull/5475#issuecomment-396018146","bodyText":"Yes, min_file_length is compatible with the present usability of the bear and so, it is ok for now. I also agree that include_blank_lines is sort of problematic for now. Once the bear is migrated, we can think of stretching its functionality.\nI have removed include_blank_lines. Please review 😃","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-10T03:55:33Z","lastEditedAt":null,"updatedAt":"2018-06-10T03:55:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjU4Mjc0MA==","url":"https://github.com/coala/coala/pull/5475#issuecomment-396582740","bodyText":"@pareksha , please remove \"This is part of GSoC 2018 project.\" (or any other reference to GSoC) from commit message, and create issues for your PRs, and using them in your commit messages.\nThat information is not relevant to the reader of the commit.\nYour issues should refer to the cEP PR, or to the cEP once it is merged.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T13:07:59Z","lastEditedAt":null,"updatedAt":"2018-06-12T13:07:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzc5NTU2Mw==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397795563","bodyText":"If the only use case currently is to detect if the file length is 0, then why not make a taste for is_empty?\nI would still have many questions about what min_file_length means. If we include it, it should qualify what would be counted.\nIf the min_file_length ignores comments and blank lines that can be helpful to know how many actual lines of code exist, but without both those qualifiers It might be too ambiguous for developers to use.\nDoes it minify the code? Does it simply count the current number of existing lines? Does it give suggestions for potential ways to reduce the number of lines with things the ternary operations?","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-16T07:59:16Z","lastEditedAt":null,"updatedAt":"2018-06-16T07:59:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0ODkzOQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397848939","bodyText":"Python has a requirement of __init__.py files, and these files are often empty. c.f. #2821\nA min length of 1 will break coala repos, but we could fix that by adding a module docstring to every empty __init__.py.  c.f. #5359","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T01:44:49Z","lastEditedAt":null,"updatedAt":"2018-06-17T01:44:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0OTEzMg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397849132","bodyText":"max_file_length defines a rule for a hard physical line count maximum.\nThe LineCountBear would implement this taste by detecting files which exceed it, and producing an error.  That bear is a detection bear, not a fixing/suggestion bear.\nWe do not have any bear which attempts to fix files which exceed a maximum line count.  That would be difficult.\nWe do not have any bear which attempts to fix files which have insufficient line count.  However this is more feasible to implement.  We could have a bear which automatically fixed a minimum line count for Python, by automatically adding a dummy docstring.  It would also be possible to fix it for any scripting language by adding a 'hashbang', but that would be dumb as the otherwise empty file probably isn't runnable.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTMzNDM0Mw==","createdAt":"2018-06-20T06:28:55Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-17T01:52:16Z","lastEditedAt":"2018-06-17T01:52:51Z","updatedAt":"2018-06-17T01:52:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0OTE3OQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397849179","bodyText":"Also please investigate the suggested_values.  What is it used for?  Why are you using this specific value for it.  It is not intuitive.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T01:54:03Z","lastEditedAt":null,"updatedAt":"2018-06-17T01:54:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTMxMzY0MQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-399313641","bodyText":"suggested_values are more or less used to suggest values (not all values that the user can put, but what the user should put to get the desirable/better results) as I see here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/Formatting.py#L253 and at many other places too. What I meant here by (1,) was that the values can be 1 or any other int but now I am also feeling that there should be more than one suggested value (and not just the default value). So, I think suggested_values in both min_file_length and max_file_length need to be changed to have more integers.\nHow about (499, 999, 4999, 9999,) in max_file_length\nand (1, 50, 100,) in min_file_length as suggested_values?","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-22T03:58:11Z","lastEditedAt":null,"updatedAt":"2018-06-22T03:58:11Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533997044000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5504","number":5504,"title":"language: Add `string_delimiter_escape` to language definitions","body":"This adds characters used to escape delimiters/quotes\nfor each language in their respective language\ndefinitions.\nThis is part of Convert Bear To Aspects GSoC project.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-06-08T10:08:14Z","updatedAt":"2018-08-11T14:17:24Z","closedAt":"2018-08-11T14:17:11Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5504","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNjMzNw==","url":"https://github.com/coala/coala/pull/5504#discussion_r209416337","bodyText":"We can merge this if they all change to being dictionaries which describe how to escape each of the items in string_delimiters\nstring_delimiter_escape = {'\"': '\\\\\"'}","diffHunk":"@@ -19,3 +19,4 @@ class C:\n         '#undef', '#ifdef', '#ifndef', '#if', '#endif', '#else', '#elif',\n         '#line', '#pragma']\n     special_chars = list(r'+-*/.;\\,()[]{}\\=<>|&^~?%!')\n+    escape_quotes = '\\\"',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzIzMQ==","createdAt":"2018-08-11T04:52:28Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-11T04:44:32Z","lastEditedAt":"2018-08-11T05:08:35Z","updatedAt":"2018-08-11T05:08:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjEzNDU0NQ==","url":"https://github.com/coala/coala/pull/5504#issuecomment-396134545","bodyText":"@jayvdb what I want this field to have is the escape_quotes by which I literally mean escaping the quote. Best illustrated with the example where printing \"This is \\\"cool\\\" in python and \"This is \"\"cool\"\"\" in Fortran both output This is \"cool\". So, basically \\\" in Python and \"\" both are used for escaping \" quotes. This is how both fields relate. Do let me now if you agree with me so that I can proceed or the design needs to change.\nOne more question, where to add the documentation for escape_quotes (Also let me know whether the name feels right to you)?","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-11T06:22:22Z","lastEditedAt":"2018-06-11T06:23:27Z","updatedAt":"2018-06-11T06:23:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDIwMTA4NQ==","url":"https://github.com/coala/coala/pull/5504#issuecomment-400201085","bodyText":"Documentation should be done according to pep 257","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-26T07:00:31Z","lastEditedAt":null,"updatedAt":"2018-06-26T07:00:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTAwNjkyMg==","url":"https://github.com/coala/coala/pull/5504#issuecomment-401006922","bodyText":"Blocked on a decent language definition for at least Tcl, possibly m4 and VB #5578 , so that we can better see how escaping works.  Also we're finding lots of implicit limitations, which maybe can not be solved easily, but we can make them explicit limitations so we know we cant support certain languages due to properties of the language. (And this will also help the quickstart green project, as they can skip relevant bears for languages which it is unable to parse at all)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T11:43:27Z","lastEditedAt":null,"updatedAt":"2018-06-28T11:43:27Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534562396000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5505","number":5505,"title":"LocalBearTestHelper.py: Inherit from `BaseTestHelper`","body":"This adds BaseTestHelper class, base class of all bears'\ntests, to the LocalBearTestHelper.\nRelated to https://gitlab.com/coala/GSoC/GSoC-2018/issues/332\nCloses #5501","comments":3,"createdAt":"2018-06-08T18:31:22Z","updatedAt":"2018-08-18T03:19:56Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5505","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDc4NzAwMw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194787003","bodyText":"this is a backwards incompatible change.\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.  They all need to be rewritten, just like LocalBearTestHelper in this patch has needed to be completely rewritten.\nMost features of pytest that we want to use co-exist nicely with unittest classes.\nhttps://github.com/pytest-dev/pytest/blob/master/doc/en/unittest.rst#pytest-features-in-unittesttestcase-subclasses\nhttps://pypi.org/project/pytest-restrict/ explicitly supports unittest classes; that is what it is used for ... enforcing unittest classes when Django developers are using pytest, and should be using their customised Django unittest sub-classes.\nThat said, it is in the cEP (https://github.com/coala/cEPs/pull/149/files#diff-f29c16068974a5d9aff2fdeb6295bfdeR51), and we can deal with bears being broken while it is being patched, so this is feasible, but it is not desirable IMO without a good reason for why we are unnecessarily creating a breakage.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T15:35:18Z","lastEditedAt":"2018-06-12T15:40:19Z","updatedAt":"2018-06-12T15:40:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDc5MjM0Mw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194792343","bodyText":"Two of the features I find most useful, namely parametrization and fixtures, do not work with unittest. That's why we want to get rid of it.\nBut I see the difficulty of introducing this change into an existing test suite. @sangamcse do you think it's feasible to keep the unittest dependency for now and still use the base class?","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-12T15:49:09Z","lastEditedAt":null,"updatedAt":"2018-06-12T15:49:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1NTc5Mw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194855793","bodyText":"In this case, only class name has changed which is done by adding Test as suffix to the class name. And all bears' tests has Test as suffix to their test class name\n\nThey all need to be rewritten, just like LocalBearTestHelper in this patch has needed to be completely rewritten.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T19:08:49Z","lastEditedAt":"2018-06-12T19:11:43Z","updatedAt":"2018-06-12T19:11:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1OTQwMw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194859403","bodyText":"I tried testing coala-bears locally. All tests passed except MarkdownBear.\n\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T19:22:24Z","lastEditedAt":null,"updatedAt":"2018-06-12T19:22:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDk2MjY2NA==","url":"https://github.com/coala/coala/pull/5505#discussion_r194962664","bodyText":"Another idea would be to deprecate the existing LocalBearTestHelper, leave it as it is now and create a new one, which is based on the new base class and can be rolled out step by step.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-13T05:53:38Z","lastEditedAt":null,"updatedAt":"2018-06-13T05:53:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAwMjI2Nw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195002267","bodyText":"@jayvdb, you are right. I tried to test coala-bears by cloning this branch in another venv in my system. It collected 212 test items instead of 856 test items. So it will break coala-bears test if we go on directly with this changes.\n\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.\n\nI agree with @NiklasMM. We can go on by creating new one, deprecating the existing LocalBearTestHelper if you all agree.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-13T08:52:19Z","lastEditedAt":null,"updatedAt":"2018-06-13T08:52:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAxMDkzNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195010934","bodyText":"@Makman2, your opinion?","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-13T09:17:25Z","lastEditedAt":null,"updatedAt":"2018-06-13T09:17:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAxOTE2MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195019161","bodyText":"@NiklasMM , fixtures do work, with a slightly different mechanism for some types of fixtures.\nsee https://github.com/pytest-dev/pytest/blob/master/doc/en/unittest.rst#mixing-pytest-fixtures-into-unittesttestcase-subclasses-using-marks\nand git grep fixture tests in coala-core repo.\nwrt parameterisation, and even fixtures, I didnt see the rationale given in the cEP for how those will be used to improve bear testing.  I would argue that https://github.com/wolever/parameterized is as good a solution which works well for all test frameworks.  We already have a complex set of pytest plugins, and already use testfixtures, so an additional test dependency isnt a new complexity problem.\nAnyway, my intention isnt to re-litigate that.  I am only commenting because of the huge breakage.\nLeaving the existing unittest class as-is, and deprecating it, will reduce the risk substantially.  And then at the end of the project the huge rewrite of bear tests can happen, and it wont matter if there are some bear tests which are not migrated to pytest-only style for reasons not yet predicted.\nIf the immediate goal is only to enforce a common test base class, that can be achieved by changing this class to inherit from both:\nclass LocalBearTestHelper(BaseTestHelper, unittest.TestCase):\n    ...","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTA0MDc1MQ==","createdAt":"2018-06-13T16:42:36Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-06-13T09:43:44Z","lastEditedAt":null,"updatedAt":"2018-06-13T09:43:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE4NzkwNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195187904","bodyText":"Due to pytest's assertion introspection we already get very good failure reports. This eliminates the need for custom messages in these assert statements.\nI'm not entirely sure, if that feature is enabled for unittest.TestCases. That's something you'll need to verify first.","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-13T18:21:56Z","lastEditedAt":null,"updatedAt":"2018-06-13T18:21:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE4ODAxNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195188014","bodyText":"assert len(bear_output) != 0","diffHunk":"@@ -210,7 +187,7 @@ def check_invalidity(self,\n                                   )\n         msg = (\"The local bear '{}' yields no result although it \"\n                'should.'.format(local_bear.__class__.__name__))\n-        self.assertNotEqual(len(bear_output), 0, msg=msg)\n+        assert not len(bear_output) == 0, msg","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTA2MDU2OA==","createdAt":"2018-06-13T23:49:49Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-06-13T18:22:17Z","lastEditedAt":null,"updatedAt":"2018-06-13T18:22:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2NzAzOQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195267039","bodyText":"just noting this was unused by bears repo, so no problem removing this.","diffHunk":"@@ -111,28 +111,6 @@ class LocalBearTestHelper(unittest.TestCase):\n     If you miss some methods, get in contact with us, we'll be happy to help!\n     \"\"\"\n \n-    def assertComparableObjectsEqual(self, observed_result, expected_result):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:35:46Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:35:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2NzUyMg==","url":"https://github.com/coala/coala/pull/5505#discussion_r195267522","bodyText":"please put message_base ... on a new line, so it is slightly easier to read.\nthis message change looks like it is harder to understand that the previous assertion message.","diffHunk":"@@ -78,19 +78,11 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file has '\n+                         '3 lines. != LineCountTestBea, This file has 2 '\n+                         'lines.\\n\\nmessage_base mismatch: LineCountTestBear,'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:39:32Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2ODkwNw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195268907","bodyText":"changing these to using assert ... is not part of \"Inherit from ...\" if this class also inherits from unittest.TestCase.\nSo you can investigate whether these are needed later.\nAlso rather than having custom asserts here, we can and should use arg annotations and our decororator which enforces those.  Also noted this in #5522 (comment)\nBut again, changes to these assertions is a functional change which doesnt need to be in the same commit as \"Inherit from ...\", and it does need a separate issue created where you show that the output can be improved.  As Niklas has said, pytest already gives very detailed information about any failures, and pytest does that even for unittest.TestCase subclasses, so any custom type error messages need to be better than pytest's output.","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:49:40Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:49:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2ODk5Nw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195268997","bodyText":"as above.  the way to improve these is via annotations.","diffHunk":"@@ -242,16 +219,14 @@ def check_results(self,\n                                  from which settings will be created that will\n                                  be made available for the tested bear.\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n-        self.assertIsInstance(results,\n-                              list,\n-                              msg='The given results are not a list.')\n+        assert isinstance(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:50:24Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:50:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3OTc2NQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195279765","bodyText":"@NiklasMM, when I removed the custom message, unittest's self.assertIsInstance(..) gave\nE   AssertionError: '' is not an instance of (<class 'list'>, <class 'tuple'>)\nbut pytest's assert gave\nE       AssertionError","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T01:15:45Z","lastEditedAt":null,"updatedAt":"2018-06-14T01:15:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI4MzE4MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195283181","bodyText":"This assertion message change was done in the base class https://github.com/coala/coala/blob/master/coalib/testing/BaseTestHelper.py#L24","diffHunk":"@@ -78,19 +78,11 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file has '\n+                         '3 lines. != LineCountTestBea, This file has 2 '\n+                         'lines.\\n\\nmessage_base mismatch: LineCountTestBear,'","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T01:45:33Z","lastEditedAt":null,"updatedAt":"2018-06-14T01:45:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg5NjA1MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195896051","bodyText":"this is a bug somewhere, and a regression.\n\n\norigin mismatch & message_base mismatch both say the same thing. that is confusing.  something needs to be improved.\n\n\nthe pre-existing shows the line differences, and your change doesnt.  That is a regression, making it more difficult for bear writers to see the problem, not more easy which your project was supposed to do.","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-16T06:41:53Z","lastEditedAt":null,"updatedAt":"2018-06-16T06:41:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzM2MjI0OA==","url":"https://github.com/coala/coala/pull/5505#discussion_r203362248","bodyText":"Done in PR #5564","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-18T12:41:10Z","lastEditedAt":null,"updatedAt":"2018-07-18T12:41:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2MzQ4OQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r211063489","bodyText":"Noting here that this PR is blocked by that PR -- we need useful error messages coming out of these helpers when used with test scenarios covering multiple Result objects.  And the implementation of the comparison logic should not be inside the test helpers , as it should be possible to do comparisons of Result objects any time, not just in tests.","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-18T03:19:56Z","lastEditedAt":null,"updatedAt":"2018-08-18T03:19:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjQ1MjY2OA==","url":"https://github.com/coala/coala/pull/5505#issuecomment-396452668","bodyText":"Oops, I forgot to run coala.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T03:16:10Z","lastEditedAt":null,"updatedAt":"2018-06-12T03:16:10Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534524700000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5522","number":5522,"title":"[WIP] GlobalBearTestHelper.py: Add support","body":"Closes #4884","comments":3,"createdAt":"2018-06-13T15:40:49Z","updatedAt":"2018-08-17T16:51:40Z","closedAt":"2018-08-17T16:51:17Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5522","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE0MzMzMA==","url":"https://github.com/coala/coala/pull/5522#discussion_r195143330","bodyText":"not defined","diffHunk":"@@ -0,0 +1,66 @@\n+import os.path\n+\n+from contextlib import contextmanager\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+@contextmanager\n+def execute_bear(bear, *args, **kwargs):\n+    try:\n+        bear_output_generator = bear.execute(*args, **kwargs)\n+        assert (bear_output_generator is not None\n+                ), 'Bear returned None on execution\\n'\n+        yield bear_output_generator\n+    except Exception as err:\n+        msg = []\n+        while not bear.message_queue.empty():\n+            msg.append(bear.message_queue.get().message)\n+        raise AssertionError(str(err) + ' \\n' + '\\n'.join(msg))\n+    return list(bear_output_generator)\n+\n+\n+def get_test_path(test_dir,\n+                  file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        test_dir, file)\n+\n+\n+def get_results(global_bear,\n+                test_dir,\n+                file_dict,\n+                settings={}):\n+    for file in file_dict:\n+        with get_test_path(test_dir, file) as fname, \\\n+            execute_bear(global_bear, fname, **settings\n+                         ) as bear_output:\n+            return bear_output\n+\n+\n+class GlobalBearTestHelper(BaseTestHelper):\n+    \"\"\"\n+    \"\"\"\n+\n+    def check_results(self,\n+                      global_bear,\n+                      results,\n+                      filename=None,\n+                      settings={}):\n+\n+        assert isinstance(self, BaseTestHelper)\n+        assert isinstance(\n+            global_bear, GlobalBear), 'The given bear is not a global bear.'\n+        assert isinstance(\n+            results, list), 'The given results are not a list.'\n+\n+        bear_output = get_results(global_bear,\n+                                  filename=filename,\n+                                  settings=settings)\n+        if not check_order:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:03:40Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:03:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE0MzYyNA==","url":"https://github.com/coala/coala/pull/5522#discussion_r195143624","bodyText":"use Python 3 annotations on the method arguments, and we have a decorator which will automatically do type checking of them.","diffHunk":"@@ -0,0 +1,66 @@\n+import os.path\n+\n+from contextlib import contextmanager\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+@contextmanager\n+def execute_bear(bear, *args, **kwargs):\n+    try:\n+        bear_output_generator = bear.execute(*args, **kwargs)\n+        assert (bear_output_generator is not None\n+                ), 'Bear returned None on execution\\n'\n+        yield bear_output_generator\n+    except Exception as err:\n+        msg = []\n+        while not bear.message_queue.empty():\n+            msg.append(bear.message_queue.get().message)\n+        raise AssertionError(str(err) + ' \\n' + '\\n'.join(msg))\n+    return list(bear_output_generator)\n+\n+\n+def get_test_path(test_dir,\n+                  file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        test_dir, file)\n+\n+\n+def get_results(global_bear,\n+                test_dir,\n+                file_dict,\n+                settings={}):\n+    for file in file_dict:\n+        with get_test_path(test_dir, file) as fname, \\\n+            execute_bear(global_bear, fname, **settings\n+                         ) as bear_output:\n+            return bear_output\n+\n+\n+class GlobalBearTestHelper(BaseTestHelper):\n+    \"\"\"\n+    \"\"\"\n+\n+    def check_results(self,\n+                      global_bear,\n+                      results,\n+                      filename=None,\n+                      settings={}):\n+\n+        assert isinstance(self, BaseTestHelper)\n+        assert isinstance(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:04:39Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:04:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTUyMzE1Mw==","url":"https://github.com/coala/coala/pull/5522#discussion_r195523153","bodyText":"@NiklasMM, I am facing issue with this method. My requirement is the file path of that directory from where this method is called but obviously this written method returns coalib/testing* directory.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from queue import Queue\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.settings.Section import Section\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+def _get_test_path(test_dir,\n+                   file):\n+    return os.path.join(os.path.dirname(__file__),","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T18:17:44Z","lastEditedAt":null,"updatedAt":"2018-06-14T18:17:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njk5NDQxMQ==","url":"https://github.com/coala/coala/pull/5522#issuecomment-396994411","bodyText":"Regarding commit message, please create an issue here describing the enhancement, referring to the cEP, etc.\nDo not refer to GSoC in your commit message.  That is irrelevant to the content of the change.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:05:59Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:05:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njk5OTkyNA==","url":"https://github.com/coala/coala/pull/5522#issuecomment-396999924","bodyText":"Still in the process @jayvdb. I will try to cover all the methods and tests and update it asap. Thank you 😄","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-13T16:22:51Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:22:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzkyNTI2Ng==","url":"https://github.com/coala/coala/pull/5522#issuecomment-413925266","bodyText":"No longer working on this.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-08-17T16:51:17Z","lastEditedAt":null,"updatedAt":"2018-08-17T16:51:17Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534237874000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5523","number":5523,"title":"Add decorator add_value_checks","body":"The decorator may work on any function but made for the\nspecific use of the bears' run() methods or the\ncreate_arguments() methods. This decorator compares the value\ngiven to the bear setting against a list of acceptable values\nprovided by the bear writer. The decorator accepts a list of\ntuples with each tuple containing two values, the bear setting\nname as a string and a list of acceptable values.","comments":3,"createdAt":"2018-06-13T23:34:10Z","updatedAt":"2018-08-14T09:11:14Z","closedAt":"2018-08-14T09:11:14Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5523","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTUwMg==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269502","bodyText":"this information should not be stored in the bear like this.\nit needs to be per setting, and using type annotations.  This was already discussed in the cEP.\nthat allows re-use of the type annotation.","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T23:53:46Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:53:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTc5OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269799","bodyText":"can't find an elegant way to use type annotations for value checks coala/coala-bears#2532","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:55:58Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:55:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTk3NQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269975","bodyText":"if what you mean by this:\n\nit needs to be per setting,\n\nis\n\nAlternate approach could have been the bear writer populating a field else where and calling the decorator with those fields that quickstart can utilise directly but it just felt inelegant and contradicting the process of making bear development easier and easier by making changes at two different places to achieve a single task\n\nThen I can make the necessary changes","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:57:13Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:57:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MDU4OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195270589","bodyText":"this information should not be stored in the bear like this.\n\nwhere exactly do you want it to be stored?","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:01:54Z","lastEditedAt":"2018-06-14T00:02:28Z","updatedAt":"2018-06-14T00:02:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjU1OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272559","bodyText":"where exactly do you want it to be stored?\n\ninside the annotation!\nAn annotation can be a class, with any amount of logic and data inside it.","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T00:16:02Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:16:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjY4Ng==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272686","bodyText":"but we can't use that unless coala is used with the mypy package loaded","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:17:06Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:17:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjcxOA==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272718","bodyText":"#5523 (comment)","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:17:23Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:17:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY0MDYxOQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195640619","bodyText":"have you seen my comment at coala/coala-bears#2532 ?","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-15T06:11:48Z","lastEditedAt":null,"updatedAt":"2018-06-15T06:11:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY4ODc1NQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195688755","bodyText":"yes","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-15T10:07:18Z","lastEditedAt":null,"updatedAt":"2018-06-15T10:07:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzEyMzc3Mw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-397123773","bodyText":"A little bit of explanation: the Green Mode Project requires to differentiate between settings which can attain a specific set of values. A type of these setting which can have some discrete set of values is tackled in the PR.\nMost of the additions are self explanatory except for the variable CALL_FROM_QUICKSTART. The Green Mode project requires the valid values of these settings so that it can run coala over and over again by giving the bears all these values. Since we are also adding value checks in this PR, the field ACCEPTABLE_VALUES_FOR_SETTINGS won't get populated until the call to run method is made which contradicts the fact that we still don't have the acceptable values. The introduced variable uses the fact that even an incomplete call to the decorator populates the variable and thus saves execution time and running into errors.\nAlternate approach could have been the bear writer populating a field else where and calling the decorator with those fields that quickstart can utilise directly but it just felt inelegant and contradicting the process of making bear development easier and easier by making changes at two different places to achieve a single task.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:53:55Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:53:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzk1MjAyMw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-397952023","bodyText":"An interesting solution, but argument type annotations are the way that the Settings module works.  Not working with the Settings module will result in lots of other parts of coala being unable to understand these, and needing to be rewritten to use this functionality, when the capacity to do it already exists in the Settings module.\nExample shown at coala/coala-bears#2532 .  If it doesnt work with only minor implementation issues, I will implement it myself as a demo.\nIf I cant get it to work, we may revisit this decorator approach.\nNote also that this decorator would not be usable in coala-bears repo until we do a release of coala, and that is a huge risk to take for any project, especially given that I uncovered that there are ~20 bears tests broken when using coala master (and @sangamcse has reproduced it, and was going to investigate further; https://gitter.im/coala/coala?at=5b274d604755974910317329), so that is another task someone needs to do before we can do a pre-release and use anything in coalib from coala-bears.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-18T06:14:54Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:14:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjgwNjk5Nw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-412806997","bodyText":"It was demostrated Settings do work, even if a bit ugly without a bit of extra glue in StringConverter.\nhttps://gitlab.com/coala/coala-utils/issues/73 is highly desirable and https://gitlab.com/coala/coala-utils/issues/77 also avoids many problems with the current __path__ approach.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-14T09:11:14Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:11:14Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534402619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2612","number":2612,"title":"Python minimum version 3.4.4","body":"Closes #2611\nCloses #2488","comments":13,"createdAt":"2018-07-17T03:58:45Z","updatedAt":"2018-08-16T06:56:59Z","closedAt":"2018-08-16T06:56:59Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"},{"name":"type/bug","color":"e11d21"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2612","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNTQ1MzY4MQ==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-405453681","bodyText":"Demo of the py27 and py33 jobs: https://travis-ci.org/jayvdb/coala-bears/builds/404723796\nThat is commit jayvdb@8229d58 which has parent 807b537, same commit as this PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T04:10:31Z","lastEditedAt":null,"updatedAt":"2018-07-17T04:10:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTQ1Mzg4Mw==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-405453883","bodyText":"The GitMate PR error is because of the revert commit, 44012a9 , which goes over the length limit because #2241 hasnt been finished.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T04:12:14Z","lastEditedAt":null,"updatedAt":"2018-07-17T04:12:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTUxMDY1Ng==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-405510656","bodyText":"Demo https://travis-ci.org/jayvdb/coala-bears/builds/404768441\nis commit jayvdb@3728c6d with parent jayvdb@ace719b which is the same as this PR","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T08:57:04Z","lastEditedAt":null,"updatedAt":"2018-07-17T08:57:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzA2NDk0Mw==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-413064943","bodyText":"Verified at https://travis-ci.org/jayvdb/coala-bears/builds/416160340","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T01:16:34Z","lastEditedAt":null,"updatedAt":"2018-08-15T01:16:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIxMTI4Mw==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-413211283","bodyText":"Fresh verification build https://travis-ci.org/jayvdb/coala-bears/builds/416374555\nTo verify yourself, cherry-pick the following and run on a fork\ndiff --git a/.travis.yml b/.travis.yml\nindex c3e4fb4..80b0b6c 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -24,7 +24,7 @@ stages:\n   - test\n   - moban\n   - name: unsupported\n-    if: branch = master AND type = push\n+    if: type != pull_request\n \n .check_moban: &check_moban\n   <<: *disable_global","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T14:16:03Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:16:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzQ0Mzc3OQ==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-413443779","bodyText":"LGTM.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-08-16T06:49:30Z","lastEditedAt":null,"updatedAt":"2018-08-16T06:49:30Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533342711000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2613","number":2613,"title":"LineLengthBear: Migrate to aspects","body":"This migrates LineLengthBear to its respective\naspects and tastes.\nCloses #2602\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-17T04:14:43Z","updatedAt":"2018-08-04T00:31:51Z","closedAt":"2018-08-04T00:31:51Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2613","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjg5Nzk0MQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202897941","bodyText":"Below it says LANGUAGES = {'All'}.\nAnd the logic of this bear should work with any language.\nI dont believe we have any language properties which help with these settings.\nCan we drop languages here?\nI will need to see some new tests for this bear which use aspects in the settings; that will help us understand how this works.","diffHunk":"@@ -5,15 +5,33 @@\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+    Indentation,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+                Indentation,\n+            ]},\n+        languages=['python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-17T05:28:33Z","lastEditedAt":null,"updatedAt":"2018-07-17T05:28:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjg5ODA4MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202898080","bodyText":"Again, why py here?\nCan it be omitted?\nNeed tests to validate what works vs what doesnt work, so we can see if any coalib changes are needed to make this implementation sensible.","diffHunk":"@@ -49,4 +67,6 @@ def run(self,\n                     line=line_number + 1,\n                     column=max_line_length + 1,\n                     end_line=line_number + 1,\n-                    end_column=len(line))\n+                    end_column=len(line),\n+                    aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-17T05:29:41Z","lastEditedAt":null,"updatedAt":"2018-07-17T05:29:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjkyNTQ5MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202925490","bodyText":"We can't drop it. I don't know why but bear classes accept either 1 or 3 arguments. If I don't specify the language, it gives an error. We need a list of all languages here. I see most of the language files are imported here https://github.com/coala/coala/blob/master/coalib/bearlib/languages/__init__.py, can we import rest of the files there and make a function to return a list of all languages (in a separate PR)?","diffHunk":"@@ -5,15 +5,33 @@\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+    Indentation,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+                Indentation,\n+            ]},\n+        languages=['python'],","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-17T07:56:41Z","lastEditedAt":"2018-07-17T07:58:35Z","updatedAt":"2018-07-17T07:58:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjkyOTczMw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202929733","bodyText":"Currently, we have to pass the language here to create an object of the Formatting aspect. Otherwise, it pops an error, I will see if I can do some changes in the aspect core to omit this. I had explained the problem before https://gitter.im/coala/aspects?at=5b46f760b5efcd5aeef47912. But got no response.\nRegarding the tests, LocalBearTestHelper needs to be modified for adding the tests. Let me know whether to do it here or in a separate PR?","diffHunk":"@@ -49,4 +67,6 @@ def run(self,\n                     line=line_number + 1,\n                     column=max_line_length + 1,\n                     end_line=line_number + 1,\n-                    end_column=len(line))\n+                    end_column=len(line),\n+                    aspect=Formatting('py'),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-17T08:12:09Z","lastEditedAt":null,"updatedAt":"2018-07-17T08:12:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjk4NjYyMA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202986620","bodyText":"Yes, we need an object which represents 'all languages' (including Unknown) which can be imported and used here.","diffHunk":"@@ -5,15 +5,33 @@\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+    Indentation,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+                Indentation,\n+            ]},\n+        languages=['python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-17T11:31:37Z","lastEditedAt":null,"updatedAt":"2018-07-17T11:31:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjk4NjY3NQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202986675","bodyText":"an approach you might like to try (test on a different fork; no PR necessary) is adding a bear setting for language : Language = Unknown , which you can pass to the Formatting aspect to make it happy.\nLocalBearTestHelper is in a different repo, so it needs to be a separate PR.","diffHunk":"@@ -49,4 +67,6 @@ def run(self,\n                     line=line_number + 1,\n                     column=max_line_length + 1,\n                     end_line=line_number + 1,\n-                    end_column=len(line))\n+                    end_column=len(line),\n+                    aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjYwOTQzMg==","createdAt":"2018-07-18T07:14:31Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-17T11:31:49Z","lastEditedAt":null,"updatedAt":"2018-07-17T11:31:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyNzkwNw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r205927907","bodyText":"including this aspect is confusing.\nThe test files do not use tabs, so this is irrelevant, and the bear has a default value, so it isnt needed here.\nCreate a separate test for the indent aspect.","diffHunk":"@@ -26,3 +30,29 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearAspectTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('LineLength')('Unknown', max_line_length=4),\n+        get_aspect('Indentation')('Unknown', indent_size=2),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:08:57Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:08:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyNzk1MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r205927950","bodyText":"as above.","diffHunk":"@@ -26,3 +30,29 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearAspectTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('LineLength')('Unknown', max_line_length=4),\n+        get_aspect('Indentation')('Unknown', indent_size=2),\n+        ]),\n+        )\n+\n+\n+LineLengthBearAspectPriorityTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('Indentation')('Unknown', indent_size=2),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:09:19Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:09:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzMTU1Nw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r205931557","bodyText":"Yes, you are right, seems like LineLengthBear is not for indentation. Even doing only settings={'indent_size': '4'} gives an error as the bear does not yield any result. I am removing this aspect from this bear. 👍","diffHunk":"@@ -26,3 +30,29 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearAspectTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('LineLength')('Unknown', max_line_length=4),\n+        get_aspect('Indentation')('Unknown', indent_size=2),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-28T03:47:57Z","lastEditedAt":"2018-07-28T03:50:41Z","updatedAt":"2018-07-28T03:50:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM4OTYyMg==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207389622","bodyText":"This should be language: language = languages.Unknown.  Also this arg should be the first setting, immediately after file.\nWas there some problem doing that?\nI notice that AnnotationBear and IndentationBear uses language: str\nCPDBear uses language: language","diffHunk":"@@ -1,26 +1,43 @@\n import re\n+import logging\n \n from coalib.bearlib import deprecate_settings\n from coalib.bearlib.spacing.SpacingHelper import SpacingHelper\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.languages.Language import Language, UnknownLanguageError\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+            ]},\n+        ):\n     LANGUAGES = {'All'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     @deprecate_settings(indent_size='tab_width')\n     def run(self,\n             filename,\n             file,\n             max_line_length: int = 79,\n             indent_size: int = SpacingHelper.DEFAULT_TAB_WIDTH,\n             ignore_length_regex: typed_list(str) = (),\n+            language: str = None,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:05:49Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:05:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MTE0Mg==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207391142","bodyText":"this disappears when you use language: language","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:13:15Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:13:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MTUyNg==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207391526","bodyText":"Ideally coalib sets max_line_length automatically in coalib using aspects + language.\nA project for another day ... ;-)","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]\n+            except UnknownLanguageError:\n+                logging.warn(\n+                    language + ' is an invalid language name '\n+                    'or is not recognized by coala. Language specific '\n+                    'line length limitation can not be applied.'\n+                )\n+                language = Language['Unknown']\n+            else:\n+                if 'max_line_length' in language.attributes:\n+                    max_line_length = language.max_line_length","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:15:15Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:15:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MjA3OQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207392079","bodyText":"no.  we fall back to the setting , which will be in the arg max_line_length, which defaults to 79 cpl.\nBut most Language will never have a max_line_length, because most languages dont restrict that, so this warning is not user friendly, nor is it developer friendly.  We dont want patches for adding max_line_length to language definitions unless the language does restrict line length, and we know that is rare.","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]\n+            except UnknownLanguageError:\n+                logging.warn(\n+                    language + ' is an invalid language name '\n+                    'or is not recognized by coala. Language specific '\n+                    'line length limitation can not be applied.'\n+                )\n+                language = Language['Unknown']\n+            else:\n+                if 'max_line_length' in language.attributes:\n+                    max_line_length = language.max_line_length\n+                else:\n+                    logging.warn(\n+                        'Language ' + str(language) + ' does not have '\n+                        '`maximum line length` defined in coalang. '\n+                        'Falling back to 80 characters as maximum line length.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzM5NzA1Nw==","createdAt":"2018-08-03T05:37:50Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-02T22:18:11Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:18:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MjkxNw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207392917","bodyText":"closing brackets for these verify_local_bear calls should be hard set against the left margin","diffHunk":"@@ -26,3 +34,50 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearLangSpecificLineLengthTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=(invalid_VB_file,),\n+    settings={'language': 'VisualBasic'},\n+        )\n+\n+\n+LineLengthBearValidLanguageTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=(invalid_general_file,),\n+    settings={'language': 'C'},\n+        )","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:22:33Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:22:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ0MDY3NQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207440675","bodyText":"Okay, I'll remove the warning :)","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]\n+            except UnknownLanguageError:\n+                logging.warn(\n+                    language + ' is an invalid language name '\n+                    'or is not recognized by coala. Language specific '\n+                    'line length limitation can not be applied.'\n+                )\n+                language = Language['Unknown']\n+            else:\n+                if 'max_line_length' in language.attributes:\n+                    max_line_length = language.max_line_length\n+                else:\n+                    logging.warn(\n+                        'Language ' + str(language) + ' does not have '\n+                        '`maximum line length` defined in coalang. '\n+                        'Falling back to 80 characters as maximum line length.'","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-03T04:55:46Z","lastEditedAt":null,"updatedAt":"2018-08-03T04:55:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ0NDk4MQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207444981","bodyText":"The problem I am facing with language: language is in case of an invalid language. It is designed for bears where one valid language is compulsory. If the language is invalid, it jumps out of the bear with ValueError (without running the bear), we won't be able to set the language to Unknown if there is an invalid language. Even if I do language: language = None, it doesn't help.","diffHunk":"@@ -1,26 +1,43 @@\n import re\n+import logging\n \n from coalib.bearlib import deprecate_settings\n from coalib.bearlib.spacing.SpacingHelper import SpacingHelper\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.languages.Language import Language, UnknownLanguageError\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+            ]},\n+        ):\n     LANGUAGES = {'All'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     @deprecate_settings(indent_size='tab_width')\n     def run(self,\n             filename,\n             file,\n             max_line_length: int = 79,\n             indent_size: int = SpacingHelper.DEFAULT_TAB_WIDTH,\n             ignore_length_regex: typed_list(str) = (),\n+            language: str = None,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-03T05:35:38Z","lastEditedAt":null,"updatedAt":"2018-08-03T05:35:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ1NDUwNQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207454505","bodyText":"If the language is invalid, it should give a ValueError.  They should omit it, or specify language = Unknown ;-).","diffHunk":"@@ -1,26 +1,43 @@\n import re\n+import logging\n \n from coalib.bearlib import deprecate_settings\n from coalib.bearlib.spacing.SpacingHelper import SpacingHelper\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.languages.Language import Language, UnknownLanguageError\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+            ]},\n+        ):\n     LANGUAGES = {'All'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     @deprecate_settings(indent_size='tab_width')\n     def run(self,\n             filename,\n             file,\n             max_line_length: int = 79,\n             indent_size: int = SpacingHelper.DEFAULT_TAB_WIDTH,\n             ignore_length_regex: typed_list(str) = (),\n+            language: str = None,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T06:44:51Z","lastEditedAt":null,"updatedAt":"2018-08-03T06:44:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ5Njc4Nw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207496787","bodyText":"If the user has specified a language, we should respect that when we create the Result.","diffHunk":"@@ -30,7 +46,13 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if 'max_line_length' in language.attributes:\n+            max_line_length = language.max_line_length\n+        else:\n+            language = Language['Unknown']","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T09:52:06Z","lastEditedAt":null,"updatedAt":"2018-08-03T09:52:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ5Njk2MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207496960","bodyText":"#2613 (comment) not done.","diffHunk":"@@ -26,3 +34,42 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearLangSpecificLineLengthTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=(invalid_VB_file,),\n+    settings={'language': 'VisualBasic'},\n+    )","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T09:52:46Z","lastEditedAt":null,"updatedAt":"2018-08-03T09:52:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU0MTM5NQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207541395","bodyText":"should have also been moved up","diffHunk":"@@ -30,7 +46,11 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQxODc5OQ==","createdAt":"2018-08-03T14:16:34Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-03T13:20:20Z","lastEditedAt":null,"updatedAt":"2018-08-03T13:20:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU1ODc2OQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207558769","bodyText":"Yeah, forgot, will move up once core PR is merged so that there's only one next push :)","diffHunk":"@@ -30,7 +46,11 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-03T14:16:46Z","lastEditedAt":null,"updatedAt":"2018-08-03T14:16:46Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533461236000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2615","number":2615,"title":"setup.cfg: Remove pytest config 'python_functions'","body":"setup.cfg currently contains:\npython_functions = *_test\nThis has the effect of allowing functions like test(..) to\nexist and not be considered test functions.  Two sets have appeared.\nWhen pytest defaults are used, these two sets of functions called\ntest(..) result in pytest loading failures as they are not valid\npytest test functions, but are helper functions for unittests.\nThe arguments on these functions should be fixture names, and they\nare not.  This confuses people who know pytest naming conventions.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-07-17T15:17:31Z","updatedAt":"2018-08-05T09:27:16Z","closedAt":"2018-08-05T09:26:53Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2615","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533152049000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2616","number":2616,"title":".ci/generate_bear_requirements.py:  Generates R dependencies","body":"Changes made in generate_bear_requirements.py and .mobal.yaml to\ngenerate R dependencies using Jinja template\n(.moban.dt/Description.jj2)\nCloses #2482\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-07-18T11:07:35Z","updatedAt":"2018-08-01T19:34:09Z","closedAt":"2018-08-01T19:34:08Z","state":"closed","user":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"owner":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2616","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5OTkxMw==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203599913","bodyText":"needs to come from the variables in .moban.yaml","diffHunk":"@@ -0,0 +1,16 @@\n+Package: coala\n+Version: 0.12.0.dev","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:41:00Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:41:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5OTkxOQ==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203599919","bodyText":"needs to come from the variables in .moban.yaml","diffHunk":"@@ -0,0 +1,16 @@\n+Package: coala","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:41:05Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:41:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5OTkzNQ==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203599935","bodyText":"needs to come from the variables in .moban.yaml","diffHunk":"@@ -0,0 +1,16 @@\n+Package: coala\n+Version: 0.12.0.dev\n+Title: R dependencies of Coala package\n+Author: The coala developers","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:41:17Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:41:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5OTk0Mw==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203599943","bodyText":"needs to come from the variables in .moban.yaml","diffHunk":"@@ -0,0 +1,16 @@\n+Package: coala\n+Version: 0.12.0.dev\n+Title: R dependencies of Coala package\n+Author: The coala developers\n+Mainainer: Lasse Schuirmann, Fabian Neuschmidt, Mischa Krxfcger\n+Description: Coala is used for linting and fixing code for all languages.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:41:23Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:41:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5OTk0OQ==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203599949","bodyText":"Mainainer is spelling mistake; and the value needs to come from the variables in .moban.yaml","diffHunk":"@@ -0,0 +1,16 @@\n+Package: coala\n+Version: 0.12.0.dev\n+Title: R dependencies of Coala package\n+Author: The coala developers\n+Mainainer: Lasse Schuirmann, Fabian Neuschmidt, Mischa Krxfcger","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:41:28Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:41:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYwMDA3Mw==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203600073","bodyText":"needs to come from the variables in .moban.yaml","diffHunk":"@@ -0,0 +1,16 @@\n+Package: coala\n+Version: 0.12.0.dev\n+Title: R dependencies of Coala package","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:43:00Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:43:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYwMDEyMg==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203600122","bodyText":"please git add Description and commit it as part of your commit.","diffHunk":"@@ -31,6 +31,7 @@ targets:\n   - Gemfile: Gemfile.jj2\n   - package.json: package.json.jj2\n   - bear-requirements.txt: bear-requirements.txt.jj2\n+  - Decription: Description.jj2","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:43:24Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:43:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYwOTQ3OA==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203609478","bodyText":"@jayvdb Maybe it is better if we keep these alphabetically sorted. The diff will be large and will need careful reviewing but, probably better in the long term.","diffHunk":"@@ -214,6 +224,8 @@ def sort_requirements(req_dict):\n     requirements['gem_requirements'] = get_gem_requirements(gem_reqs)\n     requirements['npm_requirements'] = get_npm_requirements(npm_reqs)\n     requirements['pip_requirements'] = get_pip_requirements(pip_reqs)\n+    requirements['r_requirements'] = get_r_requirements(r_reqs)","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"createdAt":"2018-07-19T05:58:06Z","lastEditedAt":null,"updatedAt":"2018-07-19T05:58:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzc2NjA0Nw==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203766047","bodyText":"what was the use of inherited_requirements here?","diffHunk":"@@ -152,6 +159,9 @@ def get_pip_requirements(requirements):\n     inherited_requirements = get_inherited_requirements()\n     return _get_requirements(requirements, '~=', inherited_requirements)\n \n+def get_r_requirements(requirements):\n+    inherited_requirements=get_inherited_requirements()\n+    return _get_requirements(requirements, '>=')","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-19T15:13:16Z","lastEditedAt":null,"updatedAt":"2018-07-19T15:13:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzc2NjE3Mg==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203766172","bodyText":"remove it 😄","diffHunk":"@@ -152,6 +159,9 @@ def get_pip_requirements(requirements):\n     inherited_requirements = get_inherited_requirements()\n     return _get_requirements(requirements, '~=', inherited_requirements)\n \n+def get_r_requirements(requirements):\n+    inherited_requirements=get_inherited_requirements()\n+    return _get_requirements(requirements, '>=')","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-19T15:13:35Z","lastEditedAt":null,"updatedAt":"2018-07-19T15:13:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzc2NzYwOQ==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r203767609","bodyText":"remove this blank line","diffHunk":"@@ -214,6 +224,8 @@ def sort_requirements(req_dict):\n     requirements['gem_requirements'] = get_gem_requirements(gem_reqs)\n     requirements['npm_requirements'] = get_npm_requirements(npm_reqs)\n     requirements['pip_requirements'] = get_pip_requirements(pip_reqs)\n+    requirements['r_requirements'] = get_r_requirements(r_reqs)\n+","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-19T15:17:34Z","lastEditedAt":null,"updatedAt":"2018-07-19T15:17:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA3NDA3MQ==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r204074071","bodyText":"I tried doing so but this error came up,\nfatal: pathspec 'Description' did not match any files\nI was only able to execute the above command when i created a empty file of same name .","diffHunk":"@@ -31,6 +31,7 @@ targets:\n   - Gemfile: Gemfile.jj2\n   - package.json: package.json.jj2\n   - bear-requirements.txt: bear-requirements.txt.jj2\n+  - Decription: Description.jj2","author":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4","name":"R S Subbulakshmi"},"createdAt":"2018-07-20T15:01:57Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:01:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA3NzkzNA==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r204077934","bodyText":"@anctartica has a fix for that at #2625\nWe can merge that first, then this one","diffHunk":"@@ -214,6 +224,8 @@ def sort_requirements(req_dict):\n     requirements['gem_requirements'] = get_gem_requirements(gem_reqs)\n     requirements['npm_requirements'] = get_npm_requirements(npm_reqs)\n     requirements['pip_requirements'] = get_pip_requirements(pip_reqs)\n+    requirements['r_requirements'] = get_r_requirements(r_reqs)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-20T15:14:41Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:14:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA3ODQ2OQ==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r204078469","bodyText":"This should be R dependencies for {{ description }}","diffHunk":"@@ -0,0 +1,16 @@\n+Package: {{ name }}\n+Version: {{ build_version }}\n+Title: R dependencies of Coala package","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-20T15:16:20Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:16:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwMjk2NA==","url":"https://github.com/coala/coala-bears/pull/2616#discussion_r204102964","bodyText":"remove this blank line","diffHunk":"@@ -30,6 +30,8 @@\n from dependency_management.requirements.GemRequirement import GemRequirement\n from dependency_management.requirements.NpmRequirement import NpmRequirement\n from dependency_management.requirements.PipRequirement import PipRequirement\n+from dependency_management.requirements.RscriptRequirement import RscriptRequirement\n+","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-20T16:41:12Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:41:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjE1MzI1Ng==","url":"https://github.com/coala/coala-bears/pull/2616#issuecomment-406153256","bodyText":"The commands in https://github.com/coala/coala-bears/blob/master/.ci/deps.r.sh can be simplified to install the packages listed in the new Description file..","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T04:45:48Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:45:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjg1OTAzMg==","url":"https://github.com/coala/coala-bears/pull/2616#issuecomment-406859032","bodyText":"Can you please rebase","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-22T11:30:32Z","lastEditedAt":"2018-07-22T11:30:41Z","updatedAt":"2018-07-22T11:30:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjkwODk3MA==","url":"https://github.com/coala/coala-bears/pull/2616#issuecomment-406908970","bodyText":"@SubbulakshmiRS see #2616 (comment) and #2616 (review)\nYou must run moban and then git add Description .  If you get an error, you need to investigate and fix it.  Or ask for help.\nIf you do not add Description , this PR can not be reviewed / merged.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-23T00:23:50Z","lastEditedAt":"2018-07-23T00:25:54Z","updatedAt":"2018-07-23T00:25:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTY5NTEwNQ==","url":"https://github.com/coala/coala-bears/pull/2616#issuecomment-409695105","bodyText":"Zero changes since last time.\nTaking too long.\nReassigning issue.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T19:34:08Z","lastEditedAt":null,"updatedAt":"2018-08-01T19:34:08Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533314274000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2625","number":2625,"title":"generate_bear_requirements.py: Generate cabal requirements","body":"Closes #2617","comments":7,"createdAt":"2018-07-19T17:57:56Z","updatedAt":"2018-08-03T16:37:54Z","closedAt":"2018-07-21T07:27:11Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"importance/medium","color":"fbca04"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2625","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MzgxNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203953817","bodyText":"there are more to come, so create a list, one line for each.","diffHunk":"@@ -189,7 +210,8 @@ def deep_diff(target, src):\n \n \n def sort_requirements(req_dict):\n-    for key in ['pip_requirements', 'npm_requirements', 'gem_requirements']:\n+    for key in ['pip_requirements', 'npm_requirements', 'gem_requirements',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:02:00Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:02:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDIzMg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954232","bodyText":"as you are creating a new function, write a better algorithm ;-)","diffHunk":"@@ -94,28 +97,42 @@ def get_inherited_requirements():\n \n     return inherited_requirements\n \n+def helper(requirements, pip_requirements, npm_requirements,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:04:48Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:04:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDQ2Mg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954462","bodyText":"no trailing blank line pls","diffHunk":"@@ -0,0 +1,16 @@\n+Name: coala-bears\n+Version: 0.10\n+cabal-version: >= 1.2\n+build-type: Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, hlint==1.9.27{%\n+  for package, data in cabal_requirements.items() | sort %}, {{ package }}{{ data.version }}{%\n+  endfor %}{# for package, data in cabal_requirements.items() | sort #}\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:06:14Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:06:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDUxNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954517","bodyText":"use variables","diffHunk":"@@ -0,0 +1,16 @@\n+Name: coala-bears","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:06:35Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:06:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDUzNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954537","bodyText":"use variables","diffHunk":"@@ -0,0 +1,16 @@\n+Name: coala-bears\n+Version: 0.10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:06:43Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:06:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA4MDAxOQ==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204080019","bodyText":"{{ \",\" if not loop.last }}","diffHunk":"@@ -0,0 +1,20 @@\n+Name:               {{ name }}\n+Version:            0.12.0\n+cabal-version:      >= 1.2\n+build-type:         Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends:    base,\n+                    Cabal>=1.16,\n+                    safe==0.3.9,\n+                    cmdargs==0.10.14,\n+                    hlint==1.9.27\n+{% for package, data in cabal_requirements.items() | sort %}\n+                    {{ package }}{{ data.version }},","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T15:21:19Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:21:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA4MDkwNQ==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204080905","bodyText":"ugh ... https://github.com/coala/coala-bears/pulls?q=is%3Apr+HaskellLintBear+is%3Aclosed\nAssigned to you #1358","diffHunk":"@@ -0,0 +1,20 @@\n+Name:               {{ name }}\n+Version:            0.12.0\n+cabal-version:      >= 1.2\n+build-type:         Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends:    base,\n+                    Cabal>=1.16,\n+                    safe==0.3.9,\n+                    cmdargs==0.10.14,\n+                    hlint==1.9.27","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T15:24:08Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:24:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA5OTA1Ng==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204099056","bodyText":"Why haven't you added these requirements in bear-requirements.yaml?","diffHunk":"@@ -0,0 +1,18 @@\n+Name: {{ name }}\n+{# cabal cannot parse .dev version syntax #}\n+Version: {{ version[:-4] }}\n+cabal-version: >= 1.2\n+build-type: Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, hlint==1.9.27","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-20T16:26:19Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:26:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwMDUyMg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204100522","bodyText":"bear-requirements.yaml is generated from generate_bear_requirements.py. It will only have dependencies from the bears","diffHunk":"@@ -0,0 +1,18 @@\n+Name: {{ name }}\n+{# cabal cannot parse .dev version syntax #}\n+Version: {{ version[:-4] }}\n+cabal-version: >= 1.2\n+build-type: Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, hlint==1.9.27","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-20T16:31:49Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:31:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwMjU2Mw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204102563","bodyText":"cabal was not able to parse this list  😓 I am sticking with the single line","diffHunk":"@@ -0,0 +1,20 @@\n+Name:               {{ name }}\n+Version:            0.12.0\n+cabal-version:      >= 1.2\n+build-type:         Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends:    base,\n+                    Cabal>=1.16,\n+                    safe==0.3.9,\n+                    cmdargs==0.10.14,\n+                    hlint==1.9.27\n+{% for package, data in cabal_requirements.items() | sort %}\n+                    {{ package }}{{ data.version }},","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-20T16:39:32Z","lastEditedAt":"2018-07-20T16:46:46Z","updatedAt":"2018-07-20T16:46:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNTE1MA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204125150","bodyText":"move these to the next line indented, as we will want to add entries at the end, so also use a trailing comma with closing bracket on the following line.","diffHunk":"@@ -44,6 +47,10 @@\n \n PROJECT_BEAR_DIR = os.path.abspath(os.path.join(PROJECT_DIR, 'bears'))\n \n+SUPPORTED_INSTANCES = ('PipRequirement',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:02:44Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:02:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNTU4Mw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204125583","bodyText":"80 cpl\nthis file isnt under CI yet, so check your changes manually with pyflakes, pycodestyle and pydocstyle.\nbut ... if you return instance_dict here, the sorting can happen outside of the function, and we avoid returning tuples which are inherently unsuitable here as the size of them increases as new requirement types are added.","diffHunk":"@@ -95,28 +102,26 @@ def get_inherited_requirements():\n     return inherited_requirements\n \n \n+def helper(requirements, instance_dict):\n+    for requirement in requirements:\n+        if isinstance(requirement, AnyOneOfRequirements):\n+            helper(requirement.requirements, instance_dict)\n+        elif any(type(requirement).__name__ == instance\n+                 for instance in SUPPORTED_INSTANCES):\n+            instance_dict[type(requirement).__name__].add(requirement)\n+\n+\n def get_all_requirements(bears):\n-    pip_requirements = []\n-    npm_requirements = []\n-    gem_requirements = []\n+    instance_dict ={}\n+\n+    for instance in SUPPORTED_INSTANCES:\n+        instance_dict[instance] = set()\n \n     for bear in bears:\n-        for requirement in bear.REQUIREMENTS:\n-            if isinstance(requirement, PipRequirement) and \\\n-               requirement not in pip_requirements:\n-                pip_requirements.append(requirement)\n-            elif isinstance(requirement, NpmRequirement) and \\\n-               requirement not in npm_requirements:\n-                npm_requirements.append(requirement)\n-            elif isinstance(requirement, GemRequirement) and \\\n-               requirement not in gem_requirements:\n-                gem_requirements.append(requirement)\n-\n-    return (\n-        sorted(pip_requirements, key=lambda requirement: requirement.package),\n-        sorted(npm_requirements, key=lambda requirement: requirement.package),\n-        sorted(gem_requirements, key=lambda requirement: requirement.package)\n-        )\n+        helper(bear.REQUIREMENTS, instance_dict)\n+\n+    return [sorted(instance_dict[instance], key=lambda requirement: requirement.package)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:04:13Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:04:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNjIwNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204126207","bodyText":"store this list in a global variable structured ready for the next entry to be added as a single line modification.","diffHunk":"@@ -189,7 +198,10 @@ def deep_diff(target, src):\n \n \n def sort_requirements(req_dict):\n-    for key in ['pip_requirements', 'npm_requirements', 'gem_requirements']:\n+    for key in ['pip_requirements',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:06:28Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:06:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyODk1OA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204128958","bodyText":"As mentioned above, we should avoid returning tuples.\nget_all_requirements could return something else...\nalternatively...\nall_reqs = get_all_requirements(get_all_bears(bear_dirs))\npip_reqs, npm_reqs, gem_reqs = all_reqs[0:2]\n....\nrequirements['cabal_requirements'] = get_gem_requirements(all_reqs[3])\nThen it is easy to add another one afterwards.","diffHunk":"@@ -202,7 +214,7 @@ def sort_requirements(req_dict):\n     if args.bear_dirs is not None:\n         bear_dirs.extend(args.bear_dirs)\n \n-    pip_reqs, npm_reqs, gem_reqs = (\n+    pip_reqs, npm_reqs, gem_reqs, cabal_reqs = (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:16:47Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:16:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyOTIwMw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204129203","bodyText":"split on . and use the first three","diffHunk":"@@ -0,0 +1,18 @@\n+Name: {{ name }}\n+{# cabal cannot parse .dev version syntax #}\n+Version: {{ version[:-4] }}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjc2ODE5NA==","createdAt":"2018-07-20T19:11:13Z","content":"LAUGH","user":{"login":"anctartica","name":""}},{"id":"MDg6UmVhY3Rpb24yNjc2ODIwNA==","createdAt":"2018-07-20T19:11:21Z","content":"HOORAY","user":{"login":"anctartica","name":""}}],"createdAt":"2018-07-20T18:17:41Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:17:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE0MjAzNg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204142036","bodyText":"done checking under coala","diffHunk":"@@ -95,28 +102,26 @@ def get_inherited_requirements():\n     return inherited_requirements\n \n \n+def helper(requirements, instance_dict):\n+    for requirement in requirements:\n+        if isinstance(requirement, AnyOneOfRequirements):\n+            helper(requirement.requirements, instance_dict)\n+        elif any(type(requirement).__name__ == instance\n+                 for instance in SUPPORTED_INSTANCES):\n+            instance_dict[type(requirement).__name__].add(requirement)\n+\n+\n def get_all_requirements(bears):\n-    pip_requirements = []\n-    npm_requirements = []\n-    gem_requirements = []\n+    instance_dict ={}\n+\n+    for instance in SUPPORTED_INSTANCES:\n+        instance_dict[instance] = set()\n \n     for bear in bears:\n-        for requirement in bear.REQUIREMENTS:\n-            if isinstance(requirement, PipRequirement) and \\\n-               requirement not in pip_requirements:\n-                pip_requirements.append(requirement)\n-            elif isinstance(requirement, NpmRequirement) and \\\n-               requirement not in npm_requirements:\n-                npm_requirements.append(requirement)\n-            elif isinstance(requirement, GemRequirement) and \\\n-               requirement not in gem_requirements:\n-                gem_requirements.append(requirement)\n-\n-    return (\n-        sorted(pip_requirements, key=lambda requirement: requirement.package),\n-        sorted(npm_requirements, key=lambda requirement: requirement.package),\n-        sorted(gem_requirements, key=lambda requirement: requirement.package)\n-        )\n+        helper(bear.REQUIREMENTS, instance_dict)\n+\n+    return [sorted(instance_dict[instance], key=lambda requirement: requirement.package)","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-20T19:05:16Z","lastEditedAt":null,"updatedAt":"2018-07-20T19:05:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE5ODAwMA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204198000","bodyText":"trailing comma","diffHunk":"@@ -44,6 +41,20 @@\n \n PROJECT_BEAR_DIR = os.path.abspath(os.path.join(PROJECT_DIR, 'bears'))\n \n+SUPPORTED_INSTANCES = (\n+    'PipRequirement',\n+    'NpmRequirement',\n+    'GemRequirement',\n+    'CabalRequirement',\n+)\n+\n+INSTANCE_NAMES = (\n+    'pip_requirements',\n+    'npm_requirements',\n+    'gem_requirements',\n+    'cabal_requirements'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T01:33:33Z","lastEditedAt":null,"updatedAt":"2018-07-21T01:33:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE5ODAyMw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204198023","bodyText":"this should have been a defaultdict(set)","diffHunk":"@@ -95,28 +106,25 @@ def get_inherited_requirements():\n     return inherited_requirements\n \n \n+def helper(requirements, instance_dict):\n+    for requirement in requirements:\n+        if isinstance(requirement, AnyOneOfRequirements):\n+            helper(requirement.requirements, instance_dict)\n+        elif any(type(requirement).__name__ == instance\n+                 for instance in SUPPORTED_INSTANCES):\n+            instance_dict[type(requirement).__name__].add(requirement)\n+\n+\n def get_all_requirements(bears):\n-    pip_requirements = []\n-    npm_requirements = []\n-    gem_requirements = []\n+    instance_dict = {}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T01:34:14Z","lastEditedAt":null,"updatedAt":"2018-07-21T01:34:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE5ODE5MA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204198190","bodyText":"oh its failing.\nprobably because ShellCheck needs to be last.\nManually reorder them in bear-requirements.yaml , and leave a note that the order is needed for cabal to work","diffHunk":"@@ -10,4 +10,4 @@ build-type: Simple\n -- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n \n library\n-  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ghc-mod==5.6.0.0, hlint==1.9.27, ShellCheck==0.4.1\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ShellCheck==0.4.1, ghc-mod==5.6.0, hlint==1.9.27","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T01:39:10Z","lastEditedAt":null,"updatedAt":"2018-07-21T01:39:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIwMzU0Mw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204203543","bodyText":"i tested this.. it still didn't work\nthe version for ghc-mod should be 5.6.0.0 rather than 5.6.0 as specified in the bear","diffHunk":"@@ -10,4 +10,4 @@ build-type: Simple\n -- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n \n library\n-  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ghc-mod==5.6.0.0, hlint==1.9.27, ShellCheck==0.4.1\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ShellCheck==0.4.1, ghc-mod==5.6.0, hlint==1.9.27","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-21T06:08:16Z","lastEditedAt":"2018-07-21T06:08:26Z","updatedAt":"2018-07-21T06:08:26Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533581461000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2641","number":2641,"title":"bear-requirements.txt: Bump pyflakes","body":"Upgrades pyflakes version to 2.0.0\nCloses #2621\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-07-24T14:58:46Z","updatedAt":"2018-08-06T18:51:01Z","closedAt":"2018-08-06T18:51:01Z","state":"merged","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2641","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNzg5NzAzOA==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-407897038","bodyText":"Based on https://gitlab.com/jayvdb/coala-pyflakes/-/jobs/84416570 , we need to ensure we have a test which has an error on line 1, to ensure that we have the right setting for 0 or 1 based line offsets.\nAlso the autoflake bear (PyUnusedCodeBear?).\nIf there is no test covering that, create an issue and fix pls.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-25T21:10:50Z","lastEditedAt":null,"updatedAt":"2018-07-25T21:10:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODkzNTI1Mw==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-408935253","bodyText":"This was handled in here. Forgot to mention here. The problem was that python AST starts col_offset from 0 and I was feeding coalib the same. Now the results have been fixed in coala-pyflakes. A test case for the same has been added here. The error is made to occur at 0 offset.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-30T16:58:06Z","lastEditedAt":"2018-07-30T17:00:28Z","updatedAt":"2018-07-30T17:00:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODkzOTEzMA==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-408939130","bodyText":"@MacBox7 , ideally we have tests in this repo which verify that the line/col offsets of the bears are correct.\nAll bears should have an error on line 1, and verify that the error reported is against line 1 and not against line 0.  Likewise with columns.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-30T17:10:49Z","lastEditedAt":null,"updatedAt":"2018-07-30T17:10:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTExMjY5Nw==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-409112697","bodyText":"We can implement a method in LocalBearTestHelper that asserts for this.\ndef test_result_offset(self):\n        if getattr(self, 'initial_offset_file', False):\n            self.check_results(\n                self.uut,\n                self.initial_offset_file.splitlines(True),\n                [Result.from_values(self.uut.__class__.__name__,\n                                    self.initial_offset_message,\n                                    file='test',\n                                    line=1,\n                                    column=1)],\n                filename='test')\n\nWe can have 2 such methods rather than 1. One for testing lineno and other for column offset because every bear may not provide column offset.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-31T06:42:36Z","lastEditedAt":"2018-07-31T06:44:43Z","updatedAt":"2018-07-31T06:44:43Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533742343000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2648","number":2648,"title":"generate_package.py: Remove from coala-bears","body":"Closes #1199","comments":5,"createdAt":"2018-07-28T18:18:17Z","updatedAt":"2018-08-08T15:32:23Z","closedAt":"2018-08-08T15:32:03Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2648","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODU0NzkwMA==","url":"https://github.com/coala/coala-bears/pull/2648#discussion_r208547900","bodyText":"this shouldnt need changing.\nother than the bears directory, the script shouldnt rely on anything else being in some specific location.","diffHunk":"@@ -95,7 +95,8 @@ def create_upload_parser():\n def main():\n     args = create_upload_parser().parse_args()\n \n-    os.chdir(os.path.join(os.path.dirname(__file__), '..'))\n+    current_dir = os.path.dirname(__file__)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T11:37:14Z","lastEditedAt":null,"updatedAt":"2018-08-08T11:37:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODU0ODIyNw==","url":"https://github.com/coala/coala-bears/pull/2648#discussion_r208548227","bodyText":"create an argparse arg for the file filename of the template ; the tests already allow this extra arg to be added once in the setUp .\nIt is very important that we use explicit paths so it isnt 'magic' - they need to read this file, and hopefully improve it, before uploading crappy packages to pypi with that template.\nmy preference would be to keep this file in .moban.dt , but I have no objection if you feel it is better in .ci","diffHunk":"@@ -145,7 +146,7 @@ def main():\n                                  'BEAR_NAME': bear_name,\n                                  'ENTRY': 'coala' + bear_name}\n \n-            create_file_from_template(os.path.join('bears', 'setup.py.in'),\n+            create_file_from_template(os.path.join(current_dir, 'setup.py.in'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T11:38:28Z","lastEditedAt":null,"updatedAt":"2018-08-08T11:38:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2MzM2OA==","url":"https://github.com/coala/coala-bears/pull/2648#issuecomment-408663368","bodyText":"anctartica/bear-packages#3\nI have added a positional argument to the script which takes the path to the coala-bears repository. Tested locally.","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-29T09:18:56Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:18:56Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533303499000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2649","number":2649,"title":"MypyBear: Upgrade mypy","body":"This upgrades mypy to the latest release.\nCloses #2601\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":13,"createdAt":"2018-07-28T20:44:06Z","updatedAt":"2018-08-03T13:38:19Z","closedAt":"2018-07-29T15:14:39Z","state":"merged","user":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"owner":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2649","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3MTc2MQ==","url":"https://github.com/coala/coala-bears/pull/2649#discussion_r205971761","bodyText":"'==0.590' will work here","diffHunk":"@@ -96,7 +96,7 @@ class MypyBear:\n \n     LANGUAGES = {'Python', 'Python 2', 'Python 3'}\n     AUTHORS = {'Petr Viktorin'}\n-    REQUIREMENTS = {PipRequirement('mypy-lang', '0.4.6')}\n+    REQUIREMENTS = {PipRequirement('mypy', '0.590')}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T12:25:52Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:25:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2OTk2MQ==","url":"https://github.com/coala/coala-bears/pull/2649#issuecomment-408669961","bodyText":"@jayvdb made the changes.","diffHunk":null,"author":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4","name":"Nitesh Sharma"},"createdAt":"2018-07-29T11:28:39Z","lastEditedAt":null,"updatedAt":"2018-07-29T11:28:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY4MDY2MQ==","url":"https://github.com/coala/coala-bears/pull/2649#issuecomment-408680661","bodyText":"oops; wrong command","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T14:14:42Z","lastEditedAt":null,"updatedAt":"2018-07-29T14:14:42Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534126141000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2652","number":2652,"title":"GitRevertInspectBear.py: New bear","body":"Bear to inspect git revert commits\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-08-02T09:50:36Z","updatedAt":"2018-08-13T02:09:01Z","closedAt":"2018-08-13T02:08:38Z","state":"merged","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"CFB80A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2652","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIwNTgzMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207205832","bodyText":"We shouldn't place this logic here, this logic should be done after the bear is sure that the commit is a revert commit. Place this after line 38","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:24:08Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:24:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIwOTQyMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207209423","bodyText":"Remove this","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:37:10Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:37:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIwOTg3NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207209874","bodyText":"I think you might want to rename it to get_files_command, or place directly the command string into the run_shell_command's argument","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:38:48Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:38:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxMTczOQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207211739","bodyText":"Change this into reverted_commit_sha, and also in most cases, the distance between reverted_commit and revert_commit varies from 1 commit, even 100 commits between them, and it's rare to find a reverted commit and revert commit placed consecutively.\nGet the reverted_commit_sha from the commit message string, you can use regex group to do that.","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:45:52Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:45:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNDA4MA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207214080","bodyText":"Change this to get_reverted_commit_diff_command","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:53:55Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:53:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNTUzOA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207215538","bodyText":"👍 for this. I just know that we can negate the diff by just flipping the argument","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:58:38Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:58:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNjQxMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207216413","bodyText":"Make the minimum ratio as a setting, like minimum_similarity_ratio, so user of this bear can configure it","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')\n+                expected_parent_commit_diff = run_shell_command(\n+                    'git diff HEAD^ HEAD')[0]\n+\n+                matcher = SequenceMatcher(\n+                    None, parent_commit_diff, expected_parent_commit_diff)\n+                if matcher.real_quick_ratio() < 0.7:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:01:35Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:01:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNzY2Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207217662","bodyText":"... But in here we need to get the reverted commit diff, to do that we can do git diff <reverted_commit_sha>^ <reverted_commit_sha>","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:05:39Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:05:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxODg0OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207218848","bodyText":"Place head_commit_branch^ (one previous commit from the head_commit_branch) as a base here instead of master, since we want to get rid of the revert commit that's already on the head_commit_branch and creating the \"expected revert commit\"","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:09:48Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:09:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxOTA0Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207219042","bodyText":"I think we don't need to rebase the branch","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:10:23Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:10:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxOTMxNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207219317","bodyText":"Revert the reverted_commit_sha","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:11:25Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:11:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxOTQxNA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207219414","bodyText":"expected_revert_commit_diff","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')\n+                expected_parent_commit_diff = run_shell_command(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:11:43Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:11:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIzODI4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207238287","bodyText":"Switch to the head_commit_branch again and delete inspectrevertbranch","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')\n+                expected_parent_commit_diff = run_shell_command(\n+                    'git diff HEAD^ HEAD')[0]\n+\n+                matcher = SequenceMatcher(\n+                    None, parent_commit_diff, expected_parent_commit_diff)\n+                if matcher.real_quick_ratio() < 0.7:\n+                    yield Result(self, 'Changes in modified file %s of revert'\n+                                       'commit is not exactly revert of '\n+                                       'changes in reverted commit.' %\n+                                 file_name)\n+                run_shell_command('git branch -D inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T14:05:02Z","lastEditedAt":null,"updatedAt":"2018-08-02T14:05:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjEyMA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726120","bodyText":":param minimum_similarity_ratio:","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:01:04Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:01:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjEyNg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726126","bodyText":"Remove this blank line","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:01:17Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:01:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjE5Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726192","bodyText":"Make this regex as this Bear's constant variable, something like GIT_REVERT_COMMIT_RE","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:05:05Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:05:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjI1NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726254","bodyText":"See my comment on line 37.\nUse the regex group from GIT_REVERT_COMMIT_RE to capture the reverted_commit_sha","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:07:39Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:07:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjQyMQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726421","bodyText":"And add a regex group for the reverted commit sha, so the regex would be like this:\nr'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.'\nThen you can capture the regex group to get the reverted commit sha","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:16:25Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:16:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjgwMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726802","bodyText":"What we wanna compare is the current revert commit (which is on the HEAD) and the \"expected revert commit\".\nWe don't wanna compare the reverted commit with the \"expected revert commit\", because they're might be very different (but in some cases, the difference are just + and - sign, but still they're different)\nAnd also we want to get the diff for just one file (because this is a loop, and we compare them one by one), so the command would be changed to git diff HEAD^ HEAD file_name","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:37:38Z","lastEditedAt":"2018-08-05T08:21:09Z","updatedAt":"2018-08-05T08:21:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjg4NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726884","bodyText":"You forgot your inspectrevertbranch in the command","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:41:22Z","lastEditedAt":"2018-08-05T07:11:18Z","updatedAt":"2018-08-05T07:11:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzAyNg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727026","bodyText":"Catch the err (move err definition from line 105 to here)","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)\n+                run_shell_command(create_new_branch_command)\n+\n+                create_expected_revert_commit = ('git revert %s --no-edit' %\n+                                                 reverted_commit_sha)\n+                run_shell_command(create_expected_revert_commit)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:49:01Z","lastEditedAt":"2018-08-05T07:11:07Z","updatedAt":"2018-08-05T07:11:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzA0Mw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727043","bodyText":"After the self.warn do git revert --abort to make sure that we can checkout to the master","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)\n+                run_shell_command(create_new_branch_command)\n+\n+                create_expected_revert_commit = ('git revert %s --no-edit' %\n+                                                 reverted_commit_sha)\n+                run_shell_command(create_expected_revert_commit)\n+\n+                expected_revert_commit_diff, err = run_shell_command(\n+                    'git diff HEAD^ HEAD')\n+                if err:\n+                    self.warn('Cannot compare the modified files.')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:49:51Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:49:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzA2Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727062","bodyText":"Change the reverted_commit_diff with revert_commit_diff","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)\n+                run_shell_command(create_new_branch_command)\n+\n+                create_expected_revert_commit = ('git revert %s --no-edit' %\n+                                                 reverted_commit_sha)\n+                run_shell_command(create_expected_revert_commit)\n+\n+                expected_revert_commit_diff, err = run_shell_command(\n+                    'git diff HEAD^ HEAD')\n+                if err:\n+                    self.warn('Cannot compare the modified files.')\n+                    return\n+\n+                matcher = SequenceMatcher(\n+                    None, reverted_commit_diff, expected_revert_commit_diff)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:50:54Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:50:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzI1NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727255","bodyText":"This shouldn't appear","diffHunk":"@@ -0,0 +1,184 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T07:00:18Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:00:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzQ1Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727457","bodyText":"The name of this test is the same with the previous test, change it","diffHunk":"@@ -0,0 +1,184 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('rm testfile2.txt')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Changed text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of '\n+                          'changes in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T07:09:17Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:09:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzQ3NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727475","bodyText":"I think we don't need this","diffHunk":"@@ -0,0 +1,184 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('rm testfile2.txt')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Changed text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of '\n+                          'changes in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):\n+        run_shell_command('git checkout master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T07:09:42Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:09:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMjQ2Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208232462","bodyText":"Also do (like you did in line 120-121)\n                    run_shell_command(switch_branch_command)\n                    run_shell_command('git branch -D inspectrevertbranch')\n\nhere","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')\n+                    run_shell_command(create_new_branch_command)\n+\n+                    create_expected_revert_commit = ('git revert %s --no-'\n+                                                     'edit' %\n+                                                     reverted_commit_sha)\n+                    expected_revert_commit, err = run_shell_command(\n+                        create_expected_revert_commit)\n+                    if err:\n+                        self.warn('Cannot compare the modified files.')\n+                        run_shell_command('git revert --abort')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:37:26Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:37:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMjc4NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208232784","bodyText":"Don't forget the base commit (HEAD^)","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:38:15Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:38:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMzU1Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208233557","bodyText":"Unused variable expected_revert_commit","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')\n+                    run_shell_command(create_new_branch_command)\n+\n+                    create_expected_revert_commit = ('git revert %s --no-'\n+                                                     'edit' %\n+                                                     reverted_commit_sha)\n+                    expected_revert_commit, err = run_shell_command(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:40:04Z","lastEditedAt":"2018-08-07T13:51:42Z","updatedAt":"2018-08-07T13:51:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzNDM4Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208234382","bodyText":"I think we also want to use isjunk parameter here (see the documentation of difflib.SequenceMatcher).\nWe want to mark the line that are not starting with + and - sign as junk, since we just care about the changes\nisjunk function takes sequence of chars not sequence of lines","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')\n+                    run_shell_command(create_new_branch_command)\n+\n+                    create_expected_revert_commit = ('git revert %s --no-'\n+                                                     'edit' %\n+                                                     reverted_commit_sha)\n+                    expected_revert_commit, err = run_shell_command(\n+                        create_expected_revert_commit)\n+                    if err:\n+                        self.warn('Cannot compare the modified files.')\n+                        run_shell_command('git revert --abort')\n+                        return\n+\n+                    get_expected_commit_diff_command = ('git diff HEAD^ '\n+                                                        'HEAD ' + file_name)\n+                    expected_revert_commit_diff = run_shell_command(\n+                        get_expected_commit_diff_command)[0]\n+\n+                    matcher = SequenceMatcher(\n+                        None, revert_commit_diff, expected_revert_commit_diff)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:42:12Z","lastEditedAt":"2018-08-07T14:04:33Z","updatedAt":"2018-08-07T14:04:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzNTA4MQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208235081","bodyText":"I think this function is growing too big because of this check, move this check into a new function (the modified file similarity check)","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:44:04Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:44:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI1NzE2NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208257165","bodyText":"run_shell_command won't raise an exception if there's  a content in stderr, use _, err = run_shell_command(... instead","diffHunk":"@@ -0,0 +1,136 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                          file_name)\n+\n+        revert_commit_diff = run_shell_command(\n+            get_revert_commit_diff_command)[0]\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        try:\n+            run_shell_command(create_expected_revert_commit)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T14:37:57Z","lastEditedAt":null,"updatedAt":"2018-08-07T14:37:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI5NjA0Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208296042","bodyText":"Add a docstring that explains about what this function does and the arguments","diffHunk":"@@ -0,0 +1,135 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T16:18:24Z","lastEditedAt":null,"updatedAt":"2018-08-07T16:18:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI5NzQ5Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208297492","bodyText":"I think we might also want to rename this function name to get_modified_file_revert_commit_similarity","diffHunk":"@@ -0,0 +1,135 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T16:22:54Z","lastEditedAt":null,"updatedAt":"2018-08-07T16:22:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI5NzYxMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208297613","bodyText":"if similarity_ratio is None: return","diffHunk":"@@ -0,0 +1,135 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                          file_name)\n+\n+        revert_commit_diff = run_shell_command(\n+            get_revert_commit_diff_command)[0]\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        get_expected_commit_diff_command = ('git diff HEAD^ '\n+                                            'HEAD ' + file_name)\n+        expected_revert_commit_diff = run_shell_command(\n+            get_expected_commit_diff_command)[0]\n+\n+        matcher = SequenceMatcher(\n+            None, revert_commit_diff, expected_revert_commit_diff)\n+        similarity_ratio = matcher.real_quick_ratio()\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+        return similarity_ratio\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    similarity_ratio = self.check_modified_file_similarity(\n+                        file_name, reverted_commit_sha)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T16:23:17Z","lastEditedAt":null,"updatedAt":"2018-08-07T16:23:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI2OTI5OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209269298","bodyText":"Small hash","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-10T14:02:17Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:02:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MDA4OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209270088","bodyText":"Undefined minimum_similarity_ratio","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:\n+            with open(file_name, 'r') as f:\n+                expected_revert_file_content = f.read()\n+\n+            matcher = SequenceMatcher(\n+                None, revert_file_content, expected_revert_file_content)\n+            similarity_ratio = matcher.real_quick_ratio()\n+            if similarity_ratio < minimum_similarity_ratio:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1Mw==","createdAt":"2018-08-11T15:58:40Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T14:04:50Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:04:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MTMzMQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209271331","bodyText":"I think we might wanna change this function into a private function (by adding _ prefix in front of the function name), since this function probably wouldn't be called neither by the programmer nor user in another source code","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1MA==","createdAt":"2018-08-11T15:58:34Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T14:08:33Z","lastEditedAt":"2018-08-10T15:40:08Z","updatedAt":"2018-08-10T15:40:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MTY4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209271687","bodyText":"I think we don't need to add this check again, as it's already done in line 142","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1OQ==","createdAt":"2018-08-11T15:59:08Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T14:09:38Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:09:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MjYwMQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209272601","bodyText":"git rm is enough I think","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-10T14:12:40Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:12:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3Mjc2OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209272768","bodyText":"git rm is enough I think","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('rm testfile2.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-10T14:13:12Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:13:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTMwMTA4Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209301082","bodyText":"These files are of the \"expected revert commit\" that we are creating for comparison.\nLine 142 checks files in the reverted commit. So as to check any extra added or deleted files.","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:","author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1Nw==","createdAt":"2018-08-11T15:59:05Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T15:38:07Z","lastEditedAt":null,"updatedAt":"2018-08-10T15:38:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTMwMjQyMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209302423","bodyText":"yield from self.check_modified..","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:\n+            with open(file_name, 'r') as f:\n+                expected_revert_file_content = f.read()\n+\n+            matcher = SequenceMatcher(\n+                None, revert_file_content, expected_revert_file_content)\n+            similarity_ratio = matcher.real_quick_ratio()\n+            if similarity_ratio < minimum_similarity_ratio:\n+                yield Result(self, 'Changes in modified file %s of '\n+                             'revert commit are not exactly '\n+                             'revert of changes in reverted '\n+                             'commit.' %\n+                             file_name)\n+\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+\n+        return\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    self.check_modified_file_similarity(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE2MQ==","createdAt":"2018-08-11T15:59:16Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T15:42:23Z","lastEditedAt":null,"updatedAt":"2018-08-10T15:42:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDM4Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209414382","bodyText":"If the file doesn't exist in the \"expected revert commit\", it means that the file doesn't exist in the reverted commit either (since the \"expected revert commit\" is created purely with git revert without any modification, it should be the negate of the reverted commit). And this function probably won't be called in another source code, so I think it's safe enough to remove this check here","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-11T02:57:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:57:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDM5OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209414398","bodyText":"Un-ident line 79-80","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:\n+            with open(file_name, 'r') as f:\n+                expected_revert_file_content = f.read()\n+\n+            matcher = SequenceMatcher(\n+                None, revert_file_content, expected_revert_file_content)\n+            similarity_ratio = matcher.real_quick_ratio()\n+            if similarity_ratio < minimum_similarity_ratio:\n+                yield Result(self, 'Changes in modified file %s of '\n+                             'revert commit are not exactly '\n+                             'revert of changes in reverted '\n+                             'commit.' %\n+                             file_name)\n+\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-11T02:58:15Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:58:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM3MA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430370","bodyText":"extra round brackets around reverted_commit_sha not needed or desirable","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:12Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM4MQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430381","bodyText":"redundant round brackets","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:39Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM4OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430388","bodyText":"redundant round brackets","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:46Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM4OQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430389","bodyText":"redundant round brackets","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))\n+\n+            for file_path in result.modified_files:\n+                if file_path in reverted_commit_modified_files_list:\n+                    yield from self._check_modified_file_similarity(\n+                        file_path, reverted_commit_sha,\n+                        minimum_similarity_ratio)\n+\n+                else:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                 'file %s that is not in reverted '\n+                                 'commit.' % (file_path))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:53Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjE1Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442152","bodyText":"git add testfile5.txt","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:11:57Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:11:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjE1NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442154","bodyText":"git add testfile5.txt","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile6.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:12:04Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:12:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjE1NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442155","bodyText":"git add testfile5.txt","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Last line\\n')\n+        run_shell_command('git add testfile6.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:12:09Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:12:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjIyMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442222","bodyText":"Please split this test into another test method","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Last line\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        self.assertEqual(self.run_uut(),\n+                         ['Changes in modified file testfile5.txt of revert '\n+                          'commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+        run_shell_command('git checkout -b branch4 master')\n+        with open('testfile6.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"modify testfile6\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile6.txt', 'a') as f:\n+            f.write('Some more appended text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        self.assertEqual(self.run_uut(), [])","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:20:44Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:20:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjIyOQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442229","bodyText":"Not used variable, please remove line 65-70","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:21:47Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:21:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjI4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442287","bodyText":"Create a function named clean_inspect_revert_branch inside this function, containing routines in line 85-86 and then use it here and in line 56, as we don't want to get many code duplication","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:29:35Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:29:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0OTgyNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209449827","bodyText":"add # pragma: no cover after this, so that your build goes green and we can review it","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T10:02:13Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:02:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTAyMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451023","bodyText":"Move this function definition into the inside of _check_modified_file_similarity() as this function would probably only called there.\nAnd it can be as simple as\ndef clean_inspect_revert_branch():\n    run_shell_command(switch_branch_command)\n    run_shell_command('git branch -D inspectrevertbranch')","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDczMw==","createdAt":"2018-08-12T11:34:20Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T10:56:03Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:56:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTEwMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451102","bodyText":".. not in the reverted ..","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDczNg==","createdAt":"2018-08-12T11:34:46Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T10:59:55Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:59:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTEwNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451107","bodyText":".. not in the reverted ...","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDc0MA==","createdAt":"2018-08-12T11:34:55Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T11:00:14Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:00:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTExNA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451114","bodyText":"... not in the reverted ...","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.modified_files:\n+                if file_path in reverted_commit_modified_files_list:\n+                    yield from self._check_modified_file_similarity(\n+                        file_path, reverted_commit_sha,\n+                        minimum_similarity_ratio)\n+\n+                else:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                 'file %s that is not in reverted '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDc0Mg==","createdAt":"2018-08-12T11:35:05Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T11:00:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:00:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTI4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451287","bodyText":"I think switching to a new branch is a bit superfluous here, remove it","diffHunk":"@@ -0,0 +1,215 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T11:06:30Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:06:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTMyNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451327","bodyText":"I think switching to a new branch is a bit superfluous here, remove it","diffHunk":"@@ -0,0 +1,215 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_file_similarity_with_invalid_revert_commit(self):\n+        Path('testfile5.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T11:08:06Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:08:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTM2NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451364","bodyText":"I think switching to a new branch is a bit superfluous here, remove it","diffHunk":"@@ -0,0 +1,215 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_file_similarity_with_invalid_revert_commit(self):\n+        Path('testfile5.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile5\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Last line\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        self.assertEqual(self.run_uut(),\n+                         ['Changes in modified file testfile5.txt of revert '\n+                          'commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+    def test_check_file_similarity_with_correct_revert_commit(self):\n+        Path('testfile6.txt').touch()\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch4 master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T11:09:56Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:09:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTk3OQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451979","bodyText":"This string should be a constant, with substitution variable for \"added\", \"deleted\" & \"modified\"","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.modified_files:\n+                if file_path in reverted_commit_modified_files_list:\n+                    yield from self._check_modified_file_similarity(\n+                        file_path, reverted_commit_sha,\n+                        minimum_similarity_ratio)\n+\n+                else:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                 'file %s that is not in reverted '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDg5NQ==","createdAt":"2018-08-12T11:47:30Z","content":"THUMBS_UP","user":{"login":"refeed","name":"Rafid Aslam"}}],"createdAt":"2018-08-12T11:35:37Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:35:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI4MTM2Mw==","url":"https://github.com/coala/coala-bears/pull/2652#issuecomment-412281363","bodyText":"rebase!","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:13:15Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:13:15Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533469450000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2654","number":2654,"title":"PEP8Bear: Migrate bear to aspects","body":"This migrates PEP8Bear to its respective\naspects and tastes.\nCloses #2653\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-05T05:34:25Z","updatedAt":"2018-08-05T11:44:10Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2654","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUxNDYxNA==","url":"https://github.com/coala/coala-bears/pull/2654#issuecomment-410514614","bodyText":"Blocked by #2461","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T11:44:10Z","lastEditedAt":null,"updatedAt":"2018-08-05T11:44:10Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533565405000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2655","number":2655,"title":"ClangBear.py: Rename variable range","body":"Variable name range renamed to clang_range.\nFixes #2585\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-08-05T06:08:37Z","updatedAt":"2018-08-06T14:23:25Z","closedAt":"2018-08-05T12:50:01Z","state":"merged","user":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"owner":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"assignee":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"needs rebase","color":"f4cd69"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"bfd4f2"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2655","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUwNzQ3Mg==","url":"https://github.com/coala/coala-bears/pull/2655#issuecomment-410507472","bodyText":"Needs rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T09:30:05Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:30:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUxMjk3OQ==","url":"https://github.com/coala/coala-bears/pull/2655#issuecomment-410512979","bodyText":"reack a2be308","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T11:11:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T11:11:19Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533646619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2657","number":2657,"title":"PycodestyleBear: Migrate bear to aspects","body":"This migrates PycodestyleBear to its respective\naspects and tastes.\nCloses #2656\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-05T18:20:55Z","updatedAt":"2018-08-07T12:56:59Z","closedAt":"2018-08-07T12:56:59Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2657","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2MDE2NQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207760165","bodyText":"great. removing this is necessary, because the decorator uses self.section.aspects , and so self is needed.","diffHunk":"@@ -21,9 +23,14 @@ class PycodestyleBear:\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n-    @staticmethod","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4MTAyMw==","createdAt":"2018-08-06T06:12:38Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-06T02:03:24Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:03:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2MDU2Mg==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207760562","bodyText":"We need to verify that the Result object returned uses the aspect.\n(I suspect that it doesnt.)\nIf it doesnt, create a bug against @linter because its default run needs to use aspects for the Result, and map_setting_to_aspect may also need to be improved in the process.\nAnd we may just merge this as-is if the bug is in Linter.\nIf the Result objects correctly use aspects, then this test class needs to be a more detailed test class ... which checks that the Result object reports the correct aspect.","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:09:06Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:09:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc5MTYwOQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207791609","bodyText":"Yes, it doesn't use the aspect.\nWe need to modify @linter to use the aspect just as the Result module does.\nI have created an issue coala/coala#5694","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T07:08:33Z","lastEditedAt":"2018-08-06T07:45:50Z","updatedAt":"2018-08-06T07:45:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwMDQxNw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207800417","bodyText":"Ya, I expected so.  Thanks.\nWhat you could try is add a run method to this bear, and it would do\nfor result in super().run(*args, **kwargs):\n   if (max_line_length is from aspect) and (result is line length problem):\n        result.aspect = LineLength('Python').max_line_length","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T07:49:45Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:49:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg2Mzk1Ng==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207863956","bodyText":"is it possible / sensible to set this to the taste for LineLenght , if the aspect was used to determine the max line length?","diffHunk":"@@ -61,3 +70,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T11:51:05Z","lastEditedAt":null,"updatedAt":"2018-08-06T11:51:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg4MjE2Nw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207882167","bodyText":"See the docstring for Result.aspect.\n\nAn aspectclass instance which this result is associated to.\nNote that this should be a leaf of the aspect tree!\n\nFormatting('py') is not the leaf of the aspect tree.","diffHunk":"@@ -61,3 +70,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T13:00:02Z","lastEditedAt":null,"updatedAt":"2018-08-06T13:00:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg4Mjc4OQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207882789","bodyText":"Oh, didn't see that one, I'll update it to LineLength","diffHunk":"@@ -61,3 +70,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=Formatting('py'),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T13:02:19Z","lastEditedAt":null,"updatedAt":"2018-08-06T13:02:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzkyMDM2OQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207920369","bodyText":"not all pycodestyle errors are LineLength('py').\nPlease decode the pycodestyle errors and use appropriate aspects","diffHunk":"@@ -61,3 +67,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=LineLength('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUxMTg4NA==","createdAt":"2018-08-06T16:36:47Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-06T14:52:47Z","lastEditedAt":null,"updatedAt":"2018-08-06T14:52:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAzODY3Nw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208038677","bodyText":"a trailing comma is useless if followed by a bracket.","diffHunk":"@@ -1,15 +1,16 @@\n import sys\n+import re\n \n from coalib.bearlib.abstractions.Linter import linter\n from coalib.settings.Setting import typed_list\n+from coalib.results.Result import Result\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import LineLength\n \n from dependency_management.requirements.PipRequirement import PipRequirement\n \n \n-@linter(executable='pycodestyle',\n-        output_format='regex',\n-        output_regex=r'(?P<line>\\d+) (?P<column>\\d+) '\n-                     r'(?P<message>(?P<origin>\\S+).*)')\n+@linter(executable='pycodestyle',)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T21:43:10Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:43:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAzODg1Mg==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208038852","bodyText":"keep the output_regex here as a module level variable.\nthe diff will then show that the regex hasnt changed.","diffHunk":"@@ -1,15 +1,16 @@\n import sys\n+import re\n \n from coalib.bearlib.abstractions.Linter import linter\n from coalib.settings.Setting import typed_list\n+from coalib.results.Result import Result\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import LineLength\n \n from dependency_management.requirements.PipRequirement import PipRequirement\n \n \n-@linter(executable='pycodestyle',\n-        output_format='regex',\n-        output_regex=r'(?P<line>\\d+) (?P<column>\\d+) '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T21:43:57Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:43:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAzOTExNQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208039115","bodyText":"Now we need a test class which verifies that the aspect is used when the line length is exceeded.","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUzODY0OA==","createdAt":"2018-08-07T04:59:38Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-06T21:45:07Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:45:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODExNzkyNw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208117927","bodyText":"this is a regression.\nPreviously the origin was the error code.\nyou are discarding that","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T06:58:27Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:58:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEzMzc3OA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208133778","bodyText":"origin is to be kept PycodestyleBear only as that when we want to ignore PycodestyleBear, we have to do # Ignore Pycodestyle and not # Ignore E501(or any other rule).\nI have changed it to rule and kept the origin self only, so that there's no confusion","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-07T08:03:20Z","lastEditedAt":"2018-08-07T08:05:29Z","updatedAt":"2018-08-07T08:05:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEzNjAzNA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208136034","bodyText":"it was previously origin ... was it being ignored previously?\nif the Result objects were previously setting origin to PycodestyleBear, then why was the regex capturing origin .. what was happening with it previously?\nwrt # Ignore ... if the bear was previously using origin of E501, then users must be using # Ignore E501 currently, and if you change it then their CI will break.\nSo we need to be careful.\nWe can still change it, but we need to ensure that change isnt hidden in an 'aspectification' commit.  It needs to be a separate issue which is classified as a bug, and properly analysed.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:11:39Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:11:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0NDI5OA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208144298","bodyText":"Currently, it uses # Ignore Pycodestyle or # Ignore Pycodestyle (E501) (an example is \n  \n    \n      coala-bears/tests/js/PrettierLintBearTest.py\n    \n    \n         Line 11\n      in\n      e46d352\n    \n    \n    \n    \n\n        \n          \n           # Start ignoring PycodestyleBear, LineLengthBear \n        \n    \n  \n\n).\nI see what @linter was doing previously, see https://github.com/coala/coala/blob/d936d1624a8d37b4be96d023079c39f244a351c3/coalib/bearlib/abstractions/Linter.py#L320\nI am changing this to what was being done previously in the linter.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-07T08:38:57Z","lastEditedAt":"2018-08-07T08:43:22Z","updatedAt":"2018-08-07T08:43:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0ODY4MA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208148680","bodyText":"Thank you -- that is better.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:53:19Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:53:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0OTAzOA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208149038","bodyText":"this line does not need to change.\nyou only need to add a line above with self,","diffHunk":"@@ -21,9 +27,14 @@ class PycodestyleBear:\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n-    @staticmethod\n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     def create_arguments(\n-            filename, file, config_file,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:54:32Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:54:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0OTM5OA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208149398","bodyText":"all args fit on one line, and should be on one line.  The signature of this method does not change.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:55:46Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:55:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0OTY0MA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208149640","bodyText":"please restore this to 'origin'","diffHunk":"@@ -1,15 +1,21 @@\n import sys\n+import re\n \n from coalib.bearlib.abstractions.Linter import linter\n from coalib.settings.Setting import typed_list\n+from coalib.results.Result import Result\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import LineLength\n \n from dependency_management.requirements.PipRequirement import PipRequirement\n \n \n+OUTPUT_REGEX = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                r'(?P<message>(?P<rule>\\S+).*)')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:56:33Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:56:33Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534470074000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2658","number":2658,"title":"setup.cfg: Use template","body":"need to redo the commits","comments":0,"createdAt":"2018-08-06T11:30:43Z","updatedAt":"2018-08-17T01:41:14Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2658","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533797295000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2661","number":2661,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-08T14:39:04Z","updatedAt":"2018-08-09T06:48:15Z","closedAt":"2018-08-09T06:47:43Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2661","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODYxMzMyMQ==","url":"https://github.com/coala/coala-bears/pull/2661#discussion_r208613321","bodyText":"please remove this file.\nand also change your commit message to \"Sync templates\" as was provided to you on gitter.","diffHunk":"@@ -0,0 +1 @@\n+{\"Gemfile\": \"\\u00c1j\\u00b8\\u001d\\u00be\\u00b5\\u00c7N\\u00b0w|\\u000e\\\\\\u0013o \", \"runtime.txt\": \"Nd\\u001d\\u00a2B\\u001e\\u00a7\\u0092\\u0017\\u0018\\u0019\\u00e7\\u008b\\u00d6t\\u0099\", \"bear-requirements.txt\": \"Vy\\u00f3\\u00a0q\\u0002i\\u0084\\u009f\\u00cd\\u00fd\\u0018\\u00e9\\u00be,T\", \".ci/appveyor.yml\": \"\\u009bo\\u00ceZ\\u00c3\\u00c1\\\\T\\u00c23\\u0012\\u0006m*#v\", \"package.json\": \"\\u00a85\\u00be\\u0096Y\\u00d1\\u0094m\\u00e6\\u00c6\\u0001\\u0099s\\u00f89\\u0010\", \"bears/VERSION\": \"\\u00c3\\u000bH\\u0083\\u00cb,\\u00e0&\\u001a\\u00fb\\u00f6\\u001a\\u00bb\\u008f\\u00a9\\u00c2\", \"requirements.txt\": \"\\u00ce\\u00ee\\u00ee&Z4\\u0080\\r\\u00ca\\u00c0\\u0090\\u00b1\\u00cfC\\u000f<\", \"coala-bears.cabal\": \"\\u00e9\\u00c9\\u001e!@\\u008eDf\\u00d9\\u0098\\u0094\\t\\u00d8a\\u0085B\", \"test-requirements.txt\": \"yM\\u00d3N\\u00ff\\u0001s\\u0004wH'\\u00b0\\u008e8\\u00fac\", \"netlify.toml\": \"\\u00fbr\\u00a7\\u00f0{{\\u00b6\\u00e2U\\u00ced\\u00b5<^\\u00aaY\", \".ci/run_with_env.cmd\": \"\\u00aa\\u00d9Kx\\u00ee\\u00be7\\u00ef@\\u0012\\u001e\\u00a4\\u0098\\u00c9\\u00de\\u00a3\", \"setup.py\": \"\\u00e0\\u0005T#M;?\\u000e:\\u00a1\\u0019\\u008c\\u00c1\\u009e\\u008a\\u0094\"}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T14:53:44Z","lastEditedAt":null,"updatedAt":"2018-08-08T14:53:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODYxNzg3OQ==","url":"https://github.com/coala/coala-bears/pull/2661#discussion_r208617879","bodyText":"And to fix this annoyance, please also edit .coafile and change the max line length to 80 instead of 79 .\nI have created an issue for you to do that #2662\nAdd a separate commit which makes that change.","diffHunk":"@@ -100,6 +100,220 @@ def run(self):\n __dir__ = os.path.dirname(__file__)\n \n \n+from distutils.version import LooseVersion  # noqa (late-import)\n+\n+\n+class PEP440Version(LooseVersion):\n+    \"\"\"\n+    Basic PEP440 version with a few features.\n+\n+    Uses the same version semantics as LooseVersion,\n+    with the addition that a ``v`` prefix is allowed\n+    in the version as required by PEP 440.\n+\n+    vstring may be a list, tuple or string.\n+\n+    v_prefix indicates whether output of the version\n+    should include a v prefix.\n+\n+    v_prefix is auto-detected by default.\n+    Set to False to remove if present, or True to add if missing.\n+    \"\"\"\n+\n+    def __init__(self, vstring=None, v_prefix=None):\n+        self._v_prefix = v_prefix\n+\n+        if isinstance(vstring, (list, tuple)):\n+            type_ = type(vstring)\n+            vstring = '.'.join(str(i) for i in vstring)\n+        else:\n+            type_ = list\n+\n+        vstring = vstring.strip()\n+\n+        if vstring.startswith('v'):\n+            vstring = vstring[1:]\n+            if vstring.startswith('!'):\n+                raise ValueError('Invalid use of epoch')\n+            if v_prefix is not False:\n+                self._v_prefix = True\n+\n+        # Can not use super(..) on Python 2.7\n+        LooseVersion.__init__(self, vstring)\n+        if self._v_prefix:\n+            self.vstring = 'v' + self.vstring\n+        if len(self.version) > 1 and self.version[1] == '!':\n+            self._epoch = self.version[0]\n+            if not isinstance(self._epoch, int) or len(self.version) < 3:\n+                raise ValueError('Invalid use of epoch')\n+\n+        # Normalise to lower case\n+        self.version = [\n+            x if isinstance(x, int) else x.lower() for x in self.version\n+            if x not in ('-', '_')]\n+\n+        if self.version[-1] != '*' and not isinstance(self.version[-1], int):\n+            self.version += (0, )\n+\n+        if type_ is tuple:\n+            self.version = tuple(self.version)\n+\n+        self._final = None\n+        self._previous = None\n+\n+    def __repr__(self):\n+        return \"%s('%s')\" % (self.__class__.__name__, str(self))\n+\n+    @property\n+    def is_dev(self):\n+        return any(part == 'dev' for part in self.version)\n+\n+    @property\n+    def has_epoch(self):\n+        return any(part == '!' for part in self.version)\n+\n+    @property\n+    def final(self):\n+        \"\"\"\n+        Provide only the final component of the version.\n+\n+        A new instance is return if this instance is not final.\n+        \"\"\"\n+        if self.has_epoch:\n+            raise NotImplementedError\n+\n+        if self._final is not None:\n+            return self._final\n+\n+        for i, part in enumerate(self.version):\n+            if not isinstance(part, int):\n+                final = self.version[:i]\n+                break\n+        else:\n+            self._final = self\n+            return self\n+\n+        self._final = PEP440Version(final, self._v_prefix)\n+\n+        return self._final\n+\n+    @property\n+    def is_final(self):\n+        return self.final == self\n+\n+    @property\n+    def is_zero(self):\n+        return all(part == 0 for part in self.version)\n+\n+    _zero_message = 'version prior to 0.0 can not exist'\n+\n+    def _estimate_previous(self):\n+        \"\"\"\n+        Return a new version calculated to be the previous version.\n+\n+        Currently only handles when the current instance is a final version.\n+\n+        To really get the previous for 1.0.0, we need to consult PyPi,\n+        git tags, or some other source of all released versions,\n+        to find the highest patch release in the prior minor release, or\n+        highest minor releases if there were no patch releases in the\n+        last minor release, etc.\n+\n+        As a result, currently this assumes that release x.(x-1).0 exists\n+        in that instance.\n+        \"\"\"\n+        if self._previous:\n+            return self._previous\n+\n+        assert self.is_final, '%r is not final' % self\n+\n+        if self.is_zero:\n+            raise ValueError(self._zero_message)\n+\n+        previous = self._decrement(self.version)\n+        self._previous = PEP440Version(previous, self._v_prefix)\n+        return self._previous\n+\n+    @staticmethod\n+    def _decrement(version):\n+        pos = len(version) - 1\n+\n+        # Look for non-zero int part\n+        while pos != 0 and not (isinstance(version[pos], int) and version[pos]):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T15:04:33Z","lastEditedAt":null,"updatedAt":"2018-08-08T15:04:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTY0ODI4Ng==","url":"https://github.com/coala/coala-bears/pull/2661#issuecomment-411648286","bodyText":"Commit metadata includes @anctartica .  How did he get there?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T06:13:02Z","lastEditedAt":null,"updatedAt":"2018-08-09T06:13:02Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533750777000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2663","number":2663,"title":".coafile: Set max line characters to 80","body":"The attribute max_line_length changed to 80.\nCloses #2662\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-08-08T15:51:33Z","updatedAt":"2018-08-08T17:52:57Z","closedAt":"2018-08-08T17:52:56Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"bfd4f2"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2663","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTQ4Mzg0OA==","url":"https://github.com/coala/coala-bears/pull/2663#issuecomment-411483848","bodyText":"This wasnt rebased.  Keep your master up to date, and check it before pushing a PR","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T17:17:33Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:17:33Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534134018000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2666","number":2666,"title":"appveyor.yml: Install test requirements first","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-08-10T13:58:06Z","updatedAt":"2018-08-13T04:20:18Z","closedAt":"2018-08-13T04:19:37Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2666","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534179215000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2667","number":2667,"title":"Jinja2Bear: Disable the need of trailing comment","body":"This enables the end of block to not have comment.\nHowever by default it would check for the trailing comment\nBut the behavior can be changed by the user explicitly.\nCloses #2659\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-10T16:21:05Z","updatedAt":"2018-08-13T16:53:35Z","closedAt":"2018-08-13T16:53:35Z","state":"merged","user":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"owner":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2667","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxMTA5MQ==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209411091","bodyText":"change this to\nif not check_end_labels:\n    return\nthen you dont need to indent all the other lines","diffHunk":"@@ -308,31 +309,32 @@ def check_control_end_tags(self,\n                 yield self.handle_control_spacing_issue(\n                     file, filename, line, line_number, control_spacing, m)\n \n-            # yield results for incorrect or missing end labels\n-            if label is None and line_number != start_in_line:\n-                diff = generate_label_diff(\n-                    file, filename, line, line_number, m, expected_label)\n-                yield Result.from_values(\n-                    origin=self,\n-                    message='Unlabeled control end tag',\n-                    file=filename,\n-                    line=line_number,\n-                    column=m.start(0) + 1,\n-                    end_line=line_number,\n-                    end_column=m.end(0) + 1,\n-                    diffs=diff)\n-            elif label != expected_label and line_number != start_in_line:\n-                diff = generate_label_diff(\n-                    file, filename, line, line_number, m, expected_label)\n-                yield Result.from_values(\n-                    origin=self,\n-                    message='End tag label does not match expected label',\n-                    file=filename,\n-                    line=line_number,\n-                    column=m.start('label') + 1,\n-                    end_line=line_number,\n-                    end_column=m.end('label') + 1,\n-                    diffs=diff)\n+            if check_end_labels:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T00:44:57Z","lastEditedAt":null,"updatedAt":"2018-08-11T00:44:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjIzNA==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209482234","bodyText":"add trailing , so the next setting is easy to add","diffHunk":"@@ -356,6 +360,7 @@ def run(self,\n             variable_spacing: int = 1,\n             statement_spacing: int = 1,\n             control_spacing: int = 1,\n+            check_end_labels: bool = True","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T02:52:36Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:52:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjI1OA==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209482258","bodyText":"add a trailing comma and move the ) to the next line.","diffHunk":"@@ -420,7 +425,8 @@ def run(self,\n                 file, filename, line, line_number, control_spacing)\n \n             yield from self.check_control_end_tags(\n-                file, filename, line, line_number, control_spacing)\n+                file, filename, line, line_number, control_spacing,\n+                check_end_labels)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T02:53:00Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:53:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjM2OA==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209482368","bodyText":"change the variable name to \"valid_file_without_end_comments\" or something like that.","diffHunk":"@@ -164,6 +164,26 @@ def test_control_spacing(self):\n     valid_files=(good_file1, good_file2, good_file3),\n     invalid_files=(bad_file1, bad_file2))\n \n+good_file_01 = \"\"\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T02:54:53Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:54:53Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534008261000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2671","number":2671,"title":"GofmtBearTest: Skip tests if bear is not installed","body":"This enables the tests to skip if the GofmtBear is not\ninstalled.\nFixes #2670\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-11T15:52:37Z","updatedAt":"2018-08-11T17:24:21Z","closedAt":"2018-08-11T17:24:19Z","state":"merged","user":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"owner":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2671","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534535743000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2675","number":2675,"title":"GNUIndentBear.py: Fix max_line_length=0","body":"Add infinite length when\nmax_line_length is set to 0\nFixes coala/coala-bears#2669\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T09:50:30Z","updatedAt":"2018-08-17T19:55:43Z","closedAt":"2018-08-16T08:07:57Z","state":"merged","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2675","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI1MzAwMA==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210253000","bodyText":"The change you have done is ok, but this doesnt solve the problem.\nmax_line_length is not used after here.\nIt needs to be set much earlier in the function, before it is used.","diffHunk":"@@ -193,7 +194,7 @@ def create_arguments(filename, file, config_file,\n \n         # The limit is set to a number which equals to int max in C","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T12:32:39Z","lastEditedAt":null,"updatedAt":"2018-08-15T12:32:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ4MDAyNg==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210480026","bodyText":"Please remove this blank line","diffHunk":"@@ -155,6 +156,11 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T05:26:22Z","lastEditedAt":null,"updatedAt":"2018-08-16T05:26:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ4NTQxNQ==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210485415","bodyText":"Is this comment still relevant?","diffHunk":"@@ -155,6 +156,10 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+        # The limit is set to a number which equals to int max in C","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-08-16T06:10:13Z","lastEditedAt":null,"updatedAt":"2018-08-16T06:10:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ4OTY2Nw==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210489667","bodyText":"It isnt the max size in Python.\nSee https://docs.python.org/3/library/sys.html#sys.maxsize\nNote that Py_ssize_t isnt something that is exposed to the Python 3 language at all -- it is quite internal, so it is better to say this is an arbitrary high number.","diffHunk":"@@ -155,6 +156,10 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+        # The limit is set to a number which equals to the max size in Python","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T06:37:31Z","lastEditedAt":null,"updatedAt":"2018-08-16T06:37:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ5NTQzOQ==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210495439","bodyText":"Okay. Changing it","diffHunk":"@@ -155,6 +156,10 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+        # The limit is set to a number which equals to the max size in Python","author":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4","name":"Amandeep Srivastava"},"createdAt":"2018-08-16T07:09:41Z","lastEditedAt":null,"updatedAt":"2018-08-16T07:09:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzQzMzgwNg==","url":"https://github.com/coala/coala-bears/pull/2675#issuecomment-413433806","bodyText":"@srivama , your commit message uses coala/coala-bears#2669.  You need to use the full URL to the issue.\nAnd you need to rebase.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T05:52:26Z","lastEditedAt":null,"updatedAt":"2018-08-16T05:52:26Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534344956000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2676","number":2676,"title":"GNUIndentBear.py: Fix max_line_length=0","body":"Add infinite length when\nmax_line_length is set to 0\nFixes coala/coala-bears#2669\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-15T14:47:58Z","updatedAt":"2018-08-15T14:55:56Z","closedAt":"2018-08-15T14:55:55Z","state":"closed","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2676","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyMzkwNw==","url":"https://github.com/coala/coala-bears/pull/2676#issuecomment-413223907","bodyText":"Duplicate of #2675","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T14:55:55Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:55:55Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535581747000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2679","number":2679,"title":"BanditBearTest.py: Support bandit 1.5","body":"Allows the B701 message to vary slightly for bandit 1.5\nCloses #2678\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-17T17:30:34Z","updatedAt":"2018-08-29T22:29:07Z","closedAt":"2018-08-29T22:29:07Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/test","color":"207de5"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2679","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534552213000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2680","number":2680,"title":"JuliaLintBearTest: Remove timeout","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-18T00:20:59Z","updatedAt":"2018-08-18T00:30:13Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/test","color":"207de5"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2680","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535783558000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2684","number":2684,"title":"TailorBearTest.py & TSLintBearTest.py : Change test variables name","body":"Ensures that name of tests are consistent with other test modules\nthat use verify_local_bear\nCloses #1733","comments":2,"createdAt":"2018-09-01T06:16:49Z","updatedAt":"2018-09-01T06:32:38Z","closedAt":null,"state":"open","user":{"login":"e-aakash","avatarUrl":"https://avatars2.githubusercontent.com/u/38072663?v=4"},"owner":{"login":"e-aakash","avatarUrl":"https://avatars2.githubusercontent.com/u/38072663?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2684","comments":[]}}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1533151979000,"issue":{"htmlUrl":"https://github.com/coala/documentation/pull/566","number":566,"title":"FAQ.rst:Replace a FAQ","body":"Replace a FAQ about pull requests with how to contribute to coala.\ncloses: #552\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-26T11:41:45Z","updatedAt":"2018-08-01T19:32:59Z","closedAt":null,"state":"open","user":{"login":"sarthakchakerverty","avatarUrl":"https://avatars3.githubusercontent.com/u/31766358?v=4"},"owner":{"login":"sarthakchakerverty","avatarUrl":"https://avatars3.githubusercontent.com/u/31766358?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"0e8a16"}],"pullRequest":{"htmlUrl":"https://github.com/coala/documentation/pull/566","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwODQwMDc1Ng==","url":"https://github.com/coala/documentation/pull/566#issuecomment-408400756","bodyText":"@chhabrabhishek made the requested changes.","diffHunk":null,"author":{"login":"sarthakchakerverty","avatarUrl":"https://avatars3.githubusercontent.com/u/31766358?v=4","name":"Sarthak Chakerverty"},"createdAt":"2018-07-27T12:09:49Z","lastEditedAt":null,"updatedAt":"2018-07-27T12:09:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2MzM0Mg==","url":"https://github.com/coala/documentation/pull/566#issuecomment-408663342","bodyText":"@chhabrabhishek @jayvdb squashed the commits.Please review!","diffHunk":null,"author":{"login":"sarthakchakerverty","avatarUrl":"https://avatars3.githubusercontent.com/u/31766358?v=4","name":"Sarthak Chakerverty"},"createdAt":"2018-07-29T09:18:37Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:18:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODk2MzYwNg==","url":"https://github.com/coala/documentation/pull/566#issuecomment-408963606","bodyText":"@jayvdb Commit message is now editted.","diffHunk":null,"author":{"login":"sarthakchakerverty","avatarUrl":"https://avatars3.githubusercontent.com/u/31766358?v=4","name":"Sarthak Chakerverty"},"createdAt":"2018-07-30T18:27:57Z","lastEditedAt":null,"updatedAt":"2018-07-30T18:27:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTY5NDcxMg==","url":"https://github.com/coala/documentation/pull/566#issuecomment-409694712","bodyText":"At least two things wrong with your commit message.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T19:32:51Z","lastEditedAt":null,"updatedAt":"2018-08-01T19:32:51Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535712274000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/658","number":658,"title":"Change 2017 GSoC report activity yaml","body":"This fixes the previously 0 based yaml and changes it to 1 based.\nFixes #616\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-31T05:01:12Z","updatedAt":"2018-08-31T10:44:34Z","closedAt":null,"state":"open","user":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"owner":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"assignee":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/658","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDI1NjY2MA==","url":"https://github.com/coala/projects/pull/658#discussion_r214256660","bodyText":"Your commit message does not reflect your changes. This file is not 2017 report but 2018.","diffHunk":"@@ -44,392 +44,392 @@ social:\n email: ajankit2304@gmail.com\n blog: https://macbox7.github.io/Blog-GSOC18/\n activity:\n- - 0:\n+ - 1:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-31T06:39:01Z","lastEditedAt":null,"updatedAt":"2018-08-31T06:39:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDMxNDQ1NA==","url":"https://github.com/coala/projects/pull/658#discussion_r214314454","bodyText":"Also your commit message should follow the commit guidelines.","diffHunk":"@@ -44,392 +44,392 @@ social:\n email: ajankit2304@gmail.com\n blog: https://macbox7.github.io/Blog-GSOC18/\n activity:\n- - 0:\n+ - 1:","author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2018-08-31T10:44:34Z","lastEditedAt":null,"updatedAt":"2018-08-31T10:44:34Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535417146000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/656","number":656,"title":"Update adhikasp.md","body":"Made PRs link directly to the commits\nFixes #623","comments":0,"createdAt":"2018-08-26T22:52:12Z","updatedAt":"2018-08-28T00:45:46Z","closedAt":null,"state":"open","user":{"login":"Hax7","avatarUrl":"https://avatars0.githubusercontent.com/u/18662960?v=4"},"owner":{"login":"Hax7","avatarUrl":"https://avatars0.githubusercontent.com/u/18662960?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/656","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjk1MjUyNw==","url":"https://github.com/coala/projects/pull/656#discussion_r212952527","bodyText":"detail should be aspectModule: Add ``get()`` method (commit head)\nlink should be coala/coala@66d0276","diffHunk":"@@ -40,48 +40,48 @@ blog: https://adhikasp.github.io\n activity:\n  - 0:\n    - repo: coala\n-   - link: https://github.com/coala/coala/pull/4412\n+   - link: https://github.com/coala/coala/pull/4412/commits","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-27T12:09:55Z","lastEditedAt":null,"updatedAt":"2018-08-27T12:09:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjk1MjczNg==","url":"https://github.com/coala/projects/pull/656#discussion_r212952736","bodyText":"This PR has 3 commits. You should have 3 items here.","diffHunk":"@@ -40,48 +40,48 @@ blog: https://adhikasp.github.io\n activity:\n  - 0:\n    - repo: coala\n-   - link: https://github.com/coala/coala/pull/4412\n+   - link: https://github.com/coala/coala/pull/4412/commits\n    - details: >\n       aspectModule: Add ``get()`` method\n  - 1:\n    - repo: coala\n-   - link: https://github.com/coala/coala/pull/4392\n+   - link: https://github.com/coala/coala/pull/4392/commits","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-27T12:11:01Z","lastEditedAt":null,"updatedAt":"2018-08-27T12:11:01Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535686749000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/657","number":657,"title":"Change yaml of 8 files under _reports directory","body":"Changed the yaml of GSoC 2017 report from 0 based to 1 based.\nCloses #616\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-29T11:39:18Z","updatedAt":"2018-08-31T03:39:09Z","closedAt":"2018-08-31T03:38:56Z","state":"closed","user":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"owner":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"assignee":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XXL","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/657","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535628955000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/651","number":651,"title":"_projects: Update status of GSoC 2018 projects","body":"This updates the status of GSoC 2018 projects in projects.coala.io\nCloses #636\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-23T15:26:11Z","updatedAt":"2018-08-30T11:35:55Z","closedAt":"2018-08-27T10:53:42Z","state":"merged","user":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"owner":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/medium","color":"f2db30"},{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/651","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUxNTg2Mw==","url":"https://github.com/coala/projects/pull/651#discussion_r212515863","bodyText":"@nkprince007 , what is the status of this project?","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T03:56:20Z","lastEditedAt":null,"updatedAt":"2018-08-24T03:56:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUxNjg1NQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212516855","bodyText":"please re-add GSoC here.\nWhat I meant by 'non-GSoC' was that it had been marked as 'in progress', but no gsoc project had ever commenced, and I wasnt aware of who might have been doing it.\nI've double checked now, and this project is certainly available to be worked on.","diffHunk":"@@ -1,11 +1,9 @@\n ---\n collaborating_projects:\n   - coala\n-status: in_progress\n desc: \"Develop an efficient strategy that allows coala to maintain a number of plugins for different editors.\"\n difficulty: medium\n initiatives:\n-  - GSoC","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T04:07:22Z","lastEditedAt":null,"updatedAt":"2018-08-24T04:07:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUxNjk3NQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212516975","bodyText":"please undo this change.\nSomeone else has already marked it as disabled, and it is also 'in progress' - this is a strange one ;-)","diffHunk":"@@ -17,9 +17,7 @@ requirements:\n   - \"The applicant should have at least one patch merged to any of the coala repositories.\"\n   - \"Familiarity with Git, GitHub API, Phabricator API, and GitLab API\"\n   - \"Familiarity with EmberJS and GitHub Pages\"\n-status:\n-  - in_progress\n-  - disabled\n+status: disabled","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T04:08:41Z","lastEditedAt":null,"updatedAt":"2018-08-24T04:08:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyMzYzMQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212523631","bodyText":"This project never surfaced completion. During the development of this project, we got the award from Mozilla Open Source Support and so, we shifted our focus towards finishing MOSS stuff.","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[],"createdAt":"2018-08-24T05:17:47Z","lastEditedAt":null,"updatedAt":"2018-08-24T05:17:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyMzgyMQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212523821","bodyText":"So status is still \"in_progress\"?","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-24T05:19:50Z","lastEditedAt":null,"updatedAt":"2018-08-24T05:19:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyNzgxMg==","url":"https://github.com/coala/projects/pull/651#discussion_r212527812","bodyText":"Well, more like stopped amidst. No one seems to care about adding support to Jira because it involves having a lot of stuff to develop. First off, it requires our own instance of Jira to begin with.","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[],"createdAt":"2018-08-24T05:57:14Z","lastEditedAt":null,"updatedAt":"2018-08-24T05:57:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyODU2NA==","url":"https://github.com/coala/projects/pull/651#discussion_r212528564","bodyText":"Ok, so the Jira project is available. Right?","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-24T06:03:11Z","lastEditedAt":"2018-08-24T06:04:00Z","updatedAt":"2018-08-24T06:04:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyOTEzNw==","url":"https://github.com/coala/projects/pull/651#discussion_r212529137","bodyText":"Yes.","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODQxODc3Ng==","createdAt":"2018-08-24T09:41:07Z","content":"THUMBS_UP","user":{"login":"123vivekr","name":"Vivek R"}}],"createdAt":"2018-08-24T06:08:01Z","lastEditedAt":null,"updatedAt":"2018-08-24T06:08:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjc4ODIzOA==","url":"https://github.com/coala/projects/pull/651#discussion_r212788238","bodyText":"as this project is available, we need to keep 'GSoC' here","diffHunk":"@@ -7,7 +7,6 @@ desc: \"GitMate.io helps by automating tasks on GitHub and GitLab. It's time to a\n developers_involved: []\n difficulty: medium\n initiatives:\n-  - GSoC","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-25T04:15:44Z","lastEditedAt":null,"updatedAt":"2018-08-25T04:15:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTY2MDAyNA==","url":"https://github.com/coala/projects/pull/651#issuecomment-415660024","bodyText":"@jayvdb Requested changes have been applied. Commit message has been fixed and now abides to the Commit Message Guidelines.","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-24T06:01:52Z","lastEditedAt":null,"updatedAt":"2018-08-24T06:01:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0OTE2OA==","url":"https://github.com/coala/projects/pull/651#issuecomment-415949168","bodyText":"@jayvdb GSoC added to the project.","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-25T07:34:01Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:34:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk1MDQ0Ng==","url":"https://github.com/coala/projects/pull/651#issuecomment-415950446","bodyText":"@jayvdb All the requested changes are done. But TravisCI tests are failing.\nHow do I fix the TravisCI test failing issue?\ndocutils.sourceforge.net is returning error code 503: No backend servers available","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-25T07:50:06Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:50:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjExMjQxNQ==","url":"https://github.com/coala/projects/pull/651#issuecomment-416112415","bodyText":"Travis CI build is passing. Please review :)","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-27T04:41:08Z","lastEditedAt":null,"updatedAt":"2018-08-27T04:41:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjE4OTA4MQ==","url":"https://github.com/coala/projects/pull/651#issuecomment-416189081","bodyText":"Please do not close PRs.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-27T10:51:44Z","lastEditedAt":null,"updatedAt":"2018-08-27T10:51:44Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535582061000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/653","number":653,"title":"gitmate_gitlab.md: Fix typo and broken links","body":"","comments":2,"createdAt":"2018-08-24T08:30:29Z","updatedAt":"2018-08-29T22:34:21Z","closedAt":null,"state":"open","user":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"owner":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"assignee":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/653","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535268601000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/654","number":654,"title":"editor_support: Removed emacs","body":"coala/coala-eclipse#25 is replaced with coala/coala-eclipse#51.\ncoala/coala-emacs#11 is removed. emacs from the project body is also\nremoved.\nFixes #652","comments":2,"createdAt":"2018-08-25T17:01:55Z","updatedAt":"2018-08-26T07:30:01Z","closedAt":"2018-08-26T07:29:50Z","state":"closed","user":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"owner":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"assignee":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/654","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk4MzkxNQ==","url":"https://github.com/coala/projects/pull/654#issuecomment-415983915","bodyText":"Please refer to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html for writing commit messages. Also, you need to squash your commits.","diffHunk":null,"author":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4","name":"Amandeep Srivastava"},"createdAt":"2018-08-25T17:16:56Z","lastEditedAt":null,"updatedAt":"2018-08-25T17:16:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk4NTE2OQ==","url":"https://github.com/coala/projects/pull/654#issuecomment-415985169","bodyText":"@srivama do I need to squash and pull it again?","diffHunk":null,"author":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4","name":"Rahul Jain"},"createdAt":"2018-08-25T17:39:13Z","lastEditedAt":null,"updatedAt":"2018-08-25T17:39:13Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535613235000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/655","number":655,"title":"editor_support.md: Remove emacs and Change coala/coala-eclipse#25","body":"coala/coala-eclipse#25 is replaced with coala/coala-eclipse#51.\ncoala/coala-emacs#11 is removed. emacs from the project body is also\nremoved.\nFixes #652","comments":3,"createdAt":"2018-08-26T04:56:19Z","updatedAt":"2018-08-30T07:13:55Z","closedAt":null,"state":"open","user":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"owner":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"assignee":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/655","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjAzNDk2Nw==","url":"https://github.com/coala/projects/pull/655#issuecomment-416034967","bodyText":"@li-boxuan Requested changes have been applied. Commit message has been fixed.","diffHunk":null,"author":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4","name":"Rahul Jain"},"createdAt":"2018-08-26T12:18:53Z","lastEditedAt":null,"updatedAt":"2018-08-26T12:18:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNDI0OA==","url":"https://github.com/coala/projects/pull/655#issuecomment-416414248","bodyText":"Commit message still wrong     see https://github.com/coala/projects/pull/655/commits","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T00:47:23Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:47:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzIxNDM1Nw==","url":"https://github.com/coala/projects/pull/655#issuecomment-417214357","bodyText":"@jayvdb Commit message modified. Please review again!","diffHunk":null,"author":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4","name":"Rahul Jain"},"createdAt":"2018-08-30T07:13:55Z","lastEditedAt":null,"updatedAt":"2018-08-30T07:13:55Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534240821000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/639","number":639,"title":"_reports/RJ722.md: Update report for RJ722","body":"Add permalink\nAdd new commit","comments":6,"createdAt":"2018-08-14T08:44:43Z","updatedAt":"2018-08-14T10:00:21Z","closedAt":"2018-08-14T09:57:18Z","state":"merged","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/639","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg3MzUxOA==","url":"https://github.com/coala/projects/pull/639#discussion_r209873518","bodyText":"There are three commits in this PR, and they also need to be added to your tarball if you want to add them to the activity report.","diffHunk":"@@ -266,61 +267,66 @@ activity:\n       - details: \"Add --ignore-names flag (#139).\"\n \n   - 46:\n+      - repo: vulture\n+      - link: https://github.com/jendrikseipp/vulture/commit/3c965e2\n+      - details: \"Add Item.get_whitelist_string. (#144)\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T08:50:13Z","lastEditedAt":null,"updatedAt":"2018-08-14T08:50:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg4NTgyMw==","url":"https://github.com/coala/projects/pull/639#discussion_r209885823","bodyText":"I've added the recent ones from Vulture. Anything else left?","diffHunk":"@@ -266,61 +267,66 @@ activity:\n       - details: \"Add --ignore-names flag (#139).\"\n \n   - 46:\n+      - repo: vulture\n+      - link: https://github.com/jendrikseipp/vulture/commit/3c965e2\n+      - details: \"Add Item.get_whitelist_string. (#144)\"","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-14T09:29:31Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:29:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg4OTk3MA==","url":"https://github.com/coala/projects/pull/639#discussion_r209889970","bodyText":"Ah I see , they are squashing into one commit.\nOk, then this checks out.  Thanks","diffHunk":"@@ -266,61 +267,66 @@ activity:\n       - details: \"Add --ignore-names flag (#139).\"\n \n   - 46:\n+      - repo: vulture\n+      - link: https://github.com/jendrikseipp/vulture/commit/3c965e2\n+      - details: \"Add Item.get_whitelist_string. (#144)\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzg4NjA5Ng==","createdAt":"2018-08-14T09:55:13Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-14T09:42:44Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:42:44Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534242076000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/640","number":640,"title":"reports: Add Nitanshu's GSoC report","body":"Deploy Preview: https://deploy-preview-640--coala-projects.netlify.com/gsoc/2018/statusreport/nitanshuvashistha","comments":6,"createdAt":"2018-08-14T09:50:50Z","updatedAt":"2018-08-14T10:21:16Z","closedAt":"2018-08-14T10:20:10Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/640","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534259641000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/641","number":641,"title":"Add ishanSrt's report","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-08-14T14:58:15Z","updatedAt":"2018-08-14T15:14:01Z","closedAt":"2018-08-14T15:11:17Z","state":"merged","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/641","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTk4Njg2OQ==","url":"https://github.com/coala/projects/pull/641#discussion_r209986869","bodyText":"this is the cause of the Netlify breakage.  It doesnt like the \":\" , but a link here will solve that.","diffHunk":"@@ -0,0 +1,162 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Ishan Srivastava\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Quickstart Green Mode\n+project_link: https://summerofcode.withgoogle.com/projects/#5792652830703616\n+tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/d859b05e/ishanSrt.tar.gz\n+sha256sum: 4dcee0f017d832965ca44a76d0a8b20f92d68fd2fb820975984a51b4ff34806a\n+mentors: >\n+  [Satwik Kansal](https://github.com/satwikkansal) &\n+  [Adhityaa Chandrasekar](https://github.com/adtac) &\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/46\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/56\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/70\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/72\n+bio: >\n+  I am a third year student (expected graduation date: May 2020) of Computer\n+  Science and Engineering at Indian Institute of Technology Dharwad. I\n+  participated in GSoC and worked with [coala](http://coala.io) to implement\n+  the coala-quickstart Green Mode for the repository\n+  [coala-quickstart](https://github.com/coala/coala-quickstart) to generate\n+  project dependent configuration files for the coala project, which make\n+  coala show no inconsistencies in the code base and are helpful in detecting\n+  inconsistencies in future commits. I also solved and contributed small\n+  patches to other coala repositories during the time period of GSoC.\n+social:\n+  - GitHub:\n+      - username: ishanSrt\n+      - link: https://github.com/ishanSrt\n+  - GitLab:\n+      - username: ishanSrt\n+      - link: https://gitlab.com/ishanSrt\n+  - Gitter:\n+      - username: ishanSrt\n+      - link: https://gitter.im/ishanSrt\n+  - OpenHub:\n+      - username: ishanSrt\n+      - link: https://www.openhub.net/accounts/ishanSrt\n+email: ishan.srt@gmail.com\n+blog: https://www.dowhatucant.com/gsoc_archive.html\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/e5724fa9b0be71304277e508c2f317318aeed1c4\n+      - details: >\n+         [Bonding Period Work] quickstart_green_mode.md: Add Quickstart Green Mode Project\n+\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/ea3f0ac7e8d98cdf1afa5d6e99345a760f83dc39\n+      - details: >\n+         [Bonding Period Work] .gitignore: Add .DS_Store\n+\n+  - 3:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/0daa94289919d5dff171ce771b24f057c64f33d5\n+      - details: >\n+         README.md: Add green mode cEP\n+\n+  - 4:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/e58b935be77459b9323a80ef9b47267d445d8c5c\n+      - details: >\n+         cEP-0022.md: Add cEP for quickstart green mode\n+\n+  - 5:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/f423227b4868376496f2280ee5e69aeb2db66724\n+      - details: >\n+         CODEOWNERS: Add a list of developers\n+\n+  - 6:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a725f019c898a3422c856e1deae9cca906594883\n+      - details: >\n+         green_mode.py: Run BEAR_DEPS bears while testing\n+\n+  - 7:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/9e91285ac87cd36ee846743f1c9d891c324f8c18\n+      - details: >\n+         bear_settings.yaml: Fix wrong bear for settings\n+\n+  - 8:\n+      - repo: coala-quickstart\n+      - link: Project.py: Fix bug while printing languages","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T15:02:24Z","lastEditedAt":null,"updatedAt":"2018-08-14T15:02:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTk4NzA5OA==","url":"https://github.com/coala/projects/pull/641#discussion_r209987098","bodyText":"Green Mode","diffHunk":"@@ -0,0 +1,162 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Ishan Srivastava\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Quickstart Green Mode\n+project_link: https://summerofcode.withgoogle.com/projects/#5792652830703616\n+tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/d859b05e/ishanSrt.tar.gz\n+sha256sum: 4dcee0f017d832965ca44a76d0a8b20f92d68fd2fb820975984a51b4ff34806a\n+mentors: >\n+  [Satwik Kansal](https://github.com/satwikkansal) &\n+  [Adhityaa Chandrasekar](https://github.com/adtac) &\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/46\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/56\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/70\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/72\n+bio: >\n+  I am a third year student (expected graduation date: May 2020) of Computer\n+  Science and Engineering at Indian Institute of Technology Dharwad. I\n+  participated in GSoC and worked with [coala](http://coala.io) to implement\n+  the coala-quickstart Green Mode for the repository\n+  [coala-quickstart](https://github.com/coala/coala-quickstart) to generate\n+  project dependent configuration files for the coala project, which make\n+  coala show no inconsistencies in the code base and are helpful in detecting\n+  inconsistencies in future commits. I also solved and contributed small\n+  patches to other coala repositories during the time period of GSoC.\n+social:\n+  - GitHub:\n+      - username: ishanSrt\n+      - link: https://github.com/ishanSrt\n+  - GitLab:\n+      - username: ishanSrt\n+      - link: https://gitlab.com/ishanSrt\n+  - Gitter:\n+      - username: ishanSrt\n+      - link: https://gitter.im/ishanSrt\n+  - OpenHub:\n+      - username: ishanSrt\n+      - link: https://www.openhub.net/accounts/ishanSrt\n+email: ishan.srt@gmail.com\n+blog: https://www.dowhatucant.com/gsoc_archive.html\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/e5724fa9b0be71304277e508c2f317318aeed1c4\n+      - details: >\n+         [Bonding Period Work] quickstart_green_mode.md: Add Quickstart Green Mode Project\n+\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/ea3f0ac7e8d98cdf1afa5d6e99345a760f83dc39\n+      - details: >\n+         [Bonding Period Work] .gitignore: Add .DS_Store\n+\n+  - 3:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/0daa94289919d5dff171ce771b24f057c64f33d5\n+      - details: >\n+         README.md: Add green mode cEP\n+\n+  - 4:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/e58b935be77459b9323a80ef9b47267d445d8c5c\n+      - details: >\n+         cEP-0022.md: Add cEP for quickstart green mode\n+\n+  - 5:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/f423227b4868376496f2280ee5e69aeb2db66724\n+      - details: >\n+         CODEOWNERS: Add a list of developers\n+\n+  - 6:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a725f019c898a3422c856e1deae9cca906594883\n+      - details: >\n+         green_mode.py: Run BEAR_DEPS bears while testing\n+\n+  - 7:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/9e91285ac87cd36ee846743f1c9d891c324f8c18\n+      - details: >\n+         bear_settings.yaml: Fix wrong bear for settings\n+\n+  - 8:\n+      - repo: coala-quickstart\n+      - link: Project.py: Fix bug while printing languages\n+      - details: >\n+         Project.py: Fix bug while printing languages\n+\n+  - 9:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/8bbd4dab13853e61a1cd1a2634d0c6da72b09716\n+      - details: >\n+         green_mode_core.py: Fix a bug\n+\n+  - 10:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/94e9eda139234e8b9183ce5462bd7c9a9d97e197\n+      - details: >\n+         Aggregate green mode per file results\n+\n+\n+---\n+\n+### Meta-review","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzkwMzA0OA==","createdAt":"2018-08-14T15:11:05Z","content":"LAUGH","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-14T15:02:59Z","lastEditedAt":null,"updatedAt":"2018-08-14T15:02:59Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534344088000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/643","number":643,"title":"_faq/writing_a_great_proposal.md: Update GSoC info link","body":"Changes the outdated URL for additional info regarding the GSoC into the new one.\nFixes #642\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-15T03:45:11Z","updatedAt":"2018-08-15T14:41:28Z","closedAt":null,"state":"open","user":{"login":"nik1082","avatarUrl":"https://avatars3.githubusercontent.com/u/17260188?v=4"},"owner":{"login":"nik1082","avatarUrl":"https://avatars3.githubusercontent.com/u/17260188?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/643","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534524308000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/645","number":645,"title":"NitanshuVashistha.md: Fix grammatical mistakes","body":"Closes #644\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-17T15:20:27Z","updatedAt":"2018-08-17T16:45:08Z","closedAt":"2018-08-17T16:24:23Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/645","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534773739000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/646","number":646,"title":"Update ishanSrt's report","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-19T06:33:59Z","updatedAt":"2018-08-20T14:02:19Z","closedAt":"2018-08-20T13:55:51Z","state":"merged","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/646","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA5NzkwNg==","url":"https://github.com/coala/projects/pull/646#discussion_r211097906","bodyText":"this is a moban sync","diffHunk":"@@ -107,6 +107,179 @@ activity:\n       - details: >\n          Aggregate green mode per file results\n \n+  - 11:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/81e8a6179a6a93a9b4e68b0e1f138655578220ba\n+      - details: >\n+         Project.py: Ask to select languages\n+\n+  - 12:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/f26b264c72dedcb518aef209035349dd239539e9\n+      - details: >\n+         Add green mode incompatible bears list\n+\n+  - 13:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a725f019c898a3422c856e1deae9cca906594883\n+      - details: >\n+         green_mode.py: Run BEAR_DEPS bears while testing\n+\n+  - 14:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/ffaff5c4f86039d58860a0afe00ff1721860f22e\n+      - details: >\n+         bear_settings.yaml: Add green_mode.py\n+\n+  - 15:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/6bf20749002220d134fe775cf978ff5b2e2e9da2\n+      - details: >\n+         Project.py: Fix bug while printing languages\n+\n+  - 16:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/72de228a299c07d4d0f42196ce4a706b2b6febab\n+      - details: >\n+         Add filename_operations.py\n+\n+  - 17:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/9354c3062cef7f4309c801870e172d3ff180440c\n+      - details: >\n+         .moban.yaml: Increase pytest timeout\n+\n+  - 18:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/836df04a161ffd84ac3fe035bac45ea975812a76\n+      - details: >\n+         Add QuickstartBear\n+\n+  - 19:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a18281c56e759f2880af9b4519a1ec65bd3ac29b\n+      - details: >\n+         Add bear_settings.yaml\n+\n+  - 20:\n+     - repo: coala-quickstart\n+     - link: https://github.com/coala/coala-quickstart/commit/468893fe4c6b64882a6e1b63b8edfac6ac18dd2c\n+     - details: >\n+        Add GREEN_MODE_COMPATIBLE_BEAR_LIST\n+\n+  - 21:\n+     - repo: coala-quickstart\n+     - link: https://github.com/coala/coala-quickstart/commit/6d02841ed75f6a52c9f15d6d082b6c4f3400da3a\n+     - details: >\n+        FileGlobs.py: Recursively look for gitignore files\n+\n+  - 22:\n+     - repo: coala-quickstart\n+     - link: https://github.com/coala/coala-quickstart/commit/f1b639f396963082bf04043627a12d8c2cfe65da","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T09:55:28Z","lastEditedAt":null,"updatedAt":"2018-08-19T09:55:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTEwMjc3NQ==","url":"https://github.com/coala/projects/pull/646#discussion_r211102775","bodyText":"You have a lot of ._* files in here, and .DS_Store\nAny chance you can remove them?\nOtherwise looks good.","diffHunk":"@@ -10,11 +10,11 @@ organisation_link: https://coala.io\n report_year: 2018\n project: Quickstart Green Mode\n project_link: https://summerofcode.withgoogle.com/projects/#5792652830703616\n-tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/d859b05e/ishanSrt.tar.gz\n-sha256sum: 4dcee0f017d832965ca44a76d0a8b20f92d68fd2fb820975984a51b4ff34806a\n+tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/448110a9/ishanSrt.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T13:11:10Z","lastEditedAt":null,"updatedAt":"2018-08-19T13:11:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDMyNDE2MA==","url":"https://github.com/coala/projects/pull/646#issuecomment-414324160","bodyText":"Ack fae5891","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T13:53:45Z","lastEditedAt":null,"updatedAt":"2018-08-20T13:53:45Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535024107000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/647","number":647,"title":"_reports: Add yzgyyang's GSoC report","body":"","comments":9,"createdAt":"2018-08-20T10:52:27Z","updatedAt":"2018-08-23T11:35:07Z","closedAt":"2018-08-20T21:43:58Z","state":"merged","user":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"owner":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/647","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQxODgxNw==","url":"https://github.com/coala/projects/pull/647#discussion_r211418817","bodyText":"this is https://github.com/yzgyyang/get-coala ?\nIt should be a gitlab repo, and polished enough that it is ready to be transferred to @coala .","diffHunk":"@@ -0,0 +1,205 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Guangyuan Yang\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Go Bears on BSD\n+project_link: https://summerofcode.withgoogle.com/projects/#4521151787696128\n+tarball: https://github.com/yzgyyang/gsoc-reports/raw/master/gsoc18/GuangyuanYang-coala-gsoc18.tar.gz\n+sha256sum: adada78166b16d6c6c8e1107d326b3f5fb1505fa59d8f18e492b9ffa1a6f0f09\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/74\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/64\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/67\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/73\n+bio: >\n+  I am a sophomore studying Mathematics and Computer Science at the University\n+  of Waterloo. I participated in GSoC 2018 and worked with\n+  [coala](https://coala.io) to improve linter dependency management, the goal\n+  of which in the duration of this year's GSoC is to have Go Linters installed\n+  automatically on bare-metal BSD systems, with a post-GSoC goal of supporting\n+  more platforms and more kinds of dependencies.\n+\n+social:\n+  - GitHub:\n+      - username: yzgyyang\n+      - link: https://github.com/yzgyyang\n+  - GitLab:\n+      - username: yzgyyang\n+      - link: https://gitlab.com/yzgyyang\n+  - Gitter:\n+      - username: yzgyyang\n+      - link: https://gitter.im/yzgyyang\n+  - OpenHub:\n+      - username: yzgyyang\n+      - link: https://www.openhub.net/accounts/yzgyyang\n+email: yzgyyang@gmail.com\n+blog: https://charlieyang.me/tags/#gsoc18\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/e26976aa8da0379c39a4d294ee6cb6e213db1668\n+      - details: >\n+         meta_review.md: go_bears_on_bsd.md: Add Go on BSD project\n+\n+  - 2:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/ed140c6a1d76520e38ed7d2a2ba003f0735cb000\n+      - details: >\n+         .gitlab-ci.yml: Fix OpenSUSE CI build breakages\n+\n+  - 3:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/94507b56ad0bf101fe1a8fbc7e9d502dbc1c3ea7\n+      - details: >\n+         DistributionRequirement.py: Add FreeBSD pkg\n+\n+  - 4:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/fe065becef284b84f2193e36ae417e82e1da7eff\n+      - details: >\n+         GoRequirement.py: Add Go packages\n+\n+  - 5:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/77c50517b0a47f772950bf13bff5d665389ecb52\n+      - details: >\n+         .ci/common.sh: move CI common setup into a script\n+\n+  - 6:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/3c18d1504b6f6d282fa15ae7058829aa7369aed7\n+      - details: >\n+         GoMetaLinterRequirement.py: Add GoMetaLinterPM\n+\n+  - 7:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/dd1413c9057d7f75db0e1856cfba4a3894400a35\n+      - details: >\n+         PkgRequirement.py: Add pkg for PlatformRequirement\n+\n+  - 8:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/e8ef04e33b5f00f6d751a5450e90d795a778c236\n+      - details: >\n+         .gitlab-ci.yml: Add FreeBSD CI configuration\n+\n+  - 9:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/f0d74e8167edef7b69c3ec6ef4a8f0b3bdb13844\n+      - details: >\n+         Question.py: Add function to ask yes/no questions\n+\n+  - 10:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/0a1000d2601f7a53b2034869cffead422d6efc1a\n+      - details: >\n+         Question.py: Avoid creating objects in arg default\n+\n+  - 11:\n+      - repo: [personal gist]\n+      - link: https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d/9e5591f526917a36fcd3390d4a52901a5af1911f","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T21:51:07Z","lastEditedAt":null,"updatedAt":"2018-08-20T21:51:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQyMDY1OA==","url":"https://github.com/coala/projects/pull/647#discussion_r211420658","bodyText":"very relevant to your accounts in project is links to freebsd systems, e.g. https://reviews.freebsd.org/p/ygy/","diffHunk":"@@ -0,0 +1,205 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Guangyuan Yang\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Go Bears on BSD\n+project_link: https://summerofcode.withgoogle.com/projects/#4521151787696128\n+tarball: https://github.com/yzgyyang/gsoc-reports/raw/master/gsoc18/GuangyuanYang-coala-gsoc18.tar.gz\n+sha256sum: adada78166b16d6c6c8e1107d326b3f5fb1505fa59d8f18e492b9ffa1a6f0f09\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/74\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/64\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/67\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/73\n+bio: >\n+  I am a sophomore studying Mathematics and Computer Science at the University\n+  of Waterloo. I participated in GSoC 2018 and worked with\n+  [coala](https://coala.io) to improve linter dependency management, the goal\n+  of which in the duration of this year's GSoC is to have Go Linters installed\n+  automatically on bare-metal BSD systems, with a post-GSoC goal of supporting\n+  more platforms and more kinds of dependencies.\n+\n+social:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T21:59:18Z","lastEditedAt":null,"updatedAt":"2018-08-20T21:59:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDMzOTE0Nw==","url":"https://github.com/coala/projects/pull/647#issuecomment-414339147","bodyText":"Needs rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T14:38:27Z","lastEditedAt":null,"updatedAt":"2018-08-20T14:38:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDM0ODY0OQ==","url":"https://github.com/coala/projects/pull/647#issuecomment-414348649","bodyText":"@jayvdb can't merge it.","diffHunk":null,"author":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4","name":"Muhammad Kaisar Arkhan"},"createdAt":"2018-08-20T15:02:55Z","lastEditedAt":null,"updatedAt":"2018-08-20T15:02:55Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535085332000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/650","number":650,"title":"reports.html: Create report listing","body":"Closes #359\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":12,"createdAt":"2018-08-22T06:48:24Z","updatedAt":"2018-08-24T04:35:32Z","closedAt":"2018-08-24T04:29:36Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/650","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjA3NjY1MA==","url":"https://github.com/coala/projects/pull/650#discussion_r212076650","bodyText":"An h1 heading on top saying something as 'coala GSoC reports' would be nice","diffHunk":"@@ -0,0 +1,25 @@\n+---\n+title: Project reports\n+---\n+","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODM0MDAwNQ==","createdAt":"2018-08-23T01:27:16Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-22T19:19:15Z","lastEditedAt":null,"updatedAt":"2018-08-22T19:19:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTAwMjQzNA==","url":"https://github.com/coala/projects/pull/650#issuecomment-415002434","bodyText":"It is far from pretty\nhttps://deploy-preview-650--coala-projects.netlify.com/reports\nI am guessing there is some easy stuff I can do to get it looking a bit better","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-22T11:36:34Z","lastEditedAt":null,"updatedAt":"2018-08-22T11:36:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTY0NjE5NA==","url":"https://github.com/coala/projects/pull/650#issuecomment-415646194","bodyText":"reack 37d1514","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T04:16:09Z","lastEditedAt":null,"updatedAt":"2018-08-24T04:16:09Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534147169000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/617","number":617,"title":"report: Add virresh's GSoC report","body":"https://deploy-preview-617--coala-projects.netlify.com/gsoc/2018/statusreport/virresh","comments":13,"createdAt":"2018-08-10T03:06:55Z","updatedAt":"2018-08-13T07:59:29Z","closedAt":"2018-08-13T07:57:45Z","state":"merged","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/617","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzY5NQ==","url":"https://github.com/coala/projects/pull/617#discussion_r209417695","bodyText":"See changes requested at #615","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/virresh\n+student: Viresh Gupta\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+mentors: >\n+ [Dong-hee Na](https://github.com/corona10) &\n+ [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+ Hi ! I am Viresh, an undergrad student at Indraprastha Institute of \n+ Information Technology, Delhi, India. I love coding in and out and like to\n+ lay my hands on whatever tech I can find. I also love to read books, observe\n+ nature and star gaze in my free time. I chose coala for my GSoC project\n+ because I think it's awesome to be able to push my friends a friendly reminder\n+ to indent their code properly, and programmatically detect when they went lazy\n+ in doing so, which helps me to focus on the main logic when working on a team\n+ project.\n+social:\n+ - GitHub:\n+   - username: virresh\n+   - link: https://github.com/virresh\n+ - GitLab:\n+   - username: virresh\n+   - link: https://gitlab.com/virresh\n+ - Gitter:\n+   - username: virresh\n+   - link: https://gitter.im/virresh\n+ - Openhub:\n+   - username: virresh\n+   - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+ - 0:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMzQ0NQ==","createdAt":"2018-08-12T15:13:59Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-08-11T06:04:25Z","lastEditedAt":null,"updatedAt":"2018-08-11T06:04:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDQ1OQ==","url":"https://github.com/coala/projects/pull/617#discussion_r209474459","bodyText":"not suitable for activity report","diffHunk":"@@ -0,0 +1,391 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"\n+  - 4:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/168263a2\n+      - details: >\n+          \"ci: Integrate inital ci test\"\n+  - 5:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/18273f76","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:45:46Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:45:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDUwNA==","url":"https://github.com/coala/projects/pull/617#discussion_r209474504","bodyText":"give this a better \"details\" as the commit summary is misleading","diffHunk":"@@ -0,0 +1,391 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"\n+  - 4:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/168263a2\n+      - details: >\n+          \"ci: Integrate inital ci test\"\n+  - 5:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/18273f76\n+      - details: >\n+          \".gitignore: Add initial ignore files\"\n+  - 6:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/9671f083\n+      - details: >\n+          \"setup.py: Make package installable\"\n+  - 7:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f8067834\n+      - details: >\n+          \"Files Cleaned\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:46:54Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:46:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDU5Nw==","url":"https://github.com/coala/projects/pull/617#discussion_r209474597","bodyText":"try to get this merged : antlr/grammars-v4#1205 (comment)\nif it is an unmerged PR, move it to last in the list","diffHunk":"@@ -0,0 +1,391 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"\n+  - 4:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/168263a2\n+      - details: >\n+          \"ci: Integrate inital ci test\"\n+  - 5:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/18273f76\n+      - details: >\n+          \".gitignore: Add initial ignore files\"\n+  - 6:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/9671f083\n+      - details: >\n+          \"setup.py: Make package installable\"\n+  - 7:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f8067834\n+      - details: >\n+          \"Files Cleaned\"\n+  - 8:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/c80200d2\n+      - details: >\n+          \"Initial walkers implemented,\"\n+  - 9:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/d8146003\n+      - details: >\n+          \"core: Add ASTBear and Implement quote spacing bear\"\n+  - 10:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8bbea04b\n+      - details: >\n+          \".gitlab-ci.yml: Add job for bear run testing\"\n+  - 11:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/1249762a\n+      - details: >\n+          \"PyQuoteSpacingBear: Fix for implicit string concatenation\"\n+  - 12:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/e5f2d83d\n+      - details: >\n+          \".gitlab-ci: Add moban check\"\n+  - 13:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/85cbb026\n+      - details: >\n+          \"Add initial tests\"\n+  - 14:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/7845dec4\n+      - details: >\n+          \"Change the library logic for visiting\"\n+  - 15:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8067ab45\n+      - details: >\n+          \"Add pytest with 100% coverage\"\n+  - 16:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/ec3c90c2\n+      - details: >\n+          \".coafile: Add initial coafile\"\n+  - 17:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8fd5a04a\n+      - details: >\n+          \"setup.py: Add entrypoint for bear discovery\"\n+  - 18:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/fa4bab87\n+      - details: >\n+          \"PyQuoteSpacingBearTest.py: Add tests for slash\"\n+  - 19:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8334960e\n+      - details: >\n+          \"PyPluralNamingBear: Add Bear\"\n+  - 20:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/1f6df970\n+      - details: >\n+          \"MANIFEST: Add manifest and housekeeping\"\n+  - 21:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/5a6e3a50\n+      - details: >\n+          \"Py3Walker: Use NodeData for get_quote_content\"\n+  - 22:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/bbff6752\n+      - details: >\n+          \"Add sphinx docs\"\n+  - 23:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/7c91ad6e\n+      - details: >\n+          \"Add coantbears docs\"\n+  - 24:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/cbea3e7f\n+      - details: >\n+          \"Add docs for gitlab pages\"\n+  - 25:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/b2166a24\n+      - details: >\n+          \"Add bears metadata and refactor dependencies\"\n+  - 26:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/bc7cf18f\n+      - details: >\n+          \"ASTLoader: Workaround for python\"\n+  - 27:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/7d7d7e4f\n+      - details: >\n+          \"ASTLoader.py: Add check for empty files\"\n+  - 28:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/074c96ba\n+      - details: >\n+          \"coantlib: Move all generated files\"\n+  - 29:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/179bb8a8\n+      - details: >\n+          \"commonutils.py: Extract common utilities\"\n+  - 30:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/3af8d13e\n+      - details: >\n+          \".coafile: Add PyDocStyleBear\"\n+  - 31:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/1a348b4e\n+      - details: >\n+          \".gitlab-ci.yml: Add git installation\"\n+  - 32:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/ba4adcdb\n+      - details: >\n+          \"coantlib: Generalise entrypoint\"\n+  - 33:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/72e2bb72\n+      - details: >\n+          \"tests: Remove hashbangs\"\n+  - 34:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/abc9f3b0\n+      - details: >\n+          \"Python3.py: Make parser PEP8 compliant\"\n+  - 35:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/bfa10282\n+      - details: >\n+          \"ASTBear: Remove redundant `lang` argument\"\n+  - 36:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/27891c28\n+      - details: >\n+          \"XMLIndentBear: Add XMLIndentBear\"\n+  - 37:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/a8a7f6eb\n+      - details: >\n+          \".ci: Add check for XML Upstream grammar\"\n+  - 38:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/d936d162\n+      - details: >\n+          \"XML.py: Add language definition for XML\"\n+  - 39:\n+      - repo: community\n+      - link: https://github.com/coala/community/commit/7e5cd645\n+      - details: >\n+          \".coafile: Add PyPluralNamingBear\"\n+  - 40:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/bf587786\n+      - details: >\n+          \"appveyor.yml: Use pip as a module\"\n+  - 41:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/99ad0910\n+      - details: >\n+          \"test-requirements.txt: Add packaging\"\n+  - 42:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/97e98900\n+      - details: >\n+          \"GitCommitBear: Refactor issue regexes\"\n+  - 43:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/33cd9e41\n+      - details: >\n+          \"GitCommitBear: Add BitBucket type issue references\"\n+  - 44:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/985217dc\n+      - details: >\n+          \"HgCommitBear: Switch to git-url-parse\"\n+  - 45:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a8f0e9b0\n+      - details: >\n+          \"report.md: Make GSoC year dynamic\"\n+  - 46:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/76ebb40c\n+      - details: >\n+          \"appveyor.yml.jj2: Add template for appveyor config\"\n+  - 47:\n+      - repo: grammars-v4\n+      - link: https://github.com/antlr/grammars-v4/pull/1205","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:49:09Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:49:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUxMTE0Nw==","url":"https://github.com/coala/projects/pull/617#discussion_r209511147","bodyText":"quotes not needed; they are appearing on your report","diffHunk":"@@ -0,0 +1,386 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T07:20:49Z","lastEditedAt":null,"updatedAt":"2018-08-13T07:20:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTk5NTAyNg==","url":"https://github.com/coala/projects/pull/617#issuecomment-411995026","bodyText":"https://deploy-preview-617--coala-projects.netlify.com/gsoc/2018/statusreport/virresh","diffHunk":null,"author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-10T07:04:47Z","lastEditedAt":null,"updatedAt":"2018-08-10T07:04:47Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534044581000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/618","number":618,"title":"reports: Add li-boxuan's GSoC report","body":"https://deploy-preview-618--coala-projects.netlify.com/gsoc/2018/statusreport/li-boxuan","comments":18,"createdAt":"2018-08-10T15:10:22Z","updatedAt":"2018-08-12T03:29:41Z","closedAt":"2018-08-12T03:28:16Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/618","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTM5NjYxNw==","url":"https://github.com/coala/projects/pull/618#discussion_r209396617","bodyText":"I think you have to add a report_year variable as well","diffHunk":"@@ -0,0 +1,356 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzA3Mw==","createdAt":"2018-08-11T04:31:24Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-10T22:14:57Z","lastEditedAt":null,"updatedAt":"2018-08-10T22:14:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzU5OQ==","url":"https://github.com/coala/projects/pull/618#discussion_r209417599","bodyText":"start at 1\nalso this is yaml, which has two space indents","diffHunk":"@@ -0,0 +1,357 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+ [Hemang Kumar](https://github.com/hemangsk/) &\n+ [Surya Widi](https://github.com/blazeu) &\n+ [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+ - GitHub:\n+   - username: li-boxuan\n+   - link: https://github.com/li-boxuan\n+ - GitLab:\n+   - username: li-boxuan\n+   - link: https://gitlab.com/li-boxuan\n+ - Gitter:\n+   - username: li-boxuan\n+   - link: https://gitter.im/li-boxuan\n+ - Openhub:\n+   - username: li-boxuan\n+   - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+ - 0:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:59:00Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:59:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMDYyNQ==","url":"https://github.com/coala/projects/pull/618#discussion_r209420625","bodyText":"I do  -> I did","diffHunk":"@@ -0,0 +1,357 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+ [Hemang Kumar](https://github.com/hemangsk/) &\n+ [Surya Widi](https://github.com/blazeu) &\n+ [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+ - GitHub:\n+   - username: li-boxuan\n+   - link: https://github.com/li-boxuan\n+ - GitLab:\n+   - username: li-boxuan\n+   - link: https://gitlab.com/li-boxuan\n+ - Gitter:\n+   - username: li-boxuan\n+   - link: https://gitter.im/li-boxuan\n+ - Openhub:\n+   - username: li-boxuan\n+   - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+ - 0:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/2929576df9c20144aad9db8a5e326c1853375158\n+   - details: >\n+      Set up meta_review app\n+ - 1:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/aae015127c96b85a1cd9188199a6e4a46693d9f7\n+   - details: >\n+      Change meta-review models\n+\n+ - 2:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/78e1e3a542a1654982f55cde4e08bbf97ec81c3c\n+   - details: >\n+      Implement meta-review scoring & ranking system\n+\n+ - 3:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/6c83d70a8559d1368fba1d80ad412b31ada7dad3\n+   - details: >\n+      [Bonding Period Work] meta_review.md: Add meta review project\n+\n+ - 4:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/16f8e84036a9ba47d434c60400da021d90a1a740\n+   - details: >\n+      [Bonding Period Work] fetch-issues.js: Build custom generator\n+\n+ - 5:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/46f1ad5ce83d5d72aa95ea00703b92c2fc38b2dc\n+   - details: >\n+      [Bonding Period Work] Remove TODOs in components code\n+\n+ - 6:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/60b8a10f123d2bec71c22c31f3e281ad9609fa07\n+   - details: >\n+      [Bonding Period Work] Modernize existing React component code\n+\n+ - 7:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/e452f41ddda6abe149442d5240675b3ae3333e6a\n+   - details: >\n+      nav.jsx: Fix broken link on header\n+\n+ - 8:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/77830f4146de9d4d29b539740423a0ca43ee219f\n+   - details: >\n+      Pre-fetch pull request review comments & reactions\n+\n+ - 9:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/2a7338b3edff6d1c9f5b019ea07c28640996267a\n+   - details: >\n+      package.json: Add linting on script & test\n+\n+ - 10:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d3c6debe198b369901166be791a9ae53f23b26a0\n+   - details: >\n+      Get test suite working\n+\n+ - 11:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/671f13de1999001e718df9ce5187d7abf278791d\n+   - details: >\n+      Set pre-fetch time limit for pull requests\n+\n+ - 12:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/91fffbbce1713a1d56276122d51cb16c7079b626\n+   - details: >\n+      Fix Travis failure\n+\n+ - 13:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/c33cc70bcab57a4ac13e4f352a255abc213dc874\n+   - details: >\n+      database.js: Fix `closed` filter bug\n+\n+ - 14:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/a2957290794424c6b8a0162ab49694cd771c2445\n+   - details: >\n+      .travis.yml: Enable keep-history\n+\n+ - 15:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/aca0d61832ffe1bac2b2c9d2615ea4219f68d3b6\n+   - details: >\n+      .travis.yml: Let moban task not deploy\n+\n+ - 16:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/4b82e679b83339f500d686967d3b6b843f7e1d40\n+   - details: >\n+      run-test.sh: Verify files exist\n+\n+ - 17:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/0f9f4a45bfdf341c5705d7543688adea7195c5cb\n+   - details: >\n+      Increase test timeout threshold\n+\n+ - 18:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/34c2e6de21ed2933d8f19cca3b6dd177ce32c86f\n+   - details: >\n+      login-modal.jsx: Add exception for default api url\n+\n+ - 19:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/828be376832687373b984df38ca71c1684651aa7\n+   - details: >\n+      Add `meta-review in need` column\n+\n+ - 20:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/ac8b0709b0e82963fd3d6680b37005359225effc\n+   - details: >\n+      Display reactions of reviews\n+\n+ - 21:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/892b87ff808ac188166c9500d1169b1590b8d791\n+   - details: >\n+      dashboard.jsx: Add environment REPOSITORIES\n+\n+ - 22:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/e791bee60bf4af32aec889211d4de63d6418d7ed\n+   - details: >\n+      Setup GraphQL client\n+\n+ - 23:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/5480420793979b9ae4b53117c6d5d757f12013bb\n+   - details: >\n+      Use new graphql client to sync issues\n+\n+ - 24:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/93c842bca04298c8afc2d71d167efe04d432d11f\n+   - details: >\n+      dashboard.jsx: Load repos automatically after login\n+\n+ - 25:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/9eae16877612d21f3ceed99ec23a097ec32e21b3\n+   - details: >\n+      Add review filters functionality\n+\n+ - 26:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d32b25729ee1d9bc7972dce4a898a0bea9146098\n+   - details: >\n+      Refactor pre-fetching\n+\n+ - 27:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/faf793a3679ab32cb4e42c8ac54f174695b6bebc\n+   - details: >\n+      github-graphql.js: Fix several issues\n+\n+ - 28:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/59e9cba6ca38a8fb6396a0864ff43bf749f1d6ec\n+   - details: >\n+      Setup Jest configurations\n+\n+ - 29:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/8a3c49befc2c3d2b68ed11c5f2e217cb177caf57\n+   - details: >\n+      reactions.jsx: Add snapshot test\n+\n+ - 30:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/1f88cfa9c369f5b3f4bd7abafa6c15970196de80\n+   - details: >\n+      Add codecov\n+\n+ - 31:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/3638063072aeea1925bab5f9565d7765bf8d4cf4\n+   - details: >\n+      Separate test logic\n+\n+ - 32:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/10003d073c16c18da669b66f235c0e9abc1230f1\n+   - details: >\n+      netlify.toml: Verify pre-fetched files exist\n+\n+ - 33:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d1a7ea3ea66c7af7a51a9717f67fc635fc35cf41\n+   - details: >\n+      Enhance meta-review UI\n+\n+ - 34:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/b062087825f01c1169accb646f0eaf0d1f0e7cb8\n+   - details: >\n+      Add reaction mutation functionality\n+\n+ - 35:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d4705c5332ecd8e4329f0b62f7df3c9312c35a01\n+   - details: >\n+      repo-kanban.jsx: Use withAuth wrapper\n+\n+ - 36:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d1a9bf25061800510cd9cf7d1c089900d2cbd1f1\n+   - details: >\n+      dashboard.jsx: Use withAuth wrapper\n+\n+ - 37:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\n+   - details: >\n+      cEP-0019.md: Meta-review system\n+\n+ - 38:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/dc2cc6a82f72644da55f509f8d4a50ba8fa694ba\n+   - details: >\n+      Linter: Add option to remove 0 number\n+\n+ - 39:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/dfa92b64435b86b10b9a725ee32267896450e565\n+   - details: >\n+      Meta-review.rst: Add meta-review docs\n+\n+ - 40:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/42a3ffac059f279cd65c9539b8e44bf222782773\n+   - details: >\n+      Newcomers_Guide.rst: Add meta-review process\n+\n+ - 41:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/2f6f58b4afa0b139aa25062c3d3fcb27df3ea0d5\n+   - details: >\n+      PyLintBear: Fix column number convention\n+\n+ - 42:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/1f3325519a72cb98669185149b03b11c1ec25f70\n+   - details: >\n+      CPPLintBear: Fix line number convention\n+\n+ - 43:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/705f9db98d957cc9d27e675b1d58f369feb54255\n+   - details: >\n+      HAMLLintBear: Fix line number convention\n+\n+ - 44:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/e5df6bcac33aa06bec70bf21217972620c34e888\n+   - details: >\n+      WriteGoodLintBear: Fix column number convention\n+\n+ - 45:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/e445c04e28e95b7f21983e9e2dd770e81838aa69\n+   - details: >\n+      StylintBear: Fix column number convention\n+\n+ - 46:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/401fa883ffbe21b78a8a4899160592a293f3d4cd\n+   - details: >\n+      CheckStyleBear: Fix offset convention\n+---\n+\n+### Meta-review\n+\n+\n+#### Work Done\n+\n+coala [community](https://github.com/coala/community) website now has a meta-review\n+[ranking list](http://coala-community.netlify.com/meta-review/). coala\n+gh-board [website](https://coala-gh-board.netlify.com/)\n+now has a column displaying review comments that need to be meta-reviewed. I also\n+fixed many issues around [gh-board](https://github.com/coala/gh-board) repo.\n+Apart from all above, I do some other contributions to the community, including","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-11T08:19:29Z","lastEditedAt":null,"updatedAt":"2018-08-11T08:19:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMjg4OA==","url":"https://github.com/coala/projects/pull/618#discussion_r209422888","bodyText":"OpenHub","diffHunk":"@@ -0,0 +1,371 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+  [Hemang Kumar](https://github.com/hemangsk/) &\n+  [Surya Widi](https://github.com/blazeu) &\n+  [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+  - GitHub:\n+    - username: li-boxuan\n+    - link: https://github.com/li-boxuan\n+  - GitLab:\n+    - username: li-boxuan\n+    - link: https://gitlab.com/li-boxuan\n+  - Gitter:\n+    - username: li-boxuan\n+    - link: https://gitter.im/li-boxuan\n+  - Openhub:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T10:10:02Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:10:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMjk4MQ==","url":"https://github.com/coala/projects/pull/618#discussion_r209422981","bodyText":"there are 52 pages in your tarball, but only 49 here.  Some intentionally left out of this list ?  Too small to mention ?\nare these upstream PRs in your tarball ?\nIt isnt work completed, and they are derivatives of your other patches, so listing them here isnt ideal.\nAnd including them in your tarball probably isnt good either.\nI suggest you move these two upstream PRs into the prose below, describing the fact that our enhancements are generic for any gh-board user, and we have been hoping that the upstream gh-board repos will become better maintained.","diffHunk":"@@ -0,0 +1,371 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+  [Hemang Kumar](https://github.com/hemangsk/) &\n+  [Surya Widi](https://github.com/blazeu) &\n+  [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+  - GitHub:\n+    - username: li-boxuan\n+    - link: https://github.com/li-boxuan\n+  - GitLab:\n+    - username: li-boxuan\n+    - link: https://gitlab.com/li-boxuan\n+  - Gitter:\n+    - username: li-boxuan\n+    - link: https://gitter.im/li-boxuan\n+  - Openhub:\n+    - username: li-boxuan\n+    - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+  - 1:\n+    - repo: projects\n+    - link: https://github.com/coala/projects/commit/6c83d70a8559d1368fba1d80ad412b31ada7dad3\n+    - details: >\n+       [Bonding Period Work] meta_review.md: Add meta review project\n+\n+  - 2:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\n+    - details: >\n+       cEP-0019.md: Meta-review system\n+\n+  - 3:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/2929576df9c20144aad9db8a5e326c1853375158\n+    - details: >\n+       Set up meta_review app\n+\n+  - 4:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/aae015127c96b85a1cd9188199a6e4a46693d9f7\n+    - details: >\n+       Change meta-review models\n+\n+  - 5:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/78e1e3a542a1654982f55cde4e08bbf97ec81c3c\n+    - details: >\n+       Implement meta-review scoring & ranking system\n+\n+  - 6:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/16f8e84036a9ba47d434c60400da021d90a1a740\n+    - details: >\n+       [Bonding Period Work] fetch-issues.js: Build custom generator\n+\n+  - 7:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/46f1ad5ce83d5d72aa95ea00703b92c2fc38b2dc\n+    - details: >\n+       [Bonding Period Work] Remove TODOs in components code\n+\n+  - 8:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/60b8a10f123d2bec71c22c31f3e281ad9609fa07\n+    - details: >\n+       [Bonding Period Work] Modernize existing React component code\n+\n+  - 9:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e452f41ddda6abe149442d5240675b3ae3333e6a\n+    - details: >\n+       nav.jsx: Fix broken link on header\n+\n+  - 10:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/77830f4146de9d4d29b539740423a0ca43ee219f\n+    - details: >\n+       Pre-fetch pull request review comments & reactions\n+\n+  - 11:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/2a7338b3edff6d1c9f5b019ea07c28640996267a\n+    - details: >\n+       package.json: Add linting on script & test\n+\n+  - 12:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d3c6debe198b369901166be791a9ae53f23b26a0\n+    - details: >\n+       Get test suite working\n+\n+  - 13:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/671f13de1999001e718df9ce5187d7abf278791d\n+    - details: >\n+       Set pre-fetch time limit for pull requests\n+\n+  - 14:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/91fffbbce1713a1d56276122d51cb16c7079b626\n+    - details: >\n+       Fix Travis failure\n+\n+  - 15:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/c33cc70bcab57a4ac13e4f352a255abc213dc874\n+    - details: >\n+       database.js: Fix `closed` filter bug\n+\n+  - 16:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/a2957290794424c6b8a0162ab49694cd771c2445\n+    - details: >\n+       .travis.yml: Enable keep-history\n+\n+  - 17:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/aca0d61832ffe1bac2b2c9d2615ea4219f68d3b6\n+    - details: >\n+       .travis.yml: Let moban task not deploy\n+\n+  - 18:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/4b82e679b83339f500d686967d3b6b843f7e1d40\n+    - details: >\n+       run-test.sh: Verify files exist\n+\n+  - 19:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/0f9f4a45bfdf341c5705d7543688adea7195c5cb\n+    - details: >\n+       Increase test timeout threshold\n+\n+  - 20:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/34c2e6de21ed2933d8f19cca3b6dd177ce32c86f\n+    - details: >\n+       login-modal.jsx: Add exception for default api url\n+\n+  - 21:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/828be376832687373b984df38ca71c1684651aa7\n+    - details: >\n+       Add `meta-review in need` column\n+\n+  - 22:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/ac8b0709b0e82963fd3d6680b37005359225effc\n+    - details: >\n+       Display reactions of reviews\n+\n+  - 23:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/892b87ff808ac188166c9500d1169b1590b8d791\n+    - details: >\n+       dashboard.jsx: Add environment REPOSITORIES\n+\n+  - 24:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e791bee60bf4af32aec889211d4de63d6418d7ed\n+    - details: >\n+       Setup GraphQL client\n+\n+  - 25:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/5480420793979b9ae4b53117c6d5d757f12013bb\n+    - details: >\n+       Use new graphql client to sync issues\n+\n+  - 26:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/93c842bca04298c8afc2d71d167efe04d432d11f\n+    - details: >\n+       dashboard.jsx: Load repos automatically after login\n+\n+  - 27:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/9eae16877612d21f3ceed99ec23a097ec32e21b3\n+    - details: >\n+       Add review filters functionality\n+\n+  - 28:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d32b25729ee1d9bc7972dce4a898a0bea9146098\n+    - details: >\n+       Refactor pre-fetching\n+\n+  - 29:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/faf793a3679ab32cb4e42c8ac54f174695b6bebc\n+    - details: >\n+       github-graphql.js: Fix several issues\n+\n+  - 30:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/59e9cba6ca38a8fb6396a0864ff43bf749f1d6ec\n+    - details: >\n+       Setup Jest configurations\n+\n+  - 31:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/8a3c49befc2c3d2b68ed11c5f2e217cb177caf57\n+    - details: >\n+       reactions.jsx: Add snapshot test\n+\n+  - 32:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/1f88cfa9c369f5b3f4bd7abafa6c15970196de80\n+    - details: >\n+       Add codecov\n+\n+  - 33:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/3638063072aeea1925bab5f9565d7765bf8d4cf4\n+    - details: >\n+       Separate test logic\n+\n+  - 34:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/10003d073c16c18da669b66f235c0e9abc1230f1\n+    - details: >\n+       netlify.toml: Verify pre-fetched files exist\n+\n+  - 35:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a7ea3ea66c7af7a51a9717f67fc635fc35cf41\n+    - details: >\n+       Enhance meta-review UI\n+\n+  - 36:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/b062087825f01c1169accb646f0eaf0d1f0e7cb8\n+    - details: >\n+       Add reaction mutation functionality\n+\n+  - 37:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d4705c5332ecd8e4329f0b62f7df3c9312c35a01\n+    - details: >\n+       repo-kanban.jsx: Use withAuth wrapper\n+\n+  - 38:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a9bf25061800510cd9cf7d1c089900d2cbd1f1\n+    - details: >\n+       dashboard.jsx: Use withAuth wrapper\n+\n+  - 39:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dc2cc6a82f72644da55f509f8d4a50ba8fa694ba\n+    - details: >\n+       Linter: Add option to remove 0 number\n+\n+  - 40:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dfa92b64435b86b10b9a725ee32267896450e565\n+    - details: >\n+       Meta-review.rst: Add meta-review docs\n+\n+  - 41:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/42a3ffac059f279cd65c9539b8e44bf222782773\n+    - details: >\n+       Newcomers_Guide.rst: Add meta-review process\n+\n+  - 42:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/2f6f58b4afa0b139aa25062c3d3fcb27df3ea0d5\n+    - details: >\n+       PyLintBear: Fix column number convention\n+\n+  - 43:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/1f3325519a72cb98669185149b03b11c1ec25f70\n+    - details: >\n+       CPPLintBear: Fix line number convention\n+\n+  - 44:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/705f9db98d957cc9d27e675b1d58f369feb54255\n+    - details: >\n+       HAMLLintBear: Fix line number convention\n+\n+  - 45:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e5df6bcac33aa06bec70bf21217972620c34e888\n+    - details: >\n+       WriteGoodLintBear: Fix column number convention\n+\n+  - 46:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e445c04e28e95b7f21983e9e2dd770e81838aa69\n+    - details: >\n+       StylintBear: Fix column number convention\n+\n+  - 47:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/401fa883ffbe21b78a8a4899160592a293f3d4cd\n+    - details: >\n+       CheckStyleBear: Fix offset convention\n+\n+  - 48:\n+    - repo: philschatz/gh-board (upstream)\n+    - link: https://github.com/philschatz/gh-board/pull/147\n+    - details: >\n+       Modernise React code, update packages, fix warnings and improve build (open)\n+\n+  - 49:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4NjMyMQ==","createdAt":"2018-08-11T10:24:30Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-11T10:14:58Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:14:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMzE5OA==","url":"https://github.com/coala/projects/pull/618#discussion_r209423198","bodyText":"Some ... are too small to mention?\n\n\n\nYes, I have several small commits which just do gitignore sync, so I didn't mention them in the report.\n\n\n\nare these upstream PRs in your tarball\n\n\n\nI didn't put upstream PRs in my tarball.\n\n\n\nI suggest you move these two upstream PRs into the prose below\n\n\n\nSounds good. Will do that.","diffHunk":"@@ -0,0 +1,371 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+  [Hemang Kumar](https://github.com/hemangsk/) &\n+  [Surya Widi](https://github.com/blazeu) &\n+  [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+  - GitHub:\n+    - username: li-boxuan\n+    - link: https://github.com/li-boxuan\n+  - GitLab:\n+    - username: li-boxuan\n+    - link: https://gitlab.com/li-boxuan\n+  - Gitter:\n+    - username: li-boxuan\n+    - link: https://gitter.im/li-boxuan\n+  - Openhub:\n+    - username: li-boxuan\n+    - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+  - 1:\n+    - repo: projects\n+    - link: https://github.com/coala/projects/commit/6c83d70a8559d1368fba1d80ad412b31ada7dad3\n+    - details: >\n+       [Bonding Period Work] meta_review.md: Add meta review project\n+\n+  - 2:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\n+    - details: >\n+       cEP-0019.md: Meta-review system\n+\n+  - 3:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/2929576df9c20144aad9db8a5e326c1853375158\n+    - details: >\n+       Set up meta_review app\n+\n+  - 4:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/aae015127c96b85a1cd9188199a6e4a46693d9f7\n+    - details: >\n+       Change meta-review models\n+\n+  - 5:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/78e1e3a542a1654982f55cde4e08bbf97ec81c3c\n+    - details: >\n+       Implement meta-review scoring & ranking system\n+\n+  - 6:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/16f8e84036a9ba47d434c60400da021d90a1a740\n+    - details: >\n+       [Bonding Period Work] fetch-issues.js: Build custom generator\n+\n+  - 7:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/46f1ad5ce83d5d72aa95ea00703b92c2fc38b2dc\n+    - details: >\n+       [Bonding Period Work] Remove TODOs in components code\n+\n+  - 8:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/60b8a10f123d2bec71c22c31f3e281ad9609fa07\n+    - details: >\n+       [Bonding Period Work] Modernize existing React component code\n+\n+  - 9:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e452f41ddda6abe149442d5240675b3ae3333e6a\n+    - details: >\n+       nav.jsx: Fix broken link on header\n+\n+  - 10:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/77830f4146de9d4d29b539740423a0ca43ee219f\n+    - details: >\n+       Pre-fetch pull request review comments & reactions\n+\n+  - 11:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/2a7338b3edff6d1c9f5b019ea07c28640996267a\n+    - details: >\n+       package.json: Add linting on script & test\n+\n+  - 12:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d3c6debe198b369901166be791a9ae53f23b26a0\n+    - details: >\n+       Get test suite working\n+\n+  - 13:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/671f13de1999001e718df9ce5187d7abf278791d\n+    - details: >\n+       Set pre-fetch time limit for pull requests\n+\n+  - 14:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/91fffbbce1713a1d56276122d51cb16c7079b626\n+    - details: >\n+       Fix Travis failure\n+\n+  - 15:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/c33cc70bcab57a4ac13e4f352a255abc213dc874\n+    - details: >\n+       database.js: Fix `closed` filter bug\n+\n+  - 16:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/a2957290794424c6b8a0162ab49694cd771c2445\n+    - details: >\n+       .travis.yml: Enable keep-history\n+\n+  - 17:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/aca0d61832ffe1bac2b2c9d2615ea4219f68d3b6\n+    - details: >\n+       .travis.yml: Let moban task not deploy\n+\n+  - 18:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/4b82e679b83339f500d686967d3b6b843f7e1d40\n+    - details: >\n+       run-test.sh: Verify files exist\n+\n+  - 19:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/0f9f4a45bfdf341c5705d7543688adea7195c5cb\n+    - details: >\n+       Increase test timeout threshold\n+\n+  - 20:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/34c2e6de21ed2933d8f19cca3b6dd177ce32c86f\n+    - details: >\n+       login-modal.jsx: Add exception for default api url\n+\n+  - 21:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/828be376832687373b984df38ca71c1684651aa7\n+    - details: >\n+       Add `meta-review in need` column\n+\n+  - 22:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/ac8b0709b0e82963fd3d6680b37005359225effc\n+    - details: >\n+       Display reactions of reviews\n+\n+  - 23:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/892b87ff808ac188166c9500d1169b1590b8d791\n+    - details: >\n+       dashboard.jsx: Add environment REPOSITORIES\n+\n+  - 24:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e791bee60bf4af32aec889211d4de63d6418d7ed\n+    - details: >\n+       Setup GraphQL client\n+\n+  - 25:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/5480420793979b9ae4b53117c6d5d757f12013bb\n+    - details: >\n+       Use new graphql client to sync issues\n+\n+  - 26:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/93c842bca04298c8afc2d71d167efe04d432d11f\n+    - details: >\n+       dashboard.jsx: Load repos automatically after login\n+\n+  - 27:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/9eae16877612d21f3ceed99ec23a097ec32e21b3\n+    - details: >\n+       Add review filters functionality\n+\n+  - 28:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d32b25729ee1d9bc7972dce4a898a0bea9146098\n+    - details: >\n+       Refactor pre-fetching\n+\n+  - 29:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/faf793a3679ab32cb4e42c8ac54f174695b6bebc\n+    - details: >\n+       github-graphql.js: Fix several issues\n+\n+  - 30:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/59e9cba6ca38a8fb6396a0864ff43bf749f1d6ec\n+    - details: >\n+       Setup Jest configurations\n+\n+  - 31:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/8a3c49befc2c3d2b68ed11c5f2e217cb177caf57\n+    - details: >\n+       reactions.jsx: Add snapshot test\n+\n+  - 32:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/1f88cfa9c369f5b3f4bd7abafa6c15970196de80\n+    - details: >\n+       Add codecov\n+\n+  - 33:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/3638063072aeea1925bab5f9565d7765bf8d4cf4\n+    - details: >\n+       Separate test logic\n+\n+  - 34:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/10003d073c16c18da669b66f235c0e9abc1230f1\n+    - details: >\n+       netlify.toml: Verify pre-fetched files exist\n+\n+  - 35:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a7ea3ea66c7af7a51a9717f67fc635fc35cf41\n+    - details: >\n+       Enhance meta-review UI\n+\n+  - 36:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/b062087825f01c1169accb646f0eaf0d1f0e7cb8\n+    - details: >\n+       Add reaction mutation functionality\n+\n+  - 37:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d4705c5332ecd8e4329f0b62f7df3c9312c35a01\n+    - details: >\n+       repo-kanban.jsx: Use withAuth wrapper\n+\n+  - 38:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a9bf25061800510cd9cf7d1c089900d2cbd1f1\n+    - details: >\n+       dashboard.jsx: Use withAuth wrapper\n+\n+  - 39:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dc2cc6a82f72644da55f509f8d4a50ba8fa694ba\n+    - details: >\n+       Linter: Add option to remove 0 number\n+\n+  - 40:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dfa92b64435b86b10b9a725ee32267896450e565\n+    - details: >\n+       Meta-review.rst: Add meta-review docs\n+\n+  - 41:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/42a3ffac059f279cd65c9539b8e44bf222782773\n+    - details: >\n+       Newcomers_Guide.rst: Add meta-review process\n+\n+  - 42:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/2f6f58b4afa0b139aa25062c3d3fcb27df3ea0d5\n+    - details: >\n+       PyLintBear: Fix column number convention\n+\n+  - 43:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/1f3325519a72cb98669185149b03b11c1ec25f70\n+    - details: >\n+       CPPLintBear: Fix line number convention\n+\n+  - 44:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/705f9db98d957cc9d27e675b1d58f369feb54255\n+    - details: >\n+       HAMLLintBear: Fix line number convention\n+\n+  - 45:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e5df6bcac33aa06bec70bf21217972620c34e888\n+    - details: >\n+       WriteGoodLintBear: Fix column number convention\n+\n+  - 46:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e445c04e28e95b7f21983e9e2dd770e81838aa69\n+    - details: >\n+       StylintBear: Fix column number convention\n+\n+  - 47:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/401fa883ffbe21b78a8a4899160592a293f3d4cd\n+    - details: >\n+       CheckStyleBear: Fix offset convention\n+\n+  - 48:\n+    - repo: philschatz/gh-board (upstream)\n+    - link: https://github.com/philschatz/gh-board/pull/147\n+    - details: >\n+       Modernise React code, update packages, fix warnings and improve build (open)\n+\n+  - 49:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4NjM1Mw==","createdAt":"2018-08-11T10:27:58Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-11T10:26:23Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:26:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjExNDU3OA==","url":"https://github.com/coala/projects/pull/618#issuecomment-412114578","bodyText":"Preview: https://deploy-preview-618--coala-projects.netlify.com/gsoc/2018/statusreport/li-boxuan","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-10T15:17:46Z","lastEditedAt":null,"updatedAt":"2018-08-10T15:17:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0OTg5Mw==","url":"https://github.com/coala/projects/pull/618#issuecomment-412249893","bodyText":"You could include commits in https://gitlab.com/coala/coala-json/commits/master and  coala/coala-vs-code@59660ef and coala/coala-vs-code@f90e5a2 which were related to your offset work.\nIIRC you also raised an issue about pylint -- IMO that is also worth noting.  You could add a paragraph about it as auxillary work done as part of the community, and it was very important work to improve quality of coala output.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T04:27:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:27:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0OTk3MQ==","url":"https://github.com/coala/projects/pull/618#issuecomment-412249971","bodyText":"Also you sent some patches upstream.  They should be noted, even though they havent been merged.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzA1NA==","createdAt":"2018-08-11T04:29:34Z","content":"HOORAY","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-11T04:29:15Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:29:15Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534152159000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/619","number":619,"title":"reports: Add sks444's GSoC report","body":"https://deploy-preview-619--coala-projects.netlify.com/gsoc/2018/statusreport/shrikrishna","comments":25,"createdAt":"2018-08-10T19:44:44Z","updatedAt":"2018-08-13T09:22:39Z","closedAt":"2018-08-13T09:22:31Z","state":"merged","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/619","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzQ2NQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209417465","bodyText":"start with 1","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 0:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:51:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:51:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzQ4OA==","url":"https://github.com/coala/projects/pull/619#discussion_r209417488","bodyText":"put all the unmerged stuff at the end of the list, and add 'WIP' on each of them, or 'POC', or 'Not reviewed' if review is pending.","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 0:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 1:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+     Jinja2.py: Add support for ignore comments\n+ - 2:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 3:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 8:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 9:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     org/: Use igitt_django models to save igitt data\n+ - 14:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     org/: Make an api to show active newcomers\n+ - 15:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 16:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+ - 17:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:52:43Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:52:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzU0Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209417546","bodyText":"https://deploy-preview-619--coala-projects.netlify.com/GSoC/2018/StatusReport/sks444 404","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:56:22Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:56:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMDI5OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209420299","bodyText":"broken syntax","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 0:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 1:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+     Jinja2.py: Add support for ignore comments","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T08:03:20Z","lastEditedAt":null,"updatedAt":"2018-08-11T08:03:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMzIxMA==","url":"https://github.com/coala/projects/pull/619#discussion_r209423210","bodyText":"yaml is two space indents, all through the file","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T10:27:05Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:27:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI1OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209424259","bodyText":"put URL on separate line and resume text on line after it.","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:11:37Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:11:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI2NA==","url":"https://github.com/coala/projects/pull/619#discussion_r209424264","bodyText":"move this up, above the WIP, etc.  This is core part of your project","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:11:44Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:11:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI3NQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209424275","bodyText":"avoid going over 80cpl as much as possible -- commits only need 8 characters, not the full sha.","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed\n+URL for all the APIs until there is the integration of continuous deployment in the webservices.\n+\n+##### Building the Gamification system\n+\n+The second and the important part of my work, from [importing the useful newcomers data](https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:12:29Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:12:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI4Mw==","url":"https://github.com/coala/projects/pull/619#discussion_r209424283","bodyText":"80cpl","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed\n+URL for all the APIs until there is the integration of continuous deployment in the webservices.\n+\n+##### Building the Gamification system\n+\n+The second and the important part of my work, from [importing the useful newcomers data](https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4)\n+to building the [gamification app](https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b) has been done in the [community](https://github.com/coala/community) repo. And now we have a [leaderboard](http://coala-community.netlify.com/gamification/) which shows the score, current level and the badges earned by all\n+the active newcomers at coala.\n+\n+#### Challenges\n+\n+The biggest challenge for me was to design the models of the gamification system\n+and choosing the correct path to implement the process. I almost did the wrong\n+implementation of the process twice but again because of well written [cEP](https://github.com/coala/cEPs/blob/master/cEP-0020.md) and the guidance of my mentor John I had a clear","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:12:48Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:12:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI5Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209424296","bodyText":"80cpl","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed\n+URL for all the APIs until there is the integration of continuous deployment in the webservices.\n+\n+##### Building the Gamification system\n+\n+The second and the important part of my work, from [importing the useful newcomers data](https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4)\n+to building the [gamification app](https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b) has been done in the [community](https://github.com/coala/community) repo. And now we have a [leaderboard](http://coala-community.netlify.com/gamification/) which shows the score, current level and the badges earned by all\n+the active newcomers at coala.\n+\n+#### Challenges\n+\n+The biggest challenge for me was to design the models of the gamification system\n+and choosing the correct path to implement the process. I almost did the wrong\n+implementation of the process twice but again because of well written [cEP](https://github.com/coala/cEPs/blob/master/cEP-0020.md) and the guidance of my mentor John I had a clear\n+idea of what I have to achieve. So, I did some more thinking and research on Django\n+and get the basic work done. And once the algorithms were in place everything went\n+smoothly with the reviews of my mentors.\n+\n+#### Work to be done\n+\n+1). Integration of continous deployment to the webservices.\n+\n+2). Use real webservices APIs.\n+\n+3). The leaderboard on community website is very basic. It could be prettified and improved.\n+\n+4). Add support of Gitter messages analysis to the gamification app. [WIP](https://github.com/coala/community/pull/145).","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:13:35Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:13:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDMwMg==","url":"https://github.com/coala/projects/pull/619#discussion_r209424302","bodyText":"29 here and 27 in the tarball ... what happened ?","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:13:56Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:13:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNjM4OA==","url":"https://github.com/coala/projects/pull/619#discussion_r209426388","bodyText":"@jayvdb updated the tarball, it contains 28 patches now, it doesn't contain sks444/webservices.coala.io@9d26372 as there is nocode, it just has json.","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-11T13:16:06Z","lastEditedAt":null,"updatedAt":"2018-08-11T13:16:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDg4MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209430880","bodyText":"add hash per #627","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:16:30Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:16:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTA3OA==","url":"https://github.com/coala/projects/pull/619#discussion_r209431078","bodyText":"reviewed https://gitlab.com/sks444/igitt-django/commit/824ced17\nlooks like a few issues and one or two MRs are needed.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:24:07Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:24:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTE0Mg==","url":"https://github.com/coala/projects/pull/619#discussion_r209431142","bodyText":"not finished.\nremove.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:26:31Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:26:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTE1Mw==","url":"https://github.com/coala/projects/pull/619#discussion_r209431153","bodyText":"not finished.  remove or cut into two PRs, one for the half which does work, and then another for the half which depends on PR 152","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:26:45Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:26:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTIzMg==","url":"https://github.com/coala/projects/pull/619#discussion_r209431232","bodyText":"reviewing now ..","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:29:12Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:29:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTMxMQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209431311","bodyText":"eww .. needs an update, seriously","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:32:09Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:32:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTYxNA==","url":"https://github.com/coala/projects/pull/619#discussion_r209431614","bodyText":"reviewed again;  same opinion as before; please keep description at least, and reactions if possible.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [Not Reviewed] Serialize messages on gitter by newcomers\n+  - 28:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+      [Not Reviewed ] org/: Use igitt_django models to save igitt data","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:46:38Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:46:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTY4OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209431689","bodyText":"reviewed","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [Not Reviewed] Serialize messages on gitter by newcomers","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:50:09Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:50:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MDYxMA==","url":"https://github.com/coala/projects/pull/619#discussion_r209450610","bodyText":"updated","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-12T10:39:05Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:39:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MDYyNw==","url":"https://github.com/coala/projects/pull/619#discussion_r209450627","bodyText":"updated","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-12T10:39:36Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:39:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MDYzMw==","url":"https://github.com/coala/projects/pull/619#discussion_r209450633","bodyText":"updated","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [Not Reviewed] Serialize messages on gitter by newcomers\n+  - 28:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+      [Not Reviewed ] org/: Use igitt_django models to save igitt data","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-12T10:39:45Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:39:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MzY0Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209453646","bodyText":"A\n---\n\nis needed here","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [WIP] Serialize messages on gitter by newcomers\n+  - 26:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+      [WIP] org/: Use igitt_django models to save igitt data\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6\n+    - details: >\n+      [WIP] org/: Make an api to show active newcomers\n+","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTUyMw==","createdAt":"2018-08-12T12:42:10Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:33:55Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:33:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MzY2MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209453660","bodyText":"typo in details","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTQ1NA==","createdAt":"2018-08-12T12:37:22Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:34:17Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:34:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MzY4MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209453680","bodyText":"You'll have to add indents in all descriptions\nWithout an indent jekyll will throw errors","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTQ0NQ==","createdAt":"2018-08-12T12:36:55Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:35:00Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:35:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1Mzg2Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209453866","bodyText":"Also consider removing the < since it might lead to incorrect links","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTUyNg==","createdAt":"2018-08-12T12:42:43Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:40:57Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:40:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1NDM2NQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209454365","bodyText":"not nearly done.  needs to support pgsql and sqlite.  tests need to show this.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T12:56:12Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:56:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1NDM3MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209454370","bodyText":"need to submit MRs\nhttps://gitlab.com/gitmate/open-source/igitt-django/merge_requests","diffHunk":"@@ -0,0 +1,250 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+       Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+       Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+       backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+       org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+       org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+       Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+       data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+       test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+       data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+       test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - details: >\n+       Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+       Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+       data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+       data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+       Add gamification app\n+  - 23:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTcxMg==","createdAt":"2018-08-12T13:00:55Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:56:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:56:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDg0MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209474840","bodyText":"merged","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging\n+  - 9:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+       Add teams to Contributor Model\n+  - 10:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+       Repository: Add filter_merge_requests method\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+       backend/db.sqlite3: Add old database files\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+       org/: Only pass valid usernames to methods\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+       org/cron.py: Fix contributors cron job\n+  - 14:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+       Serialize coala mrs on GitHub and GitLab\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+       data/tests/: Add tests for data app\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+       test_management_commands.py: Fix webservices error\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+       data/: Fix import_contributors_data command\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+       test_models.py: Fix tests\n+  - 19:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - details: >\n+       Get 100% test coverage for the data app\n+  - 20:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+       Generate a fake api similar to coala's webservices\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+       data/: Import IGitt data\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+       data/: Add url field to Issue and MergeRequest model\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+       Add gamification app\n+  - 24:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:54:51Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:54:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDg5Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209474896","bodyText":"rebase and this one can get merged","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging\n+  - 9:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+       Add teams to Contributor Model\n+  - 10:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+       Repository: Add filter_merge_requests method\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+       backend/db.sqlite3: Add old database files\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+       org/: Only pass valid usernames to methods\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+       org/cron.py: Fix contributors cron job\n+  - 14:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+       Serialize coala mrs on GitHub and GitLab\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+       data/tests/: Add tests for data app\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+       test_management_commands.py: Fix webservices error\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+       data/: Fix import_contributors_data command\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+       test_models.py: Fix tests\n+  - 19:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - details: >\n+       Get 100% test coverage for the data app\n+  - 20:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+       Generate a fake api similar to coala's webservices\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+       data/: Import IGitt data\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+       data/: Add url field to Issue and MergeRequest model\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+       Add gamification app\n+  - 24:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+       org/: Use igitt_django models to save igitt data\n+  - 25:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/gitmate/open-source/igitt-django/merge_requests/7/diffs?commit_id=10391892\n+    - details: >\n+       Switch to sqlite3\n+  - 26:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+       [WIP] gitter/: Messages, Analysis and Import\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+       [WIP] Serialize messages on gitter by newcomers\n+  - 28:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:56:07Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:56:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMzU1OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209503559","bodyText":"@jayvdb, why this description is not showing up in https://deploy-preview-619--coala-projects.netlify.com/gsoc/2018/statusreport/shrikrishna ?","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-13T06:42:19Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:42:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwNTI3Mw==","url":"https://github.com/coala/projects/pull/619#discussion_r209505273","bodyText":"it needs -","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNzM4Mw==","createdAt":"2018-08-13T06:50:56Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-13T06:50:21Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:50:21Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534158688000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/621","number":621,"title":"Flags: Support for multiple status labels","body":"Add support for multiple status labels on a project card\nCloses #470\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-08-11T01:55:54Z","updatedAt":"2018-08-13T11:11:28Z","closedAt":"2018-08-13T11:05:31Z","state":"merged","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"enhancement","color":"84b6eb"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/621","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNTgyNg==","url":"https://github.com/coala/projects/pull/621#discussion_r209415826","bodyText":"This should be put into css file instead.","diffHunk":"@@ -30,6 +30,17 @@\n   <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\">\n </head>\n \n+<style type=\"text/css\">","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzMzNg==","createdAt":"2018-08-11T05:06:55Z","content":"THUMBS_UP","user":{"login":"blazeu","name":"Surya Widi"}}],"createdAt":"2018-08-11T04:11:01Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:11:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMjIzNw==","url":"https://github.com/coala/projects/pull/621#discussion_r209422237","bodyText":"Support is not really good, only works in Chrome.\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/height","diffHunk":"@@ -85,3 +85,6 @@\n   border: 0;\n   z-index: 9;\n }\n+.status {\n+  height: fit-content;","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-11T09:43:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T09:43:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjA1OQ==","url":"https://github.com/coala/projects/pull/621#discussion_r209482059","bodyText":"I do not believe this is necessary.\nThere are still many other .md files in this directory which use status: in_progress so it is extremely unlikely that only this one should be modified.\nIdeally , none are modified in this PR.","diffHunk":"@@ -19,7 +19,8 @@ requirements:\n   - \"Being familiar with the current Bear API and what it provides.\"\n   - \"Knowledge of ANTLR and Java is a bonus.\"\n   - \"Knowledge of ASTs and basic language grammar.\"\n-status: in_progress\n+status:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T02:50:06Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:50:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwNTM2MA==","url":"https://github.com/coala/projects/pull/621#discussion_r209505360","bodyText":"do we need two spaces after the : here?  I doubt it","diffHunk":"@@ -16,8 +16,7 @@\n \"collaborating_projects\" : [{% for cp in post.collaborating_projects %}\"{{ cp }}\"{% unless forloop.last %},{% endunless %}{% endfor %}],\n \"content_url\" : \"{{post.url}}\",\n \"path\" : \"{{post.path}}\",\n-\"status\" : \"{{post.status}}\",\n+\"status\" :  [{% for status in post.status %} \"{{ status }}\" {% unless forloop.last %},{% endunless %}{% endfor %}],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:50:59Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:50:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTU1NTU1MQ==","url":"https://github.com/coala/projects/pull/621#discussion_r209555551","bodyText":"Would make more sense to add this change in a separate commit","diffHunk":"@@ -17,7 +17,9 @@ requirements:\n   - \"The applicant should have at least one patch merged to any of the coala repositories.\"\n   - \"Familiarity with Git, GitHub API, Phabricator API, and GitLab API\"\n   - \"Familiarity with EmberJS and GitHub Pages\"\n-status: in_progress\n+status:","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-08-13T10:10:01Z","lastEditedAt":null,"updatedAt":"2018-08-13T10:10:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI4ODM1MQ==","url":"https://github.com/coala/projects/pull/621#issuecomment-412288351","bodyText":"Could you please post some screenshots showing the final layout of project cards after adding multiple labels ?","diffHunk":null,"author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-08-11T17:03:29Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:03:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI5MjAxOQ==","url":"https://github.com/coala/projects/pull/621#issuecomment-412292019","bodyText":"@hemangsk @blazeu\nThis is a peculiar case. The bottom margin only comes up when it is next to another card.\nYou can see here - https://imgur.com/a/1I3ZCB2. The rest of the cards have labels at the bottom except these 3 cards next to the multiple labels card whose labels are pushed up\n\"Vulture dead code removal\" card has no margin bottom here but it gets one here - https://i.imgur.com/lh0HAc8.png When it is next to another card. Also this issue is solved when you search for a specific card in which case It has no bottom margin.\nEdit: I did some changes. The new ui looks like this - https://i.imgur.com/HAlAeIp.png","diffHunk":null,"author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-11T18:05:43Z","lastEditedAt":"2018-08-13T02:20:43Z","updatedAt":"2018-08-13T02:20:43Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534209237000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/622","number":622,"title":"reports: Add report for RJ722 2018","body":"Add Report for RJ722.\nhttps://deploy-preview-622--coala-projects.netlify.com/GSoC/2018/StatusReport/RahulJha\nhttps://deploy-preview-622--coala-projects.netlify.com/gsoc/2018/statusreport/rj722","comments":19,"createdAt":"2018-08-11T02:52:06Z","updatedAt":"2018-08-14T01:13:57Z","closedAt":"2018-08-14T01:08:02Z","state":"merged","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/622","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNTcyOA==","url":"https://github.com/coala/projects/pull/622#discussion_r209415728","bodyText":"https://deploy-preview-622--coala-projects.netlify.com/GSoC/2018/StatusReport/RahulJha not working","diffHunk":"@@ -0,0 +1,370 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T04:05:58Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:05:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzQ4MQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209417481","bodyText":"There was a problem with parsing the \":\" in the commit messages. Resolved!","diffHunk":"@@ -0,0 +1,370 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-11T05:52:03Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:52:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzU2Mg==","url":"https://github.com/coala/projects/pull/622#discussion_r209417562","bodyText":"Add OpenHub","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:57:17Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:57:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxOTk5MA==","url":"https://github.com/coala/projects/pull/622#discussion_r209419990","bodyText":"You should create a project for https://github.com/RJ722/vulture-whitelist-generators at https://www.openhub.net/p/new\nhttps://www.openhub.net/accounts/RJ722/positions","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T07:49:21Z","lastEditedAt":null,"updatedAt":"2018-08-11T07:49:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTIzOA==","url":"https://github.com/coala/projects/pull/622#discussion_r209421238","bodyText":"Still not done","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T08:50:59Z","lastEditedAt":null,"updatedAt":"2018-08-11T08:50:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NDgxMw==","url":"https://github.com/coala/projects/pull/622#discussion_r209444813","bodyText":"Added the openhub profile link. Creating the project on openhub.","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T06:53:34Z","lastEditedAt":null,"updatedAt":"2018-08-12T06:53:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NDk4NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209444984","bodyText":"Here it is: https://www.openhub.net/p/vulture-whitelist-generators","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T07:00:35Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:00:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDI5MQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209460291","bodyText":"doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUzMA==","createdAt":"2018-08-12T17:56:41Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:11:14Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:11:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDMwNw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460307","bodyText":"doesnt count.\nthis should have been automated with cookiecutter or moban","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T16:12:10Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:12:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDMwOA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460308","bodyText":"doesnt count.\nthis should have been automated with cookiecutter or moban","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTI5Ng==","createdAt":"2018-08-12T17:36:21Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:12:16Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:12:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDMyNA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460324","bodyText":"nothing much done here","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUyNw==","createdAt":"2018-08-12T17:56:31Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:12:51Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:12:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDM0OQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209460349","bodyText":"give this a better description, as it does more than just Ignore dist/ , and Ignore dist/ should have been an automated part of setting up a repo","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUxOA==","createdAt":"2018-08-12T17:55:40Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:13:53Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:13:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQxNg==","url":"https://github.com/coala/projects/pull/622#discussion_r209460416","bodyText":"wouldnt have made it through any review; should have been squashed into a proper commit","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUxMw==","createdAt":"2018-08-12T17:55:26Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:15:40Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:15:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ0Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460447","bodyText":"doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUxMg==","createdAt":"2018-08-12T17:55:22Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:15:58Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:15:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ2NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460464","bodyText":"aasdjflkasjdfkljasf? seriously?","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T16:16:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:16:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ3Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460477","bodyText":"should have been automated; doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ5NQ==","createdAt":"2018-08-12T17:53:53Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:16:59Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:16:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ5NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460494","bodyText":"we provide templates for this; doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ5Ng==","createdAt":"2018-08-12T17:53:55Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:17:38Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:17:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDU1NQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209460555","bodyText":"this type of addition is being excluded by other students as it didnt involve any additional work","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ5Mg==","createdAt":"2018-08-12T17:53:49Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:19:49Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:19:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDU3Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460577","bodyText":"should never have been merged with this in it","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85\n+   - details: Support py37\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ec86b525cd9edd8b8eef181dc529e7d53fff3aad","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ4OQ==","createdAt":"2018-08-12T17:52:58Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:20:33Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:20:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDYyMg==","url":"https://github.com/coala/projects/pull/622#discussion_r209460622","bodyText":"should have been automated","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85\n+   - details: Support py37\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ec86b525cd9edd8b8eef181dc529e7d53fff3aad\n+   - details: Debug Travis\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/0eeb52e867c2d01680adba4841a890d282c43e46","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ4OA==","createdAt":"2018-08-12T17:52:51Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:21:50Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:21:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDY0Ng==","url":"https://github.com/coala/projects/pull/622#discussion_r209460646","bodyText":"not suitable for activity report","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85\n+   - details: Support py37\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ec86b525cd9edd8b8eef181dc529e7d53fff3aad\n+   - details: Debug Travis\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/0eeb52e867c2d01680adba4841a890d282c43e46\n+   - details: \".gitignore: Track MANIFEST.in and remove gibberish\"\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 29:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 30:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 31:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 32:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 33:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 34:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 35:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 36:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 37:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 38:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 39:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 40:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7987889","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ4Ng==","createdAt":"2018-08-12T17:52:49Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:22:55Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:22:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MjYwNg==","url":"https://github.com/coala/projects/pull/622#discussion_r209462606","bodyText":"this should have been automated with cookiecutter or moban\n\nAhh, I wasn't aware of this. I wrote a script which looked for every commit with the author \"RJ722\" or \"Rahul Jha\" and spitted this. Not very smart, sorry - I'd be removing these.","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:36:07Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:36:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MzA1Mg==","url":"https://github.com/coala/projects/pull/622#discussion_r209463052","bodyText":"Yups, this should be excluded - removing it.","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:53:44Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:53:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MzEzMg==","url":"https://github.com/coala/projects/pull/622#discussion_r209463132","bodyText":"I learned some important lessons like this one for setting up a new serious project. Would take care. Thanks for pointing this out!","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:56:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:56:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2Mzg0OQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209463849","bodyText":"I prefer to believe that it wasn't me, must've been my dog. ':D","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T18:25:04Z","lastEditedAt":null,"updatedAt":"2018-08-12T18:25:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3MzMzNQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209473335","bodyText":"cEP & project definition commits at the top of the list\nf551a2e","diffHunk":"@@ -0,0 +1,390 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:22:11Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:22:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NDYzMA==","url":"https://github.com/coala/projects/pull/622#discussion_r209484630","bodyText":"Done!","diffHunk":"@@ -0,0 +1,390 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-13T03:24:32Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:24:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4ODAwMA==","url":"https://github.com/coala/projects/pull/622#discussion_r209488000","bodyText":"Grammar: an* ignoring\n:D","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/f551a2e\n+   - details: Add automatic whitelist generator for Vulture\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package code in modules and improve documentation\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: \"Ignore dist/; minor improvements to docs\"\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 29:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 30:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/f216902\n+   - details: \"Update tests to only pass supported arguments to literal_eval (#118)\"\n+\n+ - 31:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/1c22682\n+   - details: \"Fix PEP8 issues (#120)\"\n+\n+ - 32:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/ade4e44\n+   - details: \"Update TODO file (#122)\"\n+\n+ - 33:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/4cb052a\n+   - details: \"Add coveralls support to track code coverage (#124)\"\n+\n+ - 34:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e0e384e\n+   - details: \"Document exit codes (#123)\"\n+\n+ - 35:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/01a5031\n+   - details: \"Increase test coverage (#126)\"\n+\n+ - 36:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/5f77d81\n+   - details: \"Add coveralls badge to README (#127)\"\n+\n+ - 37:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e3ea074\n+   - details: \"Use argparse instead of optparse (#119)\"\n+\n+ - 38:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e425c9a\n+   - details: \"Test file with non utf-8 encoding (#121)\"\n+\n+ - 39:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7ff8d68\n+   - details: \"Skip async tests correctly (#128)\"\n+\n+ - 40:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/d135592\n+   - details: \"tests/test_errors.py: Use pytest's tmpdir fixture (#131)\"\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/544f960\n+   - details: \"Use absolute imports (#132)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/fcd9df8\n+   - details: \"Single-source package version string (#134)\"\n+\n+ - 43:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/3899b22\n+   - details: \"Whitelists: use non-dynamic objects directly instead of mocking them. (#137)\"\n+\n+ - 44:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/527b93c\n+   - details: \"Add --make-whitelist flag (#135). \"\n+\n+ - 45:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/47116ab\n+   - details: \"Add --ignore-names flag (#139).\"\n+\n+ - 46:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/932e52a28a65286e886d98a4691f9008a5f5e892\n+   - details: Add analysis report for localstack\n+\n+ - 47:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/36f88da77dde12334e97c31d5f5a752e79a3a12c\n+   - details: Pre-format logs\n+\n+ - 48:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e50a54e82f7d63ec2892d5fa28f49ab09d277708\n+   - details: Update localstack_analysis.md\n+\n+ - 49:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/b47fc3691055d618576f9142d36832cd1f94fd8c\n+   - details: Make report conform to the given template\n+\n+ - 50:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/513e41cc4904760196e591602e3356bd1a504a5c\n+   - details: Update localstack_analysis.md\n+\n+ - 51:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/3ab0a800db0c2200f0c666d4e198c8558c5fc325\n+   - details: create analysis report for system design primer\n+\n+ - 52:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e40be61b4e6e9cf97d689a328e8aa27c2637a85c\n+   - details: Organise reports into folders.\n+\n+ - 53:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/85de1d41b14544e634a65fe5cb215dfee31eb2cf\n+   - details: add header for localstack\n+\n+ - 54:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/89bfb08fc7fdcada02389bd4251632140a7da86c\n+   - details: Add report for relational-networks\n+\n+ - 55:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/00a0492071c449ee34e36fec7a59254133be2f1b\n+   - details: Add footer\n+\n+ - 56:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/43253a9384cc655c9e854766714cc3f5240e55bb\n+   - details: \"Add report for qutebrowser (#4)\"\n+\n+ - 57:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/5bfabaca9902017815cc01d3b38e92a21107d86d\n+   - details: \"Add report for Sharppy (#5)\"\n+---\n+\n+### Improving whitelisting infrastructure for Vulture\n+\n+#### Work Done\n+\n+<br>\n+\n+1.) Created a command line tool which takes in sip files as input and spits a\n+whitelist with all the virtual functions defined in the [sip][sip] files. This\n+tool was further used to create a whitelist for PyQt which can hereby be used\n+with any project using PyQt. The tool is now completely tested and documented.\n+\n+<br>\n+\n+2.) Created `--make-whitelist` flag to enable reporting of the results in a\n+format which can be directly used as a whitelist. This significantly eased the\n+process of creating and maintaing a whitelist for a project.\n+\n+<br>\n+\n+3.) Implemented a ignoring mechanism for Vulture (`--ignore-names` and","author":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4","name":"AbdealiJK"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDAzNA==","createdAt":"2018-08-13T04:27:53Z","content":"LAUGH","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:10:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:10:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4ODA5NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209488094","bodyText":"It would be good to explain motivation/target being flask and other web frameworks (and usable for other-usecases too)","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/f551a2e\n+   - details: Add automatic whitelist generator for Vulture\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package code in modules and improve documentation\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: \"Ignore dist/; minor improvements to docs\"\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 29:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 30:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/f216902\n+   - details: \"Update tests to only pass supported arguments to literal_eval (#118)\"\n+\n+ - 31:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/1c22682\n+   - details: \"Fix PEP8 issues (#120)\"\n+\n+ - 32:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/ade4e44\n+   - details: \"Update TODO file (#122)\"\n+\n+ - 33:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/4cb052a\n+   - details: \"Add coveralls support to track code coverage (#124)\"\n+\n+ - 34:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e0e384e\n+   - details: \"Document exit codes (#123)\"\n+\n+ - 35:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/01a5031\n+   - details: \"Increase test coverage (#126)\"\n+\n+ - 36:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/5f77d81\n+   - details: \"Add coveralls badge to README (#127)\"\n+\n+ - 37:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e3ea074\n+   - details: \"Use argparse instead of optparse (#119)\"\n+\n+ - 38:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e425c9a\n+   - details: \"Test file with non utf-8 encoding (#121)\"\n+\n+ - 39:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7ff8d68\n+   - details: \"Skip async tests correctly (#128)\"\n+\n+ - 40:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/d135592\n+   - details: \"tests/test_errors.py: Use pytest's tmpdir fixture (#131)\"\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/544f960\n+   - details: \"Use absolute imports (#132)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/fcd9df8\n+   - details: \"Single-source package version string (#134)\"\n+\n+ - 43:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/3899b22\n+   - details: \"Whitelists: use non-dynamic objects directly instead of mocking them. (#137)\"\n+\n+ - 44:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/527b93c\n+   - details: \"Add --make-whitelist flag (#135). \"\n+\n+ - 45:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/47116ab\n+   - details: \"Add --ignore-names flag (#139).\"\n+\n+ - 46:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/932e52a28a65286e886d98a4691f9008a5f5e892\n+   - details: Add analysis report for localstack\n+\n+ - 47:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/36f88da77dde12334e97c31d5f5a752e79a3a12c\n+   - details: Pre-format logs\n+\n+ - 48:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e50a54e82f7d63ec2892d5fa28f49ab09d277708\n+   - details: Update localstack_analysis.md\n+\n+ - 49:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/b47fc3691055d618576f9142d36832cd1f94fd8c\n+   - details: Make report conform to the given template\n+\n+ - 50:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/513e41cc4904760196e591602e3356bd1a504a5c\n+   - details: Update localstack_analysis.md\n+\n+ - 51:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/3ab0a800db0c2200f0c666d4e198c8558c5fc325\n+   - details: create analysis report for system design primer\n+\n+ - 52:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e40be61b4e6e9cf97d689a328e8aa27c2637a85c\n+   - details: Organise reports into folders.\n+\n+ - 53:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/85de1d41b14544e634a65fe5cb215dfee31eb2cf\n+   - details: add header for localstack\n+\n+ - 54:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/89bfb08fc7fdcada02389bd4251632140a7da86c\n+   - details: Add report for relational-networks\n+\n+ - 55:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/00a0492071c449ee34e36fec7a59254133be2f1b\n+   - details: Add footer\n+\n+ - 56:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/43253a9384cc655c9e854766714cc3f5240e55bb\n+   - details: \"Add report for qutebrowser (#4)\"\n+\n+ - 57:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/5bfabaca9902017815cc01d3b38e92a21107d86d\n+   - details: \"Add report for Sharppy (#5)\"\n+---\n+\n+### Improving whitelisting infrastructure for Vulture\n+\n+#### Work Done\n+\n+<br>\n+\n+1.) Created a command line tool which takes in sip files as input and spits a\n+whitelist with all the virtual functions defined in the [sip][sip] files. This\n+tool was further used to create a whitelist for PyQt which can hereby be used\n+with any project using PyQt. The tool is now completely tested and documented.\n+\n+<br>\n+\n+2.) Created `--make-whitelist` flag to enable reporting of the results in a\n+format which can be directly used as a whitelist. This significantly eased the\n+process of creating and maintaing a whitelist for a project.\n+\n+<br>\n+\n+3.) Implemented a ignoring mechanism for Vulture (`--ignore-names` and","author":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4","name":"AbdealiJK"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDAzMg==","createdAt":"2018-08-13T04:27:50Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:11:12Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:11:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4ODIyMw==","url":"https://github.com/coala/projects/pull/622#discussion_r209488223","bodyText":"Minor: 100\"%\"\nTo be a bit pedantic: The python3.7 one is not fix-tests (as they were never tested before) but \"ensure support for py3.7 in CI/CD\" or similar\nAnd should probably be merged with the below point","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/f551a2e\n+   - details: Add automatic whitelist generator for Vulture\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package code in modules and improve documentation\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: \"Ignore dist/; minor improvements to docs\"\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 29:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 30:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/f216902\n+   - details: \"Update tests to only pass supported arguments to literal_eval (#118)\"\n+\n+ - 31:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/1c22682\n+   - details: \"Fix PEP8 issues (#120)\"\n+\n+ - 32:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/ade4e44\n+   - details: \"Update TODO file (#122)\"\n+\n+ - 33:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/4cb052a\n+   - details: \"Add coveralls support to track code coverage (#124)\"\n+\n+ - 34:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e0e384e\n+   - details: \"Document exit codes (#123)\"\n+\n+ - 35:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/01a5031\n+   - details: \"Increase test coverage (#126)\"\n+\n+ - 36:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/5f77d81\n+   - details: \"Add coveralls badge to README (#127)\"\n+\n+ - 37:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e3ea074\n+   - details: \"Use argparse instead of optparse (#119)\"\n+\n+ - 38:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e425c9a\n+   - details: \"Test file with non utf-8 encoding (#121)\"\n+\n+ - 39:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7ff8d68\n+   - details: \"Skip async tests correctly (#128)\"\n+\n+ - 40:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/d135592\n+   - details: \"tests/test_errors.py: Use pytest's tmpdir fixture (#131)\"\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/544f960\n+   - details: \"Use absolute imports (#132)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/fcd9df8\n+   - details: \"Single-source package version string (#134)\"\n+\n+ - 43:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/3899b22\n+   - details: \"Whitelists: use non-dynamic objects directly instead of mocking them. (#137)\"\n+\n+ - 44:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/527b93c\n+   - details: \"Add --make-whitelist flag (#135). \"\n+\n+ - 45:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/47116ab\n+   - details: \"Add --ignore-names flag (#139).\"\n+\n+ - 46:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/932e52a28a65286e886d98a4691f9008a5f5e892\n+   - details: Add analysis report for localstack\n+\n+ - 47:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/36f88da77dde12334e97c31d5f5a752e79a3a12c\n+   - details: Pre-format logs\n+\n+ - 48:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e50a54e82f7d63ec2892d5fa28f49ab09d277708\n+   - details: Update localstack_analysis.md\n+\n+ - 49:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/b47fc3691055d618576f9142d36832cd1f94fd8c\n+   - details: Make report conform to the given template\n+\n+ - 50:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/513e41cc4904760196e591602e3356bd1a504a5c\n+   - details: Update localstack_analysis.md\n+\n+ - 51:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/3ab0a800db0c2200f0c666d4e198c8558c5fc325\n+   - details: create analysis report for system design primer\n+\n+ - 52:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e40be61b4e6e9cf97d689a328e8aa27c2637a85c\n+   - details: Organise reports into folders.\n+\n+ - 53:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/85de1d41b14544e634a65fe5cb215dfee31eb2cf\n+   - details: add header for localstack\n+\n+ - 54:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/89bfb08fc7fdcada02389bd4251632140a7da86c\n+   - details: Add report for relational-networks\n+\n+ - 55:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/00a0492071c449ee34e36fec7a59254133be2f1b\n+   - details: Add footer\n+\n+ - 56:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/43253a9384cc655c9e854766714cc3f5240e55bb\n+   - details: \"Add report for qutebrowser (#4)\"\n+\n+ - 57:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/5bfabaca9902017815cc01d3b38e92a21107d86d\n+   - details: \"Add report for Sharppy (#5)\"\n+---\n+\n+### Improving whitelisting infrastructure for Vulture\n+\n+#### Work Done\n+\n+<br>\n+\n+1.) Created a command line tool which takes in sip files as input and spits a\n+whitelist with all the virtual functions defined in the [sip][sip] files. This\n+tool was further used to create a whitelist for PyQt which can hereby be used\n+with any project using PyQt. The tool is now completely tested and documented.\n+\n+<br>\n+\n+2.) Created `--make-whitelist` flag to enable reporting of the results in a\n+format which can be directly used as a whitelist. This significantly eased the\n+process of creating and maintaing a whitelist for a project.\n+\n+<br>\n+\n+3.) Implemented a ignoring mechanism for Vulture (`--ignore-names` and\n+`--ignore-decorators`) - thereby enabling users to omit the result(s) which\n+match with the given argument(s) (a glob pattern).\n+\n+<br>\n+\n+4.) Increased test coverage of Vulture from already excellent 95% to 100. Also,","author":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4","name":"AbdealiJK"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDAzNw==","createdAt":"2018-08-13T04:28:08Z","content":"HOORAY","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:12:59Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:12:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4OTU4NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209489584","bodyText":"indentation must pass yamllint","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDA5Mg==","createdAt":"2018-08-13T04:31:42Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:29:29Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:29:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4OTc1Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209489757","bodyText":"actually, all my scripts for editing would go havoc if I change it right now. 😅 Would indent it properly once I've addressed all the review comments.","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-13T04:31:43Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:31:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI1NDczMw==","url":"https://github.com/coala/projects/pull/622#issuecomment-412254733","bodyText":"https://github.com/jendrikseipp/vulture-analysis/commits?author=RJ722\n\nAdding those!\n\nRJ722/example-vulture#4\n\nIt was for a demo I did at a meetup. Not directly related to GSoC work. :p","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-11T06:19:58Z","lastEditedAt":null,"updatedAt":"2018-08-11T06:19:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM1MjYzMQ==","url":"https://github.com/coala/projects/pull/622#issuecomment-412352631","bodyText":"jendrikseipp/vulture#143 was what I was worried about in the cEP.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T16:03:09Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:03:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM1OTUwNA==","url":"https://github.com/coala/projects/pull/622#issuecomment-412359504","bodyText":"jendrikseipp/vulture#143 was what I was worried about in the cEP.\n\nThis was the only thing that slipped by, but jendriksiepp/vulture#144 fixes it. I've double checked other things - everything else is exposed to the API.","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:44:39Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:44:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM1OTk5MQ==","url":"https://github.com/coala/projects/pull/622#issuecomment-412359991","bodyText":"First of all, thank you so much for the thorough review @jayvdb. Really appreciate it. :-)\n\nThe activities contains way too many items which are not suitable.\n\nYeps, that's mostly because I didn't know about moban or cookiecutter - I just wrote a script which extracted the commits from the above repositeries and spitted this - Not very smart! :P  I'm removing these activities now.\nAlso, most of the eerie stuff that got into vulture-whitelist-generators was because that PR was awfully polluted by the humongous size of test-data (~500,000+++) and it was extremely difficult to review it. I understand that most of the stuff here should've been squashed but it just so happened to be entagled with a lot of other useful information so it was really painful to separate it. So sorry, would be more careful next time.","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:52:39Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:52:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM2Njg4Mw==","url":"https://github.com/coala/projects/pull/622#issuecomment-412366883","bodyText":"I've removed all the commits mentioned above plus a few more, let me know if you think that anything else is inappropriate.","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T19:42:46Z","lastEditedAt":"2018-08-12T19:43:26Z","updatedAt":"2018-08-12T19:43:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjU5NzQzNQ==","url":"https://github.com/coala/projects/pull/622#issuecomment-412597435","bodyText":"and please rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T17:25:04Z","lastEditedAt":null,"updatedAt":"2018-08-13T17:25:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjYwMTIxMg==","url":"https://github.com/coala/projects/pull/622#issuecomment-412601212","bodyText":"rebased!","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-13T17:36:53Z","lastEditedAt":null,"updatedAt":"2018-08-13T17:36:53Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533997546000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/625","number":625,"title":".gitignore: Sync","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-08-11T04:04:12Z","updatedAt":"2018-08-11T14:25:46Z","closedAt":"2018-08-11T04:21:16Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/625","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534091564000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/626","number":626,"title":"commit_based_perftest.md: Fix docstring typo","body":"This fixes the typo and changes the variable name\nfor project from intiatives --> initiatives.\nFixes #620\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-11T10:15:20Z","updatedAt":"2018-08-12T16:32:44Z","closedAt":"2018-08-11T16:16:32Z","state":"merged","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/low","color":"2fe055"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/626","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534011745000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/629","number":629,"title":"Ruby 2.5.1","body":"Updates the site to use jekyll 3.8.3 and html-proofer 3.9.2","comments":5,"createdAt":"2018-08-11T14:58:08Z","updatedAt":"2018-08-11T18:22:25Z","closedAt":"2018-08-11T18:13:00Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/629","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI5MjM0MQ==","url":"https://github.com/coala/projects/pull/629#issuecomment-412292341","bodyText":"reack 218933b","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T18:11:27Z","lastEditedAt":null,"updatedAt":"2018-08-11T18:11:27Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534176100000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/630","number":630,"title":"reports: Add anctartica's GSoC report","body":"https://deploy-preview-630--coala-projects.netlify.com/gsoc/2018/statusreport/saksham","comments":5,"createdAt":"2018-08-11T17:05:43Z","updatedAt":"2018-08-13T16:01:40Z","closedAt":"2018-08-13T15:55:42Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/630","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMjE3NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209432174","bodyText":"see #627 and #615","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored) & [Matt Bodenhamer]\n+ (https://github.com/mbodenhamer) & [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T17:09:27Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:09:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMjIwNg==","url":"https://github.com/coala/projects/pull/630#discussion_r209432206","bodyText":"this was an automated change? if so, discard","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored) & [Matt Bodenhamer]\n+ (https://github.com/mbodenhamer) & [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to \n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+ - GitHub:\n+   - username: anctartica\n+   - link: https://github.com/anctartica\n+ - GitLab:\n+   - username: anctartica\n+   - link: https://gitlab.com/anctartica\n+ - Gitter:\n+   - username: anctartica\n+   - link: https://gitter.im/anctartica\n+ - OpenHub:\n+   - username: anctartica\n+   - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+ - 0:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+   - details: >\n+       Create a proposal regarding the project.\n+ - 1:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+   - details: >\n+       Add appveyor CI.\n+ - 2:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/6b1693d6d5f80e4b95ddae602e079c6095e84c67\n+   - details: >\n+      Mobanise appveyor.\n+ - 3:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/e4fb8c73df71da609341b8d0cc759c0a0060517e\n+   - details: >\n+      Mobanise setup.py.\n+ - 4:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df643c956be169978bdc7189b47916da31880d57\n+   - details: >\n+      Mobanise .gitignore.\n+ - 5:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+   - details: >\n+      Use dependency management master\n+ - 6:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+   - details: >\n+      Fix docopt usage pattern.\n+ - 7:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+   - details: >\n+      Fix incorrect behaviour\n+ - 8:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+   - details: >\n+      Clean up code required for 100% coverage\n+ - 9:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+   - details: >\n+      Add unittests for 100% coverage\n+ - 10:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+   - details: >\n+      Mobanise setup.cfg\n+ - 11:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+   - details: >\n+      Allow showing multiple bears\n+ - 12:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+   - details: >\n+      Remove test_pyversion\n+ - 13:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+   - details: >\n+      Add variable for cache dir on appveyor\n+ - 14:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+   - details: >\n+      Add option for Python 3.6 jobs on all repos\n+ - 15:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+   - details: >\n+      Add __init__.py.jj2 template for exporting version\n+ - 16:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+   - details: >\n+      Remove brackets around string with one item in setup.py template\n+ - 17:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+   - details: >\n+      Run coala static code analysis from Appveyor\n+ - 18:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+   - details: >\n+      Pin setuptool to 21 for supporting environment markers\n+ - 19:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+   - details: >\n+      Use coala-bears master for coala analysis on Appveyor\n+ - 20:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+   - details: >\n+      Create coveragerc template to resolve a bug with coverage on cib\n+ - 21:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+   - details: >\n+      Remove error handling on import for complete test coverage on Appveyor build\n+ - 22:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+   - details: >\n+      use __all__ for exports to prevent failing coala --ci check\n+ - 23:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+   - details: >\n+      Use appveyor template for coala-utils\n+ - 24:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+   - details: >\n+      Improve and cleanup script for generating bear requirements and generate cabal requirements\n+ - 25:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+   - details: >\n+      Move the generate_package script from the coala-bears package to .ci directory\n+ - 26:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+   - details: >\n+      Use CabalRequirement for HaskellLintBear\n+ - 27:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/4422063fa78e6b0e0c801ea845974367baabdb69\n+   - details: >\n+      Run coala static code analysis on repo using appveyor\n+ - 28:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+   - details: >\n+      Add PlatformRequirement class for system specific package managers\n+ - 29:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+   - details: >\n+      Return exitcode after running the install command\n+ - 30:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+   - details: >\n+      Add CabalRequirement for backwards compatibility\n+ - 31:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+   - details: >\n+      Run pip as python module\n+ - 32:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+   - details: >\n+      Add playbook for installing individual bears\n+ - 33:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+   - details: >\n+      Test playbook using docker + Travic CI\n+ - 34:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+   - details: >\n+      Add instructions on using playbook\n+ - 35:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/c82a9737c6852d09f681a7fc98a0f094dd38194b\n+   - details: >\n+      Run coala static code analysis","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T17:10:37Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:10:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMjU3MQ==","url":"https://github.com/coala/projects/pull/630#discussion_r209432571","bodyText":"#630 (comment) not done","diffHunk":"@@ -0,0 +1,249 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T17:24:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:24:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMzU2Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209433562","bodyText":"removed all the automated changes :)","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored) & [Matt Bodenhamer]\n+ (https://github.com/mbodenhamer) & [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to \n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+ - GitHub:\n+   - username: anctartica\n+   - link: https://github.com/anctartica\n+ - GitLab:\n+   - username: anctartica\n+   - link: https://gitlab.com/anctartica\n+ - Gitter:\n+   - username: anctartica\n+   - link: https://gitter.im/anctartica\n+ - OpenHub:\n+   - username: anctartica\n+   - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+ - 0:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+   - details: >\n+       Create a proposal regarding the project.\n+ - 1:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+   - details: >\n+       Add appveyor CI.\n+ - 2:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/6b1693d6d5f80e4b95ddae602e079c6095e84c67\n+   - details: >\n+      Mobanise appveyor.\n+ - 3:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/e4fb8c73df71da609341b8d0cc759c0a0060517e\n+   - details: >\n+      Mobanise setup.py.\n+ - 4:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df643c956be169978bdc7189b47916da31880d57\n+   - details: >\n+      Mobanise .gitignore.\n+ - 5:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+   - details: >\n+      Use dependency management master\n+ - 6:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+   - details: >\n+      Fix docopt usage pattern.\n+ - 7:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+   - details: >\n+      Fix incorrect behaviour\n+ - 8:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+   - details: >\n+      Clean up code required for 100% coverage\n+ - 9:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+   - details: >\n+      Add unittests for 100% coverage\n+ - 10:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+   - details: >\n+      Mobanise setup.cfg\n+ - 11:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+   - details: >\n+      Allow showing multiple bears\n+ - 12:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+   - details: >\n+      Remove test_pyversion\n+ - 13:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+   - details: >\n+      Add variable for cache dir on appveyor\n+ - 14:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+   - details: >\n+      Add option for Python 3.6 jobs on all repos\n+ - 15:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+   - details: >\n+      Add __init__.py.jj2 template for exporting version\n+ - 16:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+   - details: >\n+      Remove brackets around string with one item in setup.py template\n+ - 17:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+   - details: >\n+      Run coala static code analysis from Appveyor\n+ - 18:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+   - details: >\n+      Pin setuptool to 21 for supporting environment markers\n+ - 19:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+   - details: >\n+      Use coala-bears master for coala analysis on Appveyor\n+ - 20:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+   - details: >\n+      Create coveragerc template to resolve a bug with coverage on cib\n+ - 21:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+   - details: >\n+      Remove error handling on import for complete test coverage on Appveyor build\n+ - 22:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+   - details: >\n+      use __all__ for exports to prevent failing coala --ci check\n+ - 23:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+   - details: >\n+      Use appveyor template for coala-utils\n+ - 24:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+   - details: >\n+      Improve and cleanup script for generating bear requirements and generate cabal requirements\n+ - 25:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+   - details: >\n+      Move the generate_package script from the coala-bears package to .ci directory\n+ - 26:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+   - details: >\n+      Use CabalRequirement for HaskellLintBear\n+ - 27:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/4422063fa78e6b0e0c801ea845974367baabdb69\n+   - details: >\n+      Run coala static code analysis on repo using appveyor\n+ - 28:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+   - details: >\n+      Add PlatformRequirement class for system specific package managers\n+ - 29:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+   - details: >\n+      Return exitcode after running the install command\n+ - 30:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+   - details: >\n+      Add CabalRequirement for backwards compatibility\n+ - 31:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+   - details: >\n+      Run pip as python module\n+ - 32:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+   - details: >\n+      Add playbook for installing individual bears\n+ - 33:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+   - details: >\n+      Test playbook using docker + Travic CI\n+ - 34:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+   - details: >\n+      Add instructions on using playbook\n+ - 35:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/c82a9737c6852d09f681a7fc98a0f094dd38194b\n+   - details: >\n+      Run coala static code analysis","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-11T18:03:46Z","lastEditedAt":null,"updatedAt":"2018-08-11T18:03:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYxMDA2MA==","url":"https://github.com/coala/projects/pull/630#discussion_r209610060","bodyText":"indentation; use yamllint","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:34:20Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:34:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYxMDk3NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209610974","bodyText":"I don't get anything from yamllint on this line","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-13T13:37:01Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:37:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyMDIyNA==","url":"https://github.com/coala/projects/pull/630#discussion_r209620224","bodyText":"see updates to the example.  needs date, categories, and not layout or permalink, etc.","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:02:09Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:02:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyMDI5Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209620292","bodyText":"yamllint.","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:02:21Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:02:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyMDQ4MQ==","url":"https://github.com/coala/projects/pull/630#discussion_r209620481","bodyText":"you can trim these to 8 character shas.\nup to you","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:02:51Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:02:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyODQ4OQ==","url":"https://github.com/coala/projects/pull/630#discussion_r209628489","bodyText":"extracting this I get\ntar: Ignoring unknown extended header keyword 'LIBARCHIVE.creationtime'\ntar: Ignoring unknown extended header keyword 'SCHILY.dev'\ntar: Ignoring unknown extended header keyword 'SCHILY.ino'\ntar: Ignoring unknown extended header keyword 'SCHILY.nlink'\ntar: Ignoring unknown extended header keyword 'SCHILY.dev'\ntar: Ignoring unknown extended header keyword 'SCHILY.ino'\ntar: Ignoring unknown extended header keyword 'SCHILY.nlink'","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:24:46Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:24:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyODg3Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209628872","bodyText":"Also contains .DS_Store","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:25:41Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:25:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYzMDA1NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209630054","bodyText":"59 patches vs 35 work activity entries.\nI see some patches were ust sync' but I easily see some real work patches which are not included here","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:28:40Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:28:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYzMDM1NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209630354","bodyText":"the others were really very small to include","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-13T14:29:26Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:29:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY0MzQxNw==","url":"https://github.com/coala/projects/pull/630#discussion_r209643417","bodyText":"alright added some more","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzg0Mjc4Mw==","createdAt":"2018-08-13T15:33:23Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-13T15:01:45Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:01:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY0NDM5NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209644394","bodyText":"This was due to BSD tar (on mac) vs. GNU tar.\nShould be fixed now","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzg0MjkxMg==","createdAt":"2018-08-13T15:35:19Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-13T15:04:24Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:04:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY1NTg4Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209655882","bodyText":"Small is ok, as long as it isnt automated or silly.","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T15:34:06Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:34:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY1NjYzMw==","url":"https://github.com/coala/projects/pull/630#discussion_r209656633","bodyText":"Still has one .DS_Store in it, but good enough","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T15:36:11Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:36:11Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534081505000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/631","number":631,"title":"reports/example.md: Update GSoC report template","body":"Following changes have been made to the GSoC report template:\n\n Add openhub account\n Add report_year\n Add tarball_hash\n Fix Indentation\n Activities should start at one\n\nCloses: #615","comments":19,"createdAt":"2018-08-12T06:51:38Z","updatedAt":"2018-08-12T13:45:05Z","closedAt":"2018-08-12T10:01:40Z","state":"merged","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/631","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NDkyOQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209444929","bodyText":"gitlab --> GitLab, gitter --> Gitter, hackerrank --> HackerRank, openhub --> OpenHub","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5Nzk4OA==","createdAt":"2018-08-12T07:03:36Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yNzc5ODEyNQ==","createdAt":"2018-08-12T07:18:21Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T06:58:29Z","lastEditedAt":null,"updatedAt":"2018-08-12T06:58:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTA3Mg==","url":"https://github.com/coala/projects/pull/631#discussion_r209445072","bodyText":"it has become named sha256sum:","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODA4Nw==","createdAt":"2018-08-12T07:14:00Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T07:03:23Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:03:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTE0Ng==","url":"https://github.com/coala/projects/pull/631#discussion_r209445146","bodyText":"do a few example entries.\nand the link should include a hash which is only 8 long.\nhttps://github.com/coala/cEPs/commit/e9f75878\nnot\nhttps://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\nto avoid line length errors","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:\n+    - username: <gitlab username>\n+    - link: https://gitlab.com/<gitlab username>\n+  - gitter:\n+    - username: <gitter username>\n+    - link: https://gitter.im/<gitter username>\n+  - hackerrank:\n+    - username: <hackerrank username>\n+    - link: https://hackerrank.com/<hackerrank username>\n+  - openhub:\n+    - username: <openhub username>\n+    - link: https://openhub.net/accounts/<openhub username>\n email: <email>\n blog: <link to your blog>\n activity:\n- - <number>:\n-   - repo: <repo name>\n-   - link: <link>\n-   - details: >\n+  - <number>:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODExMw==","createdAt":"2018-08-12T07:16:26Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T07:06:17Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:06:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTQzNw==","url":"https://github.com/coala/projects/pull/631#discussion_r209445437","bodyText":"Nice idea! Done!","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:\n+    - username: <gitlab username>\n+    - link: https://gitlab.com/<gitlab username>\n+  - gitter:\n+    - username: <gitter username>\n+    - link: https://gitter.im/<gitter username>\n+  - hackerrank:\n+    - username: <hackerrank username>\n+    - link: https://hackerrank.com/<hackerrank username>\n+  - openhub:\n+    - username: <openhub username>\n+    - link: https://openhub.net/accounts/<openhub username>\n email: <email>\n blog: <link to your blog>\n activity:\n- - <number>:\n-   - repo: <repo name>\n-   - link: <link>\n-   - details: >\n+  - <number>:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T07:17:24Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:17:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTUxNA==","url":"https://github.com/coala/projects/pull/631#discussion_r209445514","bodyText":"Thanks, done!","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T07:19:42Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:19:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NjUwNw==","url":"https://github.com/coala/projects/pull/631#discussion_r209446507","bodyText":"no space before :. YAMLlintbear will complain about that.","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODgyNQ==","createdAt":"2018-08-12T08:33:17Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T07:55:52Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:55:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0Njc1OA==","url":"https://github.com/coala/projects/pull/631#discussion_r209446758","bodyText":"There should be 6 spaces before - username, not 4. Otherwise, YAMLlintbear will complain.\nSee https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODgzMA==","createdAt":"2018-08-12T08:33:39Z","content":"LAUGH","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T08:04:20Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:04:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NjgwMw==","url":"https://github.com/coala/projects/pull/631#discussion_r209446803","bodyText":"Same as above.","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - GitLab:\n+    - username: <gitlab username>\n+    - link: https://gitlab.com/<gitlab username>\n+  - Gitter:\n+    - username: <gitter username>\n+    - link: https://gitter.im/<gitter username>\n+  - HackerRank:\n+    - username: <hackerrank username>\n+    - link: https://hackerrank.com/<hackerrank username>\n+  - OpenHub:\n+    - username: <openhub username>\n+    - link: https://openhub.net/accounts/<openhub username>\n email: <email>\n blog: <link to your blog>\n activity:\n- - <number>:\n-   - repo: <repo name>\n-   - link: <link>\n-   - details: >\n+  - 1:\n+    - repo: cEPs","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODgyOQ==","createdAt":"2018-08-12T08:33:36Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T08:05:56Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:05:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NjgyOQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209446829","bodyText":"milstone was a typo, and you copied that without detecting typo ;)","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODg0Mw==","createdAt":"2018-08-12T08:35:28Z","content":"LAUGH","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T08:06:44Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:06:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NzU1MA==","url":"https://github.com/coala/projects/pull/631#discussion_r209447550","bodyText":"Wow, that is super weird. :P","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:33:32Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:33:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NzYwMQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209447601","bodyText":"Ah, it's beyond me how you guys can actually figure out a typo in the whole english mess. ':D","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:34:54Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:34:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0Nzc1OQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209447759","bodyText":"milsetone together with above two is also a typo :P","diffHunk":"@@ -5,40 +5,50 @@ layout: report\n permalink: /GSoC/2017/StatusReport/<name>\n student: <name>\n organisation: coala\n-organisation_link : https://coala.io\n+organisation_link: https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milestone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-12T08:39:42Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:39:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0Nzk3MQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209447971","bodyText":"Holy smokes!","diffHunk":"@@ -5,40 +5,50 @@ layout: report\n permalink: /GSoC/2017/StatusReport/<name>\n student: <name>\n organisation: coala\n-organisation_link : https://coala.io\n+organisation_link: https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milestone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:46:22Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:46:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyNjcwNw==","url":"https://github.com/coala/projects/pull/631#issuecomment-412326707","bodyText":"Your commit message doesn't include the issue link","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5OTQ0Mg==","createdAt":"2018-08-12T09:31:23Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T08:16:50Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:16:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyNzY4Mg==","url":"https://github.com/coala/projects/pull/631#issuecomment-412327682","bodyText":"Oops, updating it. Thanks for the review @li-boxuan :-)","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:35:16Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:35:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyODMwNg==","url":"https://github.com/coala/projects/pull/631#issuecomment-412328306","bodyText":"There is a redundant : in your commit message - Closes: should be Closes\n\nI don't know why, but I have always used the : :D","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5OTQ0NA==","createdAt":"2018-08-12T09:31:28Z","content":"THUMBS_DOWN","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T08:48:17Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:48:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyODUyOQ==","url":"https://github.com/coala/projects/pull/631#issuecomment-412328529","bodyText":"I don't know why, but I have always used the :\n\nI would suggest sticking to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html, but it's your choice.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5OTA2NQ==","createdAt":"2018-08-12T08:56:41Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}},{"id":"MDg6UmVhY3Rpb24yNzc5OTQ0OA==","createdAt":"2018-08-12T09:31:36Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T08:52:35Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:52:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMzMDIzMw==","url":"https://github.com/coala/projects/pull/631#issuecomment-412330233","bodyText":"The colon is wrong, and should not be used, but this is too critical to wait","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T09:29:06Z","lastEditedAt":null,"updatedAt":"2018-08-12T09:29:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMzMDUyNw==","url":"https://github.com/coala/projects/pull/631#issuecomment-412330527","bodyText":"Also wasnt rebased, so I've fixed the commit message","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T09:35:53Z","lastEditedAt":null,"updatedAt":"2018-08-12T09:35:53Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534169054000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/632","number":632,"title":"reports: Add ksdme's GSoC report","body":"https://deploy-preview-632--coala-projects.netlify.com/gsoc/2018/statusreport/ksdme","comments":12,"createdAt":"2018-08-12T10:43:17Z","updatedAt":"2018-08-13T14:04:14Z","closedAt":"2018-08-13T13:58:12Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/632","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MjkzNA==","url":"https://github.com/coala/projects/pull/632#discussion_r209452934","bodyText":"blocked on coala/coala-vs-code#73 getting merged  -- those commit references will disappear on a rebase, so you can not use them.","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 4:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 5:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7\n+      - details: >\n+         .vscode-client: Drop vscode client\n+\n+  - 6:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/6bbad87389004b872affdd6e13e7b079e81b2108\n+      - details: >\n+         tests: Add test helpers and resources\n+\n+  - 7:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/5d4c230cd1a819572d423a5ba90a537d0ca1b91c\n+      - details: >\n+         coalals.utils.log: Add log configuration\n+\n+  - 8:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/3e7defd3b78e2b5a93fedc856cf871bd0f691d52\n+      - details: >\n+         coalals.interface: Add initial coala wrapper\n+\n+  - 9:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/f10159391befe2f184c453183932e5e3747a2c34\n+      - details: >\n+         coalals.results: Add result processing module\n+\n+  - 10:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/9e8473120d2ea998e6b4b1e2e6812e2ff6a56505\n+      - details: >\n+         coalals.langserver: Add language server module\n+\n+  - 11:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/1a5f1c0b71afc1ff0f8455ddc43d89bff20f8436\n+      - details: >\n+         coalals.main: Add main.py\n+\n+  - 12:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/5c5f87f50fe4d61a1fd921a7d03801b669c0ea03\n+      - details: >\n+         test-requirements.txt: Update test requirements\n+\n+  - 13:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/8c64f2af8176f1590be6b7d227d0d62bf28912fd\n+      - details: >\n+         requirements.txt: Update requirements\n+\n+  - 14:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/d56adf2e2c7ef5d2a17ecd47748b35d27291f51c\n+      - details: >\n+         Update test configuration\n+\n+  - 15:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/c60a565ef8392bbda571049e29109bdfd231de26\n+      - details: >\n+         coala-ls.sh: Add coala-ls.sh\n+\n+  - 16:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/8/commits/cee8c2c7c047999d639b03802e0e3c0f029e169e\n+      - details: >\n+         README: Update README.md and assets\n+\n+  - 17:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/9/commits/ef8dc592c80d629d90c0596bb1a2be3df75c7b40\n+      - details: >\n+         .coafile: Update config and globs\n+\n+  - 18:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/11/commits/8d7f8d05e506b252179c92335f98cb365102a405\n+      - details: >\n+         perf-metrics.md: Add performance metrics\n+\n+  - 19:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/32fe61caa96d8a039cb532bb46eb1ed8e10cbfb4\n+      - details: >\n+          coalals.results: Refactor to submodule\n+\n+  - 20:\n+    - repo: coala-ls\n+    - link: https://github.com/coala/coala-ls/pull/13/commits/e9745d34b9705787bad41df12a1801eee4cfab7e\n+    - details: >\n+        requirements.txt: coalals.utils.files: Add get_disk_contents()\n+\n+  - 21:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/88d79837106185382d3feadc8c9330f219ea271e\n+      - details: >\n+         requirements.txt: Add whatthepatch\n+\n+  - 22:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         coalals.results.fixes: Add fixes parsing & lsp models\n+\n+  - 23:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 24:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/8e75ead740fac57b461bb12497db4147f78d4d19\n+      - details: >\n+         coalals.langserver: Add support for textDocument/formatting\n+\n+  - 25:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/14/commits/99c0663b0177bba30a4b8025615530d15e4d441b\n+      - details: >\n+         coalals.langserver: Add support for showMessageRequest\n+\n+  - 26:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 27:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 28:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/15/commits/6e095ca6c18813878766e9767d99a4bec10ec4a8\n+      - details: >\n+         perf-metrics.md: Update perf-metrics for Phase-2\n+\n+  - 29:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/73/commits/52319c23e653850df148b284882fce799724c32c","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T12:07:52Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:07:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3MzgxOQ==","url":"https://github.com/coala/projects/pull/632#discussion_r209473819","bodyText":"not suitable for the report","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 4:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:32:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:32:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3MzgzNg==","url":"https://github.com/coala/projects/pull/632#discussion_r209473836","bodyText":"not suitable for the report","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 4:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 5:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:32:56Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:32:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NDk5OA==","url":"https://github.com/coala/projects/pull/632#discussion_r209484998","bodyText":"use coala/coala-vs-code@bd12657 to be consistent with the others.","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:29:44Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:29:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NTA4OQ==","url":"https://github.com/coala/projects/pull/632#discussion_r209485089","bodyText":"merged as coala/cEPs@07a63ec  -- use short shas to keep line lengths under 80","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:30:37Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:30:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMDMzMw==","url":"https://github.com/coala/projects/pull/632#discussion_r209600333","bodyText":"can stay in your tarball, but doesnt belong in your activity repo.","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:05:32Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:05:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMDUwNw==","url":"https://github.com/coala/projects/pull/632#discussion_r209600507","bodyText":"can stay in your tarball, but doesnt belong in your activity repo.","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 7:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:06:03Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:06:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMDk0MA==","url":"https://github.com/coala/projects/pull/632#discussion_r209600940","bodyText":"can stay in your patches, but doesnt belong in the activity report","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 7:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7\n+      - details: >\n+         .vscode-client: Drop vscode client\n+\n+  - 8:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6bbad87389004b872affdd6e13e7b079e81b2108\n+      - details: >\n+         tests: Add test helpers and resources\n+\n+  - 9:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5d4c230cd1a819572d423a5ba90a537d0ca1b91c\n+      - details: >\n+         coalals.utils.log: Add log configuration\n+\n+  - 10:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/3e7defd3b78e2b5a93fedc856cf871bd0f691d52\n+      - details: >\n+         coalals.interface: Add initial coala wrapper\n+\n+  - 11:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/f10159391befe2f184c453183932e5e3747a2c34\n+      - details: >\n+         coalals.results: Add result processing module\n+\n+  - 12:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/9e8473120d2ea998e6b4b1e2e6812e2ff6a56505\n+      - details: >\n+         coalals.langserver: Add language server module\n+\n+  - 13:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/1a5f1c0b71afc1ff0f8455ddc43d89bff20f8436\n+      - details: >\n+         coalals.main: Add main.py\n+\n+  - 14:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5c5f87f50fe4d61a1fd921a7d03801b669c0ea03\n+      - details: >\n+         test-requirements.txt: Update test requirements\n+\n+  - 15:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8c64f2af8176f1590be6b7d227d0d62bf28912fd\n+      - details: >\n+         requirements.txt: Update requirements\n+\n+  - 16:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/d56adf2e2c7ef5d2a17ecd47748b35d27291f51c\n+      - details: >\n+         Update test configuration\n+\n+  - 17:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/c60a565ef8392bbda571049e29109bdfd231de26\n+      - details: >\n+         coala-ls.sh: Add coala-ls.sh\n+\n+  - 18:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/cee8c2c7c047999d639b03802e0e3c0f029e169e\n+      - details: >\n+         README: Update README.md and assets\n+\n+  - 19:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/ef8dc592c80d629d90c0596bb1a2be3df75c7b40\n+      - details: >\n+         .coafile: Update config and globs\n+\n+  - 20:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8d7f8d05e506b252179c92335f98cb365102a405\n+      - details: >\n+         perf-metrics.md: Add performance metrics\n+\n+  - 21:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/32fe61caa96d8a039cb532bb46eb1ed8e10cbfb4\n+      - details: >\n+         coalals.results: Refactor to submodule\n+\n+  - 22:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         requirements.txt: coalals.utils.files: Add get_disk_contents()\n+\n+  - 23:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/88d79837106185382d3feadc8c9330f219ea271e\n+      - details: >\n+         requirements.txt: Add whatthepatch\n+\n+  - 24:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         coalals.results.fixes: Add fixes parsing & lsp models\n+\n+  - 25:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 26:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8e75ead740fac57b461bb12497db4147f78d4d19\n+      - details: >\n+         coalals.langserver: Add support for textDocument/formatting\n+\n+  - 27:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/99c0663b0177bba30a4b8025615530d15e4d441b\n+      - details: >\n+         coalals.langserver: Add support for showMessageRequest\n+\n+  - 28:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 29:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 30:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6e095ca6c18813878766e9767d99a4bec10ec4a8\n+      - details: >\n+         perf-metrics.md: Update perf-metrics for Phase-2\n+\n+  - 31:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/6648e76bd6374ee826fdbf0a2aafa800d6c101bb\n+      - details: >\n+         Fix single line docstring\n+\n+  - 32:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/de0098b2c7c1b5593fd39fdcdeb98fa24c755a2e\n+      - details: >\n+         .codecov.yml: Increase test coverage target\n+\n+  - 33:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         Update to jsonrpc lib\n+\n+  - 34:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/a0b59d36c33ae537b33ffd01d0f1a383ce1cdd57\n+      - details: >\n+         README.md: Update README.md\n+\n+  - 35:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/2618f470e509a129e05f29ebf6cd9a7f300e9867","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgzMzg0Nw==","createdAt":"2018-08-13T13:15:05Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-13T13:07:25Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:07:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMTA1MQ==","url":"https://github.com/coala/projects/pull/632#discussion_r209601051","bodyText":"can stay in your patches, but doesnt belong in the activity report","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 7:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7\n+      - details: >\n+         .vscode-client: Drop vscode client\n+\n+  - 8:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6bbad87389004b872affdd6e13e7b079e81b2108\n+      - details: >\n+         tests: Add test helpers and resources\n+\n+  - 9:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5d4c230cd1a819572d423a5ba90a537d0ca1b91c\n+      - details: >\n+         coalals.utils.log: Add log configuration\n+\n+  - 10:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/3e7defd3b78e2b5a93fedc856cf871bd0f691d52\n+      - details: >\n+         coalals.interface: Add initial coala wrapper\n+\n+  - 11:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/f10159391befe2f184c453183932e5e3747a2c34\n+      - details: >\n+         coalals.results: Add result processing module\n+\n+  - 12:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/9e8473120d2ea998e6b4b1e2e6812e2ff6a56505\n+      - details: >\n+         coalals.langserver: Add language server module\n+\n+  - 13:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/1a5f1c0b71afc1ff0f8455ddc43d89bff20f8436\n+      - details: >\n+         coalals.main: Add main.py\n+\n+  - 14:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5c5f87f50fe4d61a1fd921a7d03801b669c0ea03\n+      - details: >\n+         test-requirements.txt: Update test requirements\n+\n+  - 15:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8c64f2af8176f1590be6b7d227d0d62bf28912fd\n+      - details: >\n+         requirements.txt: Update requirements\n+\n+  - 16:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/d56adf2e2c7ef5d2a17ecd47748b35d27291f51c\n+      - details: >\n+         Update test configuration\n+\n+  - 17:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/c60a565ef8392bbda571049e29109bdfd231de26\n+      - details: >\n+         coala-ls.sh: Add coala-ls.sh\n+\n+  - 18:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/cee8c2c7c047999d639b03802e0e3c0f029e169e\n+      - details: >\n+         README: Update README.md and assets\n+\n+  - 19:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/ef8dc592c80d629d90c0596bb1a2be3df75c7b40\n+      - details: >\n+         .coafile: Update config and globs\n+\n+  - 20:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8d7f8d05e506b252179c92335f98cb365102a405\n+      - details: >\n+         perf-metrics.md: Add performance metrics\n+\n+  - 21:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/32fe61caa96d8a039cb532bb46eb1ed8e10cbfb4\n+      - details: >\n+         coalals.results: Refactor to submodule\n+\n+  - 22:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         requirements.txt: coalals.utils.files: Add get_disk_contents()\n+\n+  - 23:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/88d79837106185382d3feadc8c9330f219ea271e\n+      - details: >\n+         requirements.txt: Add whatthepatch\n+\n+  - 24:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         coalals.results.fixes: Add fixes parsing & lsp models\n+\n+  - 25:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 26:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8e75ead740fac57b461bb12497db4147f78d4d19\n+      - details: >\n+         coalals.langserver: Add support for textDocument/formatting\n+\n+  - 27:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/99c0663b0177bba30a4b8025615530d15e4d441b\n+      - details: >\n+         coalals.langserver: Add support for showMessageRequest\n+\n+  - 28:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 29:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 30:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6e095ca6c18813878766e9767d99a4bec10ec4a8\n+      - details: >\n+         perf-metrics.md: Update perf-metrics for Phase-2\n+\n+  - 31:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/6648e76bd6374ee826fdbf0a2aafa800d6c101bb\n+      - details: >\n+         Fix single line docstring\n+\n+  - 32:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/de0098b2c7c1b5593fd39fdcdeb98fa24c755a2e\n+      - details: >\n+         .codecov.yml: Increase test coverage target\n+\n+  - 33:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         Update to jsonrpc lib\n+\n+  - 34:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/a0b59d36c33ae537b33ffd01d0f1a383ce1cdd57\n+      - details: >\n+         README.md: Update README.md\n+\n+  - 35:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/2618f470e509a129e05f29ebf6cd9a7f300e9867\n+      - details: >\n+         Clean Repository\n+\n+  - 36:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/9a9ace96b7bb498d6521f1e2b8944290ed3d331f","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgzMzg0NQ==","createdAt":"2018-08-13T13:15:03Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-13T13:07:48Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:07:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMzNTMxNg==","url":"https://github.com/coala/projects/pull/632#issuecomment-412335316","bodyText":"Preview: https://deploy-preview-632--coala-projects.netlify.com/gsoc/2018/statusreport/ksdme","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-12T11:07:11Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:07:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjUxNjA5NQ==","url":"https://github.com/coala/projects/pull/632#issuecomment-412516095","bodyText":"WIP","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-13T13:22:51Z","lastEditedAt":"2018-08-13T13:39:34Z","updatedAt":"2018-08-13T13:39:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjUyMTE4Nw==","url":"https://github.com/coala/projects/pull/632#issuecomment-412521187","bodyText":"needs rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:39:16Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:39:16Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534073904000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/633","number":633,"title":"Create reports collection","body":"This provides automatic permalinks matching\nthose used in 2017.  The file name is used\nas the final component.\nThe added categories are not used, as jekyll\nconverts them to lower-case which breaks existing\nURLs.\nRelated to #359","comments":5,"createdAt":"2018-08-12T11:22:09Z","updatedAt":"2018-08-12T11:38:24Z","closedAt":"2018-08-12T11:34:51Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/633","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MjA0Ng==","url":"https://github.com/coala/projects/pull/633#discussion_r209452046","bodyText":"whoops.  this should also include above this date: 2018-08-12","diffHunk":"@@ -1,8 +1,10 @@\n <!--\n \n ---\n-layout: report\n-permalink: /GSoC/2017/StatusReport/<name>\n+categories:\n+  - GSoC\n+  - <year of completing GSoC>\n+  - StatusReport\n student: <name>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-12T11:38:23Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:38:23Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534086347000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/634","number":634,"title":".coafile: Ignore _reports dir","body":"Ignore _reports directory from\nfilenames section.","comments":9,"createdAt":"2018-08-12T13:55:05Z","updatedAt":"2018-08-12T15:05:47Z","closedAt":"2018-08-12T14:44:38Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/634","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534154056000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/635","number":635,"title":"reports: Add palash25.md","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":16,"createdAt":"2018-08-12T19:10:50Z","updatedAt":"2018-08-13T09:54:16Z","closedAt":"2018-08-13T09:48:09Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/635","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NTU3Ng==","url":"https://github.com/coala/projects/pull/635#discussion_r209475576","bodyText":"remove this paragraph.\nWork to be done is not about you doing the work; it is just stuff which is left over.\nWhile we hope you'll continue, this work report is the end of your commitment.","diffHunk":"@@ -0,0 +1,187 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: \n+sha256sum: \n+mentors: >\n+  [Mischa Krüger](https://github.com/Makman2),\n+  [Shreyans Doshi](https://github.com/shreyans800755),\n+  [Fabian Neuschmidt](https://github.com/fneu)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/32\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/33\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/34\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/35\n+bio: >\n+  I am second year student of B.Tech Computer Science and Engineering at\n+  International Institute of Information and Technology, Bhubaneswar,\n+  Odisha, India. I worked as a GSoC student under coala to improve coala's\n+  I/O mechanism using `FileFactory` class and adding features to provide\n+  more support for NextGen-Core's caching mechanism.\n+social:\n+  - GitHub:\n+      - username: palash25\n+      - link: https://github.com/palash25\n+  - GitLab:\n+      - username: palash25\n+      - link: https://gitlab.com/palash25\n+  - Gitter:\n+      - username: palash25\n+      - link: https://gitter.im/palash25\n+  - Openhub:\n+      - username: palash25\n+      - link: https://www.openhub.net/accounts/palash25\n+email: npalash25@gmail.com\n+blog: https://medium.com/gsoc-with-coala/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/7272ff6b9463a5cff33c431f73a416e5a999f4ac\n+      - details: >\n+         cEP-0026.md: Adds optimize caching cEP.\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a228c2b39ef17b3c6d3572853601dfa05b938173\n+      - details: >\n+         Updated the details of Optimize Caching project.\n+  - 3:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/759f74f88206c58ac80dd7acd12cadbae13f28cb\n+      - details: >\n+         optimize_caching.md: Changed primary mentor from adtac to Makman2.\n+  - 4:\n+      - repo: devops\n+      - link: https://github.com/coala/devops/commit/e309383bc5aacb007c4986bd74197238a4fcc96d\n+      - details: >\n+         planet.ini: Add palash25 gsoc blog feed.\n+  - 5:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/b06dfe44fa99ffeb997f6f0a4bf302938fb9734c\n+      - details: >\n+         Added `FileFactory` class. Objects of this class are used\n+         to represent files and replace file contents in the file dict.\n+  - 6:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/77c1dca15dc82d1753aa0962017899392d0033ec\n+      - details: >\n+         Added `Directory` class. This class will act as an interface\n+         to directories providing useful information about them. The\n+         objects of this class can be used by bears that operate only\n+         on directories and perform analysis based on the things like\n+         directory structure.\n+  - 7:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fc568a01ba489376b4d6efac12ea772cb3cb1573\n+      - details: >\n+         Added `memoized_property`. `memoized_property` is a decorator\n+         that caches the properties of `FileFactory` class.\n+  - 8:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/81bbca42f82319aed22ba7f90781d886d559d4dd\n+      - details: >\n+         NextGen_Core.rst: Update caching section. \n+  - 9:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         IO.rst: Add FileFactory docs.\n+  - 10:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         NextGen_Core.rst: Add link to IO docs.\n+  - 11:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/54622c2b03e1b84bb122130af182424d706d3de4\n+      - details: >\n+         `FileFactory`: Use `cached_property` instead of `memoized_property`.\n+  - 12:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/415361f5a4c12cd65dd4cc171d2a8ebbba3bc92c\n+      - details: >\n+         A new attribute `newline` was added to `FileFactory` to force\n+         newlines on the file content.\n+  - 13:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fbe8452360eb39340ace4334c2df133a1ee6de97\n+      - details: >\n+         Processing: Add middleware `FileDict` that provides the bears\n+         with the actual file contents instead of the `FileFactory` objects.\n+  - 14:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/e138e4875fc6d1474a93758881f550e05df8e329\n+      - details: >\n+         Processing: Modify tests to use actual files instead of hard coded\n+         tuples as file content.\n+  - 15:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/3ae03bec665943aa6173047245ca929a0a754c69\n+      - details: >\n+         Added support for collection types like `dict` and `set` for\n+         `persistent_hash`.\n+---\n+\n+### Optimize Caching for the NextGen-Core\n+\n+#### Work Done\n+\n+1. Improved I/O mechanism for coala.\n+   1. Added a class `FileFactory` to interface with files and to provide file\n+      contents in different forms like string, binary data or as a tuple.\n+   2. Added a `Directory` class to interface with directories and provide\n+      useful information about them such as the directory path, parent\n+      directory and timestamps. This will be later used to implement ignore\n+      directories functionality.\n+   3. Added documentation for `FileFactory` and improved the NextGen-Core\n+      docs.\n+\n+2. Caching support.\n+   1. Cached the properties of `FileFactory` which turned out to be a\n+      significant performance boost in consecutive coala runs.\n+   2. Added support for unordered collection types in `persistent_hash`\n+      which improved the NextGen-Core's ability to hash much more\n+      complex task objects (which are used in NextGen caching).\n+\n+3. Integrated `FileFactory` with the core.\n+   1. Added line endings support for `FileFactory`.\n+   2. Implemented a middleware `FileDict` that mimics a dictionary\n+      and provides the bears in the old core with the actual file\n+      contents instead of the `FileFactory` objects thereby maintaining\n+      backwards compatibility with the old core.\n+   3. Modified the tests to use actual files and the `FileFactory` objects\n+      instead of hard-coded file contents.\n+\n+#### Challenges\n+\n+One of the first challenges I faced was designing the `FileFactory`.\n+But with my mentors help we were able to come up with a design that\n+could be used for the NextGen-Core and also maintained compatibility\n+with the old core.\n+\n+The biggest challenge that I faced these three months for the integration\n+of the aforementioned `FileFactory` with the core. Initially about thirty\n+tests were failing but after discussing the idea of using a middleware\n+(`FileDict`) to maintain backwards compatibilty with the old core the test\n+failures were significantly reduced to just six. After a while I discovered\n+that `FileFactory` was somehow removing line-endings from the file contents\n+which was fixed by adding support for newlines in `FileFactory` which in turn\n+led to a successful integration.\n+\n+#### Work to be done\n+\n+Two major features were left out because of time constraints:\n+1. Ignore directories functionality for the NextGen-Core.\n+2. Cache control flags for the NextGen-Core (which was\n+   already mentioned as a stretch issue in my GSoC proposal).\n+\n+I have started the work on implementing the cache control flags and will","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNjUyMQ==","createdAt":"2018-08-13T06:22:36Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-13T01:11:13Z","lastEditedAt":null,"updatedAt":"2018-08-13T01:11:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NTU5Mw==","url":"https://github.com/coala/projects/pull/635#discussion_r209475593","bodyText":"missing ;-)","diffHunk":"@@ -0,0 +1,187 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: ","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T01:11:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T01:11:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUyNjI1OQ==","url":"https://github.com/coala/projects/pull/635#discussion_r209526259","bodyText":"14 patches vs 15 activities.... ?","diffHunk":"@@ -0,0 +1,184 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: https://rawgit.com/palash25/gsoc-18-report/master/project.tar.gz\n+sha256sum: 0af1551d96663f82c5ccf05437008ba00fade628a5a1659bdb78364b3546caf4\n+mentors: >\n+  [Mischa Krüger](https://github.com/Makman2),\n+  [Shreyans Doshi](https://github.com/shreyans800755),\n+  [Fabian Neuschmidt](https://github.com/fneu)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/32\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/33\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/34\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/35\n+bio: >\n+  I am second year student of B.Tech Computer Science and Engineering at\n+  International Institute of Information and Technology, Bhubaneswar,\n+  Odisha, India. I worked as a GSoC student under coala to improve coala's\n+  I/O mechanism using `FileFactory` class and adding features to provide\n+  more support for NextGen-Core's caching mechanism.\n+social:\n+  - GitHub:\n+      - username: palash25\n+      - link: https://github.com/palash25\n+  - GitLab:\n+      - username: palash25\n+      - link: https://gitlab.com/palash25\n+  - Gitter:\n+      - username: palash25\n+      - link: https://gitter.im/palash25\n+  - Openhub:\n+      - username: palash25\n+      - link: https://www.openhub.net/accounts/palash25\n+email: npalash25@gmail.com\n+blog: https://medium.com/gsoc-with-coala/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/7272ff6b9463a5cff33c431f73a416e5a999f4ac\n+      - details: >\n+         cEP-0026.md: Adds optimize caching cEP.\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a228c2b39ef17b3c6d3572853601dfa05b938173\n+      - details: >\n+         Updated the details of Optimize Caching project.\n+  - 3:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/759f74f88206c58ac80dd7acd12cadbae13f28cb\n+      - details: >\n+         optimize_caching.md: Changed primary mentor from adtac to Makman2.\n+  - 4:\n+      - repo: devops\n+      - link: https://github.com/coala/devops/commit/e309383bc5aacb007c4986bd74197238a4fcc96d\n+      - details: >\n+         planet.ini: Add palash25 gsoc blog feed.\n+  - 5:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/b06dfe44fa99ffeb997f6f0a4bf302938fb9734c\n+      - details: >\n+         Added `FileFactory` class. Objects of this class are used\n+         to represent files and replace file contents in the file dict.\n+  - 6:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/77c1dca15dc82d1753aa0962017899392d0033ec\n+      - details: >\n+         Added `Directory` class. This class will act as an interface\n+         to directories providing useful information about them. The\n+         objects of this class can be used by bears that operate only\n+         on directories and perform analysis based on the things like\n+         directory structure.\n+  - 7:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fc568a01ba489376b4d6efac12ea772cb3cb1573\n+      - details: >\n+         Added `memoized_property`. `memoized_property` is a decorator\n+         that caches the properties of `FileFactory` class.\n+  - 8:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/81bbca42f82319aed22ba7f90781d886d559d4dd\n+      - details: >\n+         NextGen_Core.rst: Update caching section. \n+  - 9:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/87d3dffd1a52c42ac60da0199ee34bd95827b8ff\n+      - details: >\n+         IO.rst: Add FileFactory docs.\n+  - 10:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         NextGen_Core.rst: Add link to IO docs.\n+  - 11:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/54622c2b03e1b84bb122130af182424d706d3de4\n+      - details: >\n+         `FileFactory`: Use `cached_property` instead of `memoized_property`.\n+  - 12:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/415361f5a4c12cd65dd4cc171d2a8ebbba3bc92c\n+      - details: >\n+         A new attribute `newline` was added to `FileFactory` to force\n+         newlines on the file content.\n+  - 13:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fbe8452360eb39340ace4334c2df133a1ee6de97\n+      - details: >\n+         Processing: Add middleware `FileDict` that provides the bears\n+         with the actual file contents instead of the `FileFactory` objects.\n+  - 14:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/e138e4875fc6d1474a93758881f550e05df8e329\n+      - details: >\n+         Processing: Modify tests to use actual files instead of hard coded\n+         tuples as file content.\n+  - 15:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T08:24:49Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:24:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUyODA5OA==","url":"https://github.com/coala/projects/pull/635#discussion_r209528098","bodyText":"Sorry I forgot the cEP patch","diffHunk":"@@ -0,0 +1,184 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: https://rawgit.com/palash25/gsoc-18-report/master/project.tar.gz\n+sha256sum: 0af1551d96663f82c5ccf05437008ba00fade628a5a1659bdb78364b3546caf4\n+mentors: >\n+  [Mischa Krüger](https://github.com/Makman2),\n+  [Shreyans Doshi](https://github.com/shreyans800755),\n+  [Fabian Neuschmidt](https://github.com/fneu)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/32\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/33\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/34\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/35\n+bio: >\n+  I am second year student of B.Tech Computer Science and Engineering at\n+  International Institute of Information and Technology, Bhubaneswar,\n+  Odisha, India. I worked as a GSoC student under coala to improve coala's\n+  I/O mechanism using `FileFactory` class and adding features to provide\n+  more support for NextGen-Core's caching mechanism.\n+social:\n+  - GitHub:\n+      - username: palash25\n+      - link: https://github.com/palash25\n+  - GitLab:\n+      - username: palash25\n+      - link: https://gitlab.com/palash25\n+  - Gitter:\n+      - username: palash25\n+      - link: https://gitter.im/palash25\n+  - Openhub:\n+      - username: palash25\n+      - link: https://www.openhub.net/accounts/palash25\n+email: npalash25@gmail.com\n+blog: https://medium.com/gsoc-with-coala/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/7272ff6b9463a5cff33c431f73a416e5a999f4ac\n+      - details: >\n+         cEP-0026.md: Adds optimize caching cEP.\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a228c2b39ef17b3c6d3572853601dfa05b938173\n+      - details: >\n+         Updated the details of Optimize Caching project.\n+  - 3:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/759f74f88206c58ac80dd7acd12cadbae13f28cb\n+      - details: >\n+         optimize_caching.md: Changed primary mentor from adtac to Makman2.\n+  - 4:\n+      - repo: devops\n+      - link: https://github.com/coala/devops/commit/e309383bc5aacb007c4986bd74197238a4fcc96d\n+      - details: >\n+         planet.ini: Add palash25 gsoc blog feed.\n+  - 5:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/b06dfe44fa99ffeb997f6f0a4bf302938fb9734c\n+      - details: >\n+         Added `FileFactory` class. Objects of this class are used\n+         to represent files and replace file contents in the file dict.\n+  - 6:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/77c1dca15dc82d1753aa0962017899392d0033ec\n+      - details: >\n+         Added `Directory` class. This class will act as an interface\n+         to directories providing useful information about them. The\n+         objects of this class can be used by bears that operate only\n+         on directories and perform analysis based on the things like\n+         directory structure.\n+  - 7:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fc568a01ba489376b4d6efac12ea772cb3cb1573\n+      - details: >\n+         Added `memoized_property`. `memoized_property` is a decorator\n+         that caches the properties of `FileFactory` class.\n+  - 8:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/81bbca42f82319aed22ba7f90781d886d559d4dd\n+      - details: >\n+         NextGen_Core.rst: Update caching section. \n+  - 9:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/87d3dffd1a52c42ac60da0199ee34bd95827b8ff\n+      - details: >\n+         IO.rst: Add FileFactory docs.\n+  - 10:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         NextGen_Core.rst: Add link to IO docs.\n+  - 11:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/54622c2b03e1b84bb122130af182424d706d3de4\n+      - details: >\n+         `FileFactory`: Use `cached_property` instead of `memoized_property`.\n+  - 12:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/415361f5a4c12cd65dd4cc171d2a8ebbba3bc92c\n+      - details: >\n+         A new attribute `newline` was added to `FileFactory` to force\n+         newlines on the file content.\n+  - 13:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fbe8452360eb39340ace4334c2df133a1ee6de97\n+      - details: >\n+         Processing: Add middleware `FileDict` that provides the bears\n+         with the actual file contents instead of the `FileFactory` objects.\n+  - 14:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/e138e4875fc6d1474a93758881f550e05df8e329\n+      - details: >\n+         Processing: Modify tests to use actual files instead of hard coded\n+         tuples as file content.\n+  - 15:","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgyMTY5Mw==","createdAt":"2018-08-13T08:40:41Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-13T08:31:10Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:31:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQ2MjgyNg==","url":"https://github.com/coala/projects/pull/635#issuecomment-412462826","bodyText":"all green 🎉","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-13T09:38:22Z","lastEditedAt":null,"updatedAt":"2018-08-13T09:38:22Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534149026000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/637","number":637,"title":"Remove trailing space from pyflakes project","body":"This redirects the user from link\nhttp://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala_\nto http://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala\nFixes #573\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-08-13T05:37:28Z","updatedAt":"2018-08-13T08:30:26Z","closedAt":null,"state":"open","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/637","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ5NTg3OQ==","url":"https://github.com/coala/projects/pull/637#discussion_r209495879","bodyText":"to & from need to be reversed.\nand you need to edit the .md to remove the unwanted space","diffHunk":"@@ -1,3 +1,7 @@\n [build]\n   publish = \"_site\"\n   command = \"gem install bundler && .ci/build.sh\"\n+\n+[[redirects]]\n+  from = \"/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:41:22Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:41:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQyMjU3Ng==","url":"https://github.com/coala/projects/pull/637#issuecomment-412422576","bodyText":"netlify redirect isnt working.\nsee #573 (comment)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T06:44:12Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:44:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQ0NTQ4Mg==","url":"https://github.com/coala/projects/pull/637#issuecomment-412445482","bodyText":"Interesting.\nI dont seem to be able to get the popup to work with other pages.\ne.g. https://deploy-preview-637--coala-projects.netlify.com/#/projects?project=improve_generic_bear_quality","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T08:30:25Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:30:25Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534211541000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/638","number":638,"title":"_reports/example.md: Add date","body":"Jekyll uses the year to create the page URL\nRelated to #359\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-08-13T12:22:23Z","updatedAt":"2018-08-14T01:52:21Z","closedAt":"2018-08-14T01:46:40Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/638","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535457042000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/624","number":624,"title":"Added Stack Overflow tag","body":"Added Stack overflow tag in lmgtfy as per issue #345\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2018-08-24T15:18:12Z","updatedAt":"2018-08-28T11:50:42Z","closedAt":null,"state":"open","user":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"owner":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/624","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0NDgzMQ==","url":"https://github.com/coala/corobo/pull/624#issuecomment-415944831","bodyText":"Can anybody help in knowing why this Travis build has failed as i just changed the markdown file.Also here i am getting a update branch option should i click that ? Although i had rebased my branch with upstream.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"reactions":[],"createdAt":"2018-08-25T06:41:08Z","lastEditedAt":null,"updatedAt":"2018-08-25T06:41:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0OTEyMw==","url":"https://github.com/coala/corobo/pull/624#issuecomment-415949123","bodyText":"Hi @Dhiraj240, thanks for the PR! Check out this link to learn more about proper commit format (improper commit format will cause the builds to fail). Also, make sure to squash your commits into one!","diffHunk":null,"author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODQ2NDMwNw==","createdAt":"2018-08-25T12:41:00Z","content":"THUMBS_UP","user":{"login":"Dhiraj240","name":"Dhiraj Sharma"}}],"createdAt":"2018-08-25T07:33:32Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:33:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk2NjY0OQ==","url":"https://github.com/coala/corobo/pull/624#issuecomment-415966649","bodyText":"@andrewda Okay, i will do it accordingly.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"reactions":[],"createdAt":"2018-08-25T12:40:49Z","lastEditedAt":null,"updatedAt":"2018-08-25T12:40:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNDQyMA==","url":"https://github.com/coala/corobo/pull/624#issuecomment-416414420","bodyText":"Ping @Dhiraj240 .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-28T00:48:26Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:48:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjU1NTU2Nw==","url":"https://github.com/coala/corobo/pull/624#issuecomment-416555567","bodyText":"@jayvdb sorry, i had just joined my college after insem break so i was caught up with my college sessions.I will do the proper commit by morning.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"reactions":[],"createdAt":"2018-08-28T11:50:42Z","lastEditedAt":null,"updatedAt":"2018-08-28T11:50:42Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534987085000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/622","number":622,"title":"README.md: Add Zulip backend","body":"Added Zulip to the backend list.\nFixed Issue: #385\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":3,"createdAt":"2018-08-22T16:01:00Z","updatedAt":"2018-08-23T01:18:05Z","closedAt":"2018-08-23T01:17:27Z","state":"closed","user":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"owner":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/622","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNTA5MTA5NA==","url":"https://github.com/coala/corobo/pull/622#issuecomment-415091094","bodyText":"What should I change now?","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-22T16:18:45Z","lastEditedAt":null,"updatedAt":"2018-08-22T16:18:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI0MDkwMg==","url":"https://github.com/coala/corobo/pull/622#issuecomment-415240902","bodyText":"No you do not create multiple Pull Requests for the same task.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:18:05Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:18:05Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535180203000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/623","number":623,"title":"Added SO tag","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":0,"createdAt":"2018-08-24T12:48:08Z","updatedAt":"2018-08-25T06:56:43Z","closedAt":"2018-08-24T14:29:30Z","state":"closed","user":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"owner":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/623","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535418522000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/618","number":618,"title":"removed comment in webservices.raml regarding gitlab.com/coala/landin…","body":"…g/merge_request/39\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":15,"createdAt":"2018-08-17T19:26:26Z","updatedAt":"2018-08-28T01:08:42Z","closedAt":"2018-08-28T01:08:03Z","state":"merged","user":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"owner":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"assignee":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/618","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAxMzM5Mw==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414013393","bodyText":"Thanks @mikebmc , that change is good of course.\nCould you amend your commit so that the commit message complies with https://coala.io/commit .  Otherwise the bots go mad and dont let us merge it.\nAlso you need to remove the trailing whitespace from the line you edited.  again, unhappy bots.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-17T23:40:54Z","lastEditedAt":"2018-08-17T23:41:49Z","updatedAt":"2018-08-17T23:41:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA3MDI1MQ==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414070251","bodyText":"@jayvdb thanks! I'd noticed the errors on my way out the door yesterday, but didn't have time to correct them. Travis yelled at me again, but also passed the test? I think the issue is that I failed to use --force in an intermediary push, and it auto generated a commit with too long a message. I will look into fixing that this afternoon.\nI'd forgotten about gizoogle. Should I look into why that test can't connect?","diffHunk":null,"author":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4","name":""},"createdAt":"2018-08-18T16:33:44Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:33:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA3MDY5Ng==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414070696","bodyText":"Dont worry about gizoogle ; our bots sometimes cant get a network connection happening to all the links in the repo.  It has had a lot of development without a release lately, but with GSoC over I think we'll get a bit of release management happening.\nYou have four commits in https://github.com/coala/corobo/pull/618/commits\nYou'll need to squash them into one commit.  https://coala.io/git may be of some help.  If you're stuck, come onto https://coala.io/chat and we'll step through the process.  But please dont close the PR and start a new one, delete your fork or delete your branch.  A PR is always fixable until you, and to be useful in coala you need those skills, and we'll happily help you get those skills - but we dont want to keep getting PRs from developers who dont keep their work tidy, as that creates continual work for maintainers and makes it harder to review patches.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-18T16:41:03Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:41:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA5ODA1OA==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414098058","bodyText":"Great.  Final step...\nThe commit message needs to comply with https://coala.io/commit .\nNote this is a Closes , not a Fixes , as it isnt a bug.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T02:13:59Z","lastEditedAt":null,"updatedAt":"2018-08-19T02:13:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDE0MDAwMQ==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414140001","bodyText":"@jayvdb thanks for your patience! Hopefully this last commit is up to snuff","diffHunk":null,"author":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4","name":""},"createdAt":"2018-08-19T16:44:37Z","lastEditedAt":null,"updatedAt":"2018-08-19T16:44:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNzIyOA==","url":"https://github.com/coala/corobo/pull/618#issuecomment-416417228","bodyText":"Ack 7ec1088","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T01:06:42Z","lastEditedAt":null,"updatedAt":"2018-08-28T01:06:42Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535078653000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/619","number":619,"title":"README.md: Updated README with Zulip; Fixes Issue: https://github.com/coala/corobo/issues/385","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":8,"createdAt":"2018-08-21T16:44:24Z","updatedAt":"2018-08-24T02:44:13Z","closedAt":"2018-08-22T14:01:40Z","state":"closed","user":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"owner":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/619","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDc0OTYzMA==","url":"https://github.com/coala/corobo/pull/619#issuecomment-414749630","bodyText":"Can someone let me know what I should be changing? Thanks.","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-21T17:07:53Z","lastEditedAt":null,"updatedAt":"2018-08-21T17:07:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk3NjQyNQ==","url":"https://github.com/coala/corobo/pull/619#issuecomment-414976425","bodyText":"@nvzard Should I create a new PR?","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-22T09:46:32Z","lastEditedAt":"2018-08-22T09:46:43Z","updatedAt":"2018-08-22T09:46:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI0MTUzOA==","url":"https://github.com/coala/corobo/pull/619#issuecomment-415241538","bodyText":"Re-open this PR @hrithik-jha .\nYou must learn how to use git and GitHub.  That is what https://coala.io/newcomer is about.\nIf you dont learn those skills while doing a newcomer issue, you are wasting our time and we will not let you continue within @coala .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:20:22Z","lastEditedAt":"2018-08-23T01:20:34Z","updatedAt":"2018-08-23T01:20:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTM3ODQ0MA==","url":"https://github.com/coala/corobo/pull/619#issuecomment-415378440","bodyText":"@jayvdb Sorry for the mishap. I can't reopen this PR as it says my branch was force pushed or recreated. What should I do to fix this? Also after amending the commit message Travis still didn't approve of the commit, so what should I do about that? Thank you for your patience.","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-23T11:11:58Z","lastEditedAt":null,"updatedAt":"2018-08-23T11:11:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYzNDMzMw==","url":"https://github.com/coala/corobo/pull/619#issuecomment-415634333","bodyText":"Come on to https://coala.io/chat and ask for help.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-24T02:44:13Z","lastEditedAt":null,"updatedAt":"2018-08-24T02:44:13Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535780291000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/620","number":620,"title":"answers/requirements.txt: Remove unused nltk ","body":"Closes #593\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":11,"createdAt":"2018-08-22T00:05:34Z","updatedAt":"2018-09-01T05:38:11Z","closedAt":null,"state":"open","user":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"owner":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"assignee":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/620","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDg5MDIzNg==","url":"https://github.com/coala/corobo/pull/620#issuecomment-414890236","bodyText":"@jennyjj which issue are you trying to solve?","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-22T02:46:36Z","lastEditedAt":null,"updatedAt":"2018-08-22T02:46:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkxMjAyOQ==","url":"https://github.com/coala/corobo/pull/620#issuecomment-414912029","bodyText":"The issue is coala/corobo#593","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-08-22T04:59:35Z","lastEditedAt":null,"updatedAt":"2018-08-22T04:59:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTkwODIzNw==","url":"https://github.com/coala/corobo/pull/620#issuecomment-415908237","bodyText":"Hi, I squashed one into one commit (so there are two commits combined).  I somehow deleted one commit (there were originally three).  I hope this is ok.  I believe it is all one commit now.","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-08-24T23:32:31Z","lastEditedAt":null,"updatedAt":"2018-08-24T23:32:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTkwOTk4Ng==","url":"https://github.com/coala/corobo/pull/620#issuecomment-415909986","bodyText":"If you have a look at your published commit, it is now empty.\nYou can see it online at https://github.com/coala/corobo/pull/620/files\nMake the change again, and amend your commit, and re-push.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-24T23:47:11Z","lastEditedAt":null,"updatedAt":"2018-08-24T23:47:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTkyMTA0NA==","url":"https://github.com/coala/corobo/pull/620#issuecomment-415921044","bodyText":"Ok, I think I did it right this time.","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-08-25T01:32:46Z","lastEditedAt":null,"updatedAt":"2018-08-25T01:32:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzgzNDE3Mw==","url":"https://github.com/coala/corobo/pull/620#issuecomment-417834173","bodyText":"Thanks so much, Li!  I have made the change.","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-09-01T05:20:40Z","lastEditedAt":null,"updatedAt":"2018-09-01T05:20:40Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534953278000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/621","number":621,"title":"README.md: Added Zulip backend","body":"Added Zulip to the backend list.\nFixed Issue: #385\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2018-08-22T14:03:00Z","updatedAt":"2018-08-22T15:54:38Z","closedAt":"2018-08-22T15:54:38Z","state":"closed","user":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"owner":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/621","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533635308000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/604","number":604,"title":"plugins/coatils.py: Remove __init__ constructor","body":"This removes init initializer as the init in this module\nonly invokes super, which happens anyway if _init is removed\nCloses #601\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2018-08-05T09:14:08Z","updatedAt":"2018-08-07T09:48:28Z","closedAt":"2018-08-05T13:44:14Z","state":"merged","user":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"owner":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/604","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUwNzYzNQ==","url":"https://github.com/coala/corobo/pull/604#issuecomment-410507635","bodyText":"The commit looks good to me.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2018-08-05T09:33:16Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:33:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUyMTc0NQ==","url":"https://github.com/coala/corobo/pull/604#issuecomment-410521745","bodyText":"__new__ & __init__ combined are the implementation of the contructor.  You can read about it at https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming) , especially https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)#Python\nFoo() is never a constructor.  It is invoking a constructor.  It is rarely, and always incorrectly, called the constructor.  It should be called instantiation.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NjYzMA==","createdAt":"2018-08-05T14:09:47Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-05T13:53:56Z","lastEditedAt":null,"updatedAt":"2018-08-05T13:53:56Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533579392000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/605","number":605,"title":"nevermind.py: Add caret in regex pattern","body":"Add caret in regex pattern so that 'corobo nm' and 'corobo nevermind'\nare matched only, and only then corobo says \"I'm sorry :(\".\nThus, corobo would not respond with a sorry for commands where nm\nor nevermind appear anywhere in the command.\nFixes #519\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":10,"createdAt":"2018-08-05T19:12:24Z","updatedAt":"2018-08-06T18:16:32Z","closedAt":"2018-08-06T17:44:05Z","state":"closed","user":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"owner":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"207de5"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/605","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk1MTU2OA==","url":"https://github.com/coala/corobo/pull/605#discussion_r207951568","bodyText":"A better way r'^(?:nm|nevermind)$'","diffHunk":"@@ -8,7 +8,7 @@ class Nevermind(BotPlugin):\n     Doesn't mind\n     \"\"\"\n \n-    @re_botcmd(pattern=r'(nm)|(nevermind)', flags=re.IGNORECASE)\n+    @re_botcmd(pattern=r'^(nm)$|^(nevermind)$', flags=re.IGNORECASE)","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-06T16:23:10Z","lastEditedAt":null,"updatedAt":"2018-08-06T16:23:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU2Mjc4Mg==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410562782","bodyText":"See https://github.com/coala/corobo/blob/master/tests/nevermind_test.py","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T01:07:27Z","lastEditedAt":null,"updatedAt":"2018-08-06T01:07:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU5NTMwMw==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410595303","bodyText":"@jayvdb what does \"!\" In the beginning of \"nevermind\" mean in the test file?","diffHunk":null,"author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-06T05:45:27Z","lastEditedAt":null,"updatedAt":"2018-08-06T05:45:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYwODgwMA==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410608800","bodyText":"@bhavya17037  check this out http://errbot.io/en/latest/user_guide/plugin_development/testing.html","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-06T07:04:01Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:04:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYzMTA1MA==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410631050","bodyText":"That is 'BOT_PREFIX' , just like we use 'corobo' as our bot's prefix. Go\nthrough the documentation and you'll understand.\n…\nOn Mon 6 Aug, 2018, 11:15 AM Bhavya Srivastava, ***@***.***> wrote:\n @jayvdb <https://github.com/jayvdb> what does \"!\" In the beginning of\n \"nevermind\" mean in the test file?\n\n —\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub\n <#605 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/ASansMihYVRaJcVouVKzrF6yhTWiFAxQks5uN9f4gaJpZM4Vvf3r>\n .","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-06T08:34:21Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:34:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDc2NzE3OA==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410767178","bodyText":"@bhavya17037 You have multiple commits, squash all your commits into a single one, refer http://api.coala.io/en/latest/Developers/Git_Basics.html#squashing-your-commits, don't close this PR. Also, fix errors reported by coala.","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-06T16:26:40Z","lastEditedAt":null,"updatedAt":"2018-08-06T16:26:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDc5ODcxNw==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410798717","bodyText":"don't close this PR\n\n@bhavya17037 Please read what I have said 😄","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-06T18:05:53Z","lastEditedAt":null,"updatedAt":"2018-08-06T18:05:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDgwMjI1Ng==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410802256","bodyText":"@Vamshi99 Oh no im so sorry! :(\nI have made another pull request with the correct and final changes!Could you please review it? :)\n#606","diffHunk":null,"author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-06T18:16:32Z","lastEditedAt":"2018-08-06T18:17:06Z","updatedAt":"2018-08-06T18:17:06Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533648272000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/606","number":606,"title":"nevermind.py: Change regex pattern","body":"Change regex pattern so that corobo only apologizes\nwhen \"corobo nm\" or \"corobo nevermind\" are used.\nAlso add unit tests for the same\nFixes #519\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2018-08-06T18:10:29Z","updatedAt":"2018-08-07T13:24:32Z","closedAt":"2018-08-07T13:10:23Z","state":"merged","user":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"owner":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/606","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA5Nzc2NA==","url":"https://github.com/coala/corobo/pull/606#discussion_r208097764","bodyText":"Unrelated change?","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-07T04:48:16Z","lastEditedAt":null,"updatedAt":"2018-08-07T04:48:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwMDMwMQ==","url":"https://github.com/coala/corobo/pull/606#discussion_r208100301","bodyText":"Remove this change from the file and do git commit --amend to modify the commit(do not use git commit)","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-07T05:09:46Z","lastEditedAt":null,"updatedAt":"2018-08-07T05:09:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwMTM3MA==","url":"https://github.com/coala/corobo/pull/606#discussion_r208101370","bodyText":"But this change is already in corobo's \"coatils.py\" (master)","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-07T05:18:40Z","lastEditedAt":null,"updatedAt":"2018-08-07T05:18:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwMTc4NQ==","url":"https://github.com/coala/corobo/pull/606#discussion_r208101785","bodyText":"You need to fetch that change from upstream repo(master) by performing a rebase, refer http://api.coala.io/en/latest/Developers/Git_Basics.html#rebasing","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-07T05:22:32Z","lastEditedAt":null,"updatedAt":"2018-08-07T05:22:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDgxMzQ1OQ==","url":"https://github.com/coala/corobo/pull/606#issuecomment-410813459","bodyText":"@jayvdb\nI will rebase in a while. Dont worry","diffHunk":null,"author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-06T18:50:09Z","lastEditedAt":null,"updatedAt":"2018-08-06T18:50:09Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533730796000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/608","number":608,"title":"LabHubTestCase: LabHub testing setup ","body":"The role of LabHubTestCase is to do the setUp\nnecessary for testing a plugin which depends\non LabHub plugin. It adapts the tests for\nGitStats plugins to use the LabHubTestCase.\nCloses #607","comments":7,"createdAt":"2018-08-07T19:14:54Z","updatedAt":"2018-08-08T12:19:56Z","closedAt":"2018-08-08T12:06:14Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"bug","color":"ee0701"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/608","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTE5NzU0Mw==","url":"https://github.com/coala/corobo/pull/608#issuecomment-411197543","bodyText":"Yes it was possible to include LabHub also, but Ban is not dependent on labhub. It does not require LabHubTestBase.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-07T20:49:08Z","lastEditedAt":null,"updatedAt":"2018-08-07T20:49:08Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533750154000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/612","number":612,"title":"test-requirements.txt: Sync","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":5,"createdAt":"2018-08-08T14:42:31Z","updatedAt":"2018-08-08T17:42:34Z","closedAt":"2018-08-08T17:42:25Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/612","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533820988000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/613","number":613,"title":" setup.cfg: Use template for enforcing 100% branch coverage","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":12,"createdAt":"2018-08-09T07:48:24Z","updatedAt":"2018-08-09T13:23:08Z","closedAt":"2018-08-09T13:23:02Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/613","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg0Nzg0NA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208847844","bodyText":"def get_configuration_template(self):\n        default_config = self._default_config\n        if default_config:\n            return default_config\n        else self.CONFIG_TEMPLATE:\n            return self.CONFIG_TEMPLATE\n        return\n?","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4NzE1MQ==","createdAt":"2018-08-09T11:46:09Z","content":"THUMBS_DOWN","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-09T08:36:44Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:36:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg0ODc3OA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208848778","bodyText":"No need for else IMO when this will be the last condition instead directly return","diffHunk":"@@ -30,7 +30,7 @@ def search(self, msg, arg):\n             return (self.API_DOCS +\n                     '/search.html?q=' +\n                     '+'.join(re.split(r'\\s+', search_string)))\n-        elif doc_type.lower() == 'user':\n+        else:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4MzcyMA==","createdAt":"2018-08-09T10:24:51Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yNzY4MzcyNw==","createdAt":"2018-08-09T10:24:55Z","content":"LAUGH","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-09T08:39:46Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:39:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg0OTQ3OA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208849478","bodyText":"https://github.com/coala/corobo/pull/613/files#r208848778","diffHunk":"@@ -93,7 +93,7 @@ def contrib_stats(self, msg, match):\n                 len(Coatils.all_langs())\n             )\n         # stats\n-        elif stat_type == '' and entity == '':\n+        else:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4ODY1Nw==","createdAt":"2018-08-09T12:18:26Z","content":"THUMBS_DOWN","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T08:41:42Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:41:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MDI0Mw==","url":"https://github.com/coala/corobo/pull/613#discussion_r208850243","bodyText":"https://github.com/coala/corobo/pull/613/files#r208848778","diffHunk":"@@ -20,6 +20,8 @@ def construct_link(text):\n         elif 'documentation/' in text:\n             text = text.split('documentation/')[-1]\n             return 'https://docs.coala.io/en/latest/' + text\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4NzI0OQ==","createdAt":"2018-08-09T11:47:51Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-09T08:44:03Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:44:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MDg4Mw==","url":"https://github.com/coala/corobo/pull/613#discussion_r208850883","bodyText":"else self.CONFIG_TEMPLATE: is syntax error ;-)","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY3ODI1MQ==","createdAt":"2018-08-09T08:46:57Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T08:45:55Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:45:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MTE4Mw==","url":"https://github.com/coala/corobo/pull/613#discussion_r208851183","bodyText":"oh okay 👍","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-09T08:46:53Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:46:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MTcxOA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208851718","bodyText":"these were a minor review, discard below comment directly if there will be some error :)","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-09T08:48:57Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:48:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg3OTc2NA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208879764","bodyText":"My own words thrown back at me ? ;)","diffHunk":"@@ -30,7 +30,7 @@ def search(self, msg, arg):\n             return (self.API_DOCS +\n                     '/search.html?q=' +\n                     '+'.join(re.split(r'\\s+', search_string)))\n-        elif doc_type.lower() == 'user':\n+        else:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4ODYzNg==","createdAt":"2018-08-09T12:18:06Z","content":"LAUGH","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T10:25:10Z","lastEditedAt":null,"updatedAt":"2018-08-09T10:25:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg5OTE0OA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208899148","bodyText":"This isnt as simple as the other one.  Each branch yields, and then goes to the end.\nTo remove this else branch, we would need to add returns to all of the other branches, which isnt very helpful.","diffHunk":"@@ -93,7 +93,7 @@ def contrib_stats(self, msg, match):\n                 len(Coatils.all_langs())\n             )\n         # stats\n-        elif stat_type == '' and entity == '':\n+        else:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4ODY1MQ==","createdAt":"2018-08-09T12:18:21Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T11:47:55Z","lastEditedAt":null,"updatedAt":"2018-08-09T11:47:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODkwNzU1NA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208907554","bodyText":"Yeah because your review matter most : P","diffHunk":"@@ -30,7 +30,7 @@ def search(self, msg, arg):\n             return (self.API_DOCS +\n                     '/search.html?q=' +\n                     '+'.join(re.split(r'\\s+', search_string)))\n-        elif doc_type.lower() == 'user':\n+        else:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-09T12:20:55Z","lastEditedAt":"2018-08-09T12:21:21Z","updatedAt":"2018-08-09T12:21:21Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534143735000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/614","number":614,"title":"pushed","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2018-08-13T06:40:56Z","updatedAt":"2018-08-13T07:02:15Z","closedAt":"2018-08-13T07:02:14Z","state":"closed","user":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"owner":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/614","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQyNjEwMQ==","url":"https://github.com/coala/corobo/pull/614#issuecomment-412426101","bodyText":"Duplicate of #595\nJust as bad as #595\nNot serious about contributing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T07:02:14Z","lastEditedAt":null,"updatedAt":"2018-08-13T07:02:14Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534475452000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/616","number":616,"title":"Sync templates","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2018-08-16T18:44:56Z","updatedAt":"2018-08-17T03:10:52Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/616","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDcxMTQ1OA==","url":"https://github.com/coala/corobo/pull/616#discussion_r210711458","bodyText":"ah, this needs to be removed, or we need to fix a bug in an upstream library.\nI'll look into that tomorrow.","diffHunk":"@@ -18,6 +18,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n+  --doctest-modules","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T19:15:59Z","lastEditedAt":null,"updatedAt":"2018-08-16T19:15:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDc5NDYzMA==","url":"https://github.com/coala/corobo/pull/616#discussion_r210794630","bodyText":"Created timofurrer/ramlient#51","diffHunk":"@@ -18,6 +18,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n+  --doctest-modules","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-17T03:02:11Z","lastEditedAt":null,"updatedAt":"2018-08-17T03:02:11Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533893814000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/577","number":577,"title":"LabHub: Use activate and configuration templates","body":"__init__ is executed at load time and\nand any issue in the plugin will lead\nto it not showing up.\nLifeCycle: __init__->configured->enable\nAdapts to the DefaultConfigMixin and\nmigrated to using configuration templates.\nCloses #554\nCloses #382","comments":29,"createdAt":"2018-07-04T12:02:27Z","updatedAt":"2018-08-10T09:36:54Z","closedAt":"2018-08-10T09:35:19Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"enhancement","color":"84b6eb"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/577","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU5NjU1Nw==","url":"https://github.com/coala/corobo/pull/577#discussion_r207596557","bodyText":"shouldnt these be None, and the presense of None used to deactivate the plugin ?\nuseless values are useless.\nthe plugin will fail.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T16:16:53Z","lastEditedAt":null,"updatedAt":"2018-08-03T16:16:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU5Njc5Mw==","url":"https://github.com/coala/corobo/pull/577#discussion_r207596793","bodyText":"we had coverage of this.  Add tests which cover this.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',\n+        'GH_TOKEN': 'token',\n+        'GL_ORG_NAME': 'org_name',\n+        'GL_TOKEN': 'token',\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def get_configuration_template(self):\n+        DefaultConfigMixin.get_configuration_template(self)\n+\n+    def activate(self):\n+        BotPlugin.activate(self)\n \n         teams = dict()\n         try:\n-            gh = github3.login(token=os.environ.get('GH_TOKEN'))\n+            gh = github3.login(token=self.config['GH_TOKEN'])\n             assert gh is not None\n-        except AssertionError:\n+        except AssertionError:  # pragma: no cover, for logging","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NDY5OA==","createdAt":"2018-08-04T17:10:31Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-03T16:17:45Z","lastEditedAt":null,"updatedAt":"2018-08-03T16:17:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY4NDkxNg==","url":"https://github.com/coala/corobo/pull/577#discussion_r207684916","bodyText":"The order must be consistent for all plugins.\nDefaultConfigMixin first.\nIf that causes problems during testing, you need to enhance DefaultConfigMixin and/or BotPlugin.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T22:53:48Z","lastEditedAt":null,"updatedAt":"2018-08-03T22:53:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY4NTIyMA==","url":"https://github.com/coala/corobo/pull/577#discussion_r207685220","bodyText":"This should not be here. Caused by wrong order of base classes.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',\n+        'GH_TOKEN': 'token',\n+        'GL_ORG_NAME': 'org_name',\n+        'GL_TOKEN': 'token',\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def get_configuration_template(self):\n+        DefaultConfigMixin.get_configuration_template(self)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T22:56:21Z","lastEditedAt":null,"updatedAt":"2018-08-03T22:56:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY4NTQ3MA==","url":"https://github.com/coala/corobo/pull/577#discussion_r207685470","bodyText":"Use super().activate() with the bases classes set up properly.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',\n+        'GH_TOKEN': 'token',\n+        'GL_ORG_NAME': 'org_name',\n+        'GL_TOKEN': 'token',\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def get_configuration_template(self):\n+        DefaultConfigMixin.get_configuration_template(self)\n+\n+    def activate(self):\n+        BotPlugin.activate(self)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T22:58:06Z","lastEditedAt":null,"updatedAt":"2018-08-03T22:58:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMzI5MA==","url":"https://github.com/coala/corobo/pull/577#discussion_r207723290","bodyText":"re-create self.GH_ORG_NAME and self.GL_ORG_NAME as properties that access the config so that your patch is less noisy.","diffHunk":"@@ -33,47 +32,51 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(DefaultConfigMixin, BotPlugin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': None,\n+        'GH_TOKEN': None,\n+        'GL_ORG_NAME': None,\n+        'GL_TOKEN': None,\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def activate(self):\n+        super().activate()\n \n         teams = dict()\n         try:\n-            gh = github3.login(token=os.environ.get('GH_TOKEN'))\n+            gh = github3.login(token=self.config['GH_TOKEN'])\n             assert gh is not None\n-        except AssertionError:\n+        except AssertionError:  # pragma: no cover, for logging\n             self.log.error('Cannot create github object, please check GH_TOKEN')\n         else:\n-            self.GH3_ORG = gh.organization(self.GH_ORG_NAME)\n+            self.GH3_ORG = gh.organization(self.config['GH_ORG_NAME'])\n             for team in self.GH3_ORG.teams():\n                 teams[team.name] = team\n \n         self._teams = teams\n \n-        self.IGH = GitHub(GitHubToken(os.environ.get('GH_TOKEN')))\n-        self.IGL = GitLab(GitLabPrivateToken(os.environ.get('GL_TOKEN')))\n+        self.IGH = GitHub(GitHubToken(self.config['GH_TOKEN']))\n+        self.IGL = GitLab(GitLabPrivateToken(self.config['GL_TOKEN']))\n \n         self.REPOS = dict()\n \n         try:\n             self.gh_repos = {repo.full_name.split('/')[-1]: repo for repo in\n                              filter(lambda x: (x.full_name.split('/')[0] ==\n-                                               self.GH_ORG_NAME),\n+                                               self.config['GH_ORG_NAME']),\n                                     self.IGH.write_repositories)}\n-        except RuntimeError:\n+        except RuntimeError:  # pragma: no cover, for logging\n             self.log.exception('Something went wrong in fetching github repos.')\n         else:\n             self.REPOS.update(self.gh_repos)\n \n         try:\n             self.gl_repos = {repo.full_name.split('/')[-1]: repo for repo in\n                              filter(lambda x: (x.full_name.split('/')[0] ==\n-                                               self.GL_ORG_NAME),\n+                                               self.config['GL_ORG_NAME']),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:55:06Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:55:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMzk1MQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r207723951","bodyText":"note #572 (comment)\nYou probably need a separate test method for this.\nAnd that is not a newcomer problem --it is a test coverage problem which you need to sort out in your project.","diffHunk":"@@ -72,8 +78,6 @@ def test_invite_cmd(self):\n         self.inject_mocks('LabHub', mock_dict)\n         testbot = self\n \n-        plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T02:58:56Z","lastEditedAt":null,"updatedAt":"2018-08-05T02:58:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODY2NTg0Mg==","url":"https://github.com/coala/corobo/pull/577#discussion_r208665842","bodyText":"The current minor coverage error might be related to this","diffHunk":"@@ -72,8 +78,6 @@ def test_invite_cmd(self):\n         self.inject_mocks('LabHub', mock_dict)\n         testbot = self\n \n-        plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-08T17:22:04Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:22:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTExMzEyMA==","url":"https://github.com/coala/corobo/pull/577#discussion_r209113120","bodyText":"do class initialisation in setUpClass , including creating the hidden directory , and then remove the directory in tearDownClass.","diffHunk":"@@ -0,0 +1,23 @@\n+import logging\n+import os\n+\n+from errbot.backends.test import FullStackTest\n+from pathlib import Path\n+\n+\n+class IsolatedTestCase(FullStackTest):\n+\n+    def setUp(self, extra_config=None):\n+        file_name = 'labhub.plug'\n+        file_rename = 'hidden'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzczNTc3Mw==","createdAt":"2018-08-10T07:05:25Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-09T23:56:05Z","lastEditedAt":null,"updatedAt":"2018-08-09T23:56:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjE2OA==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156168","bodyText":"convert to single quotes","diffHunk":"@@ -1,15 +1,14 @@\n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = ['plugins']\n \n-\n-def test_nevermind(testbot):\n-    testbot.assertCommand(\"!nevermind\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nm\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nEverMINd\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nM\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nmxyz\", 'Command \"nmxyz\" not found.')\n-    testbot.assertCommand(\"!hey nM\", 'Command \"hey\" / \"hey nM\" not found.')\n-    testbot.assertCommand(\"!nevermindxyz\", 'Command \"nevermindxyz\" not found.')\n-    testbot.assertCommand(\n-        \"!hey nEverMINd\", 'Command \"hey\" / \"hey nEverMINd\" not found.')\n+class NevermindTest(IsolatedTestCase):\n+    def test_nevermind(self):\n+        self.assertCommand(\"!nevermind\", \"I'm sorry :(\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:29:44Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:29:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjE5OQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156199","bodyText":"split into two lines","diffHunk":"@@ -1,15 +1,14 @@\n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = ['plugins']\n \n-\n-def test_nevermind(testbot):\n-    testbot.assertCommand(\"!nevermind\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nm\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nEverMINd\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nM\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nmxyz\", 'Command \"nmxyz\" not found.')\n-    testbot.assertCommand(\"!hey nM\", 'Command \"hey\" / \"hey nM\" not found.')\n-    testbot.assertCommand(\"!nevermindxyz\", 'Command \"nevermindxyz\" not found.')\n-    testbot.assertCommand(\n-        \"!hey nEverMINd\", 'Command \"hey\" / \"hey nEverMINd\" not found.')\n+class NevermindTest(IsolatedTestCase):\n+    def test_nevermind(self):\n+        self.assertCommand(\"!nevermind\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nm\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nEverMINd\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nM\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nmxyz\", 'Command \"nmxyz\" not found.')\n+        self.assertCommand(\"!hey nM\", 'Command \"hey\" / \"hey nM\" not found.')\n+        self.assertCommand(\"!nevermindxyz\", 'Command \"nevermindxyz\" not found.')\n+        self.assertCommand(\n+            \"!hey nEverMINd\", 'Command \"hey\" / \"hey nEverMINd\" not found.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:29:57Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:29:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjI3Nw==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156277","bodyText":"single quotes","diffHunk":"@@ -1,10 +1,9 @@\n import errbot.rendering\n \n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = 'plugins'\n \n-\n-def test_ship_it(testbot):\n-    text = errbot.rendering.text()\n-    testbot.assertCommand(\"!shipit\", text.convert(\"![ship it!]()\"))\n+class ShipItTest(IsolatedTestCase):\n+    def test_ship_it(self):\n+        text = errbot.rendering.text()\n+        self.assertCommand(\"!shipit\", text.convert(\"![ship it!]()\"))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:30:24Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:30:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjM4NQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156385","bodyText":"add instance variable self.testbot = self","diffHunk":"@@ -1,38 +1,28 @@\n-import logging\n import queue\n-import unittest\n \n-from errbot.backends.test import TestBot\n+from tests.isolated_testcase import IsolatedTestCase\n \n \n-class TestSpam(unittest.TestCase):\n-\n-    def setUp(self):\n-        self.testbot = TestBot(extra_plugin_dir='plugins',\n-                               loglevel=logging.ERROR)\n-        self.testbot.start()\n-\n-    def tearDown(self):\n-        self.testbot.stop()\n+class TestSpam(IsolatedTestCase):\n \n     def test_spam_callback(self):\n-        self.testbot.assertCommand('c'*1001, 'you\\'re spamming')\n-        self.testbot.assertCommand('\\n\\n'*11, 'you\\'re spamming')\n+        self.assertCommand('c'*1001, 'you\\'re spamming')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:31:06Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:31:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjQ4Mg==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156482","bodyText":"self.testbot = self","diffHunk":"@@ -43,30 +33,24 @@ def setUp(self):\n                 }\n             }\n         }\n-        self.testbot = TestBot(extra_plugin_dir='plugins',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzczOTE3Mw==","createdAt":"2018-08-10T08:21:48Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:31:43Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:31:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjYzNg==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156636","bodyText":"single quotes","diffHunk":"@@ -1,15 +1,15 @@\n import requests_mock\n import vcr\n \n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = 'plugins'\n \n+class GhettoTest(IsolatedTestCase):\n \n-@vcr.use_cassette('tests/cassettes/ghetto.yaml')\n-def test_ghetto(testbot):\n-    testbot.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")\n-    with requests_mock.Mocker() as m:\n-        m.register_uri('POST', 'http://www.gizoogle.net/textilizer.php',\n-                       text='test text which will not match with the regex')\n-        testbot.assertCommand(\"!ghetto ...\", \"Shiznit happens!\")\n+    @vcr.use_cassette('tests/cassettes/ghetto.yaml')\n+    def test_ghetto(self):\n+        self.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc0MTcyNw==","createdAt":"2018-08-10T09:13:48Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:32:43Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:32:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjY3MQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156671","bodyText":"single quotes","diffHunk":"@@ -1,15 +1,15 @@\n import requests_mock\n import vcr\n \n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = 'plugins'\n \n+class GhettoTest(IsolatedTestCase):\n \n-@vcr.use_cassette('tests/cassettes/ghetto.yaml')\n-def test_ghetto(testbot):\n-    testbot.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")\n-    with requests_mock.Mocker() as m:\n-        m.register_uri('POST', 'http://www.gizoogle.net/textilizer.php',\n-                       text='test text which will not match with the regex')\n-        testbot.assertCommand(\"!ghetto ...\", \"Shiznit happens!\")\n+    @vcr.use_cassette('tests/cassettes/ghetto.yaml')\n+    def test_ghetto(self):\n+        self.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")\n+        with requests_mock.Mocker() as m:\n+            m.register_uri('POST', 'http://www.gizoogle.net/textilizer.php',\n+                           text='test text which will not match with the regex')\n+            self.assertCommand(\"!ghetto ...\", \"Shiznit happens!\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc0MTcyMw==","createdAt":"2018-08-10T09:13:44Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:32:57Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:32:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NzMyMQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209157321","bodyText":"you should be able to use requests-mock to break IGitt so it gives a RuntimeError , but ... not critical ... this is OK for now","diffHunk":"@@ -65,7 +68,7 @@ def __init__(self, bot, name=None):\n                              filter(lambda x: (x.full_name.split('/')[0] ==\n                                                self.GH_ORG_NAME),\n                                     self.IGH.write_repositories)}\n-        except RuntimeError:\n+        except RuntimeError:  # pragma: no cover, for logging","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzczODAyMw==","createdAt":"2018-08-10T07:55:39Z","content":"HEART","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:36:20Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:36:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTM3MzYxMg==","url":"https://github.com/coala/corobo/pull/577#issuecomment-405373612","bodyText":"Blocked until corobotestcase in plugins is implemented.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-16T20:36:12Z","lastEditedAt":"2018-08-02T07:57:09Z","updatedAt":"2018-08-02T07:57:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgxNzA5MQ==","url":"https://github.com/coala/corobo/pull/577#issuecomment-406817091","bodyText":"Still relevant?","diffHunk":null,"author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"reactions":[],"createdAt":"2018-07-21T19:03:26Z","lastEditedAt":null,"updatedAt":"2018-07-21T19:03:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTQ4NzI2NQ==","url":"https://github.com/coala/corobo/pull/577#issuecomment-411487265","bodyText":"Yes, I was working on that only.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-08T17:28:13Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:28:13Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534132782000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/578","number":578,"title":"Emojis for rage, heart eyes, cake, and penguin have been added. 😡😍🎂🐧","body":"Closes #229\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":4,"createdAt":"2018-07-04T19:11:52Z","updatedAt":"2018-08-13T03:59:42Z","closedAt":"2018-08-13T03:59:42Z","state":"closed","user":{"login":"AnirudhaRamesh","avatarUrl":"https://avatars0.githubusercontent.com/u/30972131?v=4"},"owner":{"login":"AnirudhaRamesh","avatarUrl":"https://avatars0.githubusercontent.com/u/30972131?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/578","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMjU0Njc4OA==","url":"https://github.com/coala/corobo/pull/578#issuecomment-402546788","bodyText":"Newcomer, 1st issue :)\n@meetmangukiya","diffHunk":null,"author":{"login":"AnirudhaRamesh","avatarUrl":"https://avatars0.githubusercontent.com/u/30972131?v=4","name":"Anirudha Ramesh"},"createdAt":"2018-07-04T19:24:30Z","lastEditedAt":null,"updatedAt":"2018-07-04T19:24:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjg4OTUzOQ==","url":"https://github.com/coala/corobo/pull/578#issuecomment-402889539","bodyText":"Please read and follow https://coala.io/commit carefully.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-06T00:28:26Z","lastEditedAt":null,"updatedAt":"2018-07-06T00:28:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzAwNTc0OA==","url":"https://github.com/coala/corobo/pull/578#issuecomment-403005748","bodyText":"@AnirudhaRamesh this change is not really required IMHO. You can get assigned to an issue with label 'difficulty/newcomer' first and then open a PR as a solution for that issue.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-07-06T11:19:30Z","lastEditedAt":"2018-07-06T14:43:34Z","updatedAt":"2018-07-06T14:43:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQwMjg2NQ==","url":"https://github.com/coala/corobo/pull/578#issuecomment-412402865","bodyText":"Abandoned PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T03:59:42Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:59:42Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535453840000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/580","number":580,"title":"searchdocs_test: change http to https","body":"Closes #579\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2018-07-11T13:43:42Z","updatedAt":"2018-08-28T10:57:20Z","closedAt":null,"state":"open","user":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"owner":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"assignee":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/580","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNDE3NTkxMQ==","url":"https://github.com/coala/corobo/pull/580#issuecomment-404175911","bodyText":"Can anyone help me to rectify what is wrong with this?","diffHunk":null,"author":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4","name":null},"reactions":[],"createdAt":"2018-07-11T13:48:17Z","lastEditedAt":null,"updatedAt":"2018-07-11T13:48:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNDIxNDUwNA==","url":"https://github.com/coala/corobo/pull/580#issuecomment-404214504","bodyText":"@ankitb073 It might look overwhelming, but go through the logs once and check where the test's fails.\nAlso, check the searchdocs plugin and make the changes required to return a https link. :)","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-11T15:36:35Z","lastEditedAt":null,"updatedAt":"2018-07-11T15:36:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjU0MjY5Mw==","url":"https://github.com/coala/corobo/pull/580#issuecomment-416542693","bodyText":"@ankitb073 ping. Come on finish it up, you are really close ;)","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-28T10:57:20Z","lastEditedAt":null,"updatedAt":"2018-08-28T10:57:20Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533117893000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/588","number":588,"title":"configuration: Use default configurations","body":"Closes #586\nCloses #587","comments":16,"createdAt":"2018-07-20T19:30:55Z","updatedAt":"2018-08-01T10:04:53Z","closedAt":"2018-08-01T10:03:37Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"enhancement","color":"84b6eb"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/588","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxODkzMA==","url":"https://github.com/coala/corobo/pull/588#discussion_r204218930","bodyText":"one level less of indentation, same for next line.","diffHunk":"@@ -107,3 +107,10 @@\n     'LabHub:*': {'allowprivate': False}}\n \n AUTOINSTALL_DEPS = True\n+\n+DEFAULT_CONFIG = {\n+    'SpammingAlert': {\n+        'MAX_MSG_LEN': 1000,\n+        'MAX_LINES': 20,\n+        },","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"reactions":[],"createdAt":"2018-07-21T19:05:01Z","lastEditedAt":null,"updatedAt":"2018-07-21T19:05:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxOTAyOA==","url":"https://github.com/coala/corobo/pull/588#discussion_r204219028","bodyText":"Reorder class definition as SpammingAlert(DefaultConfigMixin, BotPlugin) and you can eliminate the get_configuration_template overriding completely.","diffHunk":"@@ -3,32 +3,28 @@\n from errbot import BotPlugin\n from errbot.templating import tenv\n \n-from plugins import constants\n+from utils.mixin import DefaultConfigMixin\n \n \n-class SpammingAlert(BotPlugin):\n+class SpammingAlert(BotPlugin, DefaultConfigMixin):\n     \"\"\"\n     A plugin which alerts the user that they might be spamming.\n     \"\"\"\n \n-    CONFIG_TEMPLATE = {\n-        'MAX_MSG_LEN': constants.MAX_MSG_LEN,\n-        'MAX_LINES': constants.MAX_LINES\n-    }\n-\n     def get_configuration_template(self):","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjk5MTAyMg==","createdAt":"2018-07-25T23:03:20Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-07-21T19:10:45Z","lastEditedAt":null,"updatedAt":"2018-07-21T19:10:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxOTQwNg==","url":"https://github.com/coala/corobo/pull/588#discussion_r204219406","bodyText":"create a configure method that does something like:\ndef configure(self, config):\n  new = self.bot_config.DEFAULT_CONFIG[self.name]\n  for key, value in config:\n    new[key] = value\n  self.config = new","diffHunk":"@@ -0,0 +1,18 @@\n+class DefaultConfigMixin():\n+\n+    @property\n+    def _default_config(self):\n+        if (self.bot_config.DEFAULT_CONFIG and self.name\n+            in self.bot_config.DEFAULT_CONFIG):\n+            return self.bot_config.DEFAULT_CONFIG[self.name]\n+\n+    def __init__(self, bot, name=None):\n+        super().__init__(bot, name=name)\n+        default_config = self._default_config\n+        if default_config and not self.config:\n+            super().configure(default_config)\n+\n+    def get_configuration_template(self):\n+        default_config = self._default_config\n+        if default_config:\n+            return default_config","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjk5MTAxOQ==","createdAt":"2018-07-25T23:03:15Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-07-21T19:27:01Z","lastEditedAt":null,"updatedAt":"2018-07-21T19:27:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTMwMDQ3NQ==","url":"https://github.com/coala/corobo/pull/588#discussion_r205300475","bodyText":"Changing the order (BotPlugin, DefaultConfigMixin) --> (DefaultConfigMixin, BotPlugin)) makes  BotPlugin the base class and hence it throws AttributeError for self.config","diffHunk":"@@ -0,0 +1,24 @@\n+class DefaultConfigMixin():\n+\n+    @property\n+    def _default_config(self):\n+        if (self.bot_config.DEFAULT_CONFIG and self.name\n+            in self.bot_config.DEFAULT_CONFIG):\n+            return self.bot_config.DEFAULT_CONFIG[self.name]\n+\n+    def __init__(self, bot, name=None):\n+        super().__init__(bot, name=name)\n+        default_config = self._default_config\n+        if default_config:","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-26T00:26:28Z","lastEditedAt":null,"updatedAt":"2018-07-26T00:26:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1ODY5OQ==","url":"https://github.com/coala/corobo/pull/588#discussion_r205958699","bodyText":"No it doesnt.\nIt makes both classes the base class, irrespective of order.\nWhat changes is which is called first, and the mixin must be first.\nThen you call the super to let BotPlugin do its work at beginning or end of the mixin methods depending on the needs of the mixin.","diffHunk":"@@ -0,0 +1,24 @@\n+class DefaultConfigMixin():\n+\n+    @property\n+    def _default_config(self):\n+        if (self.bot_config.DEFAULT_CONFIG and self.name\n+            in self.bot_config.DEFAULT_CONFIG):\n+            return self.bot_config.DEFAULT_CONFIG[self.name]\n+\n+    def __init__(self, bot, name=None):\n+        super().__init__(bot, name=name)\n+        default_config = self._default_config\n+        if default_config:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T02:14:09Z","lastEditedAt":null,"updatedAt":"2018-07-29T02:14:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1ODczOA==","url":"https://github.com/coala/corobo/pull/588#discussion_r205958738","bodyText":"what the??\na plugin should include its own config template in its own source file, and not rely on config.py.\nthe plugin config information stays here in the plugin.\nconfig.py should only have overrides for the orgs preferred starting config, only where it differs from the bot defaults.\notherwise it is mandatory to include in config.py a bunch of plugin config values which are not coala specific.\nand if someone copies only the plugin file , they should be ok.  (they will also need to copy DefaultConfigMixin , which is annoying but we can solve that later.)  constants.py should go away eventually when each plugin is able to be customised by orgs easily.","diffHunk":"@@ -3,32 +3,25 @@\n from errbot import BotPlugin\n from errbot.templating import tenv\n \n-from plugins import constants\n+from utils.mixin import DefaultConfigMixin\n \n \n-class SpammingAlert(BotPlugin):\n+class SpammingAlert(DefaultConfigMixin, BotPlugin):\n     \"\"\"\n     A plugin which alerts the user that they might be spamming.\n     \"\"\"\n \n-    CONFIG_TEMPLATE = {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T02:17:18Z","lastEditedAt":null,"updatedAt":"2018-07-29T02:17:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk4Njk2OQ==","url":"https://github.com/coala/corobo/pull/588#discussion_r205986969","bodyText":"Got it 👍\nIt took me more than the required time to understand this but I finally understood now 😅 .\nI got confused by the Right->Left sequence mentioned here https://www.ianlewis.org/en/mixins-and-python and ignored the fact that __init__ will be called based on the left to right sequence.\nEarlier __init__ of DefaultConfigMixin with sequece (BotPlugin, DefaultConfigMixin) was not even being called.\nThanks for explaining.","diffHunk":"@@ -0,0 +1,24 @@\n+class DefaultConfigMixin():\n+\n+    @property\n+    def _default_config(self):\n+        if (self.bot_config.DEFAULT_CONFIG and self.name\n+            in self.bot_config.DEFAULT_CONFIG):\n+            return self.bot_config.DEFAULT_CONFIG[self.name]\n+\n+    def __init__(self, bot, name=None):\n+        super().__init__(bot, name=name)\n+        default_config = self._default_config\n+        if default_config:","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-29T21:01:10Z","lastEditedAt":null,"updatedAt":"2018-07-29T21:01:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNTEzOQ==","url":"https://github.com/coala/corobo/pull/588#discussion_r206105139","bodyText":"lines with an if clause should be indented four additional spaces so that do not align with the statements in the indented block","diffHunk":"@@ -0,0 +1,38 @@\n+from itertools import chain\n+\n+class DefaultConfigMixin():\n+\n+    @property\n+    def _default_config(self):\n+        if (self.bot_config.DEFAULT_CONFIG and self.name\n+            in self.bot_config.DEFAULT_CONFIG):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2MTcxNA==","createdAt":"2018-07-30T12:09:00Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-07-30T11:54:37Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:54:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNTU0Nw==","url":"https://github.com/coala/corobo/pull/588#discussion_r206105547","bodyText":"extra config here should override the plugin defaults, so these tests passing show that your code is not working correctly.\nAnyway, dont add extra_config here.  This test class is good without it.\nCreate an additional test class TestSpamExtraConfig which verifies the extra config overrides the plugin defaults.","diffHunk":"@@ -7,8 +7,17 @@\n class TestSpam(unittest.TestCase):\n \n     def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'SpammingAlert': {\n+                    'MAX_MSG_LEN': 1000,\n+                    'MAX_LINES': 10,\n+                }\n+            }\n+        }\n         self.testbot = TestBot(extra_plugin_dir='plugins',\n-                               loglevel=logging.ERROR)\n+                               loglevel=logging.ERROR,\n+                               extra_config=extra_config)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2MTUzMg==","createdAt":"2018-07-30T12:04:58Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-07-30T11:56:19Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:56:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjMxMjA1OQ==","url":"https://github.com/coala/corobo/pull/588#discussion_r206312059","bodyText":"done","diffHunk":"@@ -7,8 +7,17 @@\n class TestSpam(unittest.TestCase):\n \n     def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'SpammingAlert': {\n+                    'MAX_MSG_LEN': 1000,\n+                    'MAX_LINES': 10,\n+                }\n+            }\n+        }\n         self.testbot = TestBot(extra_plugin_dir='plugins',\n-                               loglevel=logging.ERROR)\n+                               loglevel=logging.ERROR,\n+                               extra_config=extra_config)","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-30T20:34:46Z","lastEditedAt":null,"updatedAt":"2018-07-30T20:34:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjMyOTI4MQ==","url":"https://github.com/coala/corobo/pull/588#discussion_r206329281","bodyText":"this does not confirm that the extra config is being used, because 5001 is above the default of 1000 and the extra config value of 500.  So it will only verify that the command works; it doesnt verify that the command is triggered only if above the number of lines setting.\nAn obvious omission from this test module is asserting that a person can post content below these sizes and no errors occur.  I'm not sure whether errbot test framework has a suitable helper for that.\nthe next line is also not 100% ok.   '\\n\\n'*6 is 12 new line characters, and that is lower than constants.MAX_LINES -- so, all good?\nnot quite ... it assumes that pytest did not run test_spam_extra_config_configuration before test_spam_extra_config_callback.\nThere is no guarantee of that.\nhttps://duckduckgo.com/?q=pytest+plugin+random+order\nTests should not leave the test bed modified after they have finished\nSimplest fix is to add a tearDown if using unittest.TestCase to reset the config to the default state, or ... less correct .. (re)set to a constant state in setUp.\nThis also needs to be done to TestSpam.","diffHunk":"@@ -22,3 +22,32 @@ def test_spam_configuration(self):\n         self.testbot.assertCommand('!plugin config SpammingAlert '\n                                    '{\\'MAX_MSG_LEN\\':1, \\'MAX_LINES\\': 1}',\n                                    'configuration done')\n+\n+\n+class TestSpamExtraConfig(unittest.TestCase):\n+\n+    def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'SpammingAlert': {\n+                    'MAX_MSG_LEN': 500,\n+                    'MAX_LINES': 5,\n+                }\n+            }\n+        }\n+        self.testbot = TestBot(extra_plugin_dir='plugins',\n+                               loglevel=logging.ERROR,\n+                               extra_config=extra_config)\n+        self.testbot.start()\n+\n+    def test_spam_extra_config_callback(self):\n+        self.testbot.assertCommand('c'*5001, 'you\\'re spamming')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T21:32:32Z","lastEditedAt":null,"updatedAt":"2018-07-30T21:32:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjY0ODUzNw==","url":"https://github.com/coala/corobo/pull/588#discussion_r206648537","bodyText":"Shit. That 5001 was a typo. It was supposed to be 501. 😅","diffHunk":"@@ -22,3 +22,32 @@ def test_spam_configuration(self):\n         self.testbot.assertCommand('!plugin config SpammingAlert '\n                                    '{\\'MAX_MSG_LEN\\':1, \\'MAX_LINES\\': 1}',\n                                    'configuration done')\n+\n+\n+class TestSpamExtraConfig(unittest.TestCase):\n+\n+    def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'SpammingAlert': {\n+                    'MAX_MSG_LEN': 500,\n+                    'MAX_LINES': 5,\n+                }\n+            }\n+        }\n+        self.testbot = TestBot(extra_plugin_dir='plugins',\n+                               loglevel=logging.ERROR,\n+                               extra_config=extra_config)\n+        self.testbot.start()\n+\n+    def test_spam_extra_config_callback(self):\n+        self.testbot.assertCommand('c'*5001, 'you\\'re spamming')","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-31T19:06:50Z","lastEditedAt":null,"updatedAt":"2018-07-31T19:06:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjcyNjI4Ng==","url":"https://github.com/coala/corobo/pull/588#discussion_r206726286","bodyText":"use '{\\'MAX_MSG_LEN\\':1, \\'MAX_LINES\\': 1}', from the original code, so that the diff is aligned properly.","diffHunk":"@@ -19,6 +23,50 @@ def test_spam_configuration(self):\n         self.testbot.assertCommand('!plugin config SpammingAlert '\n                                    '{\\'MAX_LINES\\': 10}',\n                                    'configuration done')\n+        self.testbot.assertCommand('!plugin config SpammingAlert',\n+                                   '{\\'MAX_LINES\\': 10}')\n+        self.testbot.assertCommand('!plugin config SpammingAlert '\n+                                   '{\\'MAX_LINES\\': 20, \\'MAX_MSG_LEN\\': 200}',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-01T00:49:58Z","lastEditedAt":null,"updatedAt":"2018-08-01T00:49:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjc3NDQ5NQ==","url":"https://github.com/coala/corobo/pull/588#discussion_r206774495","bodyText":"@jayvdb this sets the config MAX_MSG_LEN = 1 for the testbot. So when the command msg !plugin config SpammingAlert is executed in the next line. The bot interprets the cmd msg as a spam since MAX_MSG_LEN is set to 1. So I increased the MAX_MSG_LEN to 20.","diffHunk":"@@ -19,6 +23,50 @@ def test_spam_configuration(self):\n         self.testbot.assertCommand('!plugin config SpammingAlert '\n                                    '{\\'MAX_LINES\\': 10}',\n                                    'configuration done')\n+        self.testbot.assertCommand('!plugin config SpammingAlert',\n+                                   '{\\'MAX_LINES\\': 10}')\n+        self.testbot.assertCommand('!plugin config SpammingAlert '\n+                                   '{\\'MAX_LINES\\': 20, \\'MAX_MSG_LEN\\': 200}',","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI3NTYwMA==","createdAt":"2018-08-01T07:43:01Z","content":"LAUGH","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yNzI3NTYwNg==","createdAt":"2018-08-01T07:43:07Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-01T07:08:39Z","lastEditedAt":"2018-08-01T07:11:08Z","updatedAt":"2018-08-01T07:11:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjc4ODk4Nw==","url":"https://github.com/coala/corobo/pull/588#discussion_r206788987","bodyText":"Please do not put any overrides here.\nThese are the same as the bot defaults, so unnecessary.","diffHunk":"@@ -111,3 +111,10 @@\n     'LabHub:*': {'allowprivate': False}}\n \n AUTOINSTALL_DEPS = True\n+\n+DEFAULT_CONFIG = {\n+    'SpammingAlert': {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI4MjU1NQ==","createdAt":"2018-08-01T09:53:38Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-01T08:09:16Z","lastEditedAt":null,"updatedAt":"2018-08-01T08:09:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjgxMDYyNg==","url":"https://github.com/coala/corobo/pull/588#discussion_r206810626","bodyText":"This should be documented and be an exception. Newcomer issue?","diffHunk":"@@ -19,6 +23,50 @@ def test_spam_configuration(self):\n         self.testbot.assertCommand('!plugin config SpammingAlert '\n                                    '{\\'MAX_LINES\\': 10}',\n                                    'configuration done')\n+        self.testbot.assertCommand('!plugin config SpammingAlert',\n+                                   '{\\'MAX_LINES\\': 10}')\n+        self.testbot.assertCommand('!plugin config SpammingAlert '\n+                                   '{\\'MAX_LINES\\': 20, \\'MAX_MSG_LEN\\': 200}',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-01T09:24:03Z","lastEditedAt":null,"updatedAt":"2018-08-01T09:24:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNzkyNTA3Mg==","url":"https://github.com/coala/corobo/pull/588#issuecomment-407925072","bodyText":"Since the SpammingAlert commit (d2cd088) is dependent on the Mixin commit (d0a330f). I pushed the commits it in the same PR.\nPlus, I thought DefaultConfigMixin PR without any adaptation shown would be bland.\n\nUnrelated commits = Different PRs","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-25T23:11:01Z","lastEditedAt":"2018-07-29T17:30:27Z","updatedAt":"2018-07-29T17:30:27Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534143783000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/595","number":595,"title":"as ","body":"Closes #579\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":3,"createdAt":"2018-08-01T20:45:03Z","updatedAt":"2018-08-13T07:03:03Z","closedAt":"2018-08-13T07:03:03Z","state":"closed","user":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"owner":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/595","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwOTcyMTkxNA==","url":"https://github.com/coala/corobo/pull/595#issuecomment-409721914","bodyText":"Please read #579 (comment)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T21:02:25Z","lastEditedAt":null,"updatedAt":"2018-08-01T21:02:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQyNjI1NQ==","url":"https://github.com/coala/corobo/pull/595#issuecomment-412426255","bodyText":"Created duplicate PRs that are broken.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T07:03:03Z","lastEditedAt":null,"updatedAt":"2018-08-13T07:03:03Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534046570000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/597","number":597,"title":"DefaultConfigMixin: Modify implementation","body":"Store the default values in CONFIG_TEMPLATE and\nthen allow a subset of those config variables\noverridden in the config.py's DEFAULT_CONFIG.\nCloses #596","comments":25,"createdAt":"2018-08-04T14:30:20Z","updatedAt":"2018-08-12T04:02:50Z","closedAt":"2018-08-12T03:48:55Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/low","color":"207de5"},{"name":"enhancement","color":"84b6eb"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/597","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcxNDg2MQ==","url":"https://github.com/coala/corobo/pull/597#discussion_r207714861","bodyText":"Why change from 500 to 50?","diffHunk":"@@ -38,8 +38,7 @@ def setUp(self):\n         extra_config = {\n             'DEFAULT_CONFIG': {\n                 'SpammingAlert': {\n-                    'MAX_MSG_LEN': 500,\n-                    'MAX_LINES': 5,\n+                    'MAX_MSG_LEN': 50,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NjYzMQ==","createdAt":"2018-08-04T19:52:13Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-04T17:47:36Z","lastEditedAt":null,"updatedAt":"2018-08-04T17:47:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcxNzkxNg==","url":"https://github.com/coala/corobo/pull/597#discussion_r207717916","bodyText":"misjudgement","diffHunk":"@@ -38,8 +38,7 @@ def setUp(self):\n         extra_config = {\n             'DEFAULT_CONFIG': {\n                 'SpammingAlert': {\n-                    'MAX_MSG_LEN': 500,\n-                    'MAX_LINES': 5,\n+                    'MAX_MSG_LEN': 50,","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NjYzMw==","createdAt":"2018-08-04T19:52:18Z","content":"THUMBS_DOWN","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-04T19:52:10Z","lastEditedAt":null,"updatedAt":"2018-08-04T19:52:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTIyMzU0Nw==","url":"https://github.com/coala/corobo/pull/597#discussion_r209223547","bodyText":"why this?\nThat is the default, so an override shouldnt be necessary, iiuc","diffHunk":"@@ -9,12 +9,24 @@\n \n class WolframAlphaTest(IsolatedTestCase):\n \n+    def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'WolframAlpha': {\n+                    'WA_TOKEN': None,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T11:03:51Z","lastEditedAt":null,"updatedAt":"2018-08-10T11:03:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTIyNTYwNA==","url":"https://github.com/coala/corobo/pull/597#discussion_r209225604","bodyText":"Yes, this was excessive, removed it.","diffHunk":"@@ -9,12 +9,24 @@\n \n class WolframAlphaTest(IsolatedTestCase):\n \n+    def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'WolframAlpha': {\n+                    'WA_TOKEN': None,","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-10T11:15:12Z","lastEditedAt":null,"updatedAt":"2018-08-10T11:15:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTIzMDc0Ng==","url":"https://github.com/coala/corobo/pull/597#discussion_r209230746","bodyText":"this looks wrong.\nThe current config is self.answer_end_point","diffHunk":"@@ -24,6 +26,7 @@ def test_answer(self):\n         self.assertIn('Please checkout the following links', self.pop_message())\n         self.push_message('!answer shell autocompletion')\n         self.assertIn('Please checkout the following links', self.pop_message())\n+        self.assertCommand('!plugin config answer', '{\\'ANSWER_END\\': None}')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T11:39:54Z","lastEditedAt":null,"updatedAt":"2018-08-10T11:39:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzOTkzNw==","url":"https://github.com/coala/corobo/pull/597#discussion_r209439937","bodyText":"incorrect syntax!!","diffHunk":"@@ -10,31 +10,28 @@ def _default_config(self):\n \n     def __init__(self, bot, name=None):\n         super().__init__(bot, name=name)\n-        default_config = self._default_config\n-        if default_config and not hasattr(self, 'config'):\n-            self.configure(default_config)\n+        if not hasattr(self, 'CONFIG_TEMPLATE'):  # pragma: no cover\n+            self.log.error('CONFIG_TEMPLATE for plugin %s is missing.', self.name)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T23:53:27Z","lastEditedAt":null,"updatedAt":"2018-08-11T23:53:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzOTk4MQ==","url":"https://github.com/coala/corobo/pull/597#discussion_r209439981","bodyText":"use self.answer_end_point , and dont # Ignore InvalidLinkBear","diffHunk":"@@ -24,6 +26,9 @@ def test_answer(self):\n         self.assertIn('Please checkout the following links', self.pop_message())\n         self.push_message('!answer shell autocompletion')\n         self.assertIn('Please checkout the following links', self.pop_message())\n+        self.assertCommand('!plugin config answer',\n+                           # Ignore InvalidLinkBear\n+                           '{\\'ANSWER_END\\': \\'http://0.0.0.0:8000\\'}')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T23:56:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T23:56:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5MTA2NA==","url":"https://github.com/coala/corobo/pull/597#issuecomment-410491064","bodyText":"I would like to see separate commits included in this PR for all of the configuration upgrades which we need (except for LabHub):\n\n#380\n#381\n#383\n\nAny others?\nOnly by putting them all in here together can we ensure that this is the last change needed to DefaultConfigMixin for your project.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NTYwMw==","createdAt":"2018-08-05T12:50:21Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-05T02:32:26Z","lastEditedAt":"2018-08-05T02:33:44Z","updatedAt":"2018-08-05T02:33:44Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533450303000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/598","number":598,"title":"GitStats: Remove LabHub inheritance","body":"Inheritence was resulting in labhub commands\nbeing triggered twice when used. This creates\ndependency on labhub instead of inheritance.\nFixes #441","comments":5,"createdAt":"2018-08-04T20:58:54Z","updatedAt":"2018-08-05T06:25:03Z","closedAt":"2018-08-05T00:30:32Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"ddba61"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/598","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535376796000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/599","number":599,"title":"Make noisy commands private to org members","body":"Pitchfork command is accessible only by\nmembers of the organization.\nCloses #358","comments":14,"createdAt":"2018-08-04T22:35:10Z","updatedAt":"2018-08-27T13:33:16Z","closedAt":"2018-08-13T13:20:23Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"b60205"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/599","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMjc4Mw==","url":"https://github.com/coala/corobo/pull/599#discussion_r207722783","bodyText":"why change name?","diffHunk":"@@ -1,6 +1,7 @@\n [Core]\n-name = pitchfork\n+name = Pitchfork","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:00:27Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:00:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMjgwMA==","url":"https://github.com/coala/corobo/pull/599#discussion_r207722800","bodyText":"Many of our plugins which be changed to using labhub permissions.\ncreate a LabHubTestCase subclassing CoroboTestCase which does all the setUp necessary for testing a plugin which depends on LabHub.","diffHunk":"@@ -1,9 +1,54 @@\n-pytest_plugins = ['errbot.backends.test']\n-extra_plugin_dir = 'plugins'\n+import github3\n+import IGitt\n+import plugins.labhub\n+import plugins.pitchfork\n \n+from unittest.mock import PropertyMock\n+from unittest.mock import create_autospec\n+from tests.corobo_test_case import CoroboTestCase\n \n-def test(testbot):\n-    testbot.assertCommand('!pitchfork @meet', 'being pitchforked')\n-    testbot.assertCommand('!pitchfork @meet down to hell', 'being pitchforked')\n-    testbot.assertCommand('!pitchfork meet to hell', 'being pitchforked')\n-    testbot.assertCommand('!pitchfork', 'Usage')\n+\n+class TestPitchfork(CoroboTestCase):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2MTg1Mg==","createdAt":"2018-08-05T06:27:41Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-05T01:02:15Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:02:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMzA3NQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r207723075","bodyText":"It shouldnt be necessary for all our plugins to have this duplicated activate code.\nAgain, creating a subclass or mixin for those plugins would be helpful.","diffHunk":"@@ -3,14 +3,20 @@\n import textwrap\n \n from errbot import BotPlugin, botcmd\n+from plugins.labhub import members_only\n \n \n class Pitchfork(BotPlugin):\n     \"\"\"\n     To pitchfork users down to ...\n     \"\"\"\n \n+    def activate(self):\n+        super().activate()\n+        self.team_mapping = self.get_plugin('LabHub').team_mapping","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:29:28Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:29:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjU5Nw==","url":"https://github.com/coala/corobo/pull/599#discussion_r207726597","bodyText":"To make it workable with CoroboTestCase. According to errbot documentation plugin name and the class name should be same.\n\nThe key Name should be identical to the name you gave to the class in your plugin file, which in our case was HelloWorld. While these names can differ, doing so is not recommended.","diffHunk":"@@ -1,6 +1,7 @@\n [Core]\n-name = pitchfork\n+name = Pitchfork","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-05T06:27:35Z","lastEditedAt":"2018-08-05T06:39:32Z","updatedAt":"2018-08-05T06:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1ODQyOQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r209458429","bodyText":"not done\nand also this shouldnt be using labhub directly.\nlabhub should be providing a filter\n#599 (review)","diffHunk":"@@ -3,14 +3,20 @@\n import textwrap\n \n from errbot import BotPlugin, botcmd\n+from plugins.labhub import members_only\n \n \n class Pitchfork(BotPlugin):\n     \"\"\"\n     To pitchfork users down to ...\n     \"\"\"\n \n+    def activate(self):\n+        super().activate()\n+        self.team_mapping = self.get_plugin('LabHub').team_mapping","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T15:04:45Z","lastEditedAt":null,"updatedAt":"2018-08-12T15:04:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1ODQ2OQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r209458469","bodyText":"we do not want to make everything dependant on labhub in order to prevent people from misusing all of the other commands.","diffHunk":"@@ -3,14 +3,20 @@\n import textwrap\n \n from errbot import BotPlugin, botcmd\n+from plugins.labhub import members_only","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T15:06:08Z","lastEditedAt":null,"updatedAt":"2018-08-12T15:06:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMDQxMw==","url":"https://github.com/coala/corobo/pull/599#discussion_r209500413","bodyText":"ideally this is configurable, but that can be done after gsoc.\nput it in constants for now.","diffHunk":"@@ -108,6 +89,21 @@ def team_mapping(self):\n             'maintainers': self.TEAMS[self.GH_ORG_NAME + ' maintainers'],\n         }\n \n+    @cmdfilter\n+    def members_only(self, msg, cmd, args, dry_run):\n+        user = msg.frm.nick\n+        commands = ['assign_cmd', 'create_issue_cmd', 'invite_cmd', 'mark_cmd',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:22:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:22:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMDQ0NA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209500444","bodyText":"yield is better than return.","diffHunk":"@@ -138,42 +133,40 @@ def invite_cmd(self, msg, match):\n \n         valid_teams = self.team_mapping()\n         if team not in valid_teams:\n-            yield 'Please select from one of the valid teams: ' + ', '.join(\n+            return 'Please select from one of the valid teams: ' + ', '.join(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:22:38Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:22:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMTE5NQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r209501195","bodyText":"cant we also emit a message 'You need to be a member of this organization to use this command.' so that the tests dont change?\nperhaps change it to return None, 'echo', 'You need to be a member of this organization to use this command.' and add an echo command?","diffHunk":"@@ -108,6 +89,21 @@ def team_mapping(self):\n             'maintainers': self.TEAMS[self.GH_ORG_NAME + ' maintainers'],\n         }\n \n+    @cmdfilter\n+    def members_only(self, msg, cmd, args, dry_run):\n+        user = msg.frm.nick\n+        commands = ['assign_cmd', 'create_issue_cmd', 'invite_cmd', 'mark_cmd',\n+                    'pr_stats', 'unassign_cmd', 'pitchfork', 'the_rules', 'wa',\n+                    'answer', 'lmgtfy', 'ghetto', 'explain', 'nevermind']\n+\n+        if cmd in commands:\n+            for team in self.team_mapping().values():\n+                if team.is_member(user):\n+                    return msg, cmd, args\n+            return None, None, None","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:27:33Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:27:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMTMzNA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209501334","bodyText":"ideally this test doesnt change, but if it has to, change this to garbage so it is obvious it shouldnt work","diffHunk":"@@ -180,13 +183,14 @@ def test_create_issue_cmd(self):\n \n         # not a member of org\n         self.mock_team.is_member.return_value = False\n-        testbot_public.assertCommand(\n-            textwrap.dedent('''\\\n-                !new issue repository this is the title\n-                body\n-            '''),\n-            'You need to be a member of this organization to use this command.'\n-        )\n+        with self.assertRaises(queue.Empty):\n+            testbot_public.assertCommand(\n+                textwrap.dedent('''\\\n+                    !new issue repository this is the title\n+                    body\n+                '''),\n+                'Here you go'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:28:33Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:28:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMTQ5Mw==","url":"https://github.com/coala/corobo/pull/599#discussion_r209501493","bodyText":"something more crazy than :poop: ; that still feels like it might be a legitimate response from the command.","diffHunk":"@@ -106,10 +106,13 @@ def test_invite_cmd(self):\n         mock_team_newcomers.is_member.return_value = False\n         mock_team_developers.is_member.return_value = False\n         mock_team_maintainers.is_member.return_value = False\n+        self.mock_team.is_member.return_value = False\n+        self.labhub.TEAMS = self.teams\n \n-        testbot.assertCommand(\n-            '!invite meet to newcomers',\n-            'You need to be a member of this organization to use this command')\n+        with self.assertRaises(queue.Empty):\n+            testbot.assertCommand(\n+                '!invite meet to newcomers',\n+                ':poop:')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:29:38Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:29:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUyOTI1MA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209529250","bodyText":"Okay, I'll take care of this.","diffHunk":"@@ -108,6 +89,21 @@ def team_mapping(self):\n             'maintainers': self.TEAMS[self.GH_ORG_NAME + ' maintainers'],\n         }\n \n+    @cmdfilter\n+    def members_only(self, msg, cmd, args, dry_run):\n+        user = msg.frm.nick\n+        commands = ['assign_cmd', 'create_issue_cmd', 'invite_cmd', 'mark_cmd',\n+                    'pr_stats', 'unassign_cmd', 'pitchfork', 'the_rules', 'wa',\n+                    'answer', 'lmgtfy', 'ghetto', 'explain', 'nevermind']\n+\n+        if cmd in commands:\n+            for team in self.team_mapping().values():\n+                if team.is_member(user):\n+                    return msg, cmd, args\n+            return None, None, None","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-13T08:35:22Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:35:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTU3MjkwNg==","url":"https://github.com/coala/corobo/pull/599#discussion_r209572906","bodyText":"why is this being changed?","diffHunk":"@@ -421,7 +422,7 @@ def test_mark_cmd(self):\n         # not a member of org\n         self.mock_team.is_member.return_value = False\n         testbot.assertCommand(\n-            cmd_github.format('pending review', 'coala', 'a', '23'),\n+            cmd_github.format('pending review', 'coala', 'test', '23'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T11:18:57Z","lastEditedAt":null,"updatedAt":"2018-08-13T11:18:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTU3MzAyMA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209573020","bodyText":"Not done yet","diffHunk":"@@ -138,42 +133,40 @@ def invite_cmd(self, msg, match):\n \n         valid_teams = self.team_mapping()\n         if team not in valid_teams:\n-            yield 'Please select from one of the valid teams: ' + ', '.join(\n+            return 'Please select from one of the valid teams: ' + ', '.join(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T11:19:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T11:19:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ4ODY2OQ==","url":"https://github.com/coala/corobo/pull/599#issuecomment-410488669","bodyText":"All other plugins which should disabled: the_rules, wolfram_alpha, answer, lmgtfy, ghetto, explain, nevermind.\ni.e. everything except searchdocs .\nAlso this is blocked by #577 .\nIf LabHub is disabled, all of the corobo plugins (listed at https://github.com/errbotio/errbot/wiki ) should not become useless.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:27:20Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:27:20Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534137795000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/506","number":506,"title":"config.py : Add channel list","body":"Add all the channel to the default channel list.\nUpdated config.py.\n\"coala/\" prefix removed as mentioned.\ncloses #412\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":8,"createdAt":"2018-02-13T19:17:26Z","updatedAt":"2018-08-13T05:23:15Z","closedAt":"2018-08-13T05:23:15Z","state":"closed","user":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4"},"owner":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4"},"assignee":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/506","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM2NTg2NTIyNg==","url":"https://github.com/coala/corobo/pull/506#issuecomment-365865226","bodyText":"I need little help here.","diffHunk":null,"author":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4","name":"Sanket Kumar Mali"},"createdAt":"2018-02-15T09:07:08Z","lastEditedAt":null,"updatedAt":"2018-02-15T09:07:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTg2NTU0Ng==","url":"https://github.com/coala/corobo/pull/506#issuecomment-385865546","bodyText":"Squash your commits.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-02T05:01:49Z","lastEditedAt":null,"updatedAt":"2018-05-02T05:01:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTY5Nzg0MA==","url":"https://github.com/coala/corobo/pull/506#issuecomment-409697840","bodyText":"That is not how you squash commits as requested at #506 (comment)\nAsk for help on https://coala.io/chat\nOtherwise this PR will be close and you will be unassigned from the task.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T19:44:02Z","lastEditedAt":null,"updatedAt":"2018-08-01T19:44:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQxMTM0OA==","url":"https://github.com/coala/corobo/pull/506#issuecomment-412411348","bodyText":"PR repository = \"unknown repository\"\nabandoned.  closing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:23:15Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:23:15Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534859991000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/517","number":517,"title":"filters.py: Filter required users","body":"If RESP_ONLY_REQ_USERS configuration is true,\nthen stop responding to users other than those\nin the REQUIRED_USERS list in config.\nCloses #515\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":12,"createdAt":"2018-03-30T07:18:07Z","updatedAt":"2018-08-21T13:59:51Z","closedAt":null,"state":"open","user":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"owner":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"e99695"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/517","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODI2NzI3NA==","url":"https://github.com/coala/corobo/pull/517#discussion_r178267274","bodyText":"this PR isnt about Zulip.  Please remove.  This isnt how we will do Zulip anyway; the patches for Zulip are public.","diffHunk":"@@ -23,7 +23,11 @@ def filters(self, msg, cmd, args, dry_run):\n         return msg, cmd, args\n \n     @cmdfilter\n-    def filter_ignored_users(self, msg, cmd, args, dry_run):\n-        if msg.frm.nick in self.bot_config.IGNORE_USERNAMES:\n+    def filter_users(self, msg, cmd, args, dry_run):\n+        name = msg.frm.fullname if BACKEND == 'Zulip' else msg.frm.nick","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-30T10:02:39Z","lastEditedAt":null,"updatedAt":"2018-03-30T10:02:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NzkzOQ==","url":"https://github.com/coala/corobo/pull/517#discussion_r209487939","bodyText":"remove \\","diffHunk":"@@ -23,7 +23,10 @@ def filters(self, msg, cmd, args, dry_run):\n         return msg, cmd, args\n \n     @cmdfilter\n-    def filter_ignored_users(self, msg, cmd, args, dry_run):\n+    def filter_users(self, msg, cmd, args, dry_run):\n         if msg.frm.nick in self.bot_config.IGNORE_USERNAMES:\n             return None, None, None\n+        if msg.frm.nick not in self.bot_config.REQUIRED_USERS \\","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T04:09:36Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:09:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4Nzk3NQ==","url":"https://github.com/coala/corobo/pull/517#discussion_r209487975","bodyText":"this must be indented four more spaces to avoid confusion with the statements inside the if block","diffHunk":"@@ -23,7 +23,10 @@ def filters(self, msg, cmd, args, dry_run):\n         return msg, cmd, args\n \n     @cmdfilter\n-    def filter_ignored_users(self, msg, cmd, args, dry_run):\n+    def filter_users(self, msg, cmd, args, dry_run):\n         if msg.frm.nick in self.bot_config.IGNORE_USERNAMES:\n             return None, None, None\n+        if msg.frm.nick not in self.bot_config.REQUIRED_USERS \\\n+            and self.bot_config.RESP_ONLY_REQ_USER:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T04:10:09Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:10:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTU5MTExNQ==","url":"https://github.com/coala/corobo/pull/517#discussion_r211591115","bodyText":"@nvzard Am I doing anything wrong here?","diffHunk":"@@ -0,0 +1,16 @@\n+import queue\n+\n+from tests.isolated_testcase import IsolatedTestCase\n+\n+\n+class FiltersTest(IsolatedTestCase):\n+\n+    def test_filter_users(self):\n+        self.bot_config.RESP_ONLY_REQ_USERS = False","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-21T12:47:51Z","lastEditedAt":null,"updatedAt":"2018-08-21T12:47:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYxNDc0Mg==","url":"https://github.com/coala/corobo/pull/517#discussion_r211614742","bodyText":"@Vamshi99 IsolatedTestCase loads all the plugins present in plugins/ directory except LabHub, hence this filter is not loaded by the bot since it is in utils/ dir.","diffHunk":"@@ -0,0 +1,16 @@\n+import queue\n+\n+from tests.isolated_testcase import IsolatedTestCase\n+\n+\n+class FiltersTest(IsolatedTestCase):\n+\n+    def test_filter_users(self):\n+        self.bot_config.RESP_ONLY_REQ_USERS = False","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-21T13:56:30Z","lastEditedAt":"2018-08-21T13:59:51Z","updatedAt":"2018-08-21T13:59:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzUyMzcwNQ==","url":"https://github.com/coala/corobo/pull/517#issuecomment-377523705","bodyText":"@jayvdb Updated","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-03-30T13:26:23Z","lastEditedAt":null,"updatedAt":"2018-03-30T13:26:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzUxOTY1MQ==","url":"https://github.com/coala/corobo/pull/517#issuecomment-397519651","bodyText":"Up for grabs, or is anyone working on it @jayvdb.","diffHunk":null,"author":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4","name":"rishabh"},"createdAt":"2018-06-15T05:44:43Z","lastEditedAt":null,"updatedAt":"2018-06-15T05:44:43Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136906000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/521","number":521,"title":"labhub.py: add migrate_issue plugin","body":"Introduce migrate_issue plugin that adds ability\nto migrate an issue from a source repo to target\nrepo, both owned by the org.\nIssue title, issue  description and all comments\nare copied with a few additional details appended to\nthe the description and comments. Source issue is\nreferenced in the target issue and is closed after\nthe migration is complete.\nCloses #518\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":11,"createdAt":"2018-04-07T15:56:04Z","updatedAt":"2018-08-13T05:08:26Z","closedAt":null,"state":"open","user":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4"},"owner":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4"},"assignee":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4"},"labels":[{"name":"cool and awesome","color":"5319e7"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/521","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTY3Mg==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921672","bodyText":"Please make this workable for gitlab repos as well. The whole point of labhub is to provide a unified front for both GitHub and GitLab, and hence the name LabHub 😉","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:49:26Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:49:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTczMg==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921732","bodyText":"use, if not... so we can remove the reduntant if block and the contained pass statement","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:51:12Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:51:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTczOQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921739","bodyText":"Same as above","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:51:26Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:51:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTc2MA==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921760","bodyText":"RuntimeError in IGitt is not always 404s 😅","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:52:14Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:52:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTc4Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921787","bodyText":"else block is not needed, remove it","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:53:02Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:53:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTg1OA==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921858","bodyText":"maybe include the author as well? Migrate issue opened by @author from ... so the author the issue follows new issue as well","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:54:51Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:54:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTkzNQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921935","bodyText":"Just concatenate this above, concatenation in function args doesn't look good and is confusing","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(\n+            org, repo_name_orig, issue_number) + \\\n+            ' by @' + str(user)\n+\n+        new_issue = self.REPOS[repo_name_final].create_issue(\n+                    new_issue_title, new_issue_description+extra_msg)","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:55:48Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:55:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMjA0Mg==","url":"https://github.com/coala/corobo/pull/521#discussion_r179922042","bodyText":"use for comment in old_issue.comments and get rid of few lines of code here 😉","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(\n+            org, repo_name_orig, issue_number) + \\\n+            ' by @' + str(user)\n+\n+        new_issue = self.REPOS[repo_name_final].create_issue(\n+                    new_issue_title, new_issue_description+extra_msg)\n+        new_issue.labels = old_labels\n+\n+        old_comm = old_issue.comments\n+\n+        for i in range(len(old_comm)):","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:57:11Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:57:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyNTQyNA==","url":"https://github.com/coala/corobo/pull/521#discussion_r179925424","bodyText":"I was trying the same, but there seems to be some problem with the IGitt module I have installed on my system using pip, as it says author of the issue is not an attribute even though I find this method here: https://gitlab.com/gitmate/open-source/IGitt/blob/master/IGitt/GitHub/GitHubIssue.py and I am not particularly sure why but might be some problem with my system... 😅","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-07T19:12:45Z","lastEditedAt":"2018-04-07T19:20:26Z","updatedAt":"2018-04-07T19:20:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTI5Ng==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581296","bodyText":"unrelated change.","diffHunk":"@@ -25,6 +25,7 @@ def setUp(self):\n \n         self.mock_org = create_autospec(github3.orgs.Organization)\n         self.mock_gh = create_autospec(github3.GitHub)\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:34:46Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:34:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTMwMg==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581302","bodyText":"indent only 4 spaces","diffHunk":"@@ -343,3 +344,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+                        'coala maintainers': mock_maint_team,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:35:04Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:35:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTMyMw==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581323","bodyText":"missing whitespace between args","diffHunk":"@@ -343,3 +344,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+                        'coala maintainers': mock_maint_team,\n+                        'coala developers': self.mock_team,\n+                        'coala newcomers': self.mock_team\n+        }\n+        cmd = '!migrate https://github.com/{}/{}/issues/{} https://github.com/{}/{}/'\n+\n+        # Not a maintainer\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'you are not a maintainer!')\n+        # Unknown first org\n+        testbot.assertCommand(cmd.format('coa', 'a', '23','coala','b'),\n+                              'First repository not owned by our org')\n+        # Unknown second org\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coa','b'),\n+                              'Second repository not owned by our org')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'c', '23','coala','b'),\n+                              'First repository does not exist')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coala','e'),\n+                              'Second repository does not exist')\n+        # No issue exists\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message',404))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:35:47Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:35:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTM0OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581349","bodyText":"use mock_issue instead of shorted name","diffHunk":"@@ -343,3 +344,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+                        'coala maintainers': mock_maint_team,\n+                        'coala developers': self.mock_team,\n+                        'coala newcomers': self.mock_team\n+        }\n+        cmd = '!migrate https://github.com/{}/{}/issues/{} https://github.com/{}/{}/'\n+\n+        # Not a maintainer\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'you are not a maintainer!')\n+        # Unknown first org\n+        testbot.assertCommand(cmd.format('coa', 'a', '23','coala','b'),\n+                              'First repository not owned by our org')\n+        # Unknown second org\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coa','b'),\n+                              'Second repository not owned by our org')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'c', '23','coala','b'),\n+                              'First repository does not exist')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coala','e'),\n+                              'Second repository does not exist')\n+        # No issue exists\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message',404))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'Issue does not exist!')\n+        # Runtime error\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message',403))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'Computer says')\n+        # Issue closed\n+        mock_maint_team.is_member.return_value = True\n+        mock_iss = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)\n+        self.mock_repo.get_issue = Mock(return_value=mock_iss)\n+        mock_iss.labels = PropertyMock()\n+        mock_iss.state = PropertyMock()\n+        mock_iss.state = 'closed'\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'has been closed already')\n+        # Migrate issue\n+        mock_maint_team.is_member.return_value = True\n+        mock_iss = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:36:24Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:36:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY0OTQxMQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181649411","bodyText":"why is one called mock_issue and the other issue2?  that is confusing.","diffHunk":"@@ -343,3 +343,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+            'coala maintainers': mock_maint_team,\n+            'coala developers': self.mock_team,\n+            'coala newcomers': self.mock_team\n+        }\n+        cmd = '!migrate https://github.com/{}/{}/issues/{} https://github.com/{}/{}/'\n+\n+        # Not a maintainer\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'you are not a maintainer!')\n+        # Unknown first org\n+        testbot.assertCommand(cmd.format('coa', 'a', '23', 'coala', 'b'),\n+                              'First repository not owned by our org')\n+        # Unknown second org\n+        testbot.assertCommand(cmd.format('coala', 'a', '23', 'coa', 'b'),\n+                              'Second repository not owned by our org')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'c', '23', 'coala', 'b'),\n+                              'First repository does not exist')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'a', '23', 'coala', 'e'),\n+                              'Second repository does not exist')\n+        # No issue exists\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message', 404))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'Issue does not exist!')\n+        # Runtime error\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message', 403))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'Computer says')\n+        # Issue closed\n+        mock_maint_team.is_member.return_value = True\n+        mock_issue = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)\n+        self.mock_repo.get_issue = Mock(return_value=mock_issue)\n+        mock_issue.labels = PropertyMock()\n+        mock_issue.state = PropertyMock()\n+        mock_issue.state = 'closed'\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'has been closed already')\n+        # Migrate issue\n+        mock_maint_team.is_member.return_value = True\n+        mock_issue = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)\n+        issue2 = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T07:58:01Z","lastEditedAt":null,"updatedAt":"2018-04-16T07:58:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY2OTcwMQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181669701","bodyText":"First & second -> source & target","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:17:17Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:17:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY2OTc4Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r181669787","bodyText":"replace try with if","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:17:37Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:17:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MDIyOQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181670229","bodyText":"this isnt a url .. it is a format string.\nconfusing because here url1 is a format string, but below url2 is a real complete url.","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if repo_name_orig not in self.REPOS:\n+            yield 'First repository does not exist!'\n+            return\n+\n+        if repo_name_final not in self.REPOS:\n+            yield 'Second repository does not exist!'\n+            return\n+\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                yield 'Issue does not exist!'\n+                return\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+\n+        url1 = 'https://{}.com/{}/{}/issues/{}'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:19:14Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:19:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MDM2Mg==","url":"https://github.com/coala/corobo/pull/521#discussion_r181670362","bodyText":"pls dont use line continuations (\\)","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if repo_name_orig not in self.REPOS:\n+            yield 'First repository does not exist!'\n+            return\n+\n+        if repo_name_final not in self.REPOS:\n+            yield 'Second repository does not exist!'\n+            return\n+\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                yield 'Issue does not exist!'\n+                return\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+\n+        url1 = 'https://{}.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip() + '\\n\\n'\n+        issue_author = old_issue.author.username\n+        ext_msg = 'Migrated issue originally opened by @' + issue_author + \\","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:19:42Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:19:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MDc2OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181670769","bodyText":"it is safer to check that it is open.\nthen new states wont surprise everyone.","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if repo_name_orig not in self.REPOS:\n+            yield 'First repository does not exist!'\n+            return\n+\n+        if repo_name_final not in self.REPOS:\n+            yield 'Second repository does not exist!'\n+            return\n+\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                yield 'Issue does not exist!'\n+                return\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(old_issue.state) == 'closed':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:21:12Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:21:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MTM1OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181671359","bodyText":"If there is only one message, you can use return 'foo' instead of yield & return","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:23:07Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:23:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA0MTY4OA==","url":"https://github.com/coala/corobo/pull/521#discussion_r182041688","bodyText":"it is a bit strange seeing this variable mixed in amoung all the regex matches.\nplease read every line of your diff and ask yourself if it can be improved.","diffHunk":"@@ -381,3 +381,88 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T11:39:41Z","lastEditedAt":null,"updatedAt":"2018-04-17T11:39:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDg3Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224877","bodyText":"the regex won't work for gitlab sub groups, see regex for other commands to see how its done","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:12:24Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:12:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDg4Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224887","bodyText":"Since this regex is most likely be duplicated in every command, make a new constant with the regex to match github/gitlab url, and then append it to your command. Do this as part of another issue after this is complete 😉","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:14:01Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:14:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDkwMw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224903","bodyText":"Why?","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:15:29Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:15:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDkzOA==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224938","bodyText":"Remove this and make the string multiline, something like\na = ('some long string which doesnt fit in 80 chars'\n     'Next part of the string. This both will be concantenated into one')","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:19:52Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:19:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDk1Mw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224953","bodyText":"Same as above","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:20:53Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:20:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDk2Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224967","bodyText":"I don't think this is the case for gitlab comments, use IGitt API to get comment link, if it doesn't exist, make upstream contribution","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'\n+\n+        for comment in source_issue.comments:\n+            comm_url = source_url + '#issuecomment-' + str(comment.number)","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:22:00Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:22:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDk3OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224979","bodyText":"Are you sure the time returned has no UTC offset?","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:22:45Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:22:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODczODUxMw==","url":"https://github.com/coala/corobo/pull/521#discussion_r188738513","bodyText":"@meetmangukiya , I used the same regex as used in unassign_cmd and it uses the same regex. How should I go about this? 😕","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T19:04:20Z","lastEditedAt":null,"updatedAt":"2018-05-16T19:04:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODc0MjAyMA==","url":"https://github.com/coala/corobo/pull/521#discussion_r188742020","bodyText":"I tested it on it on my own forks and there was no UTC offset included there. However, I wasn't able to find documentation explicitly mentioning anything about offsets 😅","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T19:17:18Z","lastEditedAt":null,"updatedAt":"2018-05-16T19:17:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODc0MjQ0OA==","url":"https://github.com/coala/corobo/pull/521#discussion_r188742448","bodyText":"Will be excluding the comment URLs for the current PR and will make another PR when upstream contribution in IGitt is made.","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'\n+\n+        for comment in source_issue.comments:\n+            comm_url = source_url + '#issuecomment-' + str(comment.number)","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T19:18:43Z","lastEditedAt":null,"updatedAt":"2018-05-16T19:18:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ5MjY1NA==","url":"https://github.com/coala/corobo/pull/521#discussion_r209492654","bodyText":"What about we only capture the URL here, without using regex to parse it, and then split it with a helper function that can be re-used in each command which takes a git hoster URL ?","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:08:26Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:08:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MDQzNjI1Nw==","url":"https://github.com/coala/corobo/pull/521#issuecomment-380436257","bodyText":"Requested changes made, @meetmangukiya","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-11T12:36:56Z","lastEditedAt":null,"updatedAt":"2018-04-11T12:36:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTQyMDI2OA==","url":"https://github.com/coala/corobo/pull/521#issuecomment-381420268","bodyText":"Requested changes made, @jayvdb","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-15T16:43:50Z","lastEditedAt":null,"updatedAt":"2018-04-15T16:43:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTkzNjU4NA==","url":"https://github.com/coala/corobo/pull/521#issuecomment-381936584","bodyText":"Changes made @jayvdb","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-17T10:19:37Z","lastEditedAt":null,"updatedAt":"2018-04-17T10:19:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjA1NjUwNg==","url":"https://github.com/coala/corobo/pull/521#issuecomment-382056506","bodyText":"Made changes as requested, @jayvdb","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-17T16:29:08Z","lastEditedAt":"2018-04-17T16:29:17Z","updatedAt":"2018-04-17T16:29:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzY1MTg0NA==","url":"https://github.com/coala/corobo/pull/521#issuecomment-383651844","bodyText":"Will do @meetmangukiya","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-23T17:13:37Z","lastEditedAt":null,"updatedAt":"2018-04-23T17:13:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTI0NDM0Ng==","url":"https://github.com/coala/corobo/pull/521#issuecomment-389244346","bodyText":"@random-access7 can you please make the requested changes?","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-05-15T17:15:07Z","lastEditedAt":null,"updatedAt":"2018-05-15T17:15:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTQwMzUwOQ==","url":"https://github.com/coala/corobo/pull/521#issuecomment-389403509","bodyText":"@nvzard, will do by tonight.","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T05:56:35Z","lastEditedAt":null,"updatedAt":"2018-05-16T05:56:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjYxMzQ2MQ==","url":"https://github.com/coala/corobo/pull/521#issuecomment-396613461","bodyText":"@random-access7 can you please resolve the merge conflicts? And we will make sure it merges before anything else so it doesn't lead to more conflicts","diffHunk":null,"author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-06-12T14:38:21Z","lastEditedAt":null,"updatedAt":"2018-06-12T14:38:21Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533953548000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/550","number":550,"title":"Fix indentation in labhub_test.py","body":"issue #543","comments":4,"createdAt":"2018-06-07T21:34:52Z","updatedAt":"2018-08-11T02:12:28Z","closedAt":"2018-08-11T02:12:28Z","state":"closed","user":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4"},"owner":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/550","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDAyMzgxMA==","url":"https://github.com/coala/corobo/pull/550#discussion_r194023810","bodyText":"Please keep the line length at most 80 characters.","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-06-08T11:03:26Z","lastEditedAt":null,"updatedAt":"2018-06-08T11:03:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDAyNDAzNQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r194024035","bodyText":"Line length 80 chars and just correct the indentation. Eg:\n testbot.assertCommand('!invite meetto newcomers',\n                       'Command \"invite\" / \"invite meetto\" not found.')","diffHunk":"@@ -48,23 +48,17 @@ def test_invite_cmd(self):\n \n         self.mock_team.is_member.return_value = True\n         plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'\n-        testbot.assertCommand('!invite meet to developers',\n-                                   '@meet, you are a part of developers')\n+        testbot.assertCommand('!invite meet to developers', '@meet, you are a part of developers')\n         self.assertEqual(labhub.TEAMS, teams)\n-        testbot.assertCommand('!invite meet to something',\n-                                   'select from one of the')\n+        testbot.assertCommand('!invite meet to something', 'select from one of the')\n \n         self.mock_team.is_member.return_value = False\n \n-        testbot.assertCommand('!invite meet to developers',\n-                                   ':poop:')\n+        testbot.assertCommand('!invite meet to developers', ':poop:')\n \n-        testbot.assertCommand('!invite meetto newcomers',\n-                                   'Command \"invite\" / \"invite meetto\" not found.')\n+        testbot.assertCommand('!invite meetto newcomers', 'Command \"invite\" / \"invite meetto\" not found.')","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-06-08T11:04:46Z","lastEditedAt":null,"updatedAt":"2018-06-08T11:04:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyMjcyNw==","url":"https://github.com/coala/corobo/pull/550#discussion_r194222727","bodyText":"Ok!","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4","name":"Kleberson Gomes"},"reactions":[],"createdAt":"2018-06-09T10:37:05Z","lastEditedAt":null,"updatedAt":"2018-06-09T10:37:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyMjcyOQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r194222729","bodyText":"Ok!","diffHunk":"@@ -48,23 +48,17 @@ def test_invite_cmd(self):\n \n         self.mock_team.is_member.return_value = True\n         plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'\n-        testbot.assertCommand('!invite meet to developers',\n-                                   '@meet, you are a part of developers')\n+        testbot.assertCommand('!invite meet to developers', '@meet, you are a part of developers')\n         self.assertEqual(labhub.TEAMS, teams)\n-        testbot.assertCommand('!invite meet to something',\n-                                   'select from one of the')\n+        testbot.assertCommand('!invite meet to something', 'select from one of the')\n \n         self.mock_team.is_member.return_value = False\n \n-        testbot.assertCommand('!invite meet to developers',\n-                                   ':poop:')\n+        testbot.assertCommand('!invite meet to developers', ':poop:')\n \n-        testbot.assertCommand('!invite meetto newcomers',\n-                                   'Command \"invite\" / \"invite meetto\" not found.')\n+        testbot.assertCommand('!invite meetto newcomers', 'Command \"invite\" / \"invite meetto\" not found.')","author":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4","name":"Kleberson Gomes"},"reactions":[],"createdAt":"2018-06-09T10:37:10Z","lastEditedAt":null,"updatedAt":"2018-06-09T10:37:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg5NDg5OQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r195894899","bodyText":"@nvzard , why didnt CI pick this up?  Please create an issue about that.","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE4MDAxMQ==","createdAt":"2018-06-16T07:34:06Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-06-16T05:31:34Z","lastEditedAt":"2018-06-16T05:32:13Z","updatedAt":"2018-06-16T05:32:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg5OTQ5NQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r195899495","bodyText":"Done #565","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-06-16T09:57:27Z","lastEditedAt":null,"updatedAt":"2018-06-16T09:57:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzgxOTA3NQ==","url":"https://github.com/coala/corobo/pull/550#issuecomment-397819075","bodyText":"You have four commits in https://github.com/coala/corobo/pull/550/commits\nWe require one. It should be properly rebased. Using git command line. See http://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-16T15:18:51Z","lastEditedAt":null,"updatedAt":"2018-06-16T15:18:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0NDE1Mg==","url":"https://github.com/coala/corobo/pull/550#issuecomment-412244152","bodyText":"https://github.com/coala/corobo/pull/550/files now does something very different.\nAlso the issue is now stale due to other merged improvements.\nClosing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T02:12:28Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:12:28Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534363381000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/566","number":566,"title":".gitignore: Add .pytest_cache","body":"Closes #536\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":5,"createdAt":"2018-06-20T16:56:44Z","updatedAt":"2018-08-15T20:03:01Z","closedAt":"2018-06-20T23:47:48Z","state":"merged","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/566","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njg2NDI2NQ==","url":"https://github.com/coala/corobo/pull/566#discussion_r196864265","bodyText":"Drop this extra line.","diffHunk":"@@ -45,6 +45,8 @@ nosetests.xml\n coverage.xml\n *,cover\n .hypothesis/\n+.pytest_cache/\n+","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-06-20T17:02:51Z","lastEditedAt":null,"updatedAt":"2018-06-20T17:02:51Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136217000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/403","number":403,"title":"Re_botcmd_fullmatch: Add re_botcmd_fullmatch","body":"Closes #402\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2017-11-27T13:42:04Z","updatedAt":"2018-08-13T04:56:57Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"},{"name":"status/STALE","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/403","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ5MTc4Mg==","url":"https://github.com/coala/corobo/pull/403#discussion_r209491782","bodyText":"rather than a plugin, we should not use re_botcmd , and instead use a better decorator which does this check and then defers to re_botcmd","diffHunk":"@@ -0,0 +1,35 @@\n+import time\n+import threading\n+\n+from errbot import BotPlugin, botcmd\n+\n+\n+class Re_botcmd_fullmatch(BotPlugin):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T04:56:53Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:56:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0NzMxOTMwMQ==","url":"https://github.com/coala/corobo/pull/403#issuecomment-347319301","bodyText":"test coverage ;)","diffHunk":null,"author":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4","name":"Grant Parajuli"},"createdAt":"2017-11-27T20:34:33Z","lastEditedAt":null,"updatedAt":"2017-11-27T20:34:33Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533429504000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/443","number":443,"title":"git_stats: Do not subclass LabHub","body":"Use proper plugin dependency system.\nFixes #441\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":4,"createdAt":"2017-12-02T03:16:59Z","updatedAt":"2018-08-05T00:38:24Z","closedAt":"2018-08-05T00:38:23Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"ddba61"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"},{"name":"status/STALE","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/443","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ4Njc0MA==","url":"https://github.com/coala/corobo/pull/443#issuecomment-410486740","bodyText":"Duplicate of #598","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T00:38:23Z","lastEditedAt":null,"updatedAt":"2018-08-05T00:38:23Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534154102000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/466","number":466,"title":".travis.yml: Install using pip once","body":"The default install: phase of Travis CI does\npip install -r requirements.txt, which was\nduplicated by the custom before_script: block.\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":30,"createdAt":"2017-12-03T19:42:57Z","updatedAt":"2018-08-13T09:55:02Z","closedAt":"2018-08-13T09:40:38Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/466","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Nzk0MjYzNw==","url":"https://github.com/coala/corobo/pull/466#discussion_r157942637","bodyText":"this regex creates a malformed dep since it just mushes it together. add a newline after the sub? https://travis-ci.org/Mixih/corobo/builds/319014020#L490","diffHunk":"@@ -14,10 +14,9 @@ addons:\n       - libssl-dev\n       - python3-dev\n \n-before_script:\n-  - pip install coala-bears\n-  - pip install -r requirements.txt\n-  - pip install -r test-requirements.txt\n+before_install:\n+  - sed -i '1s/^/coala-bears/' requirements.txt","author":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4","name":"mixih"},"createdAt":"2017-12-20T06:01:42Z","lastEditedAt":"2017-12-20T06:02:01Z","updatedAt":"2017-12-20T06:02:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Nzk0MzE0OQ==","url":"https://github.com/coala/corobo/pull/466#discussion_r157943149","bodyText":"oops ;-)","diffHunk":"@@ -14,10 +14,9 @@ addons:\n       - libssl-dev\n       - python3-dev\n \n-before_script:\n-  - pip install coala-bears\n-  - pip install -r requirements.txt\n-  - pip install -r test-requirements.txt\n+before_install:\n+  - sed -i '1s/^/coala-bears/' requirements.txt","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2017-12-20T06:07:14Z","lastEditedAt":null,"updatedAt":"2017-12-20T06:07:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk2NzU2OA==","url":"https://github.com/coala/corobo/pull/466#issuecomment-352967568","bodyText":"dependency conflict present with this current version https://travis-ci.org/Mixih/corobo/builds/319003240#L896. I suspect a pin is misplaced","diffHunk":null,"author":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4","name":"mixih"},"createdAt":"2017-12-20T05:20:11Z","lastEditedAt":"2017-12-20T05:20:42Z","updatedAt":"2017-12-20T05:20:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk3NDI2MA==","url":"https://github.com/coala/corobo/pull/466#issuecomment-352974260","bodyText":"still conflicting https://travis-ci.org/jayvdb/corobo/builds/319016053#L714","diffHunk":null,"author":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4","name":"mixih"},"createdAt":"2017-12-20T06:10:30Z","lastEditedAt":null,"updatedAt":"2017-12-20T06:10:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTgxMDA4NA==","url":"https://github.com/coala/corobo/pull/466#issuecomment-381810084","bodyText":"There is a travis breakage in the tests, which should get solved first","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T02:24:03Z","lastEditedAt":null,"updatedAt":"2018-04-17T02:24:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTkwODYxNw==","url":"https://github.com/coala/corobo/pull/466#issuecomment-385908617","bodyText":"This is blocked on a pre-release of coala","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-02T08:51:31Z","lastEditedAt":null,"updatedAt":"2018-05-02T08:51:31Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136627000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/467","number":467,"title":"Changes to the requirements to be a developer","body":"Closes #425\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.\n\nUpdated corobo message if a newcomer tries to assign an issue above 'difficulty/low' level.","comments":8,"createdAt":"2017-12-04T07:10:54Z","updatedAt":"2018-08-13T05:03:47Z","closedAt":"2018-08-13T05:03:47Z","state":"closed","user":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4"},"owner":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4"},"assignee":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"},{"name":"status/STALE","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/467","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg3ODUyMw==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348878523","bodyText":"Which issue does this PR resolve? You'll have to reference it to the issue link. For reviewers to review.\nPlease read the commit guidelines.","diffHunk":null,"author":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4","name":"Mridu Bhatnagar"},"createdAt":"2017-12-04T07:15:36Z","lastEditedAt":null,"updatedAt":"2017-12-04T07:15:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg4MDIyMg==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348880222","bodyText":"Oh yeah thanks!\nNow should I edit my last commit as explained in the guide, or is there another way to correct it?","diffHunk":null,"author":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4","name":"ALIND SHARMA"},"createdAt":"2017-12-04T07:24:54Z","lastEditedAt":null,"updatedAt":"2017-12-04T07:24:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg4MDYzNA==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348880634","bodyText":"You'll have to amend your commit message. Check Git Basics or Newcomers Docs for that. You'll have to amend your commit message and then do a force push. git commit --amend","diffHunk":null,"author":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4","name":"Mridu Bhatnagar"},"createdAt":"2017-12-04T07:27:08Z","lastEditedAt":"2017-12-04T07:27:23Z","updatedAt":"2017-12-04T07:27:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg4NjQxMw==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348886413","bodyText":"Is this one OK @mridubhatnagar ?","diffHunk":null,"author":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4","name":"ALIND SHARMA"},"createdAt":"2017-12-04T07:58:35Z","lastEditedAt":null,"updatedAt":"2017-12-04T07:58:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg5ODEyMQ==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348898121","bodyText":"Thanx for the specs @jayvdb !\nGlad to have got it reviewed.\nNow I suppose I'll make changes in the code, add it, amend my last commit, and then force push through this same request. The procedure mentioned in the guide to be taken after PR rejection.\nCorrect?","diffHunk":null,"author":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4","name":"ALIND SHARMA"},"createdAt":"2017-12-04T08:54:28Z","lastEditedAt":null,"updatedAt":"2017-12-04T08:54:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg5ODgzMg==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348898832","bodyText":"Yup; just reuse this PR ; continue as normal.  The only change is you now have a clearer issue to work on.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2017-12-04T08:57:25Z","lastEditedAt":null,"updatedAt":"2017-12-04T08:57:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQwOTI4Ng==","url":"https://github.com/coala/corobo/pull/467#issuecomment-412409286","bodyText":"Abandoned PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:03:47Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:03:47Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533433386000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/483","number":483,"title":"pitchfork.py: Limit pitchfork to developers","body":"Limits the use of pitchfork command to developers\nCloses #358\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":17,"createdAt":"2017-12-15T22:02:23Z","updatedAt":"2018-08-05T01:43:06Z","closedAt":"2018-08-05T01:43:06Z","state":"closed","user":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"owner":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"assignee":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"b60205"},{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/483","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzI1MA==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337250","bodyText":"\"invier\" -> \"inviter\" ?","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")\n+        inviter = msg.frm.nick\n+\n+        if match and labhub_util.Teams[labhub_util.GH_ORG_NAME +\n+                                       ' developers'].is_member(invier):","author":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4","name":"Pranav Dixit"},"reactions":[],"createdAt":"2017-12-16T08:22:29Z","lastEditedAt":"2017-12-16T08:24:04Z","updatedAt":"2017-12-16T08:24:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzUxMw==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337513","bodyText":"No need to create a object here, just use dependency like explained here. Use what variables you want from Labhub","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-16T08:39:52Z","lastEditedAt":null,"updatedAt":"2017-12-16T08:39:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzU0MA==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337540","bodyText":"It should not be in a single if statement, it should be nested if-else statements. give some message if command user is not a developer.","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")\n+        inviter = msg.frm.nick\n+\n+        if match and labhub_util.Teams[labhub_util.GH_ORG_NAME +","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-16T08:42:17Z","lastEditedAt":null,"updatedAt":"2017-12-16T08:42:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzU4MA==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337580","bodyText":"inviter is not a proper variable name here, give a suitable variable name for this command.","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")\n+        inviter = msg.frm.nick","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-16T08:45:09Z","lastEditedAt":null,"updatedAt":"2017-12-16T08:45:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTQyOTQ4MQ==","url":"https://github.com/coala/corobo/pull/483#discussion_r159429481","bodyText":"is this supposed to create 💩 emoji? I don't think you should be doing that 😦","diffHunk":"@@ -17,23 +17,31 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n+        GH_ORG_NAME = self.get_plugin('LabHub').GH_ORG_NAME\n+        teams = self.get_plugin('LabHub').TEAMS()\n+        issuer = msg.frm.nick\n         if match:\n-            user = match.group(1)\n-            place = match.group(2) if match.group(2) else 'offtopic'\n-            return textwrap.dedent((\n-                string.Template(\"\"\"\n-                    @$user, you are being pitchforked down to $place\n-                    ```\n-                                                          .+====----->\n-                                                           \\('\n-                    =====================================<%{%{%{>>+===---> $user\n-                                                           /(,\n-                                                          .+====----->\n-                    ```\n-                \"\"\").substitute(user=user,\n-                                place=('[offtopic]('\n-                                       'https://gitter.im/coala/coala/offtopic)'\n-                                       if place == 'offtopic' else place))\n-                ))\n+            if teams[GH_ORG_NAME + ' developers'].is_member(issuer):\n+                user = match.group(1)\n+                place = match.group(2) if match.group(2) else 'offtopic'\n+                return textwrap.dedent((\n+                    string.Template(\"\"\"\n+                        @$user, you are being pitchforked down to $place\n+                        ```\n+                                                              .+====----->\n+                                                               \\('\n+                        ================================<%{%{%{>>+===---> $user\n+                                                               /(,\n+                                                              .+====----->\n+                        ```\n+                    \"\"\").substitute(user=user,\n+                                    place=('[offtopic]('\n+                                           'https://gitter.im/coala/'\n+                                           'coala/offtopic)'\n+                                           if place == 'offtopic' else place))\n+                    ))\n+            else:\n+                return ('@{}, you are not a developer, only developers can'\n+                        ' invite other people. Nice try :poop:'.format(issuer))","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:55:01Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:55:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTQzMjMzOA==","url":"https://github.com/coala/corobo/pull/483#discussion_r159432338","bodyText":"Haha yeah this message i copied from the LabHub.py when the invite command is being issued by someone who is a newcomer and isn't authorized to do so :p","diffHunk":"@@ -17,23 +17,31 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n+        GH_ORG_NAME = self.get_plugin('LabHub').GH_ORG_NAME\n+        teams = self.get_plugin('LabHub').TEAMS()\n+        issuer = msg.frm.nick\n         if match:\n-            user = match.group(1)\n-            place = match.group(2) if match.group(2) else 'offtopic'\n-            return textwrap.dedent((\n-                string.Template(\"\"\"\n-                    @$user, you are being pitchforked down to $place\n-                    ```\n-                                                          .+====----->\n-                                                           \\('\n-                    =====================================<%{%{%{>>+===---> $user\n-                                                           /(,\n-                                                          .+====----->\n-                    ```\n-                \"\"\").substitute(user=user,\n-                                place=('[offtopic]('\n-                                       'https://gitter.im/coala/coala/offtopic)'\n-                                       if place == 'offtopic' else place))\n-                ))\n+            if teams[GH_ORG_NAME + ' developers'].is_member(issuer):\n+                user = match.group(1)\n+                place = match.group(2) if match.group(2) else 'offtopic'\n+                return textwrap.dedent((\n+                    string.Template(\"\"\"\n+                        @$user, you are being pitchforked down to $place\n+                        ```\n+                                                              .+====----->\n+                                                               \\('\n+                        ================================<%{%{%{>>+===---> $user\n+                                                               /(,\n+                                                              .+====----->\n+                        ```\n+                    \"\"\").substitute(user=user,\n+                                    place=('[offtopic]('\n+                                           'https://gitter.im/coala/'\n+                                           'coala/offtopic)'\n+                                           if place == 'offtopic' else place))\n+                    ))\n+            else:\n+                return ('@{}, you are not a developer, only developers can'\n+                        ' invite other people. Nice try :poop:'.format(issuer))","author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T14:09:53Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:09:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1MjIxMTczMg==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352211732","bodyText":"@Vamshi99  @prnvdixit  Do you guys have any idea why the seamaphoreci is failing ?? It's not showing any error in particular to the change I have made","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2017-12-16T21:04:59Z","lastEditedAt":null,"updatedAt":"2017-12-16T21:04:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1MjIzOTUwNA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352239504","bodyText":"@aashraybhandar1 No idea 😕","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-17T08:16:31Z","lastEditedAt":null,"updatedAt":"2017-12-17T08:16:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk0NTcwNg==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352945706","bodyText":"@aashraybhandar1 , @Vamshi99 , Read the log.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2017-12-20T02:20:28Z","lastEditedAt":null,"updatedAt":"2017-12-20T02:20:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk3NTM4Mw==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352975383","bodyText":"@jayvdb @Vamshi99  One of the errors it's showing is that it's not able to load the LabHub plugin due to error while it's trying to do init ... I imported the plugin according to   this , can you help me how to overcome it? It's currently not able to load GH_ORG_NAME","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2017-12-20T06:18:06Z","lastEditedAt":"2017-12-20T15:15:19Z","updatedAt":"2017-12-20T15:15:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NDE1NDM0MQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-354154341","bodyText":"@jayvdb any suggestions? I'm stuck","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2017-12-27T18:21:19Z","lastEditedAt":null,"updatedAt":"2017-12-27T18:21:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAwNjA0Nw==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355006047","bodyText":"@aashraybhandar1 your log says\n=================================== FAILURES ===================================\n_____________________________________ test _____________________________________\n\ntestbot = <errbot.backends.test.TestBot object at 0x7fa81cf86208>\n\n    def test(testbot):\n>       testbot.assertCommand('!pitchfork @meet', 'being pitchforked')\n\ntests/pitchfork_test.py:5: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <errbot.backends.test.TestBot object at 0x7fa81cf86208>\ncommand = '!pitchfork @meet', response = 'being pitchforked', timeout = 5\n\n    def assertCommand(self, command, response, timeout=5):\n        \"\"\"Assert the given command returns the given response\"\"\"\n        self.bot.push_message(command)\n        msg = self.bot.pop_message(timeout)\n>       assert response in msg, \"'{}' not in '{}'\".format(response, msg)\nE       AssertionError: 'being pitchforked' not in 'Command \"pitchfork\" / \"pitchfork @meet\" not found.'\n\n../.pyenv/3.6/lib/python3.6/site-packages/errbot/backends/test.py:457: AssertionError\n\nSo there is an Assertion error at pitchfork_test.py due to the changes you made. Check why its failing.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T12:58:13Z","lastEditedAt":null,"updatedAt":"2018-01-03T12:58:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMDA4Ng==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355010086","bodyText":"@ishanSrt  yes the error is occurring coz the LabHub plugin which is used to determine the group in which the issuer of the command belongs to . The initialization of the plugin is not successful do to some reason which I'm not able to figure out why. I imported the plugin according to link","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T13:20:37Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:20:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMTY5NA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355011694","bodyText":"@aashraybhandar1 won't you need to do something like\nfrom errbot import Labhub\n\nin pitchfork.py as mentioned in your link?\nnot sure though","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:29:25Z","lastEditedAt":"2018-01-03T13:31:31Z","updatedAt":"2018-01-03T13:31:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMjMzOQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355012339","bodyText":"and I think you need to make one more file like labhub.plug as mentioned in errbotio/errbot#1086","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:32:32Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:32:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMjg2OQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355012869","bodyText":"and I think you will need to import it in https://github.com/coala/corobo/blob/master/tests/pitchfork_test.py too\nAgain not sure on this","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:35:14Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:35:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMzk3MA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355013970","bodyText":"Also the assertion error says:\nAssertionError: 'being pitchforked' not in 'Command \"pitchfork\" / \"pitchfork @meet\" not found.'\n\nHow did you conclude that the initialisation of plugin wasn't successful?\nAlso from the assertion error, try printing what all commands are there in pitchfork @meet before and after you made the changes, and then try to understand why does 'being pitchforked' goes away after you make changes","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:40:38Z","lastEditedAt":"2018-01-03T13:41:57Z","updatedAt":"2018-01-03T13:41:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyMDA1NA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355020054","bodyText":"2017-12-16 20:56:47,811 DEBUG errbot.plugin_manager pitchfork depends on LabHub and LabHub is not activated. Activating it ... 2017-12-16 20:56:47,815 ERROR errbot.plugin_manager Error loading pitchfork Traceback (most recent call last): File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 524, in activate_non_started_plugins self.activate_plugin_with_version_check(pluginInfo) File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 291, in activate_plugin_with_version_check depends_on = self._activate_plugin_dependencies(plugin_info, dep_track) File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 335, in _activate_plugin_dependencies self._activate_plugin(dep_name, dep_track) File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 569, in _activate_plugin raise PluginActivationException(\"I don't know this %s plugin\" % name) errbot.plugin_manager.PluginActivationException: I don't know this LabHub plugin\nThis is the error in the logs which states that it's not able to activate the plugin LabHub and the error is being coz of that. There are two ways to use the plugin as mentioned in .Either by writing an activate function or by accessing variables using\nself.get_plugin('DependentPlugin').variable_name\nI used this later approach and there is no need to import the plugin labhub as if you see the sample code mentioned in the document no where is the dependent plugin being imported it's just being mentioned in the .plug file and then accessed using the methods mentioned above. I know there are error in the test files which need to be resolved but the first task of loading the plugin itself is not being successful :/","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T14:08:54Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:08:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyMjgyMA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355022820","bodyText":"I am no expert on errbot so I can only suggest you ways in which you can read and try to understand your problem more, since it says I don't know this LabHub plugin you should read on how to using it. Pretty sure corobo is not the only one using errbot. maybe you stumble upon a code where LabHub is being used correctly. or you can see this too #483 (comment)\nor try the other way as in:\n\nThere are two ways to use the plugin as mentioned in","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T14:20:47Z","lastEditedAt":"2018-01-03T14:22:18Z","updatedAt":"2018-01-03T14:22:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyMzk2Mw==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355023963","bodyText":"also don't leave the failed test, you may solve your problem while fixing that\n\nAlso from the assertion error, try printing what all commands are there in pitchfork @meet before and after you made the changes, and then try to understand why does 'being pitchforked' goes away after you make changes","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T14:25:36Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:25:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyNTkyNA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355025924","bodyText":"Sure I'll proceed in that direction and try to solve it . Thanks a lot @ishanSrt  😄  If you find out anything else relevant please ping here that would be really helpful.","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T14:33:35Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:33:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzMwMzAyMg==","url":"https://github.com/coala/corobo/pull/483#issuecomment-383303022","bodyText":"Problem needs to be fixed in errbot","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzEzODM0MQ==","createdAt":"2018-05-03T10:06:26Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-04-21T14:55:20Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:55:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ4OTMxNQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-410489315","bodyText":"This needs to be implemented as a filter to prevent access to any command based on configuration.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:43:06Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:43:06Z"}]}}},{"repoOwner":"coala","repoName":"gci-leaders","updatedAtMs":1535411664000,"issue":{"htmlUrl":"https://github.com/coala/gci-leaders/pull/142","number":142,"title":"Main.css: Fix broken social link Fixes https://github.com/coala/gci-leaders/issues/73","body":"Fixes #73 using @wisn suggestion.","comments":12,"createdAt":"2018-02-03T03:47:52Z","updatedAt":"2018-08-27T23:14:24Z","closedAt":"2018-02-06T12:20:18Z","state":"merged","user":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4"},"owner":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4"},"labels":[{"name":"area/ui","color":"442cf7"},{"name":"bug","color":"ee0701"},{"name":"difficulty/newcomer","color":"ffcce2"},{"name":"initiatives/gci","color":"98e9f9"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gci-leaders/pull/142","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM2MjgyNTU3OQ==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362825579","bodyText":"@newbazz What would be the appropriate changes to the commit? This is my first PR, I apologise any mistake on common guidelines.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-03T15:56:41Z","lastEditedAt":null,"updatedAt":"2018-02-03T15:56:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MjgyNjU2Ng==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362826566","bodyText":"You forgot to put Fixes https://github.com/coala/gci-leaders/issues/73 on your commit body","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-02-03T16:04:12Z","lastEditedAt":null,"updatedAt":"2018-02-03T16:04:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MjgzMTc1Nw==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362831757","bodyText":"@newbazz Not sure if it's done right now or if it should be just #73 to reference the issue on commit message.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-03T16:43:51Z","lastEditedAt":null,"updatedAt":"2018-02-03T16:43:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2Mjg0NzM1Ng==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362847356","bodyText":"in two different line","diffHunk":null,"author":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4","name":null},"reactions":[],"createdAt":"2018-02-03T19:29:44Z","lastEditedAt":null,"updatedAt":"2018-02-03T19:29:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2Mjg0OTM2Nw==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362849367","bodyText":"@newbazz Thanks! Please check if it's correct now, apparently I mistook the PR title with the commit message.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-03T19:56:10Z","lastEditedAt":null,"updatedAt":"2018-02-03T19:56:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MjkxMjI1Ng==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362912256","bodyText":"coala says:\n|    | [NORMAL] GitCommitBear:\n|    | No newline found between shortlog and body at HEAD commit. Please add one.\n\nYour commit needs to be like this\nMain.css: Fix broken social link\n\nFixes https://github.com/coala/gci-leaders/issues/73\n\n1 newline between shortlog and body.","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24xOTE0NDcyNw==","createdAt":"2018-02-05T05:40:04Z","content":"THUMBS_UP","user":{"login":"mvinoba","name":"Vinícius Figueiredo"}}],"createdAt":"2018-02-04T14:53:15Z","lastEditedAt":null,"updatedAt":"2018-02-04T14:53:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MzE5NTM3Mw==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-363195373","bodyText":"@newbazz It should be ok now, GitCommitBear ran without warnings.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-05T19:31:53Z","lastEditedAt":null,"updatedAt":"2018-02-05T19:31:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MzMyNzQ3OA==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-363327478","bodyText":"I implemented wisn's suggestion, the one that made the issue a newcomer one, but perhaps there are better ways to solve this issue.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[{"id":"MDg6UmVhY3Rpb24xOTE5OTYwMw==","createdAt":"2018-02-06T06:52:29Z","content":"THUMBS_UP","user":{"login":"newbazz","name":null}}],"createdAt":"2018-02-06T06:49:20Z","lastEditedAt":null,"updatedAt":"2018-02-06T06:49:20Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535417000000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/159","number":159,"title":"issue-blurb.jsx: Remove unnecessary onClick attribute","body":"This removes onClickIcon function which is not defined and is unnecessary.\ncloses #29","comments":5,"createdAt":"2018-08-27T05:01:22Z","updatedAt":"2018-08-28T00:43:20Z","closedAt":"2018-08-28T00:43:09Z","state":"merged","user":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"owner":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"importance/medium","color":"65f23e"},{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/159","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjIzOTA1Mg==","url":"https://github.com/coala/gh-board/pull/159#issuecomment-416239052","bodyText":"One more thing: your commit message has a small issue.\ncloses --> Closes","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-27T14:08:53Z","lastEditedAt":null,"updatedAt":"2018-08-27T14:08:53Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1534985434000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/157","number":157,"title":"router.jsx 'replace' is defined but never used #137","body":"router.jsx = remove 'replace' which is used as a parameter.\nThis removes the 'replace' which is defined but is never used\nfixes coala#137","comments":0,"createdAt":"2018-08-22T17:17:44Z","updatedAt":"2018-08-23T00:50:34Z","closedAt":null,"state":"open","user":{"login":"ANURADHAJHA99","avatarUrl":"https://avatars2.githubusercontent.com/u/34815869?v=4"},"owner":{"login":"ANURADHAJHA99","avatarUrl":"https://avatars2.githubusercontent.com/u/34815869?v=4"},"labels":[{"name":"process/wip","color":"ead483"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/157","comments":[]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535368477000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/158","number":158,"title":"issue-blurb.jsx: Removed unnecessary onClick attribute","body":"This removed onClickIcon functions which is not defined and is unnecessary.\ncloses #29","comments":1,"createdAt":"2018-08-27T04:54:44Z","updatedAt":"2018-08-27T11:14:37Z","closedAt":"2018-08-27T04:56:28Z","state":"closed","user":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"owner":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"importance/medium","color":"65f23e"},{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/158","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjE5Mzc0OQ==","url":"https://github.com/coala/gh-board/pull/158#issuecomment-416193749","bodyText":"Reason: Closed PR due to multiple typos in commit message.\nCorrect PR\nhttps://www.github.com/coala/gh-board/pull/159\nPS: I just learnt that PRs shouldn't be duplicated. I am sorry for closing and creating a duplicate one. I will not repeat this.","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2018-08-27T11:14:37Z","lastEditedAt":"2018-08-27T11:30:03Z","updatedAt":"2018-08-27T11:30:03Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533430736000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/150","number":150,"title":"Fix review fetch ignore settings","body":"Add Travisbuddy as an ignore author,\nfix ack & unack in ignore content.\nFixes #149","comments":4,"createdAt":"2018-08-04T08:24:23Z","updatedAt":"2018-08-05T00:58:56Z","closedAt":"2018-08-05T00:26:23Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"importance/medium","color":"65f23e"},{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/150","comments":[]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533885409000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/153","number":153,"title":"README.md: Add meta-review section","body":"Closes #152","comments":8,"createdAt":"2018-08-09T00:55:19Z","updatedAt":"2018-08-10T07:16:49Z","closedAt":"2018-08-09T16:00:31Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"process/approved","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/153","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgyNDQ1NA==","url":"https://github.com/coala/gh-board/pull/153#discussion_r208824454","bodyText":"this should mention that the user can only add/remove their own reactions.","diffHunk":"@@ -130,6 +132,17 @@ If you need to rename a column or remove a duplicate label you can get to this p\n \n ![image](https://cloud.githubusercontent.com/assets/253202/14569597/b3388eba-030d-11e6-9b6e-ea03df2f2327.png)\n \n+### Review Filtering\n+\n+Reviews can be filtered by pull request author, review author and meta-review author.\n+\n+![image](https://user-images.githubusercontent.com/25746010/43847770-0647a8c0-9b64-11e8-8f1b-780a1ae50cbc.gif)\n+\n+### Add and Remove Reactions\n+\n+You can add or remove reactions directly on gh-board.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T07:01:52Z","lastEditedAt":null,"updatedAt":"2018-08-09T07:01:52Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533970724000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/155","number":155,"title":"webpack.config.js: Enable source map in prod ","body":"This will provide better stack trace. Also use\ncheap-module-source-map in development to speed up build.\nCloses #151","comments":8,"createdAt":"2018-08-09T13:20:59Z","updatedAt":"2018-08-11T06:58:44Z","closedAt":"2018-08-10T09:35:25Z","state":"merged","user":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"owner":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"assignee":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/155","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk5NDc0OQ==","url":"https://github.com/coala/gh-board/pull/155#discussion_r208994749","bodyText":"comma ? , and rebase needed.","diffHunk":"@@ -65,6 +65,8 @@ module.exports = {\n       REPOSITORIES: JSON.stringify(process.env['REPOSITORIES']),\n     }),\n     new ExtractTextPlugin('app.css'),\n-    new UglifyJsPlugin()\n+    new UglifyJsPlugin({\n+      sourceMap: true","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-09T16:24:36Z","lastEditedAt":null,"updatedAt":"2018-08-09T16:24:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTc2NjI1Mw==","url":"https://github.com/coala/gh-board/pull/155#issuecomment-411766253","bodyText":"This will probably increase build time","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-09T13:56:03Z","lastEditedAt":null,"updatedAt":"2018-08-09T13:56:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTc3MjMxMw==","url":"https://github.com/coala/gh-board/pull/155#issuecomment-411772313","bodyText":"Source map demo: https://5b6c47e2b13fb1499142899d--coala-gh-board.netlify.com/ (open devtools, check console and sources tab)\nNot as nice as I would've hoped, but it's functional and debug breakpoints are working.","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzcwNDIwNw==","createdAt":"2018-08-09T16:24:54Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-09T14:13:35Z","lastEditedAt":"2018-08-09T14:57:13Z","updatedAt":"2018-08-09T14:57:13Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535355075000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/156","number":156,"title":"Sync gitignore list","body":"","comments":4,"createdAt":"2018-08-15T13:58:02Z","updatedAt":"2018-08-27T07:31:15Z","closedAt":"2018-08-15T14:27:39Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"process/approved","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/156","comments":[]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533430786000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/128","number":128,"title":"Enhance meta-review UI","body":"Related to #84","comments":15,"createdAt":"2018-07-28T07:15:50Z","updatedAt":"2018-08-05T00:59:46Z","closedAt":"2018-08-04T00:52:30Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"enhancement","color":"84b6eb"},{"name":"process/approved","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/128","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwODU4ODkzNg==","url":"https://github.com/coala/gh-board/pull/128#issuecomment-408588936","bodyText":"Regarding enhancement 2 mentioned in #84 (comment),\nthis would be handled later in a separate pr (ability to do meta-reviews directly on gh-board)","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-07-28T07:23:57Z","lastEditedAt":null,"updatedAt":"2018-07-28T07:23:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODU5NjA0Mw==","url":"https://github.com/coala/gh-board/pull/128#issuecomment-408596043","bodyText":"Preview:","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-07-28T09:50:45Z","lastEditedAt":null,"updatedAt":"2018-07-28T09:50:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYzMjExNA==","url":"https://github.com/coala/gh-board/pull/128#issuecomment-408632114","bodyText":"Some space between the emoji button row and the \"Import igitt data\" div\n\n\n\nemoji size needs to grow a bit more","diffHunk":null,"author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"createdAt":"2018-07-28T20:10:21Z","lastEditedAt":null,"updatedAt":"2018-07-28T20:10:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY0OTU5Nw==","url":"https://github.com/coala/gh-board/pull/128#issuecomment-408649597","bodyText":"Preview after update:","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-07-29T03:38:23Z","lastEditedAt":null,"updatedAt":"2018-07-29T03:38:23Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533305703000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/130","number":130,"title":"Setup jest","body":"Closes #45 & #129","comments":10,"createdAt":"2018-07-28T15:36:42Z","updatedAt":"2018-08-03T14:15:03Z","closedAt":"2018-08-03T01:59:12Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"importance/medium","color":"65f23e"},{"name":"process/approved","color":"ededed"},{"name":"size/XXL","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/130","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MTIyMg==","url":"https://github.com/coala/gh-board/pull/130#discussion_r205961222","bodyText":"env should cover for es2015 already\nhttp://babeljs.io/docs/en/env/","diffHunk":"@@ -37,18 +37,22 @@\n     \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n     \"babel-plugin-transform-object-rest-spread\": \"^6.26.0\",\n     \"babel-preset-env\": \"^1.6.1\",\n+    \"babel-preset-es2015\": \"^6.24.1\",","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-07-29T05:25:51Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:25:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MTIzOQ==","url":"https://github.com/coala/gh-board/pull/130#discussion_r205961239","bodyText":"Extract this fom webpack conf\n\n  \n    \n      gh-board/webpack.config.js\n    \n    \n        Lines 29 to 38\n      in\n      3c8b0e5\n    \n    \n    \n    \n\n        \n          \n           options: { \n        \n\n        \n          \n             presets: [ \n        \n\n        \n          \n               'react', \n        \n\n        \n          \n               'env' \n        \n\n        \n          \n             ], \n        \n\n        \n          \n             plugins: [ \n        \n\n        \n          \n               'react-require', \n        \n\n        \n          \n               'transform-object-rest-spread', \n        \n\n        \n          \n               'transform-class-properties' \n        \n\n        \n          \n             ], \n        \n    \n  \n\n\nbabel-loader will also read from .babelrc if it exists.","diffHunk":"@@ -0,0 +1,3 @@\n+{\n+  \"presets\": [\"es2015\", \"react\"]","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEyNjk2NQ==","createdAt":"2018-07-29T06:14:20Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-29T05:26:58Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:26:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3MTMwNQ==","url":"https://github.com/coala/gh-board/pull/130#discussion_r205971305","bodyText":"We don't need this now since we have the same config as webpack?","diffHunk":"@@ -1,3 +1,4 @@\n+import React from 'react';","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMDgzMA==","createdAt":"2018-07-29T12:37:09Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-29T12:11:22Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:11:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjAyMDkyOA==","url":"https://github.com/coala/gh-board/pull/130#discussion_r206020928","bodyText":"This change is welcoming. Most of the text editors these days automatically pick up babelrc files and provide autocompletion features based on babel configuration.","diffHunk":"@@ -0,0 +1,11 @@\n+{","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2MDgxMQ==","createdAt":"2018-07-30T11:48:13Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-30T05:54:08Z","lastEditedAt":null,"updatedAt":"2018-07-30T05:54:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjAyMDk5Mw==","url":"https://github.com/coala/gh-board/pull/130#discussion_r206020993","bodyText":"Like @jayvdb mentioned, we don't need a configuration to publish code coverage to codecov.","diffHunk":"@@ -0,0 +1,9 @@\n+comment: false","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2MDgyMA==","createdAt":"2018-07-30T11:48:21Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-30T05:54:40Z","lastEditedAt":null,"updatedAt":"2018-07-30T05:54:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjcyNzAwMg==","url":"https://github.com/coala/gh-board/pull/130#discussion_r206727002","bodyText":"please add a disable_global variable like https://github.com/coala/git-task-list/blob/master/.travis.yml#L13 , so all extra jobs can re-use it.","diffHunk":"@@ -18,18 +20,33 @@ jobs:\n       before_script: false\n       script: .ci/check_moban.sh\n       after_success: false\n+      after_failure: false","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI5ODkzOA==","createdAt":"2018-08-01T14:53:39Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-01T00:55:44Z","lastEditedAt":null,"updatedAt":"2018-08-01T00:55:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjczMDc2OQ==","url":"https://github.com/coala/gh-board/pull/130#discussion_r206730769","bodyText":"I am very surprised this works.\nPlease use a variable like we do in coala/coala repo for the job which is allowed to fail","diffHunk":"@@ -8,6 +8,8 @@ cache:\n # env forces jobs to be created from the top level settings\n env:\n jobs:\n+  allow_failures:\n+    - script: script/run-integration-test.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-01T01:28:03Z","lastEditedAt":null,"updatedAt":"2018-08-01T01:28:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY3NTIxMg==","url":"https://github.com/coala/gh-board/pull/130#issuecomment-408675212","bodyText":"Some general thoughts:\nI believe .babelrc stuff can be put into package.json .. I prefer that, but what about other ppl?\ncodecov.yml is currently doing nothing, so isnt necessary.  Data can be sent to codecov without it, and the percentage will slowly rise.  until it gets to a decent percentage, tracking that isnt useful.\ntravis after_success/after_failure needs to be deactivated for the moban job.\njest.config.js - I am not a fan of checking in a large config file of comments about possible settings.  We know whether to find the docs if we want more settings.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2Nzg2OA==","createdAt":"2018-07-30T14:02:59Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-29T12:40:01Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:40:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY5MTkwNA==","url":"https://github.com/coala/gh-board/pull/130#issuecomment-408691904","bodyText":"@jayvdb I would prefer .babelrc than package.json","diffHunk":null,"author":{"login":"wisn","avatarUrl":"https://avatars1.githubusercontent.com/u/8147926?v=4","name":"Wisnu Adi Nurcahyo"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2MDQxOQ==","createdAt":"2018-07-30T11:39:09Z","content":"THUMBS_UP","user":{"login":"blazeu","name":"Surya Widi"}}],"createdAt":"2018-07-29T17:15:56Z","lastEditedAt":null,"updatedAt":"2018-07-29T17:15:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODcxODc0OA==","url":"https://github.com/coala/gh-board/pull/130#issuecomment-408718748","bodyText":"@wisn, why?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T00:51:18Z","lastEditedAt":null,"updatedAt":"2018-07-30T00:51:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODczNTEyNw==","url":"https://github.com/coala/gh-board/pull/130#issuecomment-408735127","bodyText":"@jayvdb I knew that several peoples hate \"tiny\" file like .babelrc just for storing some configurations. If that's the case then we could merge Babel configuration to package.json. My reason to use .babelrc is to explicitly say that \"this application using Babel and here is the configuration\". Besides, package.json contains a lot of dependencies record already and I see it as a mess. Actually, based on this repo behavior and Babel lookup behavior, move Babel configuration to package.json would be good. Hence, we just need to make a deal since either way is literally the same.\nHow about you guys? @li-boxuan @andrewda @blazeu","diffHunk":null,"author":{"login":"wisn","avatarUrl":"https://avatars1.githubusercontent.com/u/8147926?v=4","name":"Wisnu Adi Nurcahyo"},"reactions":[],"createdAt":"2018-07-30T03:15:07Z","lastEditedAt":null,"updatedAt":"2018-07-30T03:15:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDExNTY4MQ==","url":"https://github.com/coala/gh-board/pull/130#issuecomment-410115681","bodyText":"a SyntaxError with the integration test","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T01:24:38Z","lastEditedAt":null,"updatedAt":"2018-08-03T01:24:38Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533256807000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/139","number":139,"title":"Refactor pre-fetching","body":"Closes #138","comments":11,"createdAt":"2018-07-29T14:36:53Z","updatedAt":"2018-08-03T00:40:07Z","closedAt":"2018-08-03T00:00:43Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"importance/medium","color":"65f23e"},{"name":"process/approved","color":"ededed"},{"name":"size/XXL","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/139","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk5NTEzOA==","url":"https://github.com/coala/gh-board/pull/139#discussion_r205995138","bodyText":"plural -> fetchPullRequests","diffHunk":"@@ -63,305 +49,53 @@ if (!repo) {\n const repoOwner = repo.split(':')[0];\n const repoNames = repo.substring(repo.indexOf(':') + 1).split('|');\n \n-console.log('Fetching issues data for', repoOwner, repoNames);\n-\n-async function fetchReactionsOfPR(owner, name, number, reviewCnt,\n-  maxCommentsPerReview, commentCnt) {\n-  let data, errors;\n-  try {\n-    ({ data, errors } = await client.query(\n-      GITHUB_REACTION_INFO_QUERY,\n-      {owner, name, number, reviewCnt, maxCommentsPerReview, commentCnt}\n-    ));\n-  } catch (error) {\n-    console.log('fetch reactions of pr failed, owner:', owner,\n-      'name:', name, 'number:', number, 'error:', error);\n-  }\n-\n-  let rawComments = null;\n-  if (data) {\n-    // collect review comments\n-    rawComments = data.repository.pullRequest.reviews.nodes.map(\n-      node => node.comments.nodes);\n-    rawComments = [].concat.apply([], rawComments);\n-    // collect issue comments\n-    rawComments = rawComments.concat(\n-      data.repository.pullRequest.comments.nodes);\n-  } else {\n-    console.log('warning: no available reaction data!',\n-      'owner:', owner, 'name:', name, 'pull request number:', number,\n-      'reviewCnt:', reviewCnt, 'maxCommentsPerReview', maxCommentsPerReview,\n-      'commentCnt', commentCnt, 'error:', errors);\n-  }\n-  // reactions are wrapped by corresponding comment\n-  return rawComments;\n-};\n-\n-async function fetchNextPage(owner, name, isIssue, data, cursor,\n-  pageCount, warningCnt) {\n-  // fetch data of next page\n-  console.log('owner:', owner, 'name:', name, 'isIssue:', isIssue,\n-    'cursor:', cursor, 'page count:', pageCount);\n-\n-  let nextData = null, hasPreviousPage = false, reachDateThreshold = false;\n-  let errors = null;\n-  try {\n-    if (isIssue) {\n-      ({ data: nextData, errors } = await client.query(\n-        GITHUB_ISSUE_INFO_QUERY,\n-        {owner, name, before: cursor}\n-      ));\n-    } else {\n-      ({ data: nextData, errors } = await client.query(\n-        GITHUB_PR_INFO_QUERY,\n-        {owner, name, before: cursor}\n-      ));\n-    }\n-  } catch (error) {\n-    console.log('owner:', owner, 'name:', name, 'isIssue:', isIssue,\n-      'cursor:', cursor, 'error:', error);\n-  }\n-  if (nextData && nextData.repository) {\n-    pageCount++;\n-    let nodes = [];\n-    if (isIssue) {\n-      ({ nodes, pageInfo } = nextData.repository.issues);\n-    } else {\n-      ({ nodes, pageInfo } = nextData.repository.pullRequests);\n-    }\n-    cursor = pageInfo.startCursor;\n-    hasPreviousPage = pageInfo.hasPreviousPage;\n-    const result = await Promise.all(nodes.map(async node => {\n-      let user, assignee, milestone;\n-      if (getTime(node.createdAt) < getTime(earliestDate)) {\n-        reachDateThreshold = true;\n-      }\n-\n-      if (node.author) {\n-        user = {\n-          login: node.author.login,\n-          avatarUrl: node.author.avatarUrl\n-        };\n-      } else {\n-        user = {\n-          login: null,\n-          avatarUrl: null\n-        };\n-      }\n-\n-      if (node.assignees.nodes && node.assignees.nodes.length) {\n-        assignee = {\n-          login: node.assignees.nodes[0].login,\n-          avatarUrl: node.assignees.nodes[0].avatarUrl\n-        };\n-      } else {\n-        assignee = null;\n-      }\n-\n-      if (node.milestone) {\n-        milestone = {\n-          title: node.milestone.title,\n-          createdAt: node.milestone.createdAt,\n-          dueOn: node.milestone.dueOn,\n-          state: node.milestone.state.toLowerCase(),\n-          htmlUrl: node.milestone.url,\n-          description: node.milestone.description\n-        };\n-      } else {\n-        milestone = {\n-          title: null,\n-          createdAt: null,\n-          dueOn: null,\n-          state: null,\n-          htmlUrl: null,\n-          description: null\n-        };\n-      }\n-\n-      let info = {\n-        repoOwner: owner,\n-        repoName: name,\n-        updatedAtMs: getTime(node.updatedAt),\n-        issue: {\n-          htmlUrl: node.url,\n-          number: node.number,\n-          title: node.title,\n-          body: node.bodyText,\n-          comments: node.comments.totalCount,\n-          createdAt: node.createdAt,\n-          updatedAt: node.updatedAt,\n-          closedAt: node.closedAt,\n-          state: node.state.toLowerCase(),\n-          user: user,\n-          owner: user,\n-          assignee: assignee,\n-          milestone: milestone,\n-          labels: node.labels.nodes.map(label => ({\n-            name: label.name,\n-            color: label.color\n-          }))\n-        }\n-      };\n-      if (!isIssue) {\n-        let rawComments, comments;\n-        // collect review comments\n-        rawComments = node.reviews.nodes.map(node => node.comments.nodes);\n-        rawComments = [].concat.apply([], rawComments);\n-        // collect issue comments\n-        rawComments = rawComments.concat(node.comments.nodes);\n-\n-        // fetch reactions only if there are reactions within that PR\n-        // to reduce API hits.\n-        // trick: a comment has received reaction(s) iff\n-        // reactionGroup.createdAt attribute is not null\n-        const hasReactions = rawComments.reduce((has, rawComment) => {\n-          return has || rawComment.reactionGroups.reduce((flag, node) => {\n-            return (flag || node.createdAt) ? true : false;\n-          }, false);\n-        }, false);\n-\n-        if (hasReactions) {\n-          console.log('pull request has reactions. repoOwner:', owner,\n-            'repoName:', name, 'pullRequest number:', node.number);\n-          const number = node.number;\n-          const reviewCnt = Math.min(node.reviews.totalCount, 20);\n-          const maxCommentsPerReview = Math.min(\n-            node.reviews.nodes.reduce(\n-              (max, review) => Math.max(max, review.comments.totalCount), 0),\n-            100);\n-          const commentCnt = Math.min(node.comments.totalCount, 100);\n-          const commentsWithReactions = await fetchReactionsOfPR(owner, name,\n-            number, reviewCnt, maxCommentsPerReview, commentCnt);\n-\n-          // merge rawComments with commentsWithReactions\n-          if (commentsWithReactions && commentsWithReactions.length) {\n-            rawComments.forEach((comment, index) => {\n-              if (comment.id !== commentsWithReactions[index].id) {\n-                console.log('warning: comments and reactions do not fit!',\n-                  'pr number:', number, 'comment.id:', comment.id,\n-                  'comment with reactions id:', commentsWithReactions[index].id);\n-              } else {\n-                comment.reactions = commentsWithReactions[index].reactions;\n-              }\n-            });\n-          }\n-        }\n+console.log('Fetching data for', repoOwner, repoNames);\n \n-        // filter out useless reviews\n-        rawComments = rawComments.filter(node => {\n-          let flag = true;\n-          // filter comments that don't need meta-reviews\n-          for (const ignoreContent of ignoreReviewContent.split(' ')) {\n-            if (node.bodyText.match(ignoreContent)) {\n-              // filter reviews with specific content\n-              flag = false;\n-            }\n-          }\n-          for (const ignoreAuthor of ignoreReviewAuthor.split(' ')) {\n-            if (node.author && node.author.login === ignoreAuthor) {\n-              // filter reviews done by specific authors\n-              flag = false;\n-            }\n-          }\n-          return flag;\n-        });\n-\n-        comments = rawComments.map(node => {\n-          let commentAuthor, reactions;\n-\n-          if (node.author) {\n-            commentAuthor = {\n-              login: node.author.login,\n-              avatarUrl: node.author.avatarUrl,\n-              name: node.author.name\n-            };\n-          } else {\n-            commentAuthor = {\n-              login: null,\n-              avatarUrl: null\n-            };\n-          }\n-\n-          if (node.reactions) reactions = node.reactions.nodes;\n-\n-          return {\n-            id: node.id,\n-            url: node.url,\n-            bodyText: node.bodyText,\n-            diffHunk: node.diffHunk ? node.diffHunk : null,\n-            author: commentAuthor,\n-            reactions,\n-            createdAt: node.createdAt,\n-            lastEditedAt: node.lastEditedAt,\n-            updatedAt: node.lastEditedAt ? node.lastEditedAt : node.createdAt\n-          };\n-        });\n-        info.issue.pullRequest = {\n-          htmlUrl: node.url,\n-          comments\n-        };\n-      }\n-      return info;\n-    }));\n-    data = data.concat(result);\n-    if (hasPreviousPage && !reachDateThreshold &&\n-       (pageCount < pageThreshold || pageThreshold == -1)) {\n-      return fetchNextPage(owner, name, isIssue, data,\n-        cursor, pageCount, 0);\n-    } else {\n-      return data;\n-    }\n-  } else {\n-    console.log('Warning: no available data. owner:', owner, 'name:', name,\n-      'isIssue:', isIssue, 'pageCount:', pageCount, 'error message:', errors);\n-    warningCnt += 1;\n-    sleep.sleep(3);\n-    if (warningCnt < 15) {\n-      console.log('warning count:', warningCnt);\n-      return fetchNextPage(owner, name, isIssue, data, cursor, pageCount, warningCnt);\n-    } else {\n-      console.log('number of warning exceeds threshold (15), stop fetching on this repo');\n-      return data;\n+async function fetchIssue(owner, names) {\n+  let result = [];\n+  const config = {earliestDate};\n+  for (const name of names) {\n+    try {\n+      result = result.concat(\n+        await getClient().repo(owner, name).issues(config).fetchAll()\n+      );\n+    } catch (error) {\n+      console.log('fetch issue failed, repo owner:', owner,\n+        'repo name:', name, 'error:', error);\n     }\n   }\n+  return result;\n }\n \n-async function fetchIssue(owner, names, isIssue) {\n+async function fetchPullRequest(owner, names) {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T01:04:24Z","lastEditedAt":null,"updatedAt":"2018-07-30T01:04:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk5NTE1Nw==","url":"https://github.com/coala/gh-board/pull/139#discussion_r205995157","bodyText":"plural -> fetchIssues","diffHunk":"@@ -63,305 +49,53 @@ if (!repo) {\n const repoOwner = repo.split(':')[0];\n const repoNames = repo.substring(repo.indexOf(':') + 1).split('|');\n \n-console.log('Fetching issues data for', repoOwner, repoNames);\n-\n-async function fetchReactionsOfPR(owner, name, number, reviewCnt,\n-  maxCommentsPerReview, commentCnt) {\n-  let data, errors;\n-  try {\n-    ({ data, errors } = await client.query(\n-      GITHUB_REACTION_INFO_QUERY,\n-      {owner, name, number, reviewCnt, maxCommentsPerReview, commentCnt}\n-    ));\n-  } catch (error) {\n-    console.log('fetch reactions of pr failed, owner:', owner,\n-      'name:', name, 'number:', number, 'error:', error);\n-  }\n-\n-  let rawComments = null;\n-  if (data) {\n-    // collect review comments\n-    rawComments = data.repository.pullRequest.reviews.nodes.map(\n-      node => node.comments.nodes);\n-    rawComments = [].concat.apply([], rawComments);\n-    // collect issue comments\n-    rawComments = rawComments.concat(\n-      data.repository.pullRequest.comments.nodes);\n-  } else {\n-    console.log('warning: no available reaction data!',\n-      'owner:', owner, 'name:', name, 'pull request number:', number,\n-      'reviewCnt:', reviewCnt, 'maxCommentsPerReview', maxCommentsPerReview,\n-      'commentCnt', commentCnt, 'error:', errors);\n-  }\n-  // reactions are wrapped by corresponding comment\n-  return rawComments;\n-};\n-\n-async function fetchNextPage(owner, name, isIssue, data, cursor,\n-  pageCount, warningCnt) {\n-  // fetch data of next page\n-  console.log('owner:', owner, 'name:', name, 'isIssue:', isIssue,\n-    'cursor:', cursor, 'page count:', pageCount);\n-\n-  let nextData = null, hasPreviousPage = false, reachDateThreshold = false;\n-  let errors = null;\n-  try {\n-    if (isIssue) {\n-      ({ data: nextData, errors } = await client.query(\n-        GITHUB_ISSUE_INFO_QUERY,\n-        {owner, name, before: cursor}\n-      ));\n-    } else {\n-      ({ data: nextData, errors } = await client.query(\n-        GITHUB_PR_INFO_QUERY,\n-        {owner, name, before: cursor}\n-      ));\n-    }\n-  } catch (error) {\n-    console.log('owner:', owner, 'name:', name, 'isIssue:', isIssue,\n-      'cursor:', cursor, 'error:', error);\n-  }\n-  if (nextData && nextData.repository) {\n-    pageCount++;\n-    let nodes = [];\n-    if (isIssue) {\n-      ({ nodes, pageInfo } = nextData.repository.issues);\n-    } else {\n-      ({ nodes, pageInfo } = nextData.repository.pullRequests);\n-    }\n-    cursor = pageInfo.startCursor;\n-    hasPreviousPage = pageInfo.hasPreviousPage;\n-    const result = await Promise.all(nodes.map(async node => {\n-      let user, assignee, milestone;\n-      if (getTime(node.createdAt) < getTime(earliestDate)) {\n-        reachDateThreshold = true;\n-      }\n-\n-      if (node.author) {\n-        user = {\n-          login: node.author.login,\n-          avatarUrl: node.author.avatarUrl\n-        };\n-      } else {\n-        user = {\n-          login: null,\n-          avatarUrl: null\n-        };\n-      }\n-\n-      if (node.assignees.nodes && node.assignees.nodes.length) {\n-        assignee = {\n-          login: node.assignees.nodes[0].login,\n-          avatarUrl: node.assignees.nodes[0].avatarUrl\n-        };\n-      } else {\n-        assignee = null;\n-      }\n-\n-      if (node.milestone) {\n-        milestone = {\n-          title: node.milestone.title,\n-          createdAt: node.milestone.createdAt,\n-          dueOn: node.milestone.dueOn,\n-          state: node.milestone.state.toLowerCase(),\n-          htmlUrl: node.milestone.url,\n-          description: node.milestone.description\n-        };\n-      } else {\n-        milestone = {\n-          title: null,\n-          createdAt: null,\n-          dueOn: null,\n-          state: null,\n-          htmlUrl: null,\n-          description: null\n-        };\n-      }\n-\n-      let info = {\n-        repoOwner: owner,\n-        repoName: name,\n-        updatedAtMs: getTime(node.updatedAt),\n-        issue: {\n-          htmlUrl: node.url,\n-          number: node.number,\n-          title: node.title,\n-          body: node.bodyText,\n-          comments: node.comments.totalCount,\n-          createdAt: node.createdAt,\n-          updatedAt: node.updatedAt,\n-          closedAt: node.closedAt,\n-          state: node.state.toLowerCase(),\n-          user: user,\n-          owner: user,\n-          assignee: assignee,\n-          milestone: milestone,\n-          labels: node.labels.nodes.map(label => ({\n-            name: label.name,\n-            color: label.color\n-          }))\n-        }\n-      };\n-      if (!isIssue) {\n-        let rawComments, comments;\n-        // collect review comments\n-        rawComments = node.reviews.nodes.map(node => node.comments.nodes);\n-        rawComments = [].concat.apply([], rawComments);\n-        // collect issue comments\n-        rawComments = rawComments.concat(node.comments.nodes);\n-\n-        // fetch reactions only if there are reactions within that PR\n-        // to reduce API hits.\n-        // trick: a comment has received reaction(s) iff\n-        // reactionGroup.createdAt attribute is not null\n-        const hasReactions = rawComments.reduce((has, rawComment) => {\n-          return has || rawComment.reactionGroups.reduce((flag, node) => {\n-            return (flag || node.createdAt) ? true : false;\n-          }, false);\n-        }, false);\n-\n-        if (hasReactions) {\n-          console.log('pull request has reactions. repoOwner:', owner,\n-            'repoName:', name, 'pullRequest number:', node.number);\n-          const number = node.number;\n-          const reviewCnt = Math.min(node.reviews.totalCount, 20);\n-          const maxCommentsPerReview = Math.min(\n-            node.reviews.nodes.reduce(\n-              (max, review) => Math.max(max, review.comments.totalCount), 0),\n-            100);\n-          const commentCnt = Math.min(node.comments.totalCount, 100);\n-          const commentsWithReactions = await fetchReactionsOfPR(owner, name,\n-            number, reviewCnt, maxCommentsPerReview, commentCnt);\n-\n-          // merge rawComments with commentsWithReactions\n-          if (commentsWithReactions && commentsWithReactions.length) {\n-            rawComments.forEach((comment, index) => {\n-              if (comment.id !== commentsWithReactions[index].id) {\n-                console.log('warning: comments and reactions do not fit!',\n-                  'pr number:', number, 'comment.id:', comment.id,\n-                  'comment with reactions id:', commentsWithReactions[index].id);\n-              } else {\n-                comment.reactions = commentsWithReactions[index].reactions;\n-              }\n-            });\n-          }\n-        }\n+console.log('Fetching data for', repoOwner, repoNames);\n \n-        // filter out useless reviews\n-        rawComments = rawComments.filter(node => {\n-          let flag = true;\n-          // filter comments that don't need meta-reviews\n-          for (const ignoreContent of ignoreReviewContent.split(' ')) {\n-            if (node.bodyText.match(ignoreContent)) {\n-              // filter reviews with specific content\n-              flag = false;\n-            }\n-          }\n-          for (const ignoreAuthor of ignoreReviewAuthor.split(' ')) {\n-            if (node.author && node.author.login === ignoreAuthor) {\n-              // filter reviews done by specific authors\n-              flag = false;\n-            }\n-          }\n-          return flag;\n-        });\n-\n-        comments = rawComments.map(node => {\n-          let commentAuthor, reactions;\n-\n-          if (node.author) {\n-            commentAuthor = {\n-              login: node.author.login,\n-              avatarUrl: node.author.avatarUrl,\n-              name: node.author.name\n-            };\n-          } else {\n-            commentAuthor = {\n-              login: null,\n-              avatarUrl: null\n-            };\n-          }\n-\n-          if (node.reactions) reactions = node.reactions.nodes;\n-\n-          return {\n-            id: node.id,\n-            url: node.url,\n-            bodyText: node.bodyText,\n-            diffHunk: node.diffHunk ? node.diffHunk : null,\n-            author: commentAuthor,\n-            reactions,\n-            createdAt: node.createdAt,\n-            lastEditedAt: node.lastEditedAt,\n-            updatedAt: node.lastEditedAt ? node.lastEditedAt : node.createdAt\n-          };\n-        });\n-        info.issue.pullRequest = {\n-          htmlUrl: node.url,\n-          comments\n-        };\n-      }\n-      return info;\n-    }));\n-    data = data.concat(result);\n-    if (hasPreviousPage && !reachDateThreshold &&\n-       (pageCount < pageThreshold || pageThreshold == -1)) {\n-      return fetchNextPage(owner, name, isIssue, data,\n-        cursor, pageCount, 0);\n-    } else {\n-      return data;\n-    }\n-  } else {\n-    console.log('Warning: no available data. owner:', owner, 'name:', name,\n-      'isIssue:', isIssue, 'pageCount:', pageCount, 'error message:', errors);\n-    warningCnt += 1;\n-    sleep.sleep(3);\n-    if (warningCnt < 15) {\n-      console.log('warning count:', warningCnt);\n-      return fetchNextPage(owner, name, isIssue, data, cursor, pageCount, warningCnt);\n-    } else {\n-      console.log('number of warning exceeds threshold (15), stop fetching on this repo');\n-      return data;\n+async function fetchIssue(owner, names) {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T01:04:45Z","lastEditedAt":null,"updatedAt":"2018-07-30T01:04:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk5NTE5NQ==","url":"https://github.com/coala/gh-board/pull/139#discussion_r205995195","bodyText":"plural -> fetchLabels","diffHunk":"@@ -63,305 +49,53 @@ if (!repo) {\n const repoOwner = repo.split(':')[0];\n const repoNames = repo.substring(repo.indexOf(':') + 1).split('|');\n \n-console.log('Fetching issues data for', repoOwner, repoNames);\n-\n-async function fetchReactionsOfPR(owner, name, number, reviewCnt,\n-  maxCommentsPerReview, commentCnt) {\n-  let data, errors;\n-  try {\n-    ({ data, errors } = await client.query(\n-      GITHUB_REACTION_INFO_QUERY,\n-      {owner, name, number, reviewCnt, maxCommentsPerReview, commentCnt}\n-    ));\n-  } catch (error) {\n-    console.log('fetch reactions of pr failed, owner:', owner,\n-      'name:', name, 'number:', number, 'error:', error);\n-  }\n-\n-  let rawComments = null;\n-  if (data) {\n-    // collect review comments\n-    rawComments = data.repository.pullRequest.reviews.nodes.map(\n-      node => node.comments.nodes);\n-    rawComments = [].concat.apply([], rawComments);\n-    // collect issue comments\n-    rawComments = rawComments.concat(\n-      data.repository.pullRequest.comments.nodes);\n-  } else {\n-    console.log('warning: no available reaction data!',\n-      'owner:', owner, 'name:', name, 'pull request number:', number,\n-      'reviewCnt:', reviewCnt, 'maxCommentsPerReview', maxCommentsPerReview,\n-      'commentCnt', commentCnt, 'error:', errors);\n-  }\n-  // reactions are wrapped by corresponding comment\n-  return rawComments;\n-};\n-\n-async function fetchNextPage(owner, name, isIssue, data, cursor,\n-  pageCount, warningCnt) {\n-  // fetch data of next page\n-  console.log('owner:', owner, 'name:', name, 'isIssue:', isIssue,\n-    'cursor:', cursor, 'page count:', pageCount);\n-\n-  let nextData = null, hasPreviousPage = false, reachDateThreshold = false;\n-  let errors = null;\n-  try {\n-    if (isIssue) {\n-      ({ data: nextData, errors } = await client.query(\n-        GITHUB_ISSUE_INFO_QUERY,\n-        {owner, name, before: cursor}\n-      ));\n-    } else {\n-      ({ data: nextData, errors } = await client.query(\n-        GITHUB_PR_INFO_QUERY,\n-        {owner, name, before: cursor}\n-      ));\n-    }\n-  } catch (error) {\n-    console.log('owner:', owner, 'name:', name, 'isIssue:', isIssue,\n-      'cursor:', cursor, 'error:', error);\n-  }\n-  if (nextData && nextData.repository) {\n-    pageCount++;\n-    let nodes = [];\n-    if (isIssue) {\n-      ({ nodes, pageInfo } = nextData.repository.issues);\n-    } else {\n-      ({ nodes, pageInfo } = nextData.repository.pullRequests);\n-    }\n-    cursor = pageInfo.startCursor;\n-    hasPreviousPage = pageInfo.hasPreviousPage;\n-    const result = await Promise.all(nodes.map(async node => {\n-      let user, assignee, milestone;\n-      if (getTime(node.createdAt) < getTime(earliestDate)) {\n-        reachDateThreshold = true;\n-      }\n-\n-      if (node.author) {\n-        user = {\n-          login: node.author.login,\n-          avatarUrl: node.author.avatarUrl\n-        };\n-      } else {\n-        user = {\n-          login: null,\n-          avatarUrl: null\n-        };\n-      }\n-\n-      if (node.assignees.nodes && node.assignees.nodes.length) {\n-        assignee = {\n-          login: node.assignees.nodes[0].login,\n-          avatarUrl: node.assignees.nodes[0].avatarUrl\n-        };\n-      } else {\n-        assignee = null;\n-      }\n-\n-      if (node.milestone) {\n-        milestone = {\n-          title: node.milestone.title,\n-          createdAt: node.milestone.createdAt,\n-          dueOn: node.milestone.dueOn,\n-          state: node.milestone.state.toLowerCase(),\n-          htmlUrl: node.milestone.url,\n-          description: node.milestone.description\n-        };\n-      } else {\n-        milestone = {\n-          title: null,\n-          createdAt: null,\n-          dueOn: null,\n-          state: null,\n-          htmlUrl: null,\n-          description: null\n-        };\n-      }\n-\n-      let info = {\n-        repoOwner: owner,\n-        repoName: name,\n-        updatedAtMs: getTime(node.updatedAt),\n-        issue: {\n-          htmlUrl: node.url,\n-          number: node.number,\n-          title: node.title,\n-          body: node.bodyText,\n-          comments: node.comments.totalCount,\n-          createdAt: node.createdAt,\n-          updatedAt: node.updatedAt,\n-          closedAt: node.closedAt,\n-          state: node.state.toLowerCase(),\n-          user: user,\n-          owner: user,\n-          assignee: assignee,\n-          milestone: milestone,\n-          labels: node.labels.nodes.map(label => ({\n-            name: label.name,\n-            color: label.color\n-          }))\n-        }\n-      };\n-      if (!isIssue) {\n-        let rawComments, comments;\n-        // collect review comments\n-        rawComments = node.reviews.nodes.map(node => node.comments.nodes);\n-        rawComments = [].concat.apply([], rawComments);\n-        // collect issue comments\n-        rawComments = rawComments.concat(node.comments.nodes);\n-\n-        // fetch reactions only if there are reactions within that PR\n-        // to reduce API hits.\n-        // trick: a comment has received reaction(s) iff\n-        // reactionGroup.createdAt attribute is not null\n-        const hasReactions = rawComments.reduce((has, rawComment) => {\n-          return has || rawComment.reactionGroups.reduce((flag, node) => {\n-            return (flag || node.createdAt) ? true : false;\n-          }, false);\n-        }, false);\n-\n-        if (hasReactions) {\n-          console.log('pull request has reactions. repoOwner:', owner,\n-            'repoName:', name, 'pullRequest number:', node.number);\n-          const number = node.number;\n-          const reviewCnt = Math.min(node.reviews.totalCount, 20);\n-          const maxCommentsPerReview = Math.min(\n-            node.reviews.nodes.reduce(\n-              (max, review) => Math.max(max, review.comments.totalCount), 0),\n-            100);\n-          const commentCnt = Math.min(node.comments.totalCount, 100);\n-          const commentsWithReactions = await fetchReactionsOfPR(owner, name,\n-            number, reviewCnt, maxCommentsPerReview, commentCnt);\n-\n-          // merge rawComments with commentsWithReactions\n-          if (commentsWithReactions && commentsWithReactions.length) {\n-            rawComments.forEach((comment, index) => {\n-              if (comment.id !== commentsWithReactions[index].id) {\n-                console.log('warning: comments and reactions do not fit!',\n-                  'pr number:', number, 'comment.id:', comment.id,\n-                  'comment with reactions id:', commentsWithReactions[index].id);\n-              } else {\n-                comment.reactions = commentsWithReactions[index].reactions;\n-              }\n-            });\n-          }\n-        }\n+console.log('Fetching data for', repoOwner, repoNames);\n \n-        // filter out useless reviews\n-        rawComments = rawComments.filter(node => {\n-          let flag = true;\n-          // filter comments that don't need meta-reviews\n-          for (const ignoreContent of ignoreReviewContent.split(' ')) {\n-            if (node.bodyText.match(ignoreContent)) {\n-              // filter reviews with specific content\n-              flag = false;\n-            }\n-          }\n-          for (const ignoreAuthor of ignoreReviewAuthor.split(' ')) {\n-            if (node.author && node.author.login === ignoreAuthor) {\n-              // filter reviews done by specific authors\n-              flag = false;\n-            }\n-          }\n-          return flag;\n-        });\n-\n-        comments = rawComments.map(node => {\n-          let commentAuthor, reactions;\n-\n-          if (node.author) {\n-            commentAuthor = {\n-              login: node.author.login,\n-              avatarUrl: node.author.avatarUrl,\n-              name: node.author.name\n-            };\n-          } else {\n-            commentAuthor = {\n-              login: null,\n-              avatarUrl: null\n-            };\n-          }\n-\n-          if (node.reactions) reactions = node.reactions.nodes;\n-\n-          return {\n-            id: node.id,\n-            url: node.url,\n-            bodyText: node.bodyText,\n-            diffHunk: node.diffHunk ? node.diffHunk : null,\n-            author: commentAuthor,\n-            reactions,\n-            createdAt: node.createdAt,\n-            lastEditedAt: node.lastEditedAt,\n-            updatedAt: node.lastEditedAt ? node.lastEditedAt : node.createdAt\n-          };\n-        });\n-        info.issue.pullRequest = {\n-          htmlUrl: node.url,\n-          comments\n-        };\n-      }\n-      return info;\n-    }));\n-    data = data.concat(result);\n-    if (hasPreviousPage && !reachDateThreshold &&\n-       (pageCount < pageThreshold || pageThreshold == -1)) {\n-      return fetchNextPage(owner, name, isIssue, data,\n-        cursor, pageCount, 0);\n-    } else {\n-      return data;\n-    }\n-  } else {\n-    console.log('Warning: no available data. owner:', owner, 'name:', name,\n-      'isIssue:', isIssue, 'pageCount:', pageCount, 'error message:', errors);\n-    warningCnt += 1;\n-    sleep.sleep(3);\n-    if (warningCnt < 15) {\n-      console.log('warning count:', warningCnt);\n-      return fetchNextPage(owner, name, isIssue, data, cursor, pageCount, warningCnt);\n-    } else {\n-      console.log('number of warning exceeds threshold (15), stop fetching on this repo');\n-      return data;\n+async function fetchIssue(owner, names) {\n+  let result = [];\n+  const config = {earliestDate};\n+  for (const name of names) {\n+    try {\n+      result = result.concat(\n+        await getClient().repo(owner, name).issues(config).fetchAll()\n+      );\n+    } catch (error) {\n+      console.log('fetch issue failed, repo owner:', owner,\n+        'repo name:', name, 'error:', error);\n     }\n   }\n+  return result;\n }\n \n-async function fetchIssue(owner, names, isIssue) {\n+async function fetchPullRequest(owner, names) {\n   let result = [];\n+  const config = {earliestDate};\n   for (const name of names) {\n     try {\n       result = result.concat(\n-        await fetchNextPage(owner, name, isIssue, [], null, 0, 0));\n+        await getClient().repo(owner, name).pullRequests(config).fetchAll()\n+      );\n     } catch (error) {\n-      console.log('repo owner:', owner, 'repo name:', name,\n-        'is issue:', isIssue, 'error:', error);\n+      console.log('fetch pull request failed, repo owner:', owner,\n+        'repo name:', name, 'error:', error);\n     }\n   }\n   return result;\n }\n \n-function fetchLabel(owner, names) {\n-  return Promise.all(names.map(async name => {\n+async function fetchLabel(owner, names) {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T01:05:23Z","lastEditedAt":null,"updatedAt":"2018-07-30T01:05:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk5NjA4Ng==","url":"https://github.com/coala/gh-board/pull/139#discussion_r205996086","bodyText":"is it necessary to change this?\nwe could make newcomer issues for things like this ... bringing in much needed help.  Especially during GCI.\nAlso, it sounds like babel doesnt really import only the named symbols.\nMight want to try https://bitbucket.org/amctheatres/babel-transform-imports","diffHunk":"@@ -1,33 +1,13 @@\n-const fs = require('fs');\n-const moment = require('moment');\n-const GraphQL = require('graphql-client');\n-const sleep = require('sleep');\n+import { writeFile } from 'fs';","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T01:19:13Z","lastEditedAt":null,"updatedAt":"2018-07-30T01:19:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk5NjI3MA==","url":"https://github.com/coala/gh-board/pull/139#discussion_r205996270","bodyText":"storing .graphql files inside a .js file isnt ideal.\ncant we load these files as const's ?\nSomething like https://github.com/ahalimkara/babel-plugin-import-static-files","diffHunk":"@@ -1,13 +0,0 @@\n-query($owner: String!, $name: String!) {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2MDY0MA==","createdAt":"2018-07-30T11:44:02Z","content":"THUMBS_UP","user":{"login":"blazeu","name":"Surya Widi"}}],"createdAt":"2018-07-30T01:22:33Z","lastEditedAt":null,"updatedAt":"2018-07-30T01:22:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjE3MzE0Mw==","url":"https://github.com/coala/gh-board/pull/139#discussion_r206173143","bodyText":"This is not necessary, let me roll back.","diffHunk":"@@ -1,33 +1,13 @@\n-const fs = require('fs');\n-const moment = require('moment');\n-const GraphQL = require('graphql-client');\n-const sleep = require('sleep');\n+import { writeFile } from 'fs';","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-30T14:55:39Z","lastEditedAt":null,"updatedAt":"2018-07-30T14:55:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjE5MjMxMw==","url":"https://github.com/coala/gh-board/pull/139#discussion_r206192313","bodyText":"Seems that plugin provides us with a string uri ... I don't see how it helps. Say, now we have\nconst github_label_info = 'http://your.cdn.address/assets/github_label_info.graphql';\nBut how could we load that into browser? fs module cannot be used in web browser...","diffHunk":"@@ -1,13 +0,0 @@\n-query($owner: String!, $name: String!) {","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-30T15:17:54Z","lastEditedAt":null,"updatedAt":"2018-07-30T15:17:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjM2NzQwMg==","url":"https://github.com/coala/gh-board/pull/139#discussion_r206367402","bodyText":"However,\nimport GraphQLClient from '../src/github-graphql';\nthis is necessary, otherwise there would be error:\nTypeError: GraphQLClient is not a constructor\nNot sure about the reason though...","diffHunk":"@@ -1,33 +1,13 @@\n-const fs = require('fs');\n-const moment = require('moment');\n-const GraphQL = require('graphql-client');\n-const sleep = require('sleep');\n+import { writeFile } from 'fs';","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-31T01:00:26Z","lastEditedAt":null,"updatedAt":"2018-07-31T01:00:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjQ5NTUxOQ==","url":"https://github.com/coala/gh-board/pull/139#discussion_r206495519","bodyText":"Use https://www.npmjs.com/package/babel-plugin-inline-import","diffHunk":"@@ -1,13 +0,0 @@\n-query($owner: String!, $name: String!) {","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzIyOTAzNg==","createdAt":"2018-07-31T13:29:56Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-31T11:50:30Z","lastEditedAt":null,"updatedAt":"2018-07-31T11:50:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjczMDM4Mg==","url":"https://github.com/coala/gh-board/pull/139#discussion_r206730382","bodyText":"trailing blank line! :(","diffHunk":"@@ -0,0 +1,13 @@\n+{\n+  presets: [\n+    'react',\n+    'env',\n+  ],\n+  plugins: [\n+    'react-require',\n+    'transform-object-rest-spread',\n+    'transform-class-properties',\n+    'babel-plugin-inline-import',\n+  ],\n+}\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-01T01:24:53Z","lastEditedAt":null,"updatedAt":"2018-08-01T01:24:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjkyNzEwMw==","url":"https://github.com/coala/gh-board/pull/139#discussion_r206927103","bodyText":"four space indents","diffHunk":"@@ -1,8 +1,10 @@\n-const fs = require('fs');\n-const loadQuery = name =>\n-  fs.readFileSync(`${__dirname}/${name}.graphql`).toString();\n-\n-module.exports.GITHUB_ISSUE_INFO_QUERY = loadQuery('github_issue_info');\n-module.exports.GITHUB_PR_INFO_QUERY = loadQuery('github_pr_info');\n-module.exports.GITHUB_LABEL_INFO_QUERY = loadQuery('github_label_info');\n-module.exports.GITHUB_REACTION_INFO_QUERY = loadQuery('github_reaction_info');\n+import GITHUB_ISSUE_INFO_QUERY from './github_issue_info.graphql';\n+import GITHUB_PR_INFO_QUERY from './github_pr_info.graphql';\n+import GITHUB_LABEL_INFO_QUERY from './github_label_info.graphql';\n+import GITHUB_REACTION_INFO_QUERY from './github_reaction_info.graphql';\n+export {\n+    GITHUB_ISSUE_INFO_QUERY,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-01T15:31:14Z","lastEditedAt":null,"updatedAt":"2018-08-01T15:31:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzA4MTYzMg==","url":"https://github.com/coala/gh-board/pull/139#discussion_r207081632","bodyText":"Do we really need to repeat what's already in .babelrc?","diffHunk":"@@ -3,4 +3,4 @@\n set -e -x\n \n npm run build\n-node ./script/fetch-issues.js\n+NODE_ENV=development npx babel-node --presets env --plugins transform-class-properties script/fetch-issues.js","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-02T01:52:24Z","lastEditedAt":null,"updatedAt":"2018-08-02T01:52:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzA4MTc2MA==","url":"https://github.com/coala/gh-board/pull/139#discussion_r207081760","bodyText":"Can be a string instead of object","diffHunk":"@@ -24,20 +24,12 @@ module.exports = {\n       {\n         test: /\\.jsx?$/,\n         exclude: [/node_modules/, /octokat\\.js/],\n-        use: {\n-          loader: 'babel-loader',\n-          options: {\n-            presets: [\n-              'react',\n-              'env'\n-            ],\n-            plugins: [\n-              'react-require',\n-              'transform-object-rest-spread',\n-              'transform-class-properties'\n-            ],\n-          }\n-        },\n+        use: [\n+          'babel-inline-import-loader',\n+          {\n+            loader: 'babel-loader',","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-02T01:53:27Z","lastEditedAt":null,"updatedAt":"2018-08-02T01:53:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTQxODQ4Ng==","url":"https://github.com/coala/gh-board/pull/139#issuecomment-409418486","bodyText":"And there is still some bug with it... You can see Netlify preview website has no pre-fetched data. Let me try to fix it today.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-01T01:25:15Z","lastEditedAt":null,"updatedAt":"2018-08-01T01:25:15Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533263364000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/142","number":142,"title":"Netlify build: Verify pre-fetched files exist","body":"Closes #140","comments":8,"createdAt":"2018-08-01T16:00:44Z","updatedAt":"2018-08-03T02:29:24Z","closedAt":"2018-08-03T02:29:16Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"},{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/142","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjk5NDM0Mw==","url":"https://github.com/coala/gh-board/pull/142#discussion_r206994343","bodyText":"I think Netlify already runs npm","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \".\"\n+  command = \"npm install && script/build.sh && script/verify_files.sh\"","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"createdAt":"2018-08-01T18:55:10Z","lastEditedAt":null,"updatedAt":"2018-08-01T18:55:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTY4MTYzMQ==","url":"https://github.com/coala/gh-board/pull/142#issuecomment-409681631","bodyText":"commit message","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T18:47:01Z","lastEditedAt":null,"updatedAt":"2018-08-01T18:47:01Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533185940000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/144","number":144,"title":".travis.yml: Remove duplicate before_install","body":"333717b added two before_install sections.\nRelated to #28","comments":4,"createdAt":"2018-08-02T02:20:09Z","updatedAt":"2018-08-02T04:59:00Z","closedAt":"2018-08-02T04:58:46Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/144","comments":[]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533823132000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/147","number":147,"title":"Add reaction mutation functionality","body":"Users can do meta-reviews directly on the gh-board.\nCloses #146","comments":6,"createdAt":"2018-08-04T02:50:29Z","updatedAt":"2018-08-09T13:58:52Z","closedAt":"2018-08-09T07:55:17Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"process/approved","color":"ededed"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/147","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwMzEzOQ==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207703139","bodyText":"Should have a new Component subclass which handles the login event in a standard manner","diffHunk":"@@ -11,109 +14,156 @@ import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-04T08:20:43Z","lastEditedAt":null,"updatedAt":"2018-08-04T08:20:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwMzE2Mw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207703163","bodyText":"avoid moving this around.\nif it must be moved, make sure you move it to a place where it wont need to be moved again for any reason.","diffHunk":"@@ -1,45 +1,180 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  async onClick(id, content) {\n+    const canAdd = this.state.canAdd[content];\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n+    }\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+        if (noReactionByMe[content] && this.state.canAdd[content]\n+          && this.state.cacheCount[content] === -1) {\n+          // our action (reaction removal) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush removal cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+      }\n+    }\n+\n+    // use null when count is zero because we don't want to display\n+    // number zero on frontend\n+    const reactions = [","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-04T08:21:48Z","lastEditedAt":null,"updatedAt":"2018-08-04T08:21:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwMzE3NQ==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207703175","bodyText":"my own +1 are saved to github (yay), show in the UI, but are not shown when I reload.","diffHunk":"@@ -1,45 +1,180 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  async onClick(id, content) {\n+    const canAdd = this.state.canAdd[content];\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n+    }\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-04T08:22:29Z","lastEditedAt":null,"updatedAt":"2018-08-04T08:22:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwMzM0Ng==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207703346","bodyText":"I should save it to indexdb apart from keeping it in the memory.","diffHunk":"@@ -1,45 +1,180 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  async onClick(id, content) {\n+    const canAdd = this.state.canAdd[content];\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n+    }\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-04T08:33:14Z","lastEditedAt":null,"updatedAt":"2018-08-04T08:33:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwMzQyOA==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207703428","bodyText":"This is not just moving. I actually changed the content.","diffHunk":"@@ -1,45 +1,180 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  async onClick(id, content) {\n+    const canAdd = this.state.canAdd[content];\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n+    }\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+        if (noReactionByMe[content] && this.state.canAdd[content]\n+          && this.state.cacheCount[content] === -1) {\n+          // our action (reaction removal) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush removal cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+      }\n+    }\n+\n+    // use null when count is zero because we don't want to display\n+    // number zero on frontend\n+    const reactions = [","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-04T08:36:09Z","lastEditedAt":null,"updatedAt":"2018-08-04T08:36:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwMzQ2MQ==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207703461","bodyText":"Hmm, would you mind elaborating it? You mean the login event is handled separately in many components ...?","diffHunk":"@@ -11,109 +14,156 @@ import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-04T08:38:27Z","lastEditedAt":null,"updatedAt":"2018-08-04T08:38:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwNjg5Mw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207706893","bodyText":"Please don't use subclass, it's an antipattern in React. Instead, extract the logic into separate component or use HOC","diffHunk":"@@ -11,109 +14,156 @@ import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1MDc4MQ==","createdAt":"2018-08-04T12:00:39Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-04T11:50:22Z","lastEditedAt":null,"updatedAt":"2018-08-04T11:50:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwNjkyNw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207706927","bodyText":"Remember to use onClick = () => {} in class method so it autobinds.","diffHunk":"@@ -1,45 +1,180 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  async onClick(id, content) {\n+    const canAdd = this.state.canAdd[content];\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n+    }\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+        if (noReactionByMe[content] && this.state.canAdd[content]\n+          && this.state.cacheCount[content] === -1) {\n+          // our action (reaction removal) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush removal cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+      }\n+    }\n+\n+    // use null when count is zero because we don't want to display\n+    // number zero on frontend\n+    const reactions = [\n+      {\n+        emoji: '👍',\n+        count: stat.THUMBS_UP + this.state.cacheCount.THUMBS_UP || null,\n+        name: 'THUMBS_UP'\n+      },\n+      {\n+        emoji: '👎',\n+        count: stat.THUMBS_DOWN + this.state.cacheCount.THUMBS_DOWN || null,\n+        name: 'THUMBS_DOWN'\n+      },\n+      {\n+        emoji: '😄',\n+        count: stat.LAUGH + this.state.cacheCount.LAUGH || null,\n+        name: 'LAUGH'\n+      },\n+      {\n+        emoji: '🎉',\n+        count: stat.HOORAY + this.state.cacheCount.HOORAY || null,\n+        name: 'HOORAY'\n+      },\n+      {\n+        emoji: '😕',\n+        count: stat.CONFUSED + this.state.cacheCount.CONFUSED || null,\n+        name: 'CONFUSED'\n+      },\n+      {\n+        emoji: '❤️',\n+        count: stat.HEART + this.state.cacheCount.HEART || null,\n+        name: 'HEART'\n+      }\n+    ];\n+    return reactions.map(reaction => (\n+        <BS.Button\n+          bsClass=\"reaction-btn\"\n+          onClick={this.onClick.bind(this, id, reaction.name)}","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NjM1Mw==","createdAt":"2018-08-05T13:51:06Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-04T11:52:33Z","lastEditedAt":null,"updatedAt":"2018-08-04T11:52:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwNjk3MA==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207706970","bodyText":"Did GitHub sent 2xx status even if there's an error? and that causes it to not being catched?\nWhat kind of error fall into this?","diffHunk":"@@ -148,6 +150,48 @@ class GraphQLClient {\n     return this;\n   }\n \n+  // first type of mutations: add reaction\n+  // return boolean value indicating result of action\n+  async addReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('add reaction for id', id, 'with content', content);\n+    }\n+    let data, errors;\n+    try {\n+      ({ data, errors } = await this.client.query(\n+        GITHUB_REACTION_ADD_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (!data || errors) {\n+      return {result: false, msg: errors};\n+    }\n+    return {result: true, msg: data};\n+  }\n+\n+  // second type of mutations: remove reaction\n+  // return boolean value indicating result of action\n+  async removeReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('remove reaction for id', id, 'with content', content);\n+    }\n+    let errors;\n+    try {\n+      ({ errors } = await this.client.query(\n+        GITHUB_REACTION_REMOVE_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (errors) {\n+      return {result: false, msg: errors};","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-04T11:55:22Z","lastEditedAt":null,"updatedAt":"2018-08-04T11:55:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwNzA0Mg==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207707042","bodyText":"should be data here. Didn't notice it.","diffHunk":"@@ -148,6 +150,48 @@ class GraphQLClient {\n     return this;\n   }\n \n+  // first type of mutations: add reaction\n+  // return boolean value indicating result of action\n+  async addReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('add reaction for id', id, 'with content', content);\n+    }\n+    let data, errors;\n+    try {\n+      ({ data, errors } = await this.client.query(\n+        GITHUB_REACTION_ADD_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (!data || errors) {\n+      return {result: false, msg: errors};\n+    }\n+    return {result: true, msg: data};\n+  }\n+\n+  // second type of mutations: remove reaction\n+  // return boolean value indicating result of action\n+  async removeReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('remove reaction for id', id, 'with content', content);\n+    }\n+    let errors;\n+    try {\n+      ({ errors } = await this.client.query(\n+        GITHUB_REACTION_REMOVE_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (errors) {\n+      return {result: false, msg: errors};\n+    }\n+    return {result: true, msg: errors};","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-04T12:01:53Z","lastEditedAt":null,"updatedAt":"2018-08-04T12:01:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwNzExNw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207707117","bodyText":"When you try to remove a reaction from a comment you've never reacted before, GitHub will return a failure message.","diffHunk":"@@ -148,6 +150,48 @@ class GraphQLClient {\n     return this;\n   }\n \n+  // first type of mutations: add reaction\n+  // return boolean value indicating result of action\n+  async addReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('add reaction for id', id, 'with content', content);\n+    }\n+    let data, errors;\n+    try {\n+      ({ data, errors } = await this.client.query(\n+        GITHUB_REACTION_ADD_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (!data || errors) {\n+      return {result: false, msg: errors};\n+    }\n+    return {result: true, msg: data};\n+  }\n+\n+  // second type of mutations: remove reaction\n+  // return boolean value indicating result of action\n+  async removeReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('remove reaction for id', id, 'with content', content);\n+    }\n+    let errors;\n+    try {\n+      ({ errors } = await this.client.query(\n+        GITHUB_REACTION_REMOVE_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (errors) {\n+      return {result: false, msg: errors};","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-04T12:06:24Z","lastEditedAt":"2018-08-04T12:06:44Z","updatedAt":"2018-08-04T12:06:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwNzg4MA==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207707880","bodyText":"Component approach can be done by making a component that takes a children as a function or a render prop that gives back data. i.e.\nconst Auth = ({ children }) => {\n  return children(loginInfo) // get loginInfo from somewhere (componentDidMount?)\n}\n\n// or with render prop\n\nconst Auth = ({ render }) => {\n  return render(loginInfo)\n}\nusage:\n<Auth>\n{loginInfo => {\n  ... add logic here or render component\n}}\n</Auth>\n\n// or\n\n<Auth render={{loginInfo => { ... }}} />\nHOC is just a function that wraps other component, gives it extra prop, and returns it\nfunction withAuth(WrapperComponent) {\n  return class WithAuth extends Component {\n    render() {\n      return <WrapperComponent {...this.props} loginInfo={this.loginInfo} />\n    }\n  }\n}\nHOC usage:\nconst ReviewCard = ({ loginInfo }) => <div>{loginInfo.something}</div>\n\nexport default withAuth(ReviewCard)\nhttps://reactjs.org/docs/render-props.html\nhttps://reactjs.org/docs/higher-order-components.html","diffHunk":"@@ -11,109 +14,156 @@ import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1MTMxOA==","createdAt":"2018-08-04T12:45:21Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-04T12:44:10Z","lastEditedAt":"2018-08-04T12:47:54Z","updatedAt":"2018-08-04T12:47:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwODUzMw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207708533","bodyText":"But with 2xx error code, as in success?","diffHunk":"@@ -148,6 +150,48 @@ class GraphQLClient {\n     return this;\n   }\n \n+  // first type of mutations: add reaction\n+  // return boolean value indicating result of action\n+  async addReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('add reaction for id', id, 'with content', content);\n+    }\n+    let data, errors;\n+    try {\n+      ({ data, errors } = await this.client.query(\n+        GITHUB_REACTION_ADD_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (!data || errors) {\n+      return {result: false, msg: errors};\n+    }\n+    return {result: true, msg: data};\n+  }\n+\n+  // second type of mutations: remove reaction\n+  // return boolean value indicating result of action\n+  async removeReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('remove reaction for id', id, 'with content', content);\n+    }\n+    let errors;\n+    try {\n+      ({ errors } = await this.client.query(\n+        GITHUB_REACTION_REMOVE_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (errors) {\n+      return {result: false, msg: errors};","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-04T13:17:19Z","lastEditedAt":null,"updatedAt":"2018-08-04T13:17:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwODYwNA==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207708604","bodyText":"Yep. Actually, GitHub always returns 200, no matter whether your request is valid or not. To see that, you can go to https://developer.github.com/v4/explorer/ and send whatever request ;)","diffHunk":"@@ -148,6 +150,48 @@ class GraphQLClient {\n     return this;\n   }\n \n+  // first type of mutations: add reaction\n+  // return boolean value indicating result of action\n+  async addReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('add reaction for id', id, 'with content', content);\n+    }\n+    let data, errors;\n+    try {\n+      ({ data, errors } = await this.client.query(\n+        GITHUB_REACTION_ADD_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (!data || errors) {\n+      return {result: false, msg: errors};\n+    }\n+    return {result: true, msg: data};\n+  }\n+\n+  // second type of mutations: remove reaction\n+  // return boolean value indicating result of action\n+  async removeReaction({id, content}) {\n+    if (DEBUG) {\n+      console.log('remove reaction for id', id, 'with content', content);\n+    }\n+    let errors;\n+    try {\n+      ({ errors } = await this.client.query(\n+        GITHUB_REACTION_REMOVE_MUTATION,\n+        {id, content}\n+      ));\n+    } catch (error) {\n+      return {result: false, msg: error};\n+    }\n+    if (errors) {\n+      return {result: false, msg: errors};","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-04T13:22:33Z","lastEditedAt":null,"updatedAt":"2018-08-04T13:22:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc1NzAyMg==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207757022","bodyText":"I'd still prefer the reference data part of this (keys emoji / name) were stored in a more static form, e.g. a new emoji.js with related functions nearby.\nBut it is only six members, so I'll accept this for the moment.","diffHunk":"@@ -1,45 +1,180 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  async onClick(id, content) {\n+    const canAdd = this.state.canAdd[content];\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n+    }\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+        if (noReactionByMe[content] && this.state.canAdd[content]\n+          && this.state.cacheCount[content] === -1) {\n+          // our action (reaction removal) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush removal cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+      }\n+    }\n+\n+    // use null when count is zero because we don't want to display\n+    // number zero on frontend\n+    const reactions = [","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T01:19:39Z","lastEditedAt":null,"updatedAt":"2018-08-06T01:19:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc1NzE5OQ==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207757199","bodyText":"withAuth() should be used for the existing components which need it, i.e. dashboard and kanban board where you added it for the filters.","diffHunk":"@@ -1,125 +1,186 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n import classnames from 'classnames';\n import {Link} from 'react-router';\n \n import {getFilters} from '../route-utils';\n import IssueStore from '../issue-store';\n+import Database from '../database';\n \n import GithubFlavoredMarkdown from './gfm';\n import Time from './time';\n import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n+import withAuth from './login-auth';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {\n+  saveToDatabase = (content, isAdd) => {\n+    // reviewCard is just part of issueCard\n+    const {card, loginInfo} = this.props;\n+    const {repoOwner, repoName, number} = card;\n+    const {login} = loginInfo;\n+    if (isAdd) {\n+      // add a new reaction\n+      if (!card.reactions) card.reactions = [];\n+      card.reactions.push({\n+        content,\n+        user: {\n+          login,\n+        },\n+      });\n+    } else {\n+      // remove an existing reaction\n+      card.reactions = card.reactions.filter((reaction) => {\n+        return !(reaction.user.login === login && reaction.content === content);\n+      });\n+    }\n+    // find the corresponding issueCard\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    // update corresponding issueCard\n+    issueCard.issue.pullRequest.comments.forEach(reviewCard => {\n+      if (reviewCard.id === card.id) {\n+        reviewCard = card;\n+      }\n+    });\n+    Database.putCards([issueCard]);\n+  }\n+\n+  render() {\n+    const {card, primaryRepoName, loginInfo} = this.props;\n+    const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n+    const key = `${repoOwner}/${repoName}#${number}-${id}`;\n+\n+    // comment updatedAt is updated when comment content is edited.\n+    // Note that the default `updatedAt` field of review comment\n+    // provided by GraphQL API is inaccurate. Thus, we use our custom\n+    // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n+    const updatedAt = card.updatedAt;\n+\n+    const user = card.author;\n+    const assignedAvatar = (\n+      <Link to={getFilters().toggleUserName(user.login).url()}>\n+        <img\n+          key='avatar'\n+          className='avatar-image'\n+          title={'Click to filter on ' + user.login}\n+          src={user.avatarUrl}/>\n+      </Link>\n+    );\n+    // stop highlighting after 5min\n+    const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n+\n+    // put the corresponding pull request as related card\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    const relatedCards = [issueCard].map((issueCard) => {\n+      let title;\n+      if (issueCard.issue) {\n+        title = (\n+          <span className='related-issue-title'>{issueCard.issue.title}</span>\n+        );\n+      }\n+      return (\n+        <div key={issueCard.key()} className='related-issue'>\n+          <IssueOrPullRequestBlurb\n+            card={issueCard}\n+            primaryRepoName={card.repoName}/>\n+          {title}\n+        </div>\n       );\n+    });\n+\n+    const classes = {\n+      'review': true,\n+      'is-updated': isUpdated,\n+    };\n+\n+    const header = [\n+      <ReviewBlurb key='review-blurb'\n+        card={card}\n+        primaryRepoName={primaryRepoName} />,\n+    ];\n+\n+    let reactionsStat = {\n+      THUMBS_UP: 0,\n+      THUMBS_DOWN: 0,\n+      LAUGH: 0,\n+      HOORAY: 0,\n+      HEART: 0,\n+      CONFUSED: 0\n+    };\n+    if (reactions) {\n+      reactions.forEach(reaction => reactionsStat[reaction.content]++);\n     }\n+\n+    let noReactionByMe;\n+    let hasLogin = false;\n+    if (loginInfo) {\n+      hasLogin = true;\n+      noReactionByMe = {\n+        THUMBS_UP: true,\n+        THUMBS_DOWN: true,\n+        LAUGH: true,\n+        HOORAY: true,\n+        HEART: true,\n+        CONFUSED: true\n+      };\n+      if (reactions) {\n+        reactions.forEach(reaction => {\n+          if (reaction.user && reaction.user.login === loginInfo.login) {\n+            noReactionByMe[reaction.content] = false;\n+          }\n+        });\n+      }\n+    }\n+\n     return (\n-      <div key={issueCard.key()} className='related-issue'>\n-        <IssueOrPullRequestBlurb\n-          card={issueCard}\n-          primaryRepoName={card.repoName}/>\n-        {title}\n-      </div>\n-    );\n-  });\n-\n-  const classes = {\n-    'review': true,\n-    'is-updated': isUpdated,\n-  };\n-\n-  const header = [\n-    <ReviewBlurb key='review-blurb'\n-      card={card}\n-      primaryRepoName={primaryRepoName} />,\n-  ];\n-\n-  let reactionsStat = {\n-    THUMBS_UP: 0,\n-    THUMBS_DOWN: 0,\n-    LAUGH: 0,\n-    HOORAY: 0,\n-    HEART: 0,\n-    CONFUSED: 0\n-  };\n-  if (reactions) {\n-    reactions.forEach(reaction => reactionsStat[reaction.content]++);\n-  }\n+      <div className='-card-and-related'>\n+        <BS.ListGroupItem\n+          key={key}\n+          header={header}\n+          className={classnames(classes)}>\n \n-  return (\n-    <div className='-card-and-related'>\n-      <BS.ListGroupItem\n-        key={key}\n-        header={header}\n-        className={classnames(classes)}>\n-\n-        <span className='-extra-span-for-inline-popover'>\n-          <a\n-            key='link'\n-            className='review-title'\n-            target='_blank'\n-            href={url}>\n-              <GithubFlavoredMarkdown\n-                inline\n-                repoOwner={repoOwner}\n-                repoName={repoName}\n-                text={bodyText}/>\n-          </a>\n-        </span>\n-\n-        <span key='footer' className='review-footer'>\n-          <span key='left-footer' className='comment-reactions'>\n-            <Reactions stat={reactionsStat}/>\n+          <span className='-extra-span-for-inline-popover'>\n+            <a\n+              key='link'\n+              className='review-title'\n+              target='_blank'\n+              href={url}>\n+                <GithubFlavoredMarkdown\n+                  inline\n+                  repoOwner={repoOwner}\n+                  repoName={repoName}\n+                  text={bodyText}/>\n+            </a>\n           </span>\n-          <span key='right-footer' className='review-time-and-user'>\n-            <Time key='time' className='updated-at' dateTime={updatedAt}/>\n-            {assignedAvatar}\n+\n+          <span key='footer' className='review-footer'>\n+            <span key='left-footer' className='comment-reactions'>\n+              <Reactions\n+                id={id}\n+                stat={reactionsStat}\n+                noReactionByMe={noReactionByMe}\n+                hasLogin={hasLogin}\n+                saveCallBack={this.saveToDatabase}/>\n+            </span>\n+            <span key='right-footer' className='review-time-and-user'>\n+              <Time key='time' className='updated-at' dateTime={updatedAt}/>\n+              {assignedAvatar}\n+            </span>\n           </span>\n-        </span>\n-      </BS.ListGroupItem>\n-      <div key='related' className='related-issues'>\n-        {relatedCards}\n+        </BS.ListGroupItem>\n+        <div key='related' className='related-issues'>\n+          {relatedCards}\n+        </div>\n       </div>\n-    </div>\n-  );\n+    );\n+  }\n }\n \n-function Review({review}) {\n+function Review({review, loginInfo}) {\n   return (\n-    <ReviewCard card={review}/>\n+    <ReviewCard card={review} loginInfo={loginInfo}/>\n   );\n }\n \n-export default Review;\n+export default withAuth(Review);","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T01:22:58Z","lastEditedAt":null,"updatedAt":"2018-08-06T01:22:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg4Nzg0Ng==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207887846","bodyText":"The logic for dashboard is actually different... See \n  \n    \n      gh-board/src/components/dashboard.jsx\n    \n    \n         Line 351\n      in\n      38a94ce\n    \n    \n    \n    \n\n        \n          \n                   return Client.dbPromise().then(() => Client.getOcto().user.repos.fetchAll());","diffHunk":"@@ -1,125 +1,186 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n import classnames from 'classnames';\n import {Link} from 'react-router';\n \n import {getFilters} from '../route-utils';\n import IssueStore from '../issue-store';\n+import Database from '../database';\n \n import GithubFlavoredMarkdown from './gfm';\n import Time from './time';\n import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n+import withAuth from './login-auth';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {\n+  saveToDatabase = (content, isAdd) => {\n+    // reviewCard is just part of issueCard\n+    const {card, loginInfo} = this.props;\n+    const {repoOwner, repoName, number} = card;\n+    const {login} = loginInfo;\n+    if (isAdd) {\n+      // add a new reaction\n+      if (!card.reactions) card.reactions = [];\n+      card.reactions.push({\n+        content,\n+        user: {\n+          login,\n+        },\n+      });\n+    } else {\n+      // remove an existing reaction\n+      card.reactions = card.reactions.filter((reaction) => {\n+        return !(reaction.user.login === login && reaction.content === content);\n+      });\n+    }\n+    // find the corresponding issueCard\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    // update corresponding issueCard\n+    issueCard.issue.pullRequest.comments.forEach(reviewCard => {\n+      if (reviewCard.id === card.id) {\n+        reviewCard = card;\n+      }\n+    });\n+    Database.putCards([issueCard]);\n+  }\n+\n+  render() {\n+    const {card, primaryRepoName, loginInfo} = this.props;\n+    const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n+    const key = `${repoOwner}/${repoName}#${number}-${id}`;\n+\n+    // comment updatedAt is updated when comment content is edited.\n+    // Note that the default `updatedAt` field of review comment\n+    // provided by GraphQL API is inaccurate. Thus, we use our custom\n+    // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n+    const updatedAt = card.updatedAt;\n+\n+    const user = card.author;\n+    const assignedAvatar = (\n+      <Link to={getFilters().toggleUserName(user.login).url()}>\n+        <img\n+          key='avatar'\n+          className='avatar-image'\n+          title={'Click to filter on ' + user.login}\n+          src={user.avatarUrl}/>\n+      </Link>\n+    );\n+    // stop highlighting after 5min\n+    const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n+\n+    // put the corresponding pull request as related card\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    const relatedCards = [issueCard].map((issueCard) => {\n+      let title;\n+      if (issueCard.issue) {\n+        title = (\n+          <span className='related-issue-title'>{issueCard.issue.title}</span>\n+        );\n+      }\n+      return (\n+        <div key={issueCard.key()} className='related-issue'>\n+          <IssueOrPullRequestBlurb\n+            card={issueCard}\n+            primaryRepoName={card.repoName}/>\n+          {title}\n+        </div>\n       );\n+    });\n+\n+    const classes = {\n+      'review': true,\n+      'is-updated': isUpdated,\n+    };\n+\n+    const header = [\n+      <ReviewBlurb key='review-blurb'\n+        card={card}\n+        primaryRepoName={primaryRepoName} />,\n+    ];\n+\n+    let reactionsStat = {\n+      THUMBS_UP: 0,\n+      THUMBS_DOWN: 0,\n+      LAUGH: 0,\n+      HOORAY: 0,\n+      HEART: 0,\n+      CONFUSED: 0\n+    };\n+    if (reactions) {\n+      reactions.forEach(reaction => reactionsStat[reaction.content]++);\n     }\n+\n+    let noReactionByMe;\n+    let hasLogin = false;\n+    if (loginInfo) {\n+      hasLogin = true;\n+      noReactionByMe = {\n+        THUMBS_UP: true,\n+        THUMBS_DOWN: true,\n+        LAUGH: true,\n+        HOORAY: true,\n+        HEART: true,\n+        CONFUSED: true\n+      };\n+      if (reactions) {\n+        reactions.forEach(reaction => {\n+          if (reaction.user && reaction.user.login === loginInfo.login) {\n+            noReactionByMe[reaction.content] = false;\n+          }\n+        });\n+      }\n+    }\n+\n     return (\n-      <div key={issueCard.key()} className='related-issue'>\n-        <IssueOrPullRequestBlurb\n-          card={issueCard}\n-          primaryRepoName={card.repoName}/>\n-        {title}\n-      </div>\n-    );\n-  });\n-\n-  const classes = {\n-    'review': true,\n-    'is-updated': isUpdated,\n-  };\n-\n-  const header = [\n-    <ReviewBlurb key='review-blurb'\n-      card={card}\n-      primaryRepoName={primaryRepoName} />,\n-  ];\n-\n-  let reactionsStat = {\n-    THUMBS_UP: 0,\n-    THUMBS_DOWN: 0,\n-    LAUGH: 0,\n-    HOORAY: 0,\n-    HEART: 0,\n-    CONFUSED: 0\n-  };\n-  if (reactions) {\n-    reactions.forEach(reaction => reactionsStat[reaction.content]++);\n-  }\n+      <div className='-card-and-related'>\n+        <BS.ListGroupItem\n+          key={key}\n+          header={header}\n+          className={classnames(classes)}>\n \n-  return (\n-    <div className='-card-and-related'>\n-      <BS.ListGroupItem\n-        key={key}\n-        header={header}\n-        className={classnames(classes)}>\n-\n-        <span className='-extra-span-for-inline-popover'>\n-          <a\n-            key='link'\n-            className='review-title'\n-            target='_blank'\n-            href={url}>\n-              <GithubFlavoredMarkdown\n-                inline\n-                repoOwner={repoOwner}\n-                repoName={repoName}\n-                text={bodyText}/>\n-          </a>\n-        </span>\n-\n-        <span key='footer' className='review-footer'>\n-          <span key='left-footer' className='comment-reactions'>\n-            <Reactions stat={reactionsStat}/>\n+          <span className='-extra-span-for-inline-popover'>\n+            <a\n+              key='link'\n+              className='review-title'\n+              target='_blank'\n+              href={url}>\n+                <GithubFlavoredMarkdown\n+                  inline\n+                  repoOwner={repoOwner}\n+                  repoName={repoName}\n+                  text={bodyText}/>\n+            </a>\n           </span>\n-          <span key='right-footer' className='review-time-and-user'>\n-            <Time key='time' className='updated-at' dateTime={updatedAt}/>\n-            {assignedAvatar}\n+\n+          <span key='footer' className='review-footer'>\n+            <span key='left-footer' className='comment-reactions'>\n+              <Reactions\n+                id={id}\n+                stat={reactionsStat}\n+                noReactionByMe={noReactionByMe}\n+                hasLogin={hasLogin}\n+                saveCallBack={this.saveToDatabase}/>\n+            </span>\n+            <span key='right-footer' className='review-time-and-user'>\n+              <Time key='time' className='updated-at' dateTime={updatedAt}/>\n+              {assignedAvatar}\n+            </span>\n           </span>\n-        </span>\n-      </BS.ListGroupItem>\n-      <div key='related' className='related-issues'>\n-        {relatedCards}\n+        </BS.ListGroupItem>\n+        <div key='related' className='related-issues'>\n+          {relatedCards}\n+        </div>\n       </div>\n-    </div>\n-  );\n+    );\n+  }\n }\n \n-function Review({review}) {\n+function Review({review, loginInfo}) {\n   return (\n-    <ReviewCard card={review}/>\n+    <ReviewCard card={review} loginInfo={loginInfo}/>\n   );\n }\n \n-export default Review;\n+export default withAuth(Review);","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-06T13:18:53Z","lastEditedAt":null,"updatedAt":"2018-08-06T13:18:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzkyMjIyOA==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207922228","bodyText":"I meant to say WrappedComponent in my example just like in React doc\nAlso, the convention is, function name should start with with","diffHunk":"@@ -0,0 +1,34 @@\n+import {Component} from 'react';\n+\n+import CurrentUserStore from '../user-store';\n+import Client from '../github-client';\n+\n+function loginAuth(WrapperComponent) {","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-06T14:57:21Z","lastEditedAt":null,"updatedAt":"2018-08-06T14:57:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzkyOTUxMQ==","url":"https://github.com/coala/gh-board/pull/147#discussion_r207929511","bodyText":"I think it would've been possible to chain onChangeToken if it's component with render prop instead of HOC\nclass Dashboard extends Component {\n  onChangeToken() {\n    ...\n  }\n  \n  renderDashboard(loginInfo) {\n    return (...)\n  }\n  \n  render() {\n    return (\n      <Auth\n        onChangeToken={this.onChangeToken}\n        render={this.renderDashboard}\n      />\n    )\n  }\n}\nThe onChangeToken in Auth component (currently withAuth HOC) should also call this.props.onChangeToken, after setting its own state.\nYou could also pass Client down with this.props.onChangeToken so it's not leaking (although I'm not so sure, is Client related to auth?)","diffHunk":"@@ -1,125 +1,186 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n import classnames from 'classnames';\n import {Link} from 'react-router';\n \n import {getFilters} from '../route-utils';\n import IssueStore from '../issue-store';\n+import Database from '../database';\n \n import GithubFlavoredMarkdown from './gfm';\n import Time from './time';\n import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n+import withAuth from './login-auth';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {\n+  saveToDatabase = (content, isAdd) => {\n+    // reviewCard is just part of issueCard\n+    const {card, loginInfo} = this.props;\n+    const {repoOwner, repoName, number} = card;\n+    const {login} = loginInfo;\n+    if (isAdd) {\n+      // add a new reaction\n+      if (!card.reactions) card.reactions = [];\n+      card.reactions.push({\n+        content,\n+        user: {\n+          login,\n+        },\n+      });\n+    } else {\n+      // remove an existing reaction\n+      card.reactions = card.reactions.filter((reaction) => {\n+        return !(reaction.user.login === login && reaction.content === content);\n+      });\n+    }\n+    // find the corresponding issueCard\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    // update corresponding issueCard\n+    issueCard.issue.pullRequest.comments.forEach(reviewCard => {\n+      if (reviewCard.id === card.id) {\n+        reviewCard = card;\n+      }\n+    });\n+    Database.putCards([issueCard]);\n+  }\n+\n+  render() {\n+    const {card, primaryRepoName, loginInfo} = this.props;\n+    const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n+    const key = `${repoOwner}/${repoName}#${number}-${id}`;\n+\n+    // comment updatedAt is updated when comment content is edited.\n+    // Note that the default `updatedAt` field of review comment\n+    // provided by GraphQL API is inaccurate. Thus, we use our custom\n+    // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n+    const updatedAt = card.updatedAt;\n+\n+    const user = card.author;\n+    const assignedAvatar = (\n+      <Link to={getFilters().toggleUserName(user.login).url()}>\n+        <img\n+          key='avatar'\n+          className='avatar-image'\n+          title={'Click to filter on ' + user.login}\n+          src={user.avatarUrl}/>\n+      </Link>\n+    );\n+    // stop highlighting after 5min\n+    const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n+\n+    // put the corresponding pull request as related card\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    const relatedCards = [issueCard].map((issueCard) => {\n+      let title;\n+      if (issueCard.issue) {\n+        title = (\n+          <span className='related-issue-title'>{issueCard.issue.title}</span>\n+        );\n+      }\n+      return (\n+        <div key={issueCard.key()} className='related-issue'>\n+          <IssueOrPullRequestBlurb\n+            card={issueCard}\n+            primaryRepoName={card.repoName}/>\n+          {title}\n+        </div>\n       );\n+    });\n+\n+    const classes = {\n+      'review': true,\n+      'is-updated': isUpdated,\n+    };\n+\n+    const header = [\n+      <ReviewBlurb key='review-blurb'\n+        card={card}\n+        primaryRepoName={primaryRepoName} />,\n+    ];\n+\n+    let reactionsStat = {\n+      THUMBS_UP: 0,\n+      THUMBS_DOWN: 0,\n+      LAUGH: 0,\n+      HOORAY: 0,\n+      HEART: 0,\n+      CONFUSED: 0\n+    };\n+    if (reactions) {\n+      reactions.forEach(reaction => reactionsStat[reaction.content]++);\n     }\n+\n+    let noReactionByMe;\n+    let hasLogin = false;\n+    if (loginInfo) {\n+      hasLogin = true;\n+      noReactionByMe = {\n+        THUMBS_UP: true,\n+        THUMBS_DOWN: true,\n+        LAUGH: true,\n+        HOORAY: true,\n+        HEART: true,\n+        CONFUSED: true\n+      };\n+      if (reactions) {\n+        reactions.forEach(reaction => {\n+          if (reaction.user && reaction.user.login === loginInfo.login) {\n+            noReactionByMe[reaction.content] = false;\n+          }\n+        });\n+      }\n+    }\n+\n     return (\n-      <div key={issueCard.key()} className='related-issue'>\n-        <IssueOrPullRequestBlurb\n-          card={issueCard}\n-          primaryRepoName={card.repoName}/>\n-        {title}\n-      </div>\n-    );\n-  });\n-\n-  const classes = {\n-    'review': true,\n-    'is-updated': isUpdated,\n-  };\n-\n-  const header = [\n-    <ReviewBlurb key='review-blurb'\n-      card={card}\n-      primaryRepoName={primaryRepoName} />,\n-  ];\n-\n-  let reactionsStat = {\n-    THUMBS_UP: 0,\n-    THUMBS_DOWN: 0,\n-    LAUGH: 0,\n-    HOORAY: 0,\n-    HEART: 0,\n-    CONFUSED: 0\n-  };\n-  if (reactions) {\n-    reactions.forEach(reaction => reactionsStat[reaction.content]++);\n-  }\n+      <div className='-card-and-related'>\n+        <BS.ListGroupItem\n+          key={key}\n+          header={header}\n+          className={classnames(classes)}>\n \n-  return (\n-    <div className='-card-and-related'>\n-      <BS.ListGroupItem\n-        key={key}\n-        header={header}\n-        className={classnames(classes)}>\n-\n-        <span className='-extra-span-for-inline-popover'>\n-          <a\n-            key='link'\n-            className='review-title'\n-            target='_blank'\n-            href={url}>\n-              <GithubFlavoredMarkdown\n-                inline\n-                repoOwner={repoOwner}\n-                repoName={repoName}\n-                text={bodyText}/>\n-          </a>\n-        </span>\n-\n-        <span key='footer' className='review-footer'>\n-          <span key='left-footer' className='comment-reactions'>\n-            <Reactions stat={reactionsStat}/>\n+          <span className='-extra-span-for-inline-popover'>\n+            <a\n+              key='link'\n+              className='review-title'\n+              target='_blank'\n+              href={url}>\n+                <GithubFlavoredMarkdown\n+                  inline\n+                  repoOwner={repoOwner}\n+                  repoName={repoName}\n+                  text={bodyText}/>\n+            </a>\n           </span>\n-          <span key='right-footer' className='review-time-and-user'>\n-            <Time key='time' className='updated-at' dateTime={updatedAt}/>\n-            {assignedAvatar}\n+\n+          <span key='footer' className='review-footer'>\n+            <span key='left-footer' className='comment-reactions'>\n+              <Reactions\n+                id={id}\n+                stat={reactionsStat}\n+                noReactionByMe={noReactionByMe}\n+                hasLogin={hasLogin}\n+                saveCallBack={this.saveToDatabase}/>\n+            </span>\n+            <span key='right-footer' className='review-time-and-user'>\n+              <Time key='time' className='updated-at' dateTime={updatedAt}/>\n+              {assignedAvatar}\n+            </span>\n           </span>\n-        </span>\n-      </BS.ListGroupItem>\n-      <div key='related' className='related-issues'>\n-        {relatedCards}\n+        </BS.ListGroupItem>\n+        <div key='related' className='related-issues'>\n+          {relatedCards}\n+        </div>\n       </div>\n-    </div>\n-  );\n+    );\n+  }\n }\n \n-function Review({review}) {\n+function Review({review, loginInfo}) {\n   return (\n-    <ReviewCard card={review}/>\n+    <ReviewCard card={review} loginInfo={loginInfo}/>\n   );\n }\n \n-export default Review;\n+export default withAuth(Review);","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY3MDAwOQ==","createdAt":"2018-08-09T05:35:58Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T15:17:49Z","lastEditedAt":"2018-08-06T15:23:46Z","updatedAt":"2018-08-06T15:23:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMDg3Mw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r208230873","bodyText":"Use component with render prop looks nice, but I want to reuse the onChangeToken logic. I changed dashboard logic a bit, so it's not a problem anymore.","diffHunk":"@@ -1,125 +1,186 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n import classnames from 'classnames';\n import {Link} from 'react-router';\n \n import {getFilters} from '../route-utils';\n import IssueStore from '../issue-store';\n+import Database from '../database';\n \n import GithubFlavoredMarkdown from './gfm';\n import Time from './time';\n import ReviewBlurb from './review-blurb';\n import IssueOrPullRequestBlurb from './issue-blurb';\n import Reactions from './reactions';\n+import withAuth from './login-auth';\n \n-function ReviewCard(props) {\n-  const {card, primaryRepoName} = props;\n-  const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n-\n-  const key = `${repoOwner}/${repoName}#${number}-${id}`;\n-\n-  // comment updatedAt is updated when comment content is edited.\n-  // Note that the default `updatedAt` field of review comment\n-  // provided by GraphQL API is inaccurate. Thus, we use our custom\n-  // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n-  const updatedAt = card.updatedAt;\n-\n-  const user = card.author;\n-  const assignedAvatar = (\n-    <Link to={getFilters().toggleUserName(user.login).url()}>\n-      <img\n-        key='avatar'\n-        className='avatar-image'\n-        title={'Click to filter on ' + user.login}\n-        src={user.avatarUrl}/>\n-    </Link>\n-  );\n-  // stop highlighting after 5min\n-  const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n-\n-  // put the corresponding pull request as related card\n-  const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n-  const relatedCards = [issueCard].map((issueCard) => {\n-    let title;\n-    if (issueCard.issue) {\n-      title = (\n-        <span className='related-issue-title'>{issueCard.issue.title}</span>\n+class ReviewCard extends Component {\n+  saveToDatabase = (content, isAdd) => {\n+    // reviewCard is just part of issueCard\n+    const {card, loginInfo} = this.props;\n+    const {repoOwner, repoName, number} = card;\n+    const {login} = loginInfo;\n+    if (isAdd) {\n+      // add a new reaction\n+      if (!card.reactions) card.reactions = [];\n+      card.reactions.push({\n+        content,\n+        user: {\n+          login,\n+        },\n+      });\n+    } else {\n+      // remove an existing reaction\n+      card.reactions = card.reactions.filter((reaction) => {\n+        return !(reaction.user.login === login && reaction.content === content);\n+      });\n+    }\n+    // find the corresponding issueCard\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    // update corresponding issueCard\n+    issueCard.issue.pullRequest.comments.forEach(reviewCard => {\n+      if (reviewCard.id === card.id) {\n+        reviewCard = card;\n+      }\n+    });\n+    Database.putCards([issueCard]);\n+  }\n+\n+  render() {\n+    const {card, primaryRepoName, loginInfo} = this.props;\n+    const {repoOwner, repoName, number, id, bodyText, reactions, url} = card;\n+    const key = `${repoOwner}/${repoName}#${number}-${id}`;\n+\n+    // comment updatedAt is updated when comment content is edited.\n+    // Note that the default `updatedAt` field of review comment\n+    // provided by GraphQL API is inaccurate. Thus, we use our custom\n+    // updatedAt, defined by `lastEditedAt` and `createdAt` time if never edited.\n+    const updatedAt = card.updatedAt;\n+\n+    const user = card.author;\n+    const assignedAvatar = (\n+      <Link to={getFilters().toggleUserName(user.login).url()}>\n+        <img\n+          key='avatar'\n+          className='avatar-image'\n+          title={'Click to filter on ' + user.login}\n+          src={user.avatarUrl}/>\n+      </Link>\n+    );\n+    // stop highlighting after 5min\n+    const isUpdated = Date.now() - Date.parse(updatedAt) < 2 * 60 * 1000;\n+\n+    // put the corresponding pull request as related card\n+    const issueCard = IssueStore.issueNumberToCard(repoOwner, repoName, number);\n+    const relatedCards = [issueCard].map((issueCard) => {\n+      let title;\n+      if (issueCard.issue) {\n+        title = (\n+          <span className='related-issue-title'>{issueCard.issue.title}</span>\n+        );\n+      }\n+      return (\n+        <div key={issueCard.key()} className='related-issue'>\n+          <IssueOrPullRequestBlurb\n+            card={issueCard}\n+            primaryRepoName={card.repoName}/>\n+          {title}\n+        </div>\n       );\n+    });\n+\n+    const classes = {\n+      'review': true,\n+      'is-updated': isUpdated,\n+    };\n+\n+    const header = [\n+      <ReviewBlurb key='review-blurb'\n+        card={card}\n+        primaryRepoName={primaryRepoName} />,\n+    ];\n+\n+    let reactionsStat = {\n+      THUMBS_UP: 0,\n+      THUMBS_DOWN: 0,\n+      LAUGH: 0,\n+      HOORAY: 0,\n+      HEART: 0,\n+      CONFUSED: 0\n+    };\n+    if (reactions) {\n+      reactions.forEach(reaction => reactionsStat[reaction.content]++);\n     }\n+\n+    let noReactionByMe;\n+    let hasLogin = false;\n+    if (loginInfo) {\n+      hasLogin = true;\n+      noReactionByMe = {\n+        THUMBS_UP: true,\n+        THUMBS_DOWN: true,\n+        LAUGH: true,\n+        HOORAY: true,\n+        HEART: true,\n+        CONFUSED: true\n+      };\n+      if (reactions) {\n+        reactions.forEach(reaction => {\n+          if (reaction.user && reaction.user.login === loginInfo.login) {\n+            noReactionByMe[reaction.content] = false;\n+          }\n+        });\n+      }\n+    }\n+\n     return (\n-      <div key={issueCard.key()} className='related-issue'>\n-        <IssueOrPullRequestBlurb\n-          card={issueCard}\n-          primaryRepoName={card.repoName}/>\n-        {title}\n-      </div>\n-    );\n-  });\n-\n-  const classes = {\n-    'review': true,\n-    'is-updated': isUpdated,\n-  };\n-\n-  const header = [\n-    <ReviewBlurb key='review-blurb'\n-      card={card}\n-      primaryRepoName={primaryRepoName} />,\n-  ];\n-\n-  let reactionsStat = {\n-    THUMBS_UP: 0,\n-    THUMBS_DOWN: 0,\n-    LAUGH: 0,\n-    HOORAY: 0,\n-    HEART: 0,\n-    CONFUSED: 0\n-  };\n-  if (reactions) {\n-    reactions.forEach(reaction => reactionsStat[reaction.content]++);\n-  }\n+      <div className='-card-and-related'>\n+        <BS.ListGroupItem\n+          key={key}\n+          header={header}\n+          className={classnames(classes)}>\n \n-  return (\n-    <div className='-card-and-related'>\n-      <BS.ListGroupItem\n-        key={key}\n-        header={header}\n-        className={classnames(classes)}>\n-\n-        <span className='-extra-span-for-inline-popover'>\n-          <a\n-            key='link'\n-            className='review-title'\n-            target='_blank'\n-            href={url}>\n-              <GithubFlavoredMarkdown\n-                inline\n-                repoOwner={repoOwner}\n-                repoName={repoName}\n-                text={bodyText}/>\n-          </a>\n-        </span>\n-\n-        <span key='footer' className='review-footer'>\n-          <span key='left-footer' className='comment-reactions'>\n-            <Reactions stat={reactionsStat}/>\n+          <span className='-extra-span-for-inline-popover'>\n+            <a\n+              key='link'\n+              className='review-title'\n+              target='_blank'\n+              href={url}>\n+                <GithubFlavoredMarkdown\n+                  inline\n+                  repoOwner={repoOwner}\n+                  repoName={repoName}\n+                  text={bodyText}/>\n+            </a>\n           </span>\n-          <span key='right-footer' className='review-time-and-user'>\n-            <Time key='time' className='updated-at' dateTime={updatedAt}/>\n-            {assignedAvatar}\n+\n+          <span key='footer' className='review-footer'>\n+            <span key='left-footer' className='comment-reactions'>\n+              <Reactions\n+                id={id}\n+                stat={reactionsStat}\n+                noReactionByMe={noReactionByMe}\n+                hasLogin={hasLogin}\n+                saveCallBack={this.saveToDatabase}/>\n+            </span>\n+            <span key='right-footer' className='review-time-and-user'>\n+              <Time key='time' className='updated-at' dateTime={updatedAt}/>\n+              {assignedAvatar}\n+            </span>\n           </span>\n-        </span>\n-      </BS.ListGroupItem>\n-      <div key='related' className='related-issues'>\n-        {relatedCards}\n+        </BS.ListGroupItem>\n+        <div key='related' className='related-issues'>\n+          {relatedCards}\n+        </div>\n       </div>\n-    </div>\n-  );\n+    );\n+  }\n }\n \n-function Review({review}) {\n+function Review({review, loginInfo}) {\n   return (\n-    <ReviewCard card={review}/>\n+    <ReviewCard card={review} loginInfo={loginInfo}/>\n   );\n }\n \n-export default Review;\n+export default withAuth(Review);","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-07T13:32:55Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:32:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMjM4OA==","url":"https://github.com/coala/gh-board/pull/147#discussion_r208232388","bodyText":"WrapperComponent -> WrappedComponent","diffHunk":"@@ -0,0 +1,34 @@\n+import {Component} from 'react';\n+\n+import CurrentUserStore from '../user-store';\n+import Client from '../github-client';\n+\n+function withAuth(WrapperComponent) {","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-07T13:37:13Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:37:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMjkyMw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r208232923","bodyText":"missing key property\nhttps://reactjs.org/docs/lists-and-keys.html","diffHunk":"@@ -1,45 +1,185 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  onClick = async (id, content) => {\n+    const canAdd = this.state.canAdd[content];\n+    const saveToDatabase = this.props.saveCallBack;\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+\n+        saveToDatabase(content, true);\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+\n+        saveToDatabase(content, false);\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n+    }\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+        if (noReactionByMe[content] && this.state.canAdd[content]\n+          && this.state.cacheCount[content] === -1) {\n+          // our action (reaction removal) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush removal cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+      }\n+    }\n+\n+    // use null when count is zero because we don't want to display\n+    // number zero on frontend\n+    const reactions = [\n+      {\n+        emoji: '👍',\n+        count: stat.THUMBS_UP + this.state.cacheCount.THUMBS_UP || null,\n+        name: 'THUMBS_UP'\n+      },\n+      {\n+        emoji: '👎',\n+        count: stat.THUMBS_DOWN + this.state.cacheCount.THUMBS_DOWN || null,\n+        name: 'THUMBS_DOWN'\n+      },\n+      {\n+        emoji: '😄',\n+        count: stat.LAUGH + this.state.cacheCount.LAUGH || null,\n+        name: 'LAUGH'\n+      },\n+      {\n+        emoji: '🎉',\n+        count: stat.HOORAY + this.state.cacheCount.HOORAY || null,\n+        name: 'HOORAY'\n+      },\n+      {\n+        emoji: '😕',\n+        count: stat.CONFUSED + this.state.cacheCount.CONFUSED || null,\n+        name: 'CONFUSED'\n+      },\n+      {\n+        emoji: '❤️',\n+        count: stat.HEART + this.state.cacheCount.HEART || null,\n+        name: 'HEART'\n+      }\n+    ];\n+    return reactions.map(reaction => (\n+        <BS.Button\n+          bsClass=\"reaction-btn\"\n+          onClick={() => this.onClick(id, reaction.name)}\n+          disabled={!hasLogin}>","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzYzMjUyOQ==","createdAt":"2018-08-08T14:59:16Z","content":"HOORAY","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-07T13:38:34Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:38:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMzE2Nw==","url":"https://github.com/coala/gh-board/pull/147#discussion_r208233167","bodyText":"^ Seems like the old one doesn't have it either, React should've warned about this.","diffHunk":"@@ -1,45 +1,185 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  onClick = async (id, content) => {\n+    const canAdd = this.state.canAdd[content];\n+    const saveToDatabase = this.props.saveCallBack;\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+\n+        saveToDatabase(content, true);\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+\n+        saveToDatabase(content, false);\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n+    }\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+        if (noReactionByMe[content] && this.state.canAdd[content]\n+          && this.state.cacheCount[content] === -1) {\n+          // our action (reaction removal) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush removal cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+      }\n+    }\n+\n+    // use null when count is zero because we don't want to display\n+    // number zero on frontend\n+    const reactions = [\n+      {\n+        emoji: '👍',\n+        count: stat.THUMBS_UP + this.state.cacheCount.THUMBS_UP || null,\n+        name: 'THUMBS_UP'\n+      },\n+      {\n+        emoji: '👎',\n+        count: stat.THUMBS_DOWN + this.state.cacheCount.THUMBS_DOWN || null,\n+        name: 'THUMBS_DOWN'\n+      },\n+      {\n+        emoji: '😄',\n+        count: stat.LAUGH + this.state.cacheCount.LAUGH || null,\n+        name: 'LAUGH'\n+      },\n+      {\n+        emoji: '🎉',\n+        count: stat.HOORAY + this.state.cacheCount.HOORAY || null,\n+        name: 'HOORAY'\n+      },\n+      {\n+        emoji: '😕',\n+        count: stat.CONFUSED + this.state.cacheCount.CONFUSED || null,\n+        name: 'CONFUSED'\n+      },\n+      {\n+        emoji: '❤️',\n+        count: stat.HEART + this.state.cacheCount.HEART || null,\n+        name: 'HEART'\n+      }\n+    ];\n+    return reactions.map(reaction => (\n+        <BS.Button\n+          bsClass=\"reaction-btn\"\n+          onClick={() => this.onClick(id, reaction.name)}\n+          disabled={!hasLogin}>","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY2OTk3OQ==","createdAt":"2018-08-09T05:34:47Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-07T13:39:05Z","lastEditedAt":"2018-08-07T13:39:42Z","updatedAt":"2018-08-07T13:39:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNzIxNA==","url":"https://github.com/coala/gh-board/pull/147#discussion_r208807214","bodyText":"this four space indent is a bit odd.  I see it was approved previously.","diffHunk":"@@ -1,45 +1,186 @@\n+import {Component} from 'react';\n import * as BS from 'react-bootstrap';\n \n-function Reactions({stat}) {\n-  // use null when count is zero because we don't want to display\n-  // number zero on frontend\n-  const reactions = [\n-    {\n-      emoji: '👍',\n-      count: stat.THUMBS_UP || null,\n-      name: 'THUMBS_UP'\n-    },\n-    {\n-      emoji: '👎',\n-      count: stat.THUMBS_DOWN || null,\n-      name: 'THUMBS_DOWN'\n-    },\n-    {\n-      emoji: '😄',\n-      count: stat.LAUGH || null,\n-      name: 'LAUGH'\n-    },\n-    {\n-      emoji: '🎉',\n-      count: stat.HOORAY || null,\n-      name: 'HOORAY'\n-    },\n-    {\n-      emoji: '😕',\n-      count: stat.CONFUSED || null,\n-      name: 'CONFUSED'\n-    },\n-    {\n-      emoji: '❤️',\n-      count: stat.HEART || null,\n-      name: 'HEART'\n+import Client from '../github-client';\n+\n+class Reactions extends Component {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      canAdd: {},\n+      // use cache to reflect reaction count on frontend\n+      // if we fetch up-to-date reaction count after mutation,\n+      // we have to refetch the whole pull request which wastes\n+      // a lot of API hits (there is no way to fetch single review\n+      // comment at the moment)\n+      cacheCount: {\n+        THUMBS_UP: 0,\n+        THUMBS_DOWN: 0,\n+        LAUGH: 0,\n+        HOORAY: 0,\n+        CONFUSED: 0,\n+        HEART: 0\n+      }\n+    };\n+  }\n+\n+  onClick = async (id, content) => {\n+    const canAdd = this.state.canAdd[content];\n+    const saveToDatabase = this.props.saveCallBack;\n+    let result, msg;\n+    if (canAdd) {\n+      ({ result, msg } = await Client.getGraphQLClient().addReaction(\n+        {id, content}\n+      ));\n+    } else {\n+      ({ result, msg } = await Client.getGraphQLClient().removeReaction(\n+        {id, content}\n+      ));\n+    }\n+    if (result) {\n+      if (canAdd) {\n+        // reaction creation succeeds\n+\n+        // Note that if it is already meta-reviewed by the user but not via gh-board,\n+        // action (add reaction) will fail, but GitHub won't return any error/warning.\n+        // The good news is that user won't be annoyed because the frontend behavior\n+        // is they add reactions successfully.\n+\n+        // A side note is that gh-board will not update accordingly if user does\n+        // meta-review directly on GitHub web page instead of on gh-board. This is\n+        // because the `updatedBy` attribute of the pull request won't get changed\n+        // due to meta-review.\n+\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = false;\n+          // update cache\n+          newState.cacheCount[content] += 1;\n+          return newState;\n+        });\n+\n+        saveToDatabase(content, true);\n+      } else {\n+        // reaction removal succeeds\n+        this.setState((prevState) => {\n+          let newState = prevState;\n+          newState.canAdd[content] = true;\n+          // update cache\n+          newState.cacheCount[content] -= 1;\n+          return newState;\n+        });\n+\n+        saveToDatabase(content, false);\n+      }\n+    } else {\n+      if (canAdd) {\n+        // reaction creation fails\n+        console.log('add', content, 'to comment id', id, 'failed.',\n+          'message: ', msg);\n+      } else {\n+        console.log('remove', content, 'from comment id', id, 'failed',\n+          'message:', msg);\n+        // reaction removal fails\n+        if (msg && msg.length && msg[0].type === 'FORBIDDEN') {\n+          console.log('reaction removal failed due to permission error.',\n+            'This is probably because user has done meta-review somewhere out',\n+            'of gh-board.');\n+          this.setState((prevState) => {\n+            let newState = prevState;\n+            newState.canAdd[content] = true;\n+            // clean cache\n+            newState.cacheCount[content] = 0;\n+            return newState;\n+          });\n+          this.syncReview();\n+        }\n+      }\n+    }\n+  }\n+\n+  render() {\n+    // id is the global identifier for the corresponding review comment\n+    const {id, stat, hasLogin, noReactionByMe} = this.props;\n+\n+    if (noReactionByMe && !Object.keys(this.state.canAdd).length) {\n+      // use deep copy for canAdd instead of reference so that we can\n+      // we deliberately only copy them once\n+      this.state.canAdd = {\n+        THUMBS_UP: noReactionByMe.THUMBS_UP,\n+        THUMBS_DOWN: noReactionByMe.THUMBS_DOWN,\n+        LAUGH: noReactionByMe.LAUGH,\n+        HOORAY: noReactionByMe.HOORAY,\n+        CONFUSED: noReactionByMe.CONFUSED,\n+        HEART: noReactionByMe.HEART\n+      };\n     }\n-  ];\n-  return reactions.map(reaction => (\n-      <BS.Button bsClass=\"reaction-btn\">\n-        {reaction.emoji} {reaction.count}\n-      </BS.Button>\n-  ));\n+\n+    // props reflect real status of reactions, but may be out of date\n+    // we need to update cached information (this.state) accordingly\n+    if (noReactionByMe && this.state.canAdd) {\n+      const contents = ['THUMBS_UP', 'THUMBS_DOWN', 'LAUGH', 'HOORAY', 'CONFUSED', 'HEART'];\n+      for (const content of contents) {\n+        if (!noReactionByMe[content] && !this.state.canAdd[content]\n+          && this.state.cacheCount[content] === 1) {\n+          // our action (reaction creation) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush creation cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+        if (noReactionByMe[content] && this.state.canAdd[content]\n+          && this.state.cacheCount[content] === -1) {\n+          // our action (reaction removal) is now correctly reflected by props\n+          // need to flush cache, otherwise reaction count would be wrong\n+          console.log('flush removal cache of content', content);\n+          this.state.cacheCount[content] = 0;\n+        }\n+      }\n+    }\n+\n+    // use null when count is zero because we don't want to display\n+    // number zero on frontend\n+    const reactions = [\n+      {\n+        emoji: '👍',\n+        count: stat.THUMBS_UP + this.state.cacheCount.THUMBS_UP || null,\n+        name: 'THUMBS_UP'\n+      },\n+      {\n+        emoji: '👎',\n+        count: stat.THUMBS_DOWN + this.state.cacheCount.THUMBS_DOWN || null,\n+        name: 'THUMBS_DOWN'\n+      },\n+      {\n+        emoji: '😄',\n+        count: stat.LAUGH + this.state.cacheCount.LAUGH || null,\n+        name: 'LAUGH'\n+      },\n+      {\n+        emoji: '🎉',\n+        count: stat.HOORAY + this.state.cacheCount.HOORAY || null,\n+        name: 'HOORAY'\n+      },\n+      {\n+        emoji: '😕',\n+        count: stat.CONFUSED + this.state.cacheCount.CONFUSED || null,\n+        name: 'CONFUSED'\n+      },\n+      {\n+        emoji: '❤️',\n+        count: stat.HEART + this.state.cacheCount.HEART || null,\n+        name: 'HEART'\n+      }\n+    ];\n+    return reactions.map(reaction => (\n+        <BS.Button","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-09T05:05:55Z","lastEditedAt":null,"updatedAt":"2018-08-09T05:05:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDkyMzAwMQ==","url":"https://github.com/coala/gh-board/pull/147#issuecomment-410923001","bodyText":"If using still like using HOC, you can make HOC from component with render prop, and use HOC if you only need to pass data props down and use component if only needed. i.e. in Dashboard component.","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-07T03:38:41Z","lastEditedAt":"2018-08-07T03:39:33Z","updatedAt":"2018-08-07T03:39:33Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1534030542000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/70","number":70,"title":"gh-board-gitignore.jj2: Add `src/lib/columns.js`","body":"Added an exception in .moban.dt/gh-board-gitignore.jj2\nCloses #50","comments":10,"createdAt":"2018-07-07T09:19:14Z","updatedAt":"2018-08-11T23:35:42Z","closedAt":null,"state":"open","user":{"login":"igagankalra","avatarUrl":"https://avatars0.githubusercontent.com/u/22219148?v=4"},"owner":{"login":"igagankalra","avatarUrl":"https://avatars0.githubusercontent.com/u/22219148?v=4"},"assignee":{"login":"igagankalra","avatarUrl":"https://avatars0.githubusercontent.com/u/22219148?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"},{"name":"importance/medium","color":"65f23e"},{"name":"process/wip","color":"ead483"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/70","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgwOTkyMw==","url":"https://github.com/coala/gh-board/pull/70#discussion_r200809923","bodyText":"! is needed?","diffHunk":"@@ -7,5 +7,6 @@\n *.patch\n *.orig\n *.diff\n+!*/src/lib/columns.js","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-07T11:28:16Z","lastEditedAt":null,"updatedAt":"2018-07-07T11:28:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgxMDAyNg==","url":"https://github.com/coala/gh-board/pull/70#discussion_r200810026","bodyText":"yes, to forcefully include it despite other rules which ignore it.","diffHunk":"@@ -7,5 +7,6 @@\n *.patch\n *.orig\n *.diff\n+!*/src/lib/columns.js","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjEyOTUyNw==","createdAt":"2018-07-07T11:36:22Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-07-07T11:35:45Z","lastEditedAt":null,"updatedAt":"2018-07-07T11:35:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg4MTYzMg==","url":"https://github.com/coala/gh-board/pull/70#discussion_r201881632","bodyText":"Please also add this line to .gitignore (see Travis failure)","diffHunk":"@@ -7,5 +7,6 @@\n *.patch\n *.orig\n *.diff\n+!*/src/lib/columns.js","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-12T00:51:43Z","lastEditedAt":null,"updatedAt":"2018-07-12T00:51:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzIwODY4OQ==","url":"https://github.com/coala/gh-board/pull/70#issuecomment-403208689","bodyText":"Go through the newcomer guide http://coala.io/newcomer first. It will help you to write good commit messages.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY3MDE4Mw==","createdAt":"2018-08-09T05:42:01Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-07T11:23:13Z","lastEditedAt":null,"updatedAt":"2018-07-07T11:23:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzIwODc2OA==","url":"https://github.com/coala/gh-board/pull/70#issuecomment-403208768","bodyText":"I have gone through that but how can I solve this one, I don't think it's due to commit message or is it? @sangamcse","diffHunk":null,"author":{"login":"igagankalra","avatarUrl":"https://avatars0.githubusercontent.com/u/22219148?v=4","name":"Gagan Kalra"},"reactions":[],"createdAt":"2018-07-07T11:25:04Z","lastEditedAt":"2018-07-07T11:25:17Z","updatedAt":"2018-07-07T11:25:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzIwOTMyNg==","url":"https://github.com/coala/gh-board/pull/70#issuecomment-403209326","bodyText":"@igagankalra, you need to adjust your commit message to follow https://coala.io/commit\nDont worry about the moban sync problem.  Someone else will fix that, or we'll show you how to fix that, once your commit is OK.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY3MDE2MQ==","createdAt":"2018-08-09T05:41:10Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-07T11:36:59Z","lastEditedAt":null,"updatedAt":"2018-07-07T11:36:59Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533129541000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/83","number":83,"title":"Add review filters functionality","body":"Closes #82","comments":15,"createdAt":"2018-07-21T15:05:11Z","updatedAt":"2018-08-01T13:19:01Z","closedAt":"2018-08-01T04:51:00Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/83","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MTIxOA==","url":"https://github.com/coala/gh-board/pull/83#discussion_r205961218","bodyText":"this part can be moved to a new easy PR for #131","diffHunk":"@@ -91,11 +92,28 @@ function ReviewColumn(props) {\n }\n \n class KanbanRepo extends Component {\n+  state = {login: null};\n+\n   componentDidMount() {\n     const repoTitle = titlecaps(this.props.repoInfos[0].repoName);\n     document.title = `${repoTitle} Kanban Board`;\n+    Client.on('changeToken', this.onChangeToken);","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T05:25:25Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:25:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NDk0OQ==","url":"https://github.com/coala/gh-board/pull/83#discussion_r205964949","bodyText":"Yeah, this can also be used in #131, but not moved.","diffHunk":"@@ -91,11 +92,28 @@ function ReviewColumn(props) {\n }\n \n class KanbanRepo extends Component {\n+  state = {login: null};\n+\n   componentDidMount() {\n     const repoTitle = titlecaps(this.props.repoInfos[0].repoName);\n     document.title = `${repoTitle} Kanban Board`;\n+    Client.on('changeToken', this.onChangeToken);","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMDc2Mw==","createdAt":"2018-07-29T12:28:47Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-29T08:14:35Z","lastEditedAt":null,"updatedAt":"2018-07-29T08:14:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwMzMwOA==","url":"https://github.com/coala/gh-board/pull/83#discussion_r206103308","bodyText":"Use array.some or array.every ?","diffHunk":"@@ -350,3 +357,58 @@ export function filterCardsByFilter(cards, filter) {\n     return true;\n   });\n }\n+\n+// Filters the list of reviews by the criteria set in the URL.\n+// Note this happens after `issues/prs` get filtered. A review is\n+// just a part of a pull request, so this would only take effect\n+// if its corresponding issue is not filtered out.\n+// Used by FilterStore.filterAndSortReviews()\n+export function filterReviewsByFilter(reviews, filter, user) {\n+  filter = filter || getFilters();\n+  const {reviews: reviewOptions} = filter.getState();\n+\n+  let myReviews, reviewsUnderMyPr, myMetaReviews, others;\n+  for (const reviewOption of reviewOptions) {\n+    switch (reviewOption) {\n+    case 'my-reviews':\n+      myReviews = true;\n+      break;\n+    case 'reviews-under-my-pr':\n+      reviewsUnderMyPr = true;\n+      break;\n+    case 'my-meta-reviews':\n+      myMetaReviews = true;\n+      break;\n+    case 'others':\n+      others = true;\n+      break;\n+    default:\n+      throw new Error('Review filter is invalid!');\n+    }\n+  }\n+\n+  return reviews.filter(review => {\n+    const isMyReview = review.author && review.author.login && review.author.login === user;\n+    const isReviewUnderMyPr = review.prAuthor === user;\n+    const hasMyMetaReview = (() => {","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE3MDY5OA==","createdAt":"2018-07-30T14:43:56Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-30T11:47:47Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:47:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyMjkxMg==","url":"https://github.com/coala/gh-board/pull/83#discussion_r206122912","bodyText":"split into multiple lines?\nalso noting that these methods are horribly repetitive. (i.e. renderTypes / renderStates / etc), but that should get fixed in a separate PR before or after this one, maybe by someone else ;-)","diffHunk":"@@ -243,6 +243,17 @@ class FilterDropdown extends Component {\n     return (<FilterCategory noSearch items={items}/>);\n   };\n \n+  renderReviews = () => {\n+    const filters = getFilters();\n+    const {reviews} = filters.getState();\n+\n+    const items = ['my-reviews', 'reviews-under-my-pr', 'my-meta-reviews', 'others'].map((review) => {\n+      return {text: review, isSelected: reviews.indexOf(review) >= 0, toggleHref: filters.toggleReviews(review).url() };","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE3MDc4OA==","createdAt":"2018-07-30T14:45:20Z","content":"HOORAY","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-30T12:59:08Z","lastEditedAt":null,"updatedAt":"2018-07-30T12:59:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgwMjU1Nw==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-406802557","bodyText":"aaf747c and 3bab083 are from #65. Will remove them when #65 is merged.\nUPDATE: removed","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-21T15:06:04Z","lastEditedAt":"2018-07-26T00:31:02Z","updatedAt":"2018-07-26T00:31:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODU4NzQ3OA==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-408587478","bodyText":"Travis was failing for some weird reason: sh: 1: eslint: not found and many other similar stuff.\nWhen I add commit 81e6c54, Travis passed.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-28T06:49:02Z","lastEditedAt":"2018-07-28T11:03:45Z","updatedAt":"2018-07-28T11:03:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY1MjgzNQ==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-408652835","bodyText":"When I enable only \"Reviews under my PRs\" and \"others\", I still see my own comments, which I shouldnt be meta-reviewing ;-)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T05:19:30Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:19:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2MTAzNg==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-408661036","bodyText":"When I enable only \"Reviews under my PRs\" and \"others\", I still see my own comments, which I shouldnt be meta-reviewing ;-)\n\nThis is the expected behavior, because once you select reviews under my PRs, it will display all reviews under your pr, no matter if they are your own comments or not. The relationship between filters is OR, that is, if you select every filter, you will see everything. There is no way to achieve 'reviews under my prs && !my reviews' using binary select boxes.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-29T08:33:19Z","lastEditedAt":null,"updatedAt":"2018-07-29T08:33:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY3NTI5NA==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-408675294","bodyText":"But \"!not my reviews\" is the main filter which is needed -- It should be default to not show the user their own comments, unless they explicitly request it.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T12:41:42Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:41:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODc0MjM2OQ==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-408742369","bodyText":"Maybe we add a separate set of filters, or a checkbox, for \"include mine\", default disabled.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T04:19:07Z","lastEditedAt":null,"updatedAt":"2018-07-30T04:19:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODg5MDEzOQ==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-408890139","bodyText":"Maybe we add a separate set of filters, or a checkbox, for \"include mine\", default disabled.\n\n@jayvdb Could you please elaborate on that? I don't quite get this point: \"include mine\"","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-30T14:48:42Z","lastEditedAt":null,"updatedAt":"2018-07-30T14:48:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODkxNTY5Nw==","url":"https://github.com/coala/gh-board/pull/83#issuecomment-408915697","bodyText":"A filter to hide the users own actions/content is a general setting which would apply to most 'detail' components.  Issues and PRs and Review comments, etc.  The only exception is when a users PR passes, but generally the user has other notifications for that event anyway.\nThe user doesnt need another notification for their own actions.  It should be not shown by default , but the user can enable it of course.\nAnyways, I can see how it isnt relevant to this PR. And after we can use gh-board interactively maybe I will have a different perspective on this.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE5OTYwMA==","createdAt":"2018-07-31T00:53:39Z","content":"HOORAY","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-30T15:59:35Z","lastEditedAt":null,"updatedAt":"2018-07-30T15:59:35Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533156061000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/87","number":87,"title":"package-lock.json: Include only non-optional packages","body":"Closes #28","comments":7,"createdAt":"2018-07-26T03:31:39Z","updatedAt":"2018-08-01T20:41:01Z","closedAt":"2018-08-01T20:23:15Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"ededed"},{"name":"size/XXL","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/87","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQyNzQ1Mg==","url":"https://github.com/coala/gh-board/pull/87#discussion_r205427452","bodyText":"Why is this in package.json if we're going to install it via npm install in Travis anyway?\nThe proper way to specify version is still in engines key, whether that works in Travis or not, isn't relevant. https://docs.npmjs.com/files/package.json#engines","diffHunk":"@@ -48,6 +48,7 @@\n     \"json-loader\": \"^0.5.4\",\n     \"less\": \"^2.7.1\",\n     \"less-loader\": \"^4.0.5\",\n+    \"npm\": \"^5.8.0\",","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-07-26T11:53:34Z","lastEditedAt":"2018-07-26T11:55:30Z","updatedAt":"2018-07-26T11:55:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQyODM1NA==","url":"https://github.com/coala/gh-board/pull/87#discussion_r205428354","bodyText":"... if Travis is using this, then why is npm install npm necessary?","diffHunk":"@@ -48,6 +48,7 @@\n     \"json-loader\": \"^0.5.4\",\n     \"less\": \"^2.7.1\",\n     \"less-loader\": \"^4.0.5\",\n+    \"npm\": \"^5.8.0\",","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-07-26T11:57:33Z","lastEditedAt":null,"updatedAt":"2018-07-26T11:57:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQzMDA5OA==","url":"https://github.com/coala/gh-board/pull/87#discussion_r205430098","bodyText":"It is in devDependencies, because developers need to use it when generating their package-lock.json , or they will generate a junky one which includes optional dependencies, even if --no-optional is used.\nAfter the first uncached build, npm 5.8 will be cached and used at the beginning of the next build.\nTravis' issue says there is a difference of meaning with engines between \"install\" and \"build\".  Not sure how relevant that is in this type of repo.  The latest npm is usable to do an install -- it is only additions of new dependencies where the older version is needed.","diffHunk":"@@ -48,6 +48,7 @@\n     \"json-loader\": \"^0.5.4\",\n     \"less\": \"^2.7.1\",\n     \"less-loader\": \"^4.0.5\",\n+    \"npm\": \"^5.8.0\",","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-26T12:04:45Z","lastEditedAt":null,"updatedAt":"2018-07-26T12:04:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQ2ODEzNA==","url":"https://github.com/coala/gh-board/pull/87#discussion_r205468134","bodyText":"Usage of the--devoption is deprecated. Use--only=devinstead.\nc.f. https://travis-ci.org/coala/gh-board/jobs/408440200#L458","diffHunk":"@@ -26,6 +26,12 @@ before_script:\n   - sh -e /etc/init.d/xvfb start\n   - sleep 3 # give xvfb some time to start\n \n+before_install:\n+  - npm install --no-save --no-optional --dev npm@5.8.0","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzA3NjY5NA==","createdAt":"2018-07-27T11:33:04Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-26T14:00:59Z","lastEditedAt":null,"updatedAt":"2018-07-26T14:00:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzAwMjk2Nw==","url":"https://github.com/coala/gh-board/pull/87#discussion_r207002967","bodyText":"Added to engines.","diffHunk":"@@ -48,6 +48,7 @@\n     \"json-loader\": \"^0.5.4\",\n     \"less\": \"^2.7.1\",\n     \"less-loader\": \"^4.0.5\",\n+    \"npm\": \"^5.8.0\",","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-01T19:24:58Z","lastEditedAt":null,"updatedAt":"2018-08-01T19:24:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzAwMzMyNw==","url":"https://github.com/coala/gh-board/pull/87#discussion_r207003327","bodyText":"Actually it isnt necessary because of --no-save, but I have kept it in so that it is explicit which type of dependency it is in package.json","diffHunk":"@@ -26,6 +26,12 @@ before_script:\n   - sh -e /etc/init.d/xvfb start\n   - sleep 3 # give xvfb some time to start\n \n+before_install:\n+  - npm install --no-save --no-optional --dev npm@5.8.0","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-01T19:26:24Z","lastEditedAt":null,"updatedAt":"2018-08-01T19:26:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNzk2NTg4MA==","url":"https://github.com/coala/gh-board/pull/87#issuecomment-407965880","bodyText":"The fact that Travis CI auto-detects npm 5.8 and uses npm ci can be seen at https://travis-ci.org/jayvdb/gh-board/builds/408334773\nCompare with npm 5.5 being installed at last master build https://travis-ci.org/coala/gh-board/jobs/408287658\nThere is a bit of relevant Travis history at travis-ci/travis-ci#4653 , where engines.npm was briefly used, and then reverted.  I havent confirmed where Travis is using dependencies.npm , but ... it is somewhere.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-26T03:35:26Z","lastEditedAt":"2018-07-26T03:39:13Z","updatedAt":"2018-07-26T03:39:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODA3NTA4Mw==","url":"https://github.com/coala/gh-board/pull/87#issuecomment-408075083","bodyText":"I am getting a lot of failed builds with this PR and #85 ; not sure what is the problem.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-26T12:06:28Z","lastEditedAt":null,"updatedAt":"2018-07-26T12:06:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODA5NzgyMw==","url":"https://github.com/coala/gh-board/pull/87#issuecomment-408097823","bodyText":"I am getting a lot of failed builds with this PR and #85 ; not sure what is the problem.\n\nI checked the log. Those fail builds are due to the error element (\".modal-dialog button.close\") still not existing after 60000ms\nI am also facing this issue recently. The reason could be, syncing issues takes too much time, or the page isn't correctly loaded due to some unknown reason.\nI wonder if we should abandon the current integration test, which is instable and hard to report coverage, and start building unittests.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzAyNzY4NA==","createdAt":"2018-07-26T14:42:24Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-26T13:29:58Z","lastEditedAt":null,"updatedAt":"2018-07-26T13:29:58Z"}]}}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533165667000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/pull/126","number":126,"title":"Hiroshis' Etherpad","body":"See #5","comments":9,"createdAt":"2018-07-27T14:47:43Z","updatedAt":"2018-08-01T23:21:07Z","closedAt":"2018-08-01T23:04:19Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"ededed"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gh-board/pull/126","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyOTUwNA==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205929504","bodyText":"Redundant blank line?","diffHunk":"@@ -275,11 +277,17 @@ class AppNav extends Component {\n               <SettingsItem key='gantt-chart' to={getFilters().setRouteName('gantt').url()}><GraphIcon/> Gantt Chart</SettingsItem>\n               <SettingsItem key='label-editing' to={getFilters().setRouteName('labels').url()}><TagIcon/> Label Editing</SettingsItem>\n               <BS.MenuItem key='reset-databases' onClick={this.promptAndResetDatabases}>Reset Local Cache...</BS.MenuItem>\n+","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-28T02:02:14Z","lastEditedAt":null,"updatedAt":"2018-07-28T02:02:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyOTkzMw==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205929933","bodyText":"This class is not exported.\nexport default class Etherpad","diffHunk":"@@ -0,0 +1,94 @@\n+import {Component} from 'react';\n+import * as BS from 'react-bootstrap';\n+\n+class Etherpad extends Component {","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-28T02:20:46Z","lastEditedAt":null,"updatedAt":"2018-07-28T02:20:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzMDA5Mg==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205930092","bodyText":"should be\nstatic displayName = 'Etherpad';\nBut anyway, not necessary since the name is the same as class name.\nc.f. #17 (comment)","diffHunk":"@@ -0,0 +1,94 @@\n+import {Component} from 'react';\n+import * as BS from 'react-bootstrap';\n+\n+class Etherpad extends Component {\n+  displayName: 'Etherpad'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-28T02:28:57Z","lastEditedAt":null,"updatedAt":"2018-07-28T02:28:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDU2NA==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934564","bodyText":"Leading space in the object should be removed. And it'd make sense to remove the one above, too, in another commit.","diffHunk":"@@ -90,10 +91,11 @@ class AppNav extends Component {\n   render() {\n     let routeInfo = getFilters().getState();\n     let {repoInfos} = routeInfo;\n-    const {info, showModal} = this.state;\n+    const {info, showModal, showEPModal} = this.state;\n \n     // Note: The dashboard page does not have a list of repos\n     const close = () => this.setState({ showModal: false});\n+    const closeEP = () => this.setState({ showEPModal: false});","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:18:31Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:18:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDU4OQ==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934589","bodyText":"Whitespace before (","diffHunk":"@@ -30,16 +29,26 @@ const EtherpadInner = createReactClass({\n   },\n   poll() {\n     // Start polling\n-    Client.getAnonymousOcto().fromUrl(`${this.getUrl()}/export/txt`).read().then((text) => {\n-      this.setState({text});\n-      // This is the magic text inside a newly-created pad.\n-      // Defined in `etherpad-lite-heroku`'s settings file\n-      if (text.indexOf('Welcome to Etherpad!') >= 0) {\n-        this.loadIssueBody().then(() => {\n-          this.poll(); // Should be guaranteed to no longer be \"This is an empty pad\"\n-        });\n+    const etherpad = EtherpadClient.connect(\n+      this.getEtherpadInfo()\n+    );\n+    etherpad.getText({padID: this.props.padName}, (error, data) => {\n+      if(error) {","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:20:18Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:20:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDU5MA==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934590","bodyText":"Whitespace before (","diffHunk":"@@ -30,16 +29,26 @@ const EtherpadInner = createReactClass({\n   },\n   poll() {\n     // Start polling\n-    Client.getAnonymousOcto().fromUrl(`${this.getUrl()}/export/txt`).read().then((text) => {\n-      this.setState({text});\n-      // This is the magic text inside a newly-created pad.\n-      // Defined in `etherpad-lite-heroku`'s settings file\n-      if (text.indexOf('Welcome to Etherpad!') >= 0) {\n-        this.loadIssueBody().then(() => {\n-          this.poll(); // Should be guaranteed to no longer be \"This is an empty pad\"\n-        });\n+    const etherpad = EtherpadClient.connect(\n+      this.getEtherpadInfo()\n+    );\n+    etherpad.getText({padID: this.props.padName}, (error, data) => {\n+      if(error) {\n+        console.error('Error creating pad: ' + error.message);\n+        if(error.message === 'padID does not exist') {","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:20:25Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:20:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDYyMA==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934620","bodyText":"This could, technically, be shortened to:\nthis.loadIssueBody().then(this.poll)\nwhich is equally readable imo, but works fine as-is.","diffHunk":"@@ -30,16 +29,26 @@ const EtherpadInner = createReactClass({\n   },\n   poll() {\n     // Start polling\n-    Client.getAnonymousOcto().fromUrl(`${this.getUrl()}/export/txt`).read().then((text) => {\n-      this.setState({text});\n-      // This is the magic text inside a newly-created pad.\n-      // Defined in `etherpad-lite-heroku`'s settings file\n-      if (text.indexOf('Welcome to Etherpad!') >= 0) {\n-        this.loadIssueBody().then(() => {\n-          this.poll(); // Should be guaranteed to no longer be \"This is an empty pad\"\n-        });\n+    const etherpad = EtherpadClient.connect(\n+      this.getEtherpadInfo()\n+    );\n+    etherpad.getText({padID: this.props.padName}, (error, data) => {\n+      if(error) {\n+        console.error('Error creating pad: ' + error.message);\n+        if(error.message === 'padID does not exist') {\n+          this.loadIssueBody().then(() => {\n+            this.poll(); // Should be guaranteed to no longer be \"This is an empty pad\"\n+          });","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:22:18Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:22:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDYyNw==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934627","bodyText":"Whitespace before (","diffHunk":"@@ -52,18 +61,27 @@ const EtherpadInner = createReactClass({\n     // from https://github.com/ether/etherpad-lite-jquery-plugin/blob/master/js/etherpad.js\n     return `${hostName}/p/${padName}`;\n   },\n+  getEtherpadInfo() {\n+    const reg = /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*):([0-9]+))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/;\n+    let m = window.localStorage.getItem('ep-url').match(reg);\n+    if(m) {","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:22:44Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:22:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDYzNg==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934636","bodyText":"This might benefit from a more descriptive variable name.","diffHunk":"@@ -52,18 +61,27 @@ const EtherpadInner = createReactClass({\n     // from https://github.com/ether/etherpad-lite-jquery-plugin/blob/master/js/etherpad.js\n     return `${hostName}/p/${padName}`;\n   },\n+  getEtherpadInfo() {\n+    const reg = /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*):([0-9]+))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/;\n+    let m = window.localStorage.getItem('ep-url').match(reg);","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:23:30Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:23:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDY0Nw==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934647","bodyText":"Whitespace before (","diffHunk":"@@ -0,0 +1,96 @@\n+import {Component} from 'react';\n+import * as BS from 'react-bootstrap';\n+\n+class EtherpadModal extends Component {\n+  static displayName = 'Etherpad';\n+  onSave = () => {\n+    let serverURLVal = this._serverURL.value;\n+    if(serverURLVal) {\n+      serverURLVal = serverURLVal.trim();\n+    }\n+    this.setURLSettings(serverURLVal);\n+    let apikey = this._apikey.value;\n+    if(apikey) {\n+      apikey = apikey.trim();\n+    }\n+    this.setAPIkey(apikey);\n+    this.onCancel();\n+  }\n+  onClear = () => {\n+    this.setURLSettings(null);\n+    this.setAPIkey(null);\n+    this.setState({});\n+  }\n+  onCancel = () => {\n+    this.props.onHide();\n+  }\n+  getSettings = () => {\n+    return {\n+      serverURL: window.localStorage.getItem('ep-url'),\n+      apikey: window.localStorage.getItem('ep-apikey')\n+    };\n+  }\n+  setURLSettings = (url) => {\n+    if(url) {\n+      window.localStorage.setItem('ep-url', url);\n+    } else {\n+      window.localStorage.removeItem('ep-url');\n+    }\n+  }\n+  setAPIkey = (key) => {\n+    if(key) {","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:24:29Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:24:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDY0OA==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934648","bodyText":"Whitespace before (","diffHunk":"@@ -0,0 +1,96 @@\n+import {Component} from 'react';\n+import * as BS from 'react-bootstrap';\n+\n+class EtherpadModal extends Component {\n+  static displayName = 'Etherpad';\n+  onSave = () => {\n+    let serverURLVal = this._serverURL.value;\n+    if(serverURLVal) {\n+      serverURLVal = serverURLVal.trim();\n+    }\n+    this.setURLSettings(serverURLVal);\n+    let apikey = this._apikey.value;\n+    if(apikey) {\n+      apikey = apikey.trim();\n+    }\n+    this.setAPIkey(apikey);\n+    this.onCancel();\n+  }\n+  onClear = () => {\n+    this.setURLSettings(null);\n+    this.setAPIkey(null);\n+    this.setState({});\n+  }\n+  onCancel = () => {\n+    this.props.onHide();\n+  }\n+  getSettings = () => {\n+    return {\n+      serverURL: window.localStorage.getItem('ep-url'),\n+      apikey: window.localStorage.getItem('ep-apikey')\n+    };\n+  }\n+  setURLSettings = (url) => {\n+    if(url) {","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:24:33Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:24:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDY1NA==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934654","bodyText":"Whitespace before (","diffHunk":"@@ -0,0 +1,96 @@\n+import {Component} from 'react';\n+import * as BS from 'react-bootstrap';\n+\n+class EtherpadModal extends Component {\n+  static displayName = 'Etherpad';\n+  onSave = () => {\n+    let serverURLVal = this._serverURL.value;\n+    if(serverURLVal) {\n+      serverURLVal = serverURLVal.trim();\n+    }\n+    this.setURLSettings(serverURLVal);\n+    let apikey = this._apikey.value;\n+    if(apikey) {","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:24:51Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:24:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzNDY1Nw==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205934657","bodyText":"Whitespace before (","diffHunk":"@@ -0,0 +1,96 @@\n+import {Component} from 'react';\n+import * as BS from 'react-bootstrap';\n+\n+class EtherpadModal extends Component {\n+  static displayName = 'Etherpad';\n+  onSave = () => {\n+    let serverURLVal = this._serverURL.value;\n+    if(serverURLVal) {","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-07-28T06:25:04Z","lastEditedAt":null,"updatedAt":"2018-07-28T06:25:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MTU0OQ==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205961549","bodyText":"I'll skip this one as then the comment has to move as well.\nI'm trying to get their code in with least amount of changes, but basic style consistency changes are doable.","diffHunk":"@@ -30,16 +29,26 @@ const EtherpadInner = createReactClass({\n   },\n   poll() {\n     // Start polling\n-    Client.getAnonymousOcto().fromUrl(`${this.getUrl()}/export/txt`).read().then((text) => {\n-      this.setState({text});\n-      // This is the magic text inside a newly-created pad.\n-      // Defined in `etherpad-lite-heroku`'s settings file\n-      if (text.indexOf('Welcome to Etherpad!') >= 0) {\n-        this.loadIssueBody().then(() => {\n-          this.poll(); // Should be guaranteed to no longer be \"This is an empty pad\"\n-        });\n+    const etherpad = EtherpadClient.connect(\n+      this.getEtherpadInfo()\n+    );\n+    etherpad.getText({padID: this.props.padName}, (error, data) => {\n+      if(error) {\n+        console.error('Error creating pad: ' + error.message);\n+        if(error.message === 'padID does not exist') {\n+          this.loadIssueBody().then(() => {\n+            this.poll(); // Should be guaranteed to no longer be \"This is an empty pad\"\n+          });","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzNjUxNw==","createdAt":"2018-07-29T19:52:37Z","content":"THUMBS_UP","user":{"login":"andrewda","name":"Andrew Dassonville"}}],"createdAt":"2018-07-29T05:47:43Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:47:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MTc3MQ==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205961771","bodyText":"Agree, but that can happen when we do other bug fixes or enhancements to this component.\nThere will be lots more things to do here, especially deactivating etherpad in other components, especially when etherpad settings are missing, or the token fails, etc","diffHunk":"@@ -52,18 +61,27 @@ const EtherpadInner = createReactClass({\n     // from https://github.com/ether/etherpad-lite-jquery-plugin/blob/master/js/etherpad.js\n     return `${hostName}/p/${padName}`;\n   },\n+  getEtherpadInfo() {\n+    const reg = /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*):([0-9]+))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/;\n+    let m = window.localStorage.getItem('ep-url').match(reg);","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T06:00:02Z","lastEditedAt":null,"updatedAt":"2018-07-29T06:00:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3MTcwMQ==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205971701","bodyText":"If window.localStorage.getItem('ep-url') is undefined, this would lead to an error","diffHunk":"@@ -52,18 +61,27 @@ const EtherpadInner = createReactClass({\n     // from https://github.com/ether/etherpad-lite-jquery-plugin/blob/master/js/etherpad.js\n     return `${hostName}/p/${padName}`;\n   },\n+  getEtherpadInfo() {\n+    const reg = /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*):([0-9]+))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/;\n+    let m = window.localStorage.getItem('ep-url').match(reg);","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-07-29T12:24:05Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:24:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3NDk5MA==","url":"https://github.com/coala/gh-board/pull/126#discussion_r205974990","bodyText":"Yes, but we will need to prevent this component loading if it is not set correctly.  It is useless fixing this here.\nEtherpadClient.connect(self.getEtherpadInfo()) is going to fail if this doesnt return a valid connection metadata.\ne.g. if I put in foo as the URL setting.\nIdeally the validation of the user setting is moved to the modal.\nBut this PR gives credit where it is due, and lets us build on top.\nFirst step is disabling the editor everywhere if the setting is empty.\nThen the problems of this entire component are much less critical as the user cant encounter the problems in the first few clicks.","diffHunk":"@@ -52,18 +61,27 @@ const EtherpadInner = createReactClass({\n     // from https://github.com/ether/etherpad-lite-jquery-plugin/blob/master/js/etherpad.js\n     return `${hostName}/p/${padName}`;\n   },\n+  getEtherpadInfo() {\n+    const reg = /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*):([0-9]+))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/;\n+    let m = window.localStorage.getItem('ep-url').match(reg);","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI5MTg4Mw==","createdAt":"2018-08-01T13:13:43Z","content":"HOORAY","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-07-29T13:58:04Z","lastEditedAt":null,"updatedAt":"2018-07-29T13:58:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODQ0NjEyOQ==","url":"https://github.com/coala/gh-board/pull/126#issuecomment-408446129","bodyText":"More modernising required..","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-27T15:03:41Z","lastEditedAt":null,"updatedAt":"2018-07-27T15:03:41Z"}]}}},{"repoOwner":"coala","repoName":"coala-html","updatedAtMs":1535624193000,"issue":{"htmlUrl":"https://github.com/coala/coala-html/pull/147","number":147,"title":".travis.yml: Enable travis-buddy","body":"Related to coala/meta#114","comments":4,"createdAt":"2018-05-02T19:14:03Z","updatedAt":"2018-08-30T10:16:33Z","closedAt":"2018-05-03T00:31:14Z","state":"merged","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-html/pull/147","comments":[]}}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535628694000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/284","number":284,"title":"coalaonline.html: Change \"Add Bear\" button font to Roboto","body":"This changes the font of the \"Add Bear\" button on Coala Online\nfrom Times New Roman to Roboto.\nCloses #270\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2018-08-15T12:28:25Z","updatedAt":"2018-08-30T11:31:34Z","closedAt":"2018-08-28T00:58:00Z","state":"merged","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/approved","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/284","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI1MjI0Ng==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210252246","bodyText":"Line contains following spacing inconsistencies:\n\nTrailing whitespaces.\n\nOrigin: SpaceConsistencyBear, Section: spacing.\nThe issue can be fixed by applying the following patch:\n--- a/tmp/tmp01opxl72/partials/tabs/coalaonline.html\n+++ b/tmp/tmp01opxl72/partials/tabs/coalaonline.html\n@@ -146,7 +146,7 @@\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> \n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n                 &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>\n               </i>\n             </a>","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> ","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-15T12:30:08Z","lastEditedAt":null,"updatedAt":"2018-08-15T12:30:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI1MjI0OQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210252249","bodyText":"Trailing Whitespace: Trailing white spaces are unnecessary and can complicate diffs: Remove the ' ' at the end of the line.\nOrigin: HTMLLintBear, Section: html.","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> ","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-15T12:30:09Z","lastEditedAt":null,"updatedAt":"2018-08-15T12:30:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI5MDMyNQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210290325","bodyText":"Great.  You've found the button and changed it.\nHowever, we avoid inline styles.\nwhere is the times new roman coming from?\nnote that bears-icon-small and similar are defined in http://github.com/coala/coalaCSS\nProbably the fix needs to occur there.\nAnd probably the solution is not adding Roboto to bears-icon-small, but requires finding why Times New Roman is being inherited and globally disabling it at the root of the problem.","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n+                &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-15T14:38:20Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:38:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDM0NTY4OQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210345689","bodyText":"The root of the problem here is the .fa class of the font awesome icon. Since the \"ADD BEAR\" text has been written within the  tag, the style \"font-family: FontAwesome\" automatically gets applied to the text.\nAt present only the:\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\nfont-family: Roboto;\n}\nstyle is the best option from the http://github.com/coala/coalaCSS file to apply the Roboto font-family to the text. But this causes the styles of the materialize.css file heading tags to be applied automatically too.\n\nWe can define in a new class in the CoalaCSS file to attend to this particular issue. What do you suggest?","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n+                &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-15T17:32:34Z","lastEditedAt":null,"updatedAt":"2018-08-15T17:32:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDcyMjU0NA==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210722544","bodyText":"Yeah, new class in coalaCSS sounds good!","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n+                &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-08-16T19:56:29Z","lastEditedAt":null,"updatedAt":"2018-08-16T19:56:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA3OTQ1Ng==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211079456","bodyText":"&nbsp; not required, the icon has enough padding.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i>\n+              &nbsp;ADD BEAR","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T15:49:54Z","lastEditedAt":null,"updatedAt":"2018-08-18T15:49:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA3OTk2MA==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211079960","bodyText":"I am very sorry I dragged this issue so long because of my small mistakes.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i>\n+              &nbsp;ADD BEAR","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-18T16:09:07Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:09:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDA1MQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080051","bodyText":"Last request for change, doesn't require this change, you can keep this in a separate line.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T16:13:11Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:13:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDA2Ng==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080066","bodyText":"Clarification: I mean </i> can be left in a new line.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T16:13:58Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:13:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDA4Mw==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080083","bodyText":"Don't worry, this shows how insistent you are on learning.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i>\n+              &nbsp;ADD BEAR","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODExNDgxMw==","createdAt":"2018-08-18T16:18:55Z","content":"LAUGH","user":{"login":"Akhelesh","name":null}}],"createdAt":"2018-08-18T16:14:38Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:14:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDExNQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080115","bodyText":"I didn't catch that, means icon tags do not have to be on the same line. Am I right?","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-18T16:16:34Z","lastEditedAt":"2018-08-18T16:17:18Z","updatedAt":"2018-08-18T16:17:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDE5Mw==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080193","bodyText":"Yeah.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T16:20:23Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:20:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzU4Mzg5Mw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413583893","bodyText":"What about if we changed the order of the CSS files, like moving FA https://github.com/coala/landing-frontend/blob/master/index.html#L35 before coalaCSS ?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-16T15:22:26Z","lastEditedAt":null,"updatedAt":"2018-08-16T15:22:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzc3NDg0Ng==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413774846","bodyText":"What about moving the text outside of the icon? that's usually the way its done.","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODA2NDU0MA==","createdAt":"2018-08-17T08:39:15Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}},{"id":"MDg6UmVhY3Rpb24yODA2NDgwNA==","createdAt":"2018-08-17T08:44:13Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-17T06:52:18Z","lastEditedAt":"2018-08-17T06:52:28Z","updatedAt":"2018-08-17T06:52:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzc5NzUyMg==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413797522","bodyText":"Adding a new class to CoalaCSS and moving the text outside the <i></i> tag does the job. For the time being I added a new class to local copy of CoalaCSS to get the results here:\n\nIf this approach is okay how can I add the new class to CoalaCSS hosted on Github? Also what should I name it?","diffHunk":null,"author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-17T08:36:07Z","lastEditedAt":"2018-08-17T09:02:13Z","updatedAt":"2018-08-17T09:02:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzc5OTI1NA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413799254","bodyText":"I agree with @blazeu, you should try moving the button text out of the i tag. Fontawesome does not expect for the button label to be inside icon's tag.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-17T08:43:27Z","lastEditedAt":null,"updatedAt":"2018-08-17T08:43:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0MTc2Nw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-414041767","bodyText":"Here, I moved the label text into parent anchor tag from the tag supposed to be used for icon and the results are satisfactory:\n\n<a class=\"waves-effect grey-text text-lighten-2\">\n  <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i> ADD BEAR\n</a>\nIf you want to have bold label then add a new class called bold to coalaCSS and apply it to the parent anchor tag here.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:31:29Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:31:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0NDc4Nw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-414044787","bodyText":"@ksdme yes it works. Sorry I couldn't get to this solution quick. What should I do to my PR for coalaCSS now? Should I delete it and create a new one?","diffHunk":null,"author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-18T09:24:31Z","lastEditedAt":null,"updatedAt":"2018-08-18T09:24:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0NjYwOA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-414046608","bodyText":"You can let it be open for now, when this PR gets merged without any changes being required in coalaCSS we can have that closed. Please keep it open for now.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T09:59:45Z","lastEditedAt":null,"updatedAt":"2018-08-18T09:59:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0ODM5NA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-415948394","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-25T07:25:12Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:25:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk3MTU3NA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-415971574","bodyText":"@jayvdb Looks like the ff did not go through.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-25T14:05:51Z","lastEditedAt":null,"updatedAt":"2018-08-25T14:05:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNTczMQ==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-416415731","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-28T00:57:06Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:57:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNTkyMw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-416415923","bodyText":"Automated fastforward with GitMate.io was successful! 🎉","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-28T00:58:15Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:58:15Z"}]}}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1534168571000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/283","number":283,"title":"update ISSUE_TEMPLATE.md","body":"(I tried to follow what was written i did understand it overall but not perfectly)\nISSUE_TEMPLATE.md written instead of a link\nbasically i just copied what was written on the other side of the link because if someone have a crappy connection he/she won't have to wait for another tab/page to appear (sorry if this pr is useless)\nhave a nice day.","comments":0,"createdAt":"2018-08-03T03:28:59Z","updatedAt":"2018-08-13T13:56:11Z","closedAt":null,"state":"open","user":{"login":"slapash","avatarUrl":"https://avatars0.githubusercontent.com/u/22305318?v=4"},"owner":{"login":"slapash","avatarUrl":"https://avatars0.githubusercontent.com/u/22305318?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/283","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzUzNjIyNQ==","url":"https://github.com/coala/landing-frontend/pull/283#discussion_r207536225","bodyText":"Thanks for your enhancement :), you can use ``` here in replacement of :: in `.rst` file, the current layout is little bit ugly :P","diffHunk":"@@ -1,5 +1,22 @@\n-<!-- Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template. If you need any help regarding usage of coala, check out the documentation or hit us up on chat. You can ignore or delete this text, it is commented and won't appear when the issue is submitted or previewed.\n+Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template.\n+\n+### Overview Description\n+\n+# Steps to Reproduce\n+\n+1.\n+2.\n+3.\n+\n+# Actual Results\n+\n+# Expected Results\n+\n+# Reproducibility\n+\n+# Additional Information:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-03T12:59:15Z","lastEditedAt":null,"updatedAt":"2018-08-03T12:59:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzUzNzAzOA==","url":"https://github.com/coala/landing-frontend/pull/283#discussion_r207537038","bodyText":"Can you reframe the above line?\n-->If you need any help regarding usage of coala, check out the documentation or hit us up on chat. You can ignore or delete this text, it is commented and won't appear when the issue is submitted or previewed.\nIMO your PR is just like enhancement for issue template","diffHunk":"@@ -1,5 +1,22 @@\n-<!-- Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template. If you need any help regarding usage of coala, check out the documentation or hit us up on chat. You can ignore or delete this text, it is commented and won't appear when the issue is submitted or previewed.\n+Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template.","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-03T13:02:31Z","lastEditedAt":null,"updatedAt":"2018-08-03T13:02:31Z"}]}}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535023849000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/280","number":280,"title":"Use gitignore moban","body":"Related to https://gitlab.com/coala/mobans/issues/31\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-06-05T15:03:59Z","updatedAt":"2018-08-23T11:30:49Z","closedAt":"2018-06-17T13:36:41Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"ededed"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/280","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3Njc5MA==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397876790","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T12:49:13Z","lastEditedAt":null,"updatedAt":"2018-06-17T12:49:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3Njg3Mw==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397876873","bodyText":"Automated fastforward failed! Please fastforward your pull request manually via the command line.\nReason:\nCommand: git merge --ff-only head/moban\n\nExit Code: 128\n\nCause:\n\nfatal: Not possible to fast-forward, aborting.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T12:50:30Z","lastEditedAt":null,"updatedAt":"2018-06-17T12:50:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3OTUzOQ==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397879539","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T13:35:50Z","lastEditedAt":null,"updatedAt":"2018-06-17T13:35:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3OTYyNQ==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397879625","bodyText":"Automated fastforward with GitMate.io was successful! 🎉","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T13:37:16Z","lastEditedAt":null,"updatedAt":"2018-06-17T13:37:16Z"}]}}},{"repoOwner":"coala","repoName":"coalaCSS","updatedAtMs":1535601254000,"issue":{"htmlUrl":"https://github.com/coala/coalaCSS/pull/34","number":34,"title":"coala.css: Add class for coala-online \"Add Bear\" text","body":"Add new class \"add-bear\" which styles the \"Add Bear\"\ntext on coalaOnline to Roboto font and bolds it.","comments":3,"createdAt":"2018-08-18T07:07:58Z","updatedAt":"2018-08-30T03:54:14Z","closedAt":null,"state":"open","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coalaCSS/pull/34","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2OTA1NQ==","url":"https://github.com/coala/coalaCSS/pull/34#discussion_r211069055","bodyText":"I think having a rule just for a single type of button is unnecessary. Please consider a more general way to solve this problem.","diffHunk":"@@ -776,6 +776,11 @@ a.chip i {\n   cursor: pointer;\n }\n \n+.coala-online .add-bear {","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:33:39Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:33:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2OTQ4Nw==","url":"https://github.com/coala/coalaCSS/pull/34#discussion_r211069487","bodyText":"coala/landing-frontend#284 (comment); seemed to work instantly for me.","diffHunk":"@@ -776,6 +776,11 @@ a.chip i {\n   cursor: pointer;\n }\n \n+.coala-online .add-bear {","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:58:55Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:58:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA3MDEwMA==","url":"https://github.com/coala/coalaCSS/pull/34#discussion_r211070100","bodyText":"Yup it works. Thanks :)","diffHunk":"@@ -776,6 +776,11 @@ a.chip i {\n   cursor: pointer;\n }\n \n+.coala-online .add-bear {","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[{"id":"MDg6UmVhY3Rpb24yODExMDE5Mg==","createdAt":"2018-08-18T10:00:34Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-18T09:25:13Z","lastEditedAt":null,"updatedAt":"2018-08-18T09:25:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0MTc4Nw==","url":"https://github.com/coala/coalaCSS/pull/34#issuecomment-414041787","bodyText":"coala/landing-frontend#284 (comment)","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:31:53Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:31:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEzMTU1NA==","url":"https://github.com/coala/coalaCSS/pull/34#issuecomment-417131554","bodyText":"We dont need this any more ?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-29T22:46:51Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:46:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzE4MTc4Mw==","url":"https://github.com/coala/coalaCSS/pull/34#issuecomment-417181783","bodyText":"No, the related issue was merged without requiring this change. Please close this.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-30T03:54:14Z","lastEditedAt":null,"updatedAt":"2018-08-30T03:54:14Z"}]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false}]},{"repoOwner":"coala","repoName":"coala-bears","labels":[{"id":"MDU6TGFiZWwzMjcwNDg3MDQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MDU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjA=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjE=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjI=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjM=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMjczNjcxMTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2Mjg=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Mjg=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Nzg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwzMjg1NDk4MDg=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNjA=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNzU=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjk2MDc1MDg=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDg1MjY=","name":"type/test","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MDg5MTQ=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDkwMDM=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODU=","name":"importance/low","color":"70e870","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODY=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkzNDM=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4MjA=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4Nzk=","name":"type/codestyle","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMjk2MTE5MTA=","name":"status/needs design","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MTI5MjU=","name":"status/needs info","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0MzI=","name":"status/wontfix/accepting patches","color":"555555","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0OTA=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjk2MTkwMDc=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzNDg2NTk2MzE=","name":"area/lintbears","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzNDg2NjY2Mzk=","name":"area/documentation","color":"c5def5","default":false},{"id":"MDU6TGFiZWwzNzM3ODc1MzY=","name":"type/dependencies","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MTMxOTIzMjY=","name":"bear proposal","color":"ADFF2F","default":false},{"id":"MDU6TGFiZWw0MzQ3MDk3MDU=","name":"long-term-project","color":"c5def5","default":false},{"id":"MDU6TGFiZWw0MzYzMTQwNDQ=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM4MDEzOTY=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTI0NDE0NjI=","name":"hacktoberfest","color":"b60205","default":false},{"id":"MDU6TGFiZWw0ODM0OTI0NTY=","name":"area/newsettings","color":"006b75","default":false},{"id":"MDU6TGFiZWw0ODM1MDQ5MzQ=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw1MDkwMjY0MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1MjgxMjIzMjY=","name":"area/genericbears","color":"D01975","default":false},{"id":"MDU6TGFiZWw1NjYwNzE5MDc=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODUzMzI3NDM=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw1OTQ2NzgyMDM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw1OTQ2Nzg1MzM=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWw1OTQ3MzEwMDQ=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjAxNjU4NzE=","name":"area/ci","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjcxMTYzNTY=","name":"type/performance","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2ODA4NDE3NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDE2NzkwNjI=","name":"area/tests","color":"c5def5","default":false},{"id":"MDU6TGFiZWw3NDE2NzYzNDI=","name":"language/ruby","color":"dd27c8","default":false},{"id":"MDU6TGFiZWw3NDY4NzgxOTQ=","name":"status/needs discussion","color":"ead40e","default":false},{"id":"MDU6TGFiZWw4Njc1NzI1Mjk=","name":"area/install","color":"0b14bc","default":false},{"id":"MDU6TGFiZWw4NzU1ODUyMzk=","name":"status/non-free","color":"8f0dbf","default":false},{"id":"MDU6TGFiZWw5MDY3ODUyNjk=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5ODMyMTYyMDQ=","name":"needs rebase","color":"f4cd69","default":false},{"id":"MDU6TGFiZWw5OTg4NjE3NjI=","name":"type/style","color":"168fe0","default":false},{"id":"MDU6TGFiZWwxMDAwNDgxMzgw","name":"type/spelling","color":"50b5f4","default":false}]},{"repoOwner":"coala","repoName":"documentation","labels":[{"id":"MDU6TGFiZWwzNDcxNjk0NTI=","name":"bug","color":"fc2929","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTM=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTQ=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTU=","name":"help wanted","color":"159818","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTc=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw0Mjc0OTIzNjA=","name":"area/documentation","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjE=","name":"cool and awesome","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjI=","name":"difficulty/medium","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzc=","name":"difficulty/newcomer","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzg=","name":"importance/low","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0Mjc0OTY0NjQ=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDE2Nzc=","name":"status/needs design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDIyNjA=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDE=","name":"area/usability","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDI=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc1MDMzOTg=","name":"importance/high","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0Mjc1MTA5MTA=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MzEwMDExMDM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0MzEwMDExODE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0MzE0MzQ5NzY=","name":"size/S","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0MzE0MzgxNjg=","name":"size/XS","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzE0NTI5ODI=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzIwNTAyMDE=","name":"size/M","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM1Njc4Mzk=","name":"size/L","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw0NDQzODgyODI=","name":"size/XL","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTI0NDIxNDQ=","name":"hacktoberfest","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTYxMTgwNzE=","name":"review carefully!","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTg1NDUwOTI=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MTAyNTE0Nzk=","name":"initiatives/gci","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDQxODE=","name":"status/stale","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NjE4MjQ3MDA=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw4MTg0NDUyNjI=","name":"status/needs info","color":"9bf2cf","default":false},{"id":"MDU6TGFiZWw4MzI2ODAwMzk=","name":"status/needs discussion","color":"f4ab8b","default":false},{"id":"MDU6TGFiZWw4NDcxMDQ2MDk=","name":"area/ci","color":"f49093","default":false}]},{"repoOwner":"coala","repoName":"projects","labels":[{"id":"MDU6TGFiZWw1MjAwNDU5MzU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5MzY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDE=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4MTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4Mzg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMTI2NDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMzA5ODU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MjAxMzgzMjY=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjAxNDgxNzc=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxNzM1OTQ=","name":"design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw1MjAxOTc5MjE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAyMDYyNTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA0MTEwMTk=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3MTI=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3NjI=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MjE5NDE2MTI=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjQzODgxMzc=","name":"community_team","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTM4ODMyNzI=","name":"Project Proposal","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDM5NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzAzNzE5NDQ=","name":"initiatives/gci","color":"fc7d0f","default":false},{"id":"MDU6TGFiZWw3MzgxODI0MzY=","name":"upstream","color":"ffb5bd","default":false},{"id":"MDU6TGFiZWw3NTE3NjE0NTk=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw4MzYzNjUxNjE=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw4MzcxMjA3OTA=","name":"importance/low","color":"2fe055","default":false},{"id":"MDU6TGFiZWw4MzcxNjY3NTk=","name":"difficulty/medium","color":"9dea67","default":false},{"id":"MDU6TGFiZWw4MzcxNzIzOTI=","name":"importance/medium","color":"f2db30","default":false},{"id":"MDU6TGFiZWw4NjIyMDU3MjQ=","name":"status/needs info","color":"71fcb7","default":false},{"id":"MDU6TGFiZWw4NzgxODM1OTc=","name":"status/blocked","color":"e56994","default":false},{"id":"MDU6TGFiZWw5MTIxODM1MTc=","name":"status/needs design","color":"f9a7df","default":false}]},{"repoOwner":"coala","repoName":"devops","labels":[{"id":"MDU6TGFiZWw2MDkyNjQ4MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjQyMjkyMzE=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWw2MjU3NzY1MzM=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWw2MjgxNTMwNjk=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxNTM3MTA=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTM4NzI=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWw2MjgxNTQwODM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjgxNTQzMjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxNTQ4OTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTUwODE=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWw2MjgxNTU0NjE=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWw2MjgxOTMwNTQ=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjgxOTMxNTM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTM4OTE=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTQwMjk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQxMDI=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTQyMDI=","name":"status/invalid","color":"668866","default":false},{"id":"MDU6TGFiZWw2MjgxOTQzMzA=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ1MDg=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ2NTI=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ3NTk=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ5MDg=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTUwMjk=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTUyMjA=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTUzOTA=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjgxOTU3OTU=","name":"area/security","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxOTYwMzQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MjgxOTY5Nzg=","name":"scope/internal","color":"D01975","default":false},{"id":"MDU6TGFiZWw2MjgxOTczNjQ=","name":"area/ops","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjgxOTg4Nzc=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NDk5ODc=","name":"service/venus","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAwNDQ=","name":"service/nginx","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxNTg=","name":"service/cobot","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxODc=","name":"service/cherry-pick-bot","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAzMzU=","name":"type/new service","color":"006b75","default":false},{"id":"MDU6TGFiZWw2Mjg0NTA0NzA=","name":"area/web development","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTE2MDI=","name":"area/communication","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTY3ODQ=","name":"service/landing","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyMjI=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyOTQ=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0MTQ=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0Nzg=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1Mjk=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1NjU=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MzI5MTU0MTY=","name":"service/corobo","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTcyOTQ=","name":"area/CD","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTkwNjM=","name":"service/ikari","color":"ab78ff","default":false},{"id":"MDU6TGFiZWw2MzI5MTkzMzI=","name":"area/monitoring","color":"aaff88","default":false},{"id":"MDU6TGFiZWw2MzI5MTk4MjE=","name":"cool and awesome","color":"aaffdd","default":false},{"id":"MDU6TGFiZWw2ODA4NDM4MTA=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2ODU2MDMyOTc=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw3MzI4OTUxMTk=","name":"initiatives/gci","color":"936ed3","default":false},{"id":"MDU6TGFiZWw5MjY3OTg3OTc=","name":"process/pending_review","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"corobo","labels":[{"id":"MDU6TGFiZWw2MDExMDE3NTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjE=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDEzNTc0Mjk=","name":"importance/low","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2MDEzNTc0ODc=","name":"importance/high","color":"e99695","default":false},{"id":"MDU6TGFiZWw2MDEzNTc1OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MDEzNTc2NzE=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MDEzNTc3NDk=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWw2MDEzOTE3OTY=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MDEzOTMxOTY=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDE0MDQ2Mjc=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MDM2ODcwMTM=","name":"stretch goal","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3Mjk=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3NjU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MTQ2OTYxMzE=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MTUyODM2MTU=","name":"ready","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUyODUyMzI=","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUzNjgxODU=","name":"documentation","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTcwNzUyNDA=","name":"pr available","color":"cccccc","default":false},{"id":"MDU6TGFiZWw2MTg0MTI1ODU=","name":"cool and awesome","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTg0MTMzNTk=","name":"plugin proposal","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2MTg5NjE5MDA=","name":"poll","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTk4NTMxNzU=","name":"design","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjI2MjMyMzE=","name":"decided","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjI3MTg0NTE=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw2MjI3MTg1MDE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjM0MDU1NTE=","name":"difficulty/newcomer","color":"65c8ff","default":false},{"id":"MDU6TGFiZWw2MjQyMzcwMjQ=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjQ3NzY3ODg=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjY3NDQ0MzY=","name":"deployment","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjY4NTIxOTM=","name":"non-existent","color":"ededed","default":false},{"id":"MDU6TGFiZWw2Mjc5NjE1Mjc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjkyODg1NDY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzA0NTUwODk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzIxMzg2ODg=","name":"upstream","color":"b60205","default":false},{"id":"MDU6TGFiZWw2NTc1NjY5MTY=","name":"gsoc2017/phase3","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2ODA4NDM3ODg=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MjY4ODMyMzQ=","name":"initiatives/gci","color":"f79e9f","default":false},{"id":"MDU6TGFiZWw3Mzk0NDIzNzA=","name":"status/cannot reproduce","color":"000000","default":false},{"id":"MDU6TGFiZWw3NDI4NzcxODA=","name":"importance/medium","color":"ddba61","default":false},{"id":"MDU6TGFiZWw3NTg3MDM2MzA=","name":"area/ui","color":"dd02cf","default":false},{"id":"MDU6TGFiZWw3NTg3MDQzNDU=","name":"area/labhub","color":"63ccf9","default":false},{"id":"MDU6TGFiZWw3NTg3MDUyNDY=","name":"area/security","color":"fc6805","default":false},{"id":"MDU6TGFiZWw3NjE3NTA5NTc=","name":"type/markdown","color":"2a0582","default":false},{"id":"MDU6TGFiZWw3NjE3OTU1NzE=","name":"type/regex","color":"d453e2","default":false},{"id":"MDU6TGFiZWw3NjE5NDI5ODM=","name":"area/errbot","color":"ed3d9b","default":false},{"id":"MDU6TGFiZWw3NjE5NDMzNTQ=","name":"backend/gitter","color":"7cf9c1","default":false},{"id":"MDU6TGFiZWw3NjE5NDQwMDg=","name":"backend/zulip","color":"0a546b","default":false},{"id":"MDU6TGFiZWw3NjE5NjI2ODg=","name":"backend/telegram","color":"e26858","default":false},{"id":"MDU6TGFiZWw3NjIwMTE4MTI=","name":"area/config","color":"60a1db","default":false},{"id":"MDU6TGFiZWw3NjIwMTIyNTM=","name":"area/tests","color":"5facd8","default":false},{"id":"MDU6TGFiZWw3NjIwMjkyMTI=","name":"status/needs info","color":"8e081e","default":false},{"id":"MDU6TGFiZWw3NjI0MTgyNzI=","name":"area/documentation","color":"969bdd","default":false},{"id":"MDU6TGFiZWw3NjY2Mzc1ODM=","name":"area/ci","color":"ab04e8","default":false},{"id":"MDU6TGFiZWw5OTg4NjM0Nzc=","name":"type/style","color":"567c09","default":false}]},{"repoOwner":"coala","repoName":"community","labels":[{"id":"MDU6TGFiZWw3NjYwMTk2MDQ=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDU=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDY=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDc=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDg=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDk=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTE=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NjYyMTU3OTg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw3NjYyMTU4NzE=","name":"initiatives/gci","color":"ff9549","default":false},{"id":"MDU6TGFiZWw3NjYyMTY0Njc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NjYyMzg3OTg=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3NjYzMjMwMjc=","name":"needs design","color":"db81c7","default":false},{"id":"MDU6TGFiZWw3Njc0MjMzMDE=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njg2NDc1NDg=","name":"upstream","color":"fcc4c5","default":false},{"id":"MDU6TGFiZWw3Njg3NTEyNzk=","name":"importance/low","color":"9cc6fc","default":false},{"id":"MDU6TGFiZWw3Njg3NTE3Nzc=","name":"importance/high","color":"e0401d","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyMTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyNDg=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4Njc2NDE=","name":"status/blocked","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzAxOTkwODc=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw3NzAzMDQ4MTY=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzA0MTk0MTA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzI2MTI0MzU=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzM5NDU4NjU=","name":"importance/medium","color":"ccf945","default":false},{"id":"MDU6TGFiZWw3Nzg1OTkxODY=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Nzg3Mzk5MjY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE1NTY4MzY=","name":"initiatives/gsoc","color":"ed95c1","default":false},{"id":"MDU6TGFiZWw3ODIxMTU0NDM=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODI1Njg2MjA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjI0MDg1NzI=","name":"area/ci","color":"4c95ad","default":false},{"id":"MDU6TGFiZWw5OTg4NjI4MTU=","name":"type/style","color":"93f486","default":false},{"id":"MDU6TGFiZWwxMDA1MjQ0Mjgx","name":"area/tests","color":"7b68dd","default":false}]},{"repoOwner":"coala","repoName":"gci-leaders","labels":[{"id":"MDU6TGFiZWw3NjkyMjg1NTg=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NTk=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjA=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjE=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjI=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjM=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjQ=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjU=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw3Njk1ODQ5MjM=","name":"difficulty/low","color":"59db91","default":false},{"id":"MDU6TGFiZWw3Njk1ODQ5OTY=","name":"initiatives/gci","color":"98e9f9","default":false},{"id":"MDU6TGFiZWw3Njk1ODY4NTA=","name":"difficulty/newcomer","color":"ffcce2","default":false},{"id":"MDU6TGFiZWw3Njk1OTg5ODY=","name":"difficulty/medium","color":"ff91cd","default":false},{"id":"MDU6TGFiZWw3Njk2NDAyNjg=","name":"difficulty/high","color":"a667f7","default":false},{"id":"MDU6TGFiZWw3Njk2NDExNDk=","name":"status/blocked","color":"cc4158","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzMjE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzNjI=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk3MDg3Mjg=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw3Njk5MzE3MTA=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzAxMDE1MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw3NzA3MzgyMDU=","name":"area/ui","color":"442cf7","default":false},{"id":"MDU6TGFiZWw3NzA4MTQwMjk=","name":"type/bug","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzA5NDg4ODk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzEwOTQ3Njg=","name":"area/i18n","color":"ffccee","default":false},{"id":"MDU6TGFiZWw3NzQ3MTc4OTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzQ4ODI2ODM=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzYyNjk4NzM=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE0NTgxMTg=","name":"importance/low","color":"fcf1a6","default":false},{"id":"MDU6TGFiZWw3ODQxMDY0NDM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5NDc0NjU=","name":"importance/high","color":"dd007d","default":false}]},{"repoOwner":"coala","repoName":"gh-board","labels":[{"id":"MDU6TGFiZWw3NTM5MzE2OTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTg=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTk=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDA=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDE=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDI=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NTU4MTU1MzQ=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NzQyNDUxNDA=","name":"difficulty/low","color":"07eded","default":false},{"id":"MDU6TGFiZWw3NzQyNDU1NDI=","name":"initiatives/gci","color":"e5ce95","default":false},{"id":"MDU6TGFiZWw3ODU0MzEyMDI=","name":"difficulty/medium","color":"d30a8d","default":false},{"id":"MDU6TGFiZWw4NDA0NzA4Njk=","name":"process/wip","color":"ead483","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2MTg=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2OTE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NjI0NjY2NTA=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAwMjc1NTE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAxOTA1NTk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAyMzc5NDc=","name":"difficulty/high","color":"e88e53","default":false},{"id":"MDU6TGFiZWw5MjIzNjc2Nzg=","name":"importance/medium","color":"65f23e","default":false},{"id":"MDU6TGFiZWw5MjM2MTYxMTQ=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5ODk3ODk=","name":"upstream","color":"6ded77","default":false},{"id":"MDU6TGFiZWw5MzA1Mzc3NzI=","name":"importance/low","color":"1394a0","default":false},{"id":"MDU6TGFiZWw5MzgzMTQ4MjE=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTg5MTUwMDI=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk1OTUyODA=","name":"difficulty/newcomer","color":"33a7bf","default":false},{"id":"MDU6TGFiZWwxMDExNjQ0Mjg5","name":"area/dependencies","color":"ef88a2","default":false}]},{"repoOwner":"coala","repoName":"coala-html","labels":[{"id":"MDU6TGFiZWwzMjY1MzQ5Nzg=","name":"type/bug","color":"fc2929","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5Nzk=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODE=","name":"status/wontfix/accepting patches","color":"777777","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODI=","name":"status/invalid","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODM=","name":"status/need-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODQ=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NTU=","name":"difficulty/newcomer","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NjQ=","name":"difficulty/low","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3OTU=","name":"difficulty/medium","color":"fef2c0","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4MzE=","name":"difficulty/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4NzU=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzM=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzQ=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzODI=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTA=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTE=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTk=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMzI5NTk1MTI=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWwzMzMxMzU3NDk=","name":"status/blocked","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzMyNDI0NDU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMzMzNDE1OTY=","name":"status/needs design","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYyMDYxOTQ=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYzMTg0NTQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2ODA4NDQzNjM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzEwMjg5NTk=","name":"initiatives/gci","color":"f78589","default":false}]},{"repoOwner":"coala","repoName":"landing-frontend","labels":[{"id":"MDU6TGFiZWw1MjE2NDU4MTA=","name":"type/bug","color":"ee0701","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTE=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTQ=","name":"status/wontfix/not happening","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTU=","name":"needs-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTY=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjE3MDE0OTc=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjE3MDE1MzY=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MzE1MzAwNjE=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MzE1OTEwMDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE2MTQzODU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE3NDgxNzc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE4MzA2ODg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzIxNzM0NTY=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1NTk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1OTE=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjM0NzM5Mjg=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2NjkxNjAwOTA=","name":"status/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjkxNjEwODA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODc1ODI1ODg=","name":"area/documentation","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDU3ODgwNzM=","name":"needs-discussion","color":"aa52aa","default":false},{"id":"MDU6TGFiZWw3MzAzNTE0NDc=","name":"initiatives/gci","color":"f2d5a4","default":false},{"id":"MDU6TGFiZWw3NDgzMDE3MzE=","name":"difficulty/high","color":"f762d7","default":false},{"id":"MDU6TGFiZWw3ODQ4Mzc1NjQ=","name":"difficulty/medium","color":"dbc255","default":false},{"id":"MDU6TGFiZWw3ODYxOTA3MzM=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4Njc1Nzc2MzI=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw4ODM0MDIxNDI=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4OTU1MjU0NDM=","name":"enhancement","color":"097287","default":true}]},{"repoOwner":"coala","repoName":"coalaCSS","labels":[{"id":"MDU6TGFiZWw2MDk0OTkxNzc=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzg=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzk=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODA=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODE=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODI=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODM=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw2MzAzNTEzNDg=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzAzNTE1MjU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgyNTE=","name":"area/landing-frontend","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgzMzY=","name":"area/projects","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MzQ3OTg0ODU=","name":"design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MzQ3OTkzMjk=","name":"importance/critical","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mzk0NDkwNTc=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODEwMjUyMzA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzMwNDk1MjU=","name":"initiatives/gci","color":"ee79f7","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE0Nzc=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE2MDY=","name":"importance/low","color":"99c1dd","default":false},{"id":"MDU6TGFiZWw3Mzk1MDA1OTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NTEzMzIxMzA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDkxMjMwMjk=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw4NDkxMjM4OTY=","name":"difficulty/medium","color":"0052cc","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2018-08-31T13:02:29Z"},{"repoOwner":"coala","repoName":"coala-bears","isPrivate":false,"lastSeenAt":"2018-09-01T06:32:38Z"},{"repoOwner":"coala","repoName":"documentation","isPrivate":false,"lastSeenAt":"2018-08-13T13:54:00Z"},{"repoOwner":"coala","repoName":"projects","isPrivate":false,"lastSeenAt":"2018-08-31T10:44:34Z"},{"repoOwner":"coala","repoName":"devops","isPrivate":false,"lastSeenAt":"2018-08-18T10:36:44Z"},{"repoOwner":"coala","repoName":"corobo","isPrivate":false,"lastSeenAt":"2018-09-01T05:38:11Z"},{"repoOwner":"coala","repoName":"community","isPrivate":false,"lastSeenAt":"2018-08-25T07:16:11Z"},{"repoOwner":"coala","repoName":"gci-leaders","isPrivate":false,"lastSeenAt":"2018-08-28T17:04:18Z"},{"repoOwner":"coala","repoName":"gh-board","isPrivate":false,"lastSeenAt":"2018-08-31T10:38:58Z"},{"repoOwner":"coala","repoName":"coala-html","isPrivate":false,"lastSeenAt":"2018-08-30T10:16:33Z"},{"repoOwner":"coala","repoName":"landing-frontend","isPrivate":false,"lastSeenAt":"2018-08-31T10:39:55Z"},{"repoOwner":"coala","repoName":"coalaCSS","isPrivate":false,"lastSeenAt":"2018-08-30T03:54:14Z"}]}