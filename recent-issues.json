{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1558958660000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6017","number":6017,"title":"setup.py fails on old setuptools, etc.","body":"python setup.py install\n+tee setup.log\nerror in coala setup command: 'tests_require' must be a string or list of strings containing valid project/version requirement specifiers; Expected ',' or end-of-list in moban~=0.3.3 ; python_version > '3.0' at  ; python_version > '3.0'\n\nhttps://travis-ci.org/coala/coala/jobs/533336623","comments":11,"createdAt":"2019-05-16T15:04:53Z","updatedAt":"2019-05-27T12:04:20Z","closedAt":"2019-05-27T12:04:20Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1556641423000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6012","number":6012,"title":"API Documentation build failing","body":"https://readthedocs.org/projects/coala-api/builds/\nTraceback (most recent call last):\n  File \"./setup.py\", line 156, in <module>\n    call(BuildDocsCommand.apidoc_command)\nAttributeError: type object 'BuildDocsCommand' has no attribute 'apidoc_command'\n\nLast passed build - https://readthedocs.org/projects/coala-api/builds/7341849/","comments":5,"createdAt":"2019-04-18T10:44:49Z","updatedAt":"2019-04-30T16:23:43Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1556948427000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6016","number":6016,"title":"Useless indexing","body":"coala filters the ignored files after indexing all the files, which can take a long time with globs such as **. Build tools like Tox create temporary folders with multitude of files, and coala on every run will index them first and then filter them out. In a small project the indexing and filtering can take about 75% of the execution time (80 seconds). This should be fixed by filtering during the process of indexing.","comments":0,"createdAt":"2019-05-04T05:40:27Z","updatedAt":"2019-05-04T05:40:27Z","closedAt":null,"state":"open","user":{"login":"abraverm","avatarUrl":"https://avatars2.githubusercontent.com/u/7045898?v=4"},"owner":{"login":"abraverm","avatarUrl":"https://avatars2.githubusercontent.com/u/7045898?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1558063858000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6006","number":6006,"title":"Missing comma in docstring","body":"In the file Git_Basics.rst, the following line:\n\nAs people work on coala new commits will be added.\n\ncan be changed to\n\nAs people work on coala, new commits will be added.\n\nto sound better.\nThis can be a newcomer issue.","comments":4,"createdAt":"2019-04-01T16:15:12Z","updatedAt":"2019-05-17T03:30:58Z","closedAt":null,"state":"open","user":{"login":"Haider8","avatarUrl":"https://avatars1.githubusercontent.com/u/43299408?v=4"},"owner":{"login":"Haider8","avatarUrl":"https://avatars1.githubusercontent.com/u/43299408?v=4"},"assignee":{"login":"roshnet","avatarUrl":"https://avatars3.githubusercontent.com/u/40719199?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1558014698000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6009","number":6009,"title":"Travis CI Sentinel build failing due to new version of pytest-xdist installed","body":"Overview Description\nSteps to Reproduce\n\nClone the coala repository\nInstall test-requirements.txt\nFigure out which version of pytest-xdist is installed. It must be v1.28.0 but v1.15.0 should be installed acc. to requirements.\nRun pytest on coala to get the error log\n\nActual Results\nTravis CI Sentinel build error log\nReproducibility\n100%\nAdditional Info\n7 days back only pytest-xdist has released its new version v1.28.0\nwhich is getting installed and has requirements of pytest>4.4.0","comments":4,"createdAt":"2019-04-10T05:44:08Z","updatedAt":"2019-05-16T13:51:38Z","closedAt":"2019-05-16T13:51:38Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1558441919000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5983","number":5983,"title":"Setting.py: Change property name","body":"The line_number property for Setting class should be changed to start_line_number as it is the starting line number of a setting.\ndifficulty/newcomer","comments":4,"createdAt":"2019-02-10T06:04:00Z","updatedAt":"2019-05-21T12:31:59Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1557729659000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5966","number":5966,"title":"Report debug messages during glob expansion","body":"coala appears to hang whenever a glob takes a long time to expand.\nThis happens very frequently when it descends into node_modules/ .  There are other bugs about coala behaving better when descending a node_modules/, but typically nobody wants it to descend node_modules/, so this should be an error.\nThere should be regular debug messages during a glob expansion, including when they appear in files = .. and ignore = ...","comments":5,"createdAt":"2019-01-24T04:05:26Z","updatedAt":"2019-05-13T06:40:59Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Anmolbansal1","avatarUrl":"https://avatars0.githubusercontent.com/u/39100247?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"area/logging","color":"0052cc"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1558378332000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5943","number":5943,"title":"Writing_Linter_Bears.rst : Comma typo","body":"In the Writing_Linter_Bears.rst file, in the line 54 , a comma should be added before the word pylint,\nthat is, the line:\nAs you can see ``pylint`` is already provided as an executable name which gets\nshould be changed to\nAs you can see, ``pylint`` is already provided as an executable name which gets\nA difficulty/newcomer issue.","comments":7,"createdAt":"2019-01-10T09:05:51Z","updatedAt":"2019-05-20T18:52:12Z","closedAt":null,"state":"open","user":{"login":"kapurm17","avatarUrl":"https://avatars3.githubusercontent.com/u/29190279?v=4"},"owner":{"login":"kapurm17","avatarUrl":"https://avatars3.githubusercontent.com/u/29190279?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1558908660000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5740","number":5740,"title":"Add language for SASS","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":6,"createdAt":"2018-08-30T03:45:30Z","updatedAt":"2019-05-26T22:11:00Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1556799928000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5499","number":5499,"title":"Make `--files` optional (useful when only GitCommitBear is used)","body":"If I only want to run GitCommitBear, why bother adding files which GitCommitBear doesn't use at all?\nCurrently, running coala --bears GitCommitBear returns\n[WARNING][15:34:52] coala will not run any analysis. Did you forget to give the `--files` argument?","comments":3,"createdAt":"2018-06-07T07:47:33Z","updatedAt":"2019-05-02T12:25:28Z","closedAt":"2019-05-02T12:25:28Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1556643632000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5400","number":5400,"title":"Remove implementation of SpaceConsistencyTestBear","body":"SpaceConsistencyTestBear contains an old algorithm of the SpaceConsistencyBear.\nAnd there are five tests which depend on the output of its algorithm.\nWhen the run method is replaced with pass, these tests fail:\nFAIL tests/coalaCITest.py::coalaCITest::test_limit_files_affirmative\nFAIL tests/coalaCITest.py::coalaCITest::test_show_patch\nFAIL tests/coalaCITest.py::coalaCITest::test_show_patch_debug\nFAIL tests/coalaTest.py::coalaTest::test_run_coala_no_autoapply\nFAIL tests/coalaTest.py::coalaTest::test_run_coala_no_autoapply_debug\n\nBut more importantly, some unexpected parts of the codebase suddenly have no coverage.\ncoalib/coala_main.py                                                  104      1     48      1    99%   207, 206->207\ncoalib/output/ConsoleInteraction.py                                   337      1    156      1    99%   296, 287->296\ncoalib/results/result_actions/ShowPatchAction.py                       72      2     28      1    97%   104-107, 103->104\n\nThat means those lines of code are being indirectly tested by the inner workings of the bear.\nThese lines of code all need specific tests which are not based on large, old and convoluted algorithm of a bear.\nThey should have tiny neat little bears which are very simple and do only enough to activate those lines of code, and do it directly.","comments":4,"createdAt":"2018-04-17T12:09:05Z","updatedAt":"2019-04-30T17:00:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1558016094000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4061","number":4061,"title":"Running pytest on multiple cores fails","body":"Multiple cores test support was supposedly added in #1407 .\nI say supposedly, as I do not see pytest argument -n x added to the CI tests, which is currently needed to activate pytest-xdist.  But maybe the defaults were different back then.\nThe tests are not currently being run on multiple cores, and when -n 3 is added, failures abound, with the output exceeding my x-term console buffer.\nFAIL coalib/bearlib/__init__.py::coalib.bearlib.deprecate_settings\nFAIL coalib/bearlib/__init__.py::coalib.bearlib.deprecate_bear\nFAIL tests/coalaJSONTest.py::coalaJSONTest::test_output_file\nFAIL tests/coalaFormatTest.py::coalaFormatTest::test_deprecation_log\nFAIL tests/coalaTest.py::coalaTest::test_did_nothing\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_back_saving\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_create_process_group\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_default_coafile_parsing\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_dead_processes\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_default_section_deprecation_warning\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_empty_run\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_find_user_config\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_filter_raising_callables\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_gather_configuration\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_get_file_dict\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_merge\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_merge_defaults\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_get_file_dict_non_existent_file\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_no_config\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_section_inheritance\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_ignore_glob\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_targets\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_ignore_results\nFAIL tests/misc/ContextManagersTest.py::ContextManagersTest::test_subprocess_timeout\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_user_coafile_parsing\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_loaded_bears_with_error_result\nFAIL tests/settings/SectionFillingTest.py::SectionFillingTest::test_fill_settings\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_process_queues\nFAIL tests/settings/SectionTest.py::SectionTest::test_bear_dirs\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_run\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_simplify_section_result\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_yield_ignore_ranges","comments":2,"createdAt":"2017-04-08T10:32:57Z","updatedAt":"2019-05-16T14:14:54Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/logging","color":"0052cc"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558802239000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2909","number":2909,"title":"csvlint fails on AppVeyor due to missing libcurl.dll","body":"CSVLintBear: Discarded stderr: C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/ffi-1.11.1-x64-mingw32/lib/ffi/library.rb:145:in `block in ffi_lib': Could not open library 'libcurl': The specified module could not be found.\n (LoadError)\n.\nCould not open library 'libcurl.dll': The specified module could not be found.\n.\nCould not open library 'libcurl.so.4': The specified module could not be found.\n.\nCould not open library 'libcurl.so.4.dll': The specified module could not be found.","comments":0,"createdAt":"2019-05-25T16:37:19Z","updatedAt":"2019-05-25T16:37:19Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558535443000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2907","number":2907,"title":"remark fails when unpinned on node 11","body":"MarkdownBearTest.test_codeblock_style_unused_definition fails when the package lock is removed\n\nAssertionError: 'Found unused definition' != 'Move definitions to the end of the file (after the node at line 5)'\n\nhttps://travis-ci.org/jayvdb/coala-bears/jobs/535813381","comments":0,"createdAt":"2019-05-22T14:28:35Z","updatedAt":"2019-05-22T14:30:43Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558801552000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2908","number":2908,"title":"choco installed pmd doesnt work","body":"choco creates .exe shims to .bat files, and the pmd and cpd bears use bash which cant load .bat files.\nchoco install --ignore-dependencies --yes pmd\nChocolatey v0.10.11\nInstalling the following packages:\npmd\nBy installing you accept licenses for the packages.\nProgress: Downloading pmd 6.12.0... 100%\npmd v6.12.0 [Approved]\npmd package files install completed. Performing other installation steps.\nDownloading pmd \n  from 'https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.12.0/pmd-bin-6.12.0.zip'\nProgress: 100% - Completed download of C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\chocolatey\\pmd\\6.12.0\\pmd-bin-6.12.0.zip (43.95 MB).\nDownload of pmd-bin-6.12.0.zip (43.95 MB) completed.\nHashes match.\nExtracting C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\chocolatey\\pmd\\6.12.0\\pmd-bin-6.12.0.zip to C:\\ProgramData\\chocolatey\\lib\\pmd...\nC:\\ProgramData\\chocolatey\\lib\\pmd\nAdded C:\\ProgramData\\chocolatey\\bin\\pmd.exe shim pointed to '..\\lib\\pmd\\pmd-bin-6.12.0\\bin\\pmd.bat'.\nAdded C:\\ProgramData\\chocolatey\\bin\\cpd.exe shim pointed to '..\\lib\\pmd\\pmd-bin-6.12.0\\bin\\cpd.bat'.","comments":0,"createdAt":"2019-05-25T16:25:52Z","updatedAt":"2019-05-25T16:25:52Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558533269000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2906","number":2906,"title":"Error fetching phpmd","body":"curl -fsSL -o /home/travis/.local/bin/phpmd http://static.phpmd.org/php/latest/phpmd.phar\ncurl: (7) Failed to connect to static.phpmd.org port 80: Connection timed out\n\nWe need to find the version which was being installed, and then find another way of installing it.","comments":0,"createdAt":"2019-05-22T13:54:29Z","updatedAt":"2019-05-22T13:54:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558287543000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2895","number":2895,"title":"GitCommitBear: asciinema not available anymore","body":"The ASCIINEMA_URL in GitCommitBear seems to be no longer working.\ndifficulty/newcomer","comments":6,"createdAt":"2019-03-22T08:40:13Z","updatedAt":"2019-05-19T17:39:03Z","closedAt":null,"state":"open","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558601321000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2863","number":2863,"title":"NotImplementedError: Setting version is not implemented by RscriptRequirement","body":"[   83s] _________________ ERROR collecting tests/r/FormatRBearTest.py __________________\n[   83s] tests/r/FormatRBearTest.py:1: in <module>\n[   83s]     from bears.r.FormatRBear import FormatRBear\n[   83s] bears/r/FormatRBear.py:20: in <module>\n[   83s]     prerequisite_check_fail_message='Please install formatR for this bear '\n[   83s] bears/r/FormatRBear.py:36: in FormatRBear\n[   83s]     version='>1.5'),\n[   83s] /usr/lib/python3.7/site-packages/dependency_management/requirements/RscriptRequirement.py:50: in __init__\n[   83s]     'Setting version is not implemented by RscriptRequirement')\n[   83s] E   NotImplementedError: Setting version is not implemented by RscriptRequirement\n[   83s] __________________ ERROR collecting tests/r/RLintBearTest.py ___________________\n[   83s] tests/r/RLintBearTest.py:1: in <module>\n[   83s]     from bears.r.RLintBear import RLintBear\n[   83s] bears/r/RLintBear.py:19: in <module>\n[   83s]     prerequisite_check_fail_message='R library \"lintr\" is not installed.')\n[   83s] bears/r/RLintBear.py:28: in RLintBear\n[   83s]     version='>=1.0.2'),\n[   83s] /usr/lib/python3.7/site-packages/dependency_management/requirements/RscriptRequirement.py:50: in __init__\n[   83s]     'Setting version is not implemented by RscriptRequirement')\n[   83s] E   NotImplementedError: Setting version is not implemented by RscriptRequirement","comments":11,"createdAt":"2019-02-06T06:56:48Z","updatedAt":"2019-05-23T08:48:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558024021000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2821","number":2821,"title":"README.rst: Update the FAQ Link","body":"The link in the Installation section of the file README.rst can be updated to the latest link:\nhttp://docs.coala.io/en/latest/Help/FAQ.html\nThis can be a suitable issue for newcomers.","comments":11,"createdAt":"2018-12-11T07:40:38Z","updatedAt":"2019-05-16T16:27:01Z","closedAt":null,"state":"open","user":{"login":"shashank-b","avatarUrl":"https://avatars2.githubusercontent.com/u/22676390?v=4"},"owner":{"login":"shashank-b","avatarUrl":"https://avatars2.githubusercontent.com/u/22676390?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1556695450000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2651","number":2651,"title":"Bump lxml version?","body":"Any particular reason that we are pinning lxml==3.6.0 despite the newest being 4.2.3? The new version fixes installation issues on my Mac (macos 10.13, Python 3.7.0).","comments":3,"createdAt":"2018-08-01T06:40:36Z","updatedAt":"2019-05-01T07:24:10Z","closedAt":null,"state":"open","user":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"owner":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558602298000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2729","number":2729,"title":"https://coala.io/#/languages - No bears","body":"Hi guys,\nI was checking this page for bears after doing a basic setup of Coala and didn't find any listings. Is it supposed to be like this?","comments":5,"createdAt":"2018-10-24T10:14:01Z","updatedAt":"2019-05-23T09:04:58Z","closedAt":"2019-01-30T08:00:40Z","state":"closed","user":{"login":"kuroop","avatarUrl":"https://avatars2.githubusercontent.com/u/8777623?v=4"},"owner":{"login":"kuroop","avatarUrl":"https://avatars2.githubusercontent.com/u/8777623?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1557816912000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2370","number":2370,"title":"Create FileModeBear","body":"It's really easy to forget to set +x on scripts. How about a bear like this:\n[all.mode]\nbears = FileModeBear\nrequire = rw\n\n[all.shell.mode]\nbears = FileModeBear\nrequire = rwx","comments":8,"createdAt":"2018-03-19T13:57:04Z","updatedAt":"2019-05-14T06:55:12Z","closedAt":null,"state":"open","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/low","color":"207de5"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1557816936000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2445","number":2445,"title":"Bear Proposal: OutdatedDependencyBear","body":"This function of this bear is to check if the dependencies of the project (requirements.txt, Gemfile, etc) are up to date.\nThis would be useful for projects that are focusing their efforts to support the newest version of their dependencies (like projects that are critical to the system)","comments":2,"createdAt":"2018-04-19T14:17:06Z","updatedAt":"2019-05-14T06:55:36Z","closedAt":null,"state":"open","user":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"owner":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"assignee":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"area/genericbears","color":"D01975"},{"name":"bear proposal","color":"ADFF2F"},{"name":"status/needs design","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1557816973000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2092","number":2092,"title":"Pygmented AnnotationBear","body":"Instead of further complicating the AnnotationBear with #1332 it should first be simplified by using Pygments lexers instead of custom parsing for extraction of comment and string ranges from source code\nThis is also related to coala/coala#4775","comments":5,"createdAt":"2017-10-29T11:16:50Z","updatedAt":"2019-05-14T06:56:13Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"difficulty/high","color":"b319e7"},{"name":"type/codestyle","color":"bfd4f2"},{"name":"type/performance","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1557816957000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1897","number":1897,"title":"PEP8Bear: Show PEP8 error description","body":"Originally created by @TheMeaningfulEngineer on coala/coala#2511\nOverview Description\nCoala doesn't give a description of the error what PEP8 does.\nSteps to Reproduce\nFiles:\nexample.py\n# After this comment there should be two lines but I'll only put one.\n\nclass Faker:\n\n    def __init__():\n        pass\n\n.coafile\n[Default]\nbears = PEP8Bear\nfiles = *.py\n\nActual Results\n$ coala\nExecuting section Default...\n\nexample.py\n|   1| #•After•this•comment•there•should•be•two•lines•but•I'll•only•put•one.\n|    | [NORMAL] PEP8Bear:\n|    | The code does not comply to PEP8.\n|----|    | /home/alan/europython/by_day/friday/coala_contribution/example.py\n|    |++++| /home/alan/europython/by_day/friday/coala_contribution/example.py\n|   1|   1| # After this comment there should be two lines but I'll only put one.\n|    |   2|+\n|   2|   3| \n|   3|   4| class Faker:\n|   4|   5| \n|    | The following actions are applicable to this result:\n|    |  0: Apply no further actions.\n|    |  1: Open the affected file(s) in an editor.\n|    |  2: Apply the patch automatically.\n|    | Please enter the number of the action you want to execute (Ctrl-D to exit). \n\n\nExpected Results\nIt would be nice to get the error description which PEP8 gives somewhere.\n$ pep8 example.py \nexample.py:3:1: E302 expected 2 blank lines, found 1","comments":5,"createdAt":"2017-07-07T13:57:26Z","updatedAt":"2019-05-14T06:55:57Z","closedAt":null,"state":"open","user":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"owner":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"assignee":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1557816931000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1532","number":1532,"title":"Regex linter","body":"At the moment, this would probably need to be something like InvalidLinkBear, looking for regex within the 'strings' a file using AnnotationBear, and mostly tested on Python files.\nWhen \"language in language\" works, the bear would be passed only the regex.\nhttps://github.com/thatch/regexlint - Pygments specific\nmyint/rstcheck#26 - Embedded in RST, but algorithm there should be the good basis for a basic bear.","comments":3,"createdAt":"2017-03-22T18:36:00Z","updatedAt":"2019-05-14T06:55:31Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1557816897000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1113","number":1113,"title":"Check requirements against requirements of all dependencies","body":"Due to the way pip works, without a proper dependency graph, the version installed is not deterministic unless our versions are identical to the versions of our dependencies.\nAll requirements files should be in sync.  A bear needs to check this.","comments":8,"createdAt":"2016-12-10T12:53:50Z","updatedAt":"2019-05-14T06:54:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558801461000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1251","number":1251,"title":"Locate Java dependencies using maven metadata","body":"There are at least two Java dependencies where the Fedora and Ubuntu packages provide maven metadata that could be used to find the jar files\n\npmd : #804\ncheckstyle : #1250 (#626)\nWe probably need a new MavenRequirement in http://gitlab.com/coala/package_manager/ , which then needs to be used by the bears implemented in Java.","comments":6,"createdAt":"2017-01-03T20:39:20Z","updatedAt":"2019-05-25T16:24:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"status/blocked","color":"e11d21"},{"name":"upstream","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1557773600000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/718","number":718,"title":"Invalid project reference link to GSoC website for previous years proposals","body":"Currently, when we view any previous year completed projects report it contains a reference link to the GSoC website viewing that project but that link seems to be invalid because the GSoC has ended for that year and the data has been archived. So, there is a need to correctly format the link which can found the Project Title for any completed project.","comments":9,"createdAt":"2019-03-03T14:24:36Z","updatedAt":"2019-05-13T18:53:20Z","closedAt":"2019-05-13T18:53:20Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1559028516000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/574","number":574,"title":"New Project: mobanise tool","body":"The process of converting a project to moban is similar to the coala-quickstart problem solved in the GSoC 2017 quickstart project\nA lot of information needs to be extracted from various existing files, converted to yaml, and then moban run to generate those same files, and various commands run to identify what functional changes have been made by using the moban templates, and a human checking those changes to see if they were good.\nBefore this project is started, the info extraction components from quickstart need to be moved to a new library.  Ideally that is done by the authors, with the history of the code retained in the new repository.\nThen this project would involve improving that library, and creating a new command mobanise that uses the library to generate at least the two main files of moban, a .moban.yaml & <project name>.yaml.\nhttps://github.com/coala/coala-quickstart/tree/master/coala_quickstart/info_extraction\nhttps://github.com/coala/coala-quickstart/tree/master/coala_quickstart/info_extractors\nThe new tool should work on a variety of existing Python projects, especially hand-rolled setup.py that are not too complicated, pbr based projects, and including those using other systems such as versioneer.\ncc @chfw","comments":4,"createdAt":"2018-05-12T11:22:50Z","updatedAt":"2019-05-28T07:28:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1558081316000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/642","number":642,"title":"Update the GSoC information link in FAQ's","body":"The link for 'further information of GSoC' in the FAQ's section is now not supported and has been moved on to a new address. This link needs to be updated.\nLink to the page referred: http://projects.coala.io/#/faq","comments":9,"createdAt":"2018-08-14T20:15:38Z","updatedAt":"2019-05-17T08:21:56Z","closedAt":null,"state":"open","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1557592558000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/551","number":551,"title":"autopep8","body":"Lots of opportunity to add fixes.","comments":10,"createdAt":"2018-04-10T12:48:13Z","updatedAt":"2019-05-11T16:35:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1557231565000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/555","number":555,"title":"Result reporter tool","body":"The coala json format provides a stable output.\nThere are other formats which are useful for reporting tests and failures.\nMost commonly used is JUnit format. (which isnt really a specified format; see https://blog.ilias.xyz/unit-test-output-formats-a-state-of-affairs-5734b4c8e577)\nConverting the static analysis results into a test results format has been done a few times, such as early PEP8 plugins to Jenkins.  The mapping isnt exact, but the benefits of using the test result format is tight integration with various system.\nCircleCI can accept this format: https://circleci.com/docs/2.0/collect-test-data/\nAppVeyor can receive a test results XML format, in the format output by xunit, presumably the same as JUnit.\nhttps://www.appveyor.com/docs/running-tests/#uploading-xml-test-results\nThe first project phase could involve converting the JSON to JUnit format and uploading into Circle CI and Appveyor.\nThe JUnit format should also be tested with a Jenkins install, to ensure it is uploading correctly there.  This would mean our Jenkins project is much less important.\nAnother common format is TAP.\nAnd there is Clover XML format.\nThen there are some system, such as Phabricator, which have a custom format they expect.\nc.f. facebook/infer#673\nThe above probably doesnt fill 3 months.\nPulling the coala results from CI using this format could be a way to inform newbies of the style problems with their PRs.\nAnother way to expand this project is to also push the unit test results as XML to the CI (using combination XML files if necessary)","comments":19,"createdAt":"2018-04-17T11:07:57Z","updatedAt":"2019-05-07T12:19:25Z","closedAt":"2019-05-07T12:19:25Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1558790460000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/660","number":660,"title":"Corobo repo needs moban sync ","body":"After the recent build failure due to the upstream changed xdist and pytest versions the moban repo has been updated due to which this repo needs syncing. Due to a specific error in the doctest files a error similar to the one seen in this issue timofurrer/ramlient#51\nhas been encountered.\nWe need some modifications and a moban sync to fix these errors.","comments":0,"createdAt":"2019-05-22T18:17:14Z","updatedAt":"2019-05-25T13:21:00Z","closedAt":"2019-05-25T13:21:00Z","state":"closed","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1558622931000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/659","number":659,"title":"Add feature to display welcome message with regex","body":"For any message such as hello world!, as long as it contains hello world should prompt the welcome message to be displayed","comments":4,"createdAt":"2019-05-21T22:15:19Z","updatedAt":"2019-05-23T14:48:51Z","closedAt":null,"state":"open","user":{"login":"RohanVB","avatarUrl":"https://avatars0.githubusercontent.com/u/15197846?v=4"},"owner":{"login":"RohanVB","avatarUrl":"https://avatars0.githubusercontent.com/u/15197846?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1558791948000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/365","number":365,"title":"Default COBOT_PREFIX should not be the same as the production value","body":"Currently if someone starts the bot, and connects it to a server with a corobo production instance, two bots will respond to any corobo ... command, which will get very ugly when there are 20 or 30 kids trying it, allowing kids to play tricks on each other.","comments":2,"createdAt":"2017-11-24T03:05:35Z","updatedAt":"2019-05-25T13:45:48Z","closedAt":"2019-05-25T13:45:48Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1558262602000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/248","number":248,"title":"Incorrect coala twitter URL on community website","body":"When  coala twitter webpage is being opened from any deploy preview of any PR, it redirects the user to https://twitter.com/coala instead of https://twitter.com/coala_io\nFor example - open following deploy preview and click on given link. It will redirect to wrong webpage.","comments":0,"createdAt":"2019-05-19T06:50:01Z","updatedAt":"2019-05-19T10:43:22Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1558246704000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/243","number":243,"title":"Build failing due to latest version of django getting installed","body":"Django v2.1.7 should be installed as it depends upon Ubuntu Trusty v14.04 and makes the CI builds green. Installing latest version is leading to problems as it requires Sqlite v3.8.3 or later version which isn't available in Ubuntu Trusty. Available for now in Ubuntu Xenial image.","comments":2,"createdAt":"2019-05-08T08:56:33Z","updatedAt":"2019-05-19T06:18:24Z","closedAt":"2019-05-19T06:18:24Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1558004687000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/247","number":247,"title":"pytest v4.4.0 is causing build failures","body":"Build failure log - https://travis-ci.org/coala/community/jobs/532912493","comments":1,"createdAt":"2019-05-16T10:43:15Z","updatedAt":"2019-05-16T11:04:47Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1558246704000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/241","number":241,"title":"moban sync needed","body":"See moban readme for steps\nA Newcomer issue","comments":0,"createdAt":"2019-02-14T11:08:01Z","updatedAt":"2019-05-19T06:18:24Z","closedAt":"2019-05-19T06:18:24Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1558023810000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/232","number":232,"title":"Deploy of fork to netlify fails the build","body":"Following the instructions to deploy the changes pushed in forked repo on netlify is failing the build.\nError log - https://gist.github.com/KVGarg/db41b5f3019513f3659dd44c014ba27c","comments":8,"createdAt":"2019-02-04T20:09:36Z","updatedAt":"2019-05-16T16:23:30Z","closedAt":"2019-05-16T16:22:38Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1557545084000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/235","number":235,"title":"\".ci/build.sh\" fails to execute if more than one remote-url exists","body":"Steps to reproduce the error:\n\nAdd one more remote url (say upstream) to the forked repository using:\ngit remote add upstream https://github.com/coala/community.git\nRun .ci/build.sh\n\nError log","comments":1,"createdAt":"2019-02-07T14:01:06Z","updatedAt":"2019-05-11T03:24:44Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1558633017000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/55","number":55,"title":"Create project specific logo","body":"https://github.com/coala/community/blob/master/docs/_static/images/header.png needs to be removed.\nThis image was added as a temporary solution for #10 , as it was a newcomer issue.\nThis project is a re-usable component that can help any community, so the README should not focus on coala.\nIt should be replaced with a project specific logo which symbolises creating/supporting/growing communities.","comments":2,"createdAt":"2017-12-18T04:47:14Z","updatedAt":"2019-05-23T17:36:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-html","updatedAtMs":1558626228000,"issue":{"htmlUrl":"https://github.com/coala/coala-html/issues/151","number":151,"title":"Update README.md","body":"The following is quite old.\n\nIt can be replaced by a new one like in coala or coala-bears.\nA good newcomer issue.","comments":7,"createdAt":"2018-12-17T19:18:50Z","updatedAt":"2019-05-23T15:43:48Z","closedAt":null,"state":"open","user":{"login":"utkarsh2102","avatarUrl":"https://avatars1.githubusercontent.com/u/31288318?v=4"},"owner":{"login":"utkarsh2102","avatarUrl":"https://avatars1.githubusercontent.com/u/31288318?v=4"},"labels":[{"name":"difficulty/newcomer","color":"009800"}]}},{"repoOwner":"coala","repoName":"coala-html","updatedAtMs":1558626370000,"issue":{"htmlUrl":"https://github.com/coala/coala-html/issues/126","number":126,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coalafor reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":1,"createdAt":"2017-10-25T16:13:17Z","updatedAt":"2019-05-23T15:46:10Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558877121000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2910","number":2910,"title":"WIP: Use tox","body":"Green builds, and lots of closes.  Continues #1386 .  This is a new PR because that one is so old and has some interesting implementation choices where are no longer relevant due to new approaches.\nWIP as the commits need to be split up, linked to issues, etc.\nA few parts of this are hopefully going to be replaced with PRs underway by other folk, otherwise I'll take over the assigned issues.","comments":2,"createdAt":"2019-05-25T20:02:36Z","updatedAt":"2019-05-26T13:25:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2910","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3Mzk4OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r287573989","bodyText":"unused file; should be deleted.  Also the two files above changing only permissions dont need to be in this PR","diffHunk":"@@ -0,0 +1,17 @@\n+#!/bin/sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:16:55Z","lastEditedAt":null,"updatedAt":"2019-05-25T20:16:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3NDAwMA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r287574000","bodyText":"unused iirc","diffHunk":"@@ -0,0 +1,10 @@\n+#!/bin/bash","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:17:42Z","lastEditedAt":null,"updatedAt":"2019-05-25T20:17:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk0NTU4Mw==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-495945583","bodyText":"Coverage appearing at https://codecov.io/gh/coala/coala-bears/tree/c50ebe9/bears\n99.9%  The remaining coverage is Constants, which is only used by docs/conf.py:from bears.Constants import VERSION\nHaving coverage at 100% isnt critical any more because of the use of per-file 100% coverage requirements.  We should remove Constants.  Anyway, this will be fixed by running the docs inside tox also.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:14:27Z","lastEditedAt":"2019-05-26T01:56:27Z","updatedAt":"2019-05-26T01:56:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk2MjE2Mg==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-495962162","bodyText":"The travis failures are intentional, and will be added to \"allowed failures\", except for Elm and Haskell, the two languages which are supported by Travis but not yet working.\nAnother change I'll likely try getting into this PR is adding Linux to AppVeyor, as it supports Bionic, which the apt_get factor should handle ok, and there are many more bears with OS distributed packages in bionic.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-26T02:07:05Z","lastEditedAt":null,"updatedAt":"2019-05-26T02:07:05Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558455171000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2904","number":2904,"title":"PycodestyleBear: Process whole output","body":"This commit modifies process_output to\nprocess all the detected problems instead\nof just the first one.\nFixes #2882\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":2,"createdAt":"2019-04-12T18:10:10Z","updatedAt":"2019-05-21T16:12:51Z","closedAt":null,"state":"open","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2904","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjkyNDQ4MA==","url":"https://github.com/coala/coala-bears/pull/2904#discussion_r276924480","bodyText":"Remove trailing whitespaces","diffHunk":"@@ -114,3 +119,10 @@ def test_line_length(self):\n                                  'E501 line too long (106 > 30 characters)')\n                 self.assertEqual(result.origin, 'PycodestyleBear (E501)')\n                 self.assertEqual(result.aspect, LineLength('py'))\n+    ","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-04-19T07:47:18Z","lastEditedAt":null,"updatedAt":"2019-04-19T07:47:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjkyNDUzNQ==","url":"https://github.com/coala/coala-bears/pull/2904#discussion_r276924535","bodyText":"remove trailing whitespaces from here too.","diffHunk":"@@ -114,3 +119,10 @@ def test_line_length(self):\n                                  'E501 line too long (106 > 30 characters)')\n                 self.assertEqual(result.origin, 'PycodestyleBear (E501)')\n                 self.assertEqual(result.aspect, LineLength('py'))\n+    \n+    def test_multiple_errors(self):\n+        content = multiple_error_file.splitlines()\n+        with prepare_file(content, None) as (file, fname):\n+            with execute_bear(self.uut, fname, file) as results:\n+                self.assertTrue(len(results) == 3)\n+","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-04-19T07:47:37Z","lastEditedAt":null,"updatedAt":"2019-04-19T07:47:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjkzNDI2Nw==","url":"https://github.com/coala/coala-bears/pull/2904#discussion_r276934267","bodyText":"Done.","diffHunk":"@@ -114,3 +119,10 @@ def test_line_length(self):\n                                  'E501 line too long (106 > 30 characters)')\n                 self.assertEqual(result.origin, 'PycodestyleBear (E501)')\n                 self.assertEqual(result.aspect, LineLength('py'))\n+    ","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-04-19T08:35:28Z","lastEditedAt":null,"updatedAt":"2019-04-19T08:35:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4NDc2NzQ5OA==","url":"https://github.com/coala/coala-bears/pull/2904#issuecomment-484767498","bodyText":"Can you add test cases to check and enforce PycodestyleBear processes whole output? That would be good ^^\n\nDone.","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-04-19T04:55:23Z","lastEditedAt":null,"updatedAt":"2019-04-19T04:55:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NDMyNDQ2NA==","url":"https://github.com/coala/coala-bears/pull/2904#issuecomment-494324464","bodyText":"@areebbeigh Did the tests pass locally, I'm having some trouble running the tests.\nnvm","diffHunk":null,"author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"createdAt":"2019-05-21T09:57:27Z","lastEditedAt":"2019-05-21T16:12:51Z","updatedAt":"2019-05-21T16:12:51Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1556638934000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2905","number":2905,"title":"Add: EmberTemplateLintBear","body":"Closes #2345\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-04-29T17:54:23Z","updatedAt":"2019-04-30T15:42:14Z","closedAt":null,"state":"open","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2905","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2Mjc3Mw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279762773","bodyText":"The name is a bit confusing.","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-04-30T13:50:14Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:50:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NDg2MQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279764861","bodyText":"Can be put into separate files under test folder.","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MjcxOA==","createdAt":"2019-04-30T14:04:55Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T13:54:27Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:54:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NTAyMw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279765023","bodyText":"Rename the directory name, like template-lint-test-files","diffHunk":"@@ -0,0 +1,7 @@\n+module.exports = {","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MjczMA==","createdAt":"2019-04-30T14:05:00Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T13:54:46Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:54:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NTQ4Nw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279765487","bodyText":"We can have a new language definition (not in this PR though) if Ember (template) is a different language from existing ones.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-04-30T13:55:43Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:55:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2OTYyNg==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279769626","bodyText":"yes you are write, this file denotes a good file when a config file is used. Is good_file_with_configwill be good enough?","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-04-30T14:04:41Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:04:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2OTkzOQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279769939","bodyText":"Yeah, that would be better","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MzE5NA==","createdAt":"2019-04-30T14:10:47Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T14:05:22Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:05:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc3MTUzMg==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279771532","bodyText":"Ember is a framework of JavaScript. It is doubtful where to put it as Ember (template) only handles the template part. So one option is to put it in JS but it is totally unrelated to linting that.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-04-30T14:08:57Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:08:57Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558532762000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2896","number":2896,"title":"generate_bear_requirements.py: Add Perl Meta","body":"This enhances generate_bear_requirements.py to support\nperl bears and generate Makefile.PL using jinja2\ntemplate.\ncloses #2483","comments":3,"createdAt":"2019-03-22T16:18:57Z","updatedAt":"2019-05-22T13:46:02Z","closedAt":null,"state":"open","user":{"login":"Ishaan29","avatarUrl":"https://avatars3.githubusercontent.com/u/19341314?v=4"},"owner":{"login":"Ishaan29","avatarUrl":"https://avatars3.githubusercontent.com/u/19341314?v=4"},"assignee":{"login":"Ishaan29","avatarUrl":"https://avatars3.githubusercontent.com/u/19341314?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2896","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTExOTUyOA==","url":"https://github.com/coala/coala-bears/pull/2896#discussion_r275119528","bodyText":"Is this dependency manager available in the coala package_manager?","diffHunk":"@@ -1,6 +1,10 @@\n from coalib.bearlib.abstractions.Linter import linter\n from dependency_management.requirements.DistributionRequirement import (\n     DistributionRequirement)\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements)\n+from dependency_managment.requirements.PerlRequirement import (","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2019-04-13T14:14:08Z","lastEditedAt":null,"updatedAt":"2019-04-13T14:14:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTEyMDMzOQ==","url":"https://github.com/coala/coala-bears/pull/2896#discussion_r275120339","bodyText":"No it is not available, Thank you for pointing me in the right direction ... I will create PerlRequirement file.","diffHunk":"@@ -1,6 +1,10 @@\n from coalib.bearlib.abstractions.Linter import linter\n from dependency_management.requirements.DistributionRequirement import (\n     DistributionRequirement)\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements)\n+from dependency_managment.requirements.PerlRequirement import (","author":{"login":"Ishaan29","avatarUrl":"https://avatars3.githubusercontent.com/u/19341314?v=4","name":"Ishaan bajpai"},"reactions":[{"id":"MDg6UmVhY3Rpb240MDc2ODkxMw==","createdAt":"2019-04-14T06:07:14Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}},{"id":"MDg6UmVhY3Rpb240MjEyOTQ4Mg==","createdAt":"2019-05-07T14:18:18Z","content":"THUMBS_UP","user":{"login":"Ishaan29","name":"Ishaan bajpai"}}],"createdAt":"2019-04-13T14:38:22Z","lastEditedAt":null,"updatedAt":"2019-04-13T14:38:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTE0MTgzNg==","url":"https://github.com/coala/coala-bears/pull/2896#discussion_r275141836","bodyText":"BTW the issue is not about creating a dependency. This issue is to create just Perl meta.\nNM.","diffHunk":"@@ -1,6 +1,10 @@\n from coalib.bearlib.abstractions.Linter import linter\n from dependency_management.requirements.DistributionRequirement import (\n     DistributionRequirement)\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements)\n+from dependency_managment.requirements.PerlRequirement import (","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2019-04-14T06:08:46Z","lastEditedAt":"2019-04-14T06:11:34Z","updatedAt":"2019-04-14T06:11:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTM3NTQ1Nw==","url":"https://github.com/coala/coala-bears/pull/2896#discussion_r275375457","bodyText":"I don't think there is a need to add PerlRequirement as CpanRequirement is already present..","diffHunk":"@@ -1,6 +1,10 @@\n from coalib.bearlib.abstractions.Linter import linter\n from dependency_management.requirements.DistributionRequirement import (\n     DistributionRequirement)\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements)\n+from dependency_managment.requirements.PerlRequirement import (","author":{"login":"Ishaan29","avatarUrl":"https://avatars3.githubusercontent.com/u/19341314?v=4","name":"Ishaan bajpai"},"reactions":[],"createdAt":"2019-04-15T14:02:55Z","lastEditedAt":null,"updatedAt":"2019-04-15T14:02:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTM3OTkxNw==","url":"https://github.com/coala/coala-bears/pull/2896#discussion_r275379917","bodyText":"If CpanRequirement is the requirement here, then work with that. Adding PerlRequirement here without having it in package_manager will break it","diffHunk":"@@ -1,6 +1,10 @@\n from coalib.bearlib.abstractions.Linter import linter\n from dependency_management.requirements.DistributionRequirement import (\n     DistributionRequirement)\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements)\n+from dependency_managment.requirements.PerlRequirement import (","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTgwNzEyNw==","createdAt":"2019-05-01T15:12:06Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb240MjEyOTQ2OQ==","createdAt":"2019-05-07T14:18:09Z","content":"THUMBS_UP","user":{"login":"Ishaan29","name":"Ishaan bajpai"}}],"createdAt":"2019-04-15T14:12:09Z","lastEditedAt":null,"updatedAt":"2019-04-15T14:12:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NjQ5NzIxMw==","url":"https://github.com/coala/coala-bears/pull/2896#discussion_r286497213","bodyText":"this isnt a template if it has literal values in it.","diffHunk":"@@ -0,0 +1,6 @@\n+use ExtUtils::MakeMaker;\n+WriteMakefile(\n+    NAME              => 'Coala::Bears',\n+    VERSION           => '0.10',\n+    PREREQ_PM         => {Perl::Critic => 1.126},","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-22T13:44:43Z","lastEditedAt":null,"updatedAt":"2019-05-22T13:44:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NjQ5Nzg4Ng==","url":"https://github.com/coala/coala-bears/pull/2896#discussion_r286497886","bodyText":"Will you be fixing this @Ishaan29 ?","diffHunk":"@@ -1,6 +1,10 @@\n from coalib.bearlib.abstractions.Linter import linter\n from dependency_management.requirements.DistributionRequirement import (\n     DistributionRequirement)\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements)\n+from dependency_managment.requirements.PerlRequirement import (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-22T13:46:01Z","lastEditedAt":null,"updatedAt":"2019-05-22T13:46:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4MjIxNDI5NQ==","url":"https://github.com/coala/coala-bears/pull/2896#issuecomment-482214295","bodyText":"@Ishaan29 There should be a blank line between Closes And your commit description 😇","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-04-11T17:22:16Z","lastEditedAt":null,"updatedAt":"2019-04-11T17:22:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4ODMxMDc0Nw==","url":"https://github.com/coala/coala-bears/pull/2896#issuecomment-488310747","bodyText":"Continuation of #2888","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-01T15:14:25Z","lastEditedAt":null,"updatedAt":"2019-05-01T15:14:25Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1556796000000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2854","number":2854,"title":"Update README.rst","body":"#2821 issue fix\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2019-02-04T15:14:08Z","updatedAt":"2019-05-02T11:20:00Z","closedAt":"2019-05-02T10:37:36Z","state":"closed","user":{"login":"syamdanda","avatarUrl":"https://avatars2.githubusercontent.com/u/10626418?v=4"},"owner":{"login":"syamdanda","avatarUrl":"https://avatars2.githubusercontent.com/u/10626418?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2854","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDUxNjg3MQ==","url":"https://github.com/coala/coala-bears/pull/2854#issuecomment-460516871","bodyText":"Please amend your commit message to comply with https://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-02-05T05:22:31Z","lastEditedAt":null,"updatedAt":"2019-02-05T05:22:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4ODYzNTg3Ng==","url":"https://github.com/coala/coala-bears/pull/2854#issuecomment-488635876","bodyText":"Hi @syamdanda any reason for closing out this PR? Please don’t close PR un-necessarily 🙂","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTkwMzQwNw==","createdAt":"2019-05-02T21:12:40Z","content":"THUMBS_UP","user":{"login":"AkshJain99","name":"Akshit Jain"}}],"createdAt":"2019-05-02T11:20:00Z","lastEditedAt":null,"updatedAt":"2019-05-02T11:20:00Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558017452000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2858","number":2858,"title":"WIP: .travis.yml: Use xenial","body":"Problems:\n\n current master breakage: #2857\n Clang bears are complaining of incorrect .so - known problem, not easy to solve\n CSVLintBear broken - ruby version not support?  It is also broken on Windows\n LuaLintBear broken\n TextLintBearTest two errors","comments":0,"createdAt":"2019-02-05T02:55:47Z","updatedAt":"2019-05-16T14:37:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2858","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1558773797000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2803","number":2803,"title":"Jinja2Bear: Add support for indentation","body":"This adds the indentation feature to the Jinja2\nlanguage. This indentation is applied only to\nthe tags of Jinja2.\nCloses #2763\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-12-02T13:33:27Z","updatedAt":"2019-05-25T08:43:17Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/wip","color":"fbca04"},{"name":"size/M","color":"CFB80A"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2803","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ0MzUwODAyNQ==","url":"https://github.com/coala/coala-bears/pull/2803#issuecomment-443508025","bodyText":"WIP - Writing the tests. Implemented the TESTS","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-12-02T13:34:08Z","lastEditedAt":"2018-12-18T00:25:50Z","updatedAt":"2018-12-18T00:25:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDM0NzE4OQ==","url":"https://github.com/coala/coala-bears/pull/2803#issuecomment-460347189","bodyText":"Asciineam - https://asciinema.org/a/yFCyH8m2hYIeFdQj0AniVV5qE","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2019-02-04T17:57:34Z","lastEditedAt":null,"updatedAt":"2019-02-04T17:57:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDM1NzAyNQ==","url":"https://github.com/coala/coala-bears/pull/2803#issuecomment-460357025","bodyText":"The basic working of the patch can be explained as follows [For future reference]\nWe have three things -\n\nLabel_stack: Used to store all the control tags\nIndent Level: This tells the indentation level of the line.\nIndent step: Number of spaces for each indentation\n\nInitially the stack starts with no elements. As soon as it encounters a control label(eg: for,if,set etc..), it appends those labels into the stack. Note that, we also maintain the end control label where ever necessary. Whenever an control tag is added and if it doesn't find it's endtag in the next line, The Indent step is increased. This is done, because if the endtag is not found on the nextline it basically means that we have nesting of instructions.\nEg:\n{% for tony in avengers %}\n{% for thanos in enemy %}\n{% set thanos == 'EVIL' %}\n{% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nAs you see above after the first for, we do not have an endfor, that means we have a nesting in our Code. In such cases we append the first for in the stack. Now when it goes to the next line, it  checks if the next label matches the end label for the element present in the stack. That means, here we are checking if the next label is endfor. If it is then do nothing.\nIf it's not, then increase the Indent step , which is nothing but the number of spaces that has to be appended in front of a line. And check if the next line has that many number of indent steps. If not then create a diff.\nNow, when it encounters a endtag for the element present in the stack, it does two things\n\nDecreases the Indentaion Step\nPops out the element from the stack.\n\nThis is the basic working of the solution.\nThe above example get's indented as follows:\n{% for tony in avengers %}\n  {% for thanos in enemy %}\n    {% set thanos == 'EVIL' %}\n  {% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nFor the cases where we have a code which has nested languages such as Jinja2 and Python. The lines from other languages are skipped. coala doesn't yet have the functionality to detect multiple languages.\nFor eg:\nimport sys\n{% for tony in avengers %}\n  {% for thanos in enemy %}\n                    print(\"Thanos Rocks!!\")\n          print(\"Testing Indentation\")\n{% set avengers = loose %}\n  {% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nAfter the indentation, it would look like\nimport sys\n{% for tony in avengers %}\n  {% for thanos in enemy %}\n                   print(\"Thanos Rocks!!\")\n          print(\"Testing Indentation\")\n     {% set avengers = loose %}\n  {% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nAs you see above, we provide no indentation  to both the print statements. We just ignore them.","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2019-02-04T18:25:08Z","lastEditedAt":"2019-05-25T08:43:17Z","updatedAt":"2019-05-25T08:43:17Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1559103571000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2823","number":2823,"title":"Make StyleLintBear configurable","body":"Issue: #1922\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-12-12T05:16:44Z","updatedAt":"2019-05-29T04:19:31Z","closedAt":null,"state":"open","user":{"login":"Kiy4h","avatarUrl":"https://avatars0.githubusercontent.com/u/34406802?v=4"},"owner":{"login":"Kiy4h","avatarUrl":"https://avatars0.githubusercontent.com/u/34406802?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XXL","color":"AA0000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2823","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDkwODQ0MQ==","url":"https://github.com/coala/coala-bears/pull/2823#issuecomment-460908441","bodyText":"https://travis-ci.org/coala/coala-bears/jobs/488410914 has a failing stylelint test.  I assume that is related to this PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-02-06T05:48:17Z","lastEditedAt":null,"updatedAt":"2019-02-06T05:48:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MTI3MTg4Mw==","url":"https://github.com/coala/coala-bears/pull/2823#issuecomment-461271883","bodyText":"@jayvdb Yes, it's related to this PR. The problem is, the bear emits no errors for indentation_bad_file where it should. Same for no_missing_end_of_source_newline_bad_file.\nI've put comments before the test variable declarations here:\nhttps://github.com/coala/coala-bears/pull/2823/files#diff-f20f84cd43b5e24e382991c92cc94e62R828\nhttps://github.com/coala/coala-bears/pull/2823/files#diff-f20f84cd43b5e24e382991c92cc94e62R591","diffHunk":null,"author":{"login":"Kiy4h","avatarUrl":"https://avatars0.githubusercontent.com/u/34406802?v=4","name":"zeet"},"createdAt":"2019-02-07T03:00:20Z","lastEditedAt":null,"updatedAt":"2019-02-07T03:00:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MTI3NTExOA==","url":"https://github.com/coala/coala-bears/pull/2823#issuecomment-461275118","bodyText":"Then the bear or the tests need to be fixed.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-02-07T03:22:36Z","lastEditedAt":null,"updatedAt":"2019-02-07T03:22:36Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1556956007000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2724","number":2724,"title":"Changed links","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n[ x] I read the commit guidelines and I've followed\nthem.\n[ x] I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-10-22T19:23:11Z","updatedAt":"2019-05-04T07:46:47Z","closedAt":null,"state":"open","user":{"login":"nathanzilgo","avatarUrl":"https://avatars0.githubusercontent.com/u/36909697?v=4"},"owner":{"login":"nathanzilgo","avatarUrl":"https://avatars0.githubusercontent.com/u/36909697?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2724","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQzMjA1NTk3Nw==","url":"https://github.com/coala/coala-bears/pull/2724#issuecomment-432055977","bodyText":"I've closed the duplicates.  We require that you fix the first PR that you start.\nPlease read https://coala.io/newcomer and https://coala.io/git .  We'll be glad to help you fix this PR at https://coala.io/chat .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-10-23T01:50:08Z","lastEditedAt":null,"updatedAt":"2018-10-23T01:50:08Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1557261414000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/720","number":720,"title":"Add Support TOML Project to projects list","body":"This adds new projectproposal to current projects list\nCloses #705\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2019-03-10T13:58:28Z","updatedAt":"2019-05-07T20:36:54Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"assignee":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/720","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE3OTA1MQ==","url":"https://github.com/coala/projects/pull/720#discussion_r264179051","bodyText":"IMO it would be great to have a tool which converts existing .coafile into TOML config file.","diffHunk":"@@ -0,0 +1,70 @@\n+collaborating_projects:\n+  - coala\n+desc: \"Provide support to a standardised file format(TOML) for writing configurations\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+markdown: standardised-file-format.md\n+mentors:\n+  - \n+name: \"Support TOML for writing configurations\"\n+requirements:\n+  - \"The applicant should have at least one patch merged to\n+    coala\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"The applicant should be familiar with coala configuration system\"\n+tags:\n+  - Core\n+  - Configuration\n+  - TOML\n+---\n+\n+This project aims to support a standardised file format like TOML for writing settings.\n+Currently coala has a INI style config. It has `LineParser` and `ConfParser` classes to\n+parse the settings into sections. These sections are later executed by running the\n+appropriate bear. coala also a `ConfWriter` class to write sections back into settings\n+file like `.coafile`\n+\n+This approach has certain limitations. Custom sub-level parsing in INI style config\n+is tough and error prone. It makes `LineParser` and `ConfParser` more complex and \n+bug prone and also would slow down the speed of development. A solution would be to \n+use standardised file format like TOML. Using `toml.load` on the config file will \n+return a dictionary. This makes custom sub-level parsing not only easy and accurate\n+but also less error prone. Also more importantly completely removes the need \n+for `LineParser`.\n+\n+TOML provides flexibility, consistency, backwards compatibility and standard. It has\n+widespread acceptance, documentation and robust parsers. TOML has been recommended as\n+the configuration file for software packages to specify their build dependencies. Due \n+to its popularity it offers a reduced learning curve compared to INI style config.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant should be familiar with the codebase.\n+- The applicant should know how to work with the community.\n+\n+##### CODING PHASE 1\n+\n+- Create a class named `TomlConfParser` to load settings from TOML\n+  file into sections.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Write and test all possible settings in the new parser. \n+\n+##### CODING PHASE 2\n+\n+- Create a class named `TomlConfWriter` to write sections into  \n+  TOML file.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Test all possible settings in the new writer.\n+\n+##### CODING PHASE 3\n+\n+- Support required and missing features in the parser by making PR's to\n+  [toml](https://github.com/uiri/toml)\n+- New coala tutorials and user guides have been created to show how to","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-03-11T10:56:12Z","lastEditedAt":null,"updatedAt":"2019-03-11T10:56:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDI0NzgxMg==","url":"https://github.com/coala/projects/pull/720#discussion_r264247812","bodyText":"Thanks 😊\nRegarding the first question , https://www.python.org/dev/peps/pep-0518/#overview-of-file-formats-considered explains why TOML is better compared to all other formats. So TOML should be able to do much more that INI or other available config formats.\nconverts existing .coafile into TOML config file is a great idea. Thanks for the idea. It should be possible to implement this with this project.  Once TomlConfWriter is implemented, the sections loaded from .coafile can be passed into it to generate a TOML config file.","diffHunk":"@@ -0,0 +1,70 @@\n+collaborating_projects:\n+  - coala\n+desc: \"Provide support to a standardised file format(TOML) for writing configurations\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+markdown: standardised-file-format.md\n+mentors:\n+  - \n+name: \"Support TOML for writing configurations\"\n+requirements:\n+  - \"The applicant should have at least one patch merged to\n+    coala\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"The applicant should be familiar with coala configuration system\"\n+tags:\n+  - Core\n+  - Configuration\n+  - TOML\n+---\n+\n+This project aims to support a standardised file format like TOML for writing settings.\n+Currently coala has a INI style config. It has `LineParser` and `ConfParser` classes to\n+parse the settings into sections. These sections are later executed by running the\n+appropriate bear. coala also a `ConfWriter` class to write sections back into settings\n+file like `.coafile`\n+\n+This approach has certain limitations. Custom sub-level parsing in INI style config\n+is tough and error prone. It makes `LineParser` and `ConfParser` more complex and \n+bug prone and also would slow down the speed of development. A solution would be to \n+use standardised file format like TOML. Using `toml.load` on the config file will \n+return a dictionary. This makes custom sub-level parsing not only easy and accurate\n+but also less error prone. Also more importantly completely removes the need \n+for `LineParser`.\n+\n+TOML provides flexibility, consistency, backwards compatibility and standard. It has\n+widespread acceptance, documentation and robust parsers. TOML has been recommended as\n+the configuration file for software packages to specify their build dependencies. Due \n+to its popularity it offers a reduced learning curve compared to INI style config.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant should be familiar with the codebase.\n+- The applicant should know how to work with the community.\n+\n+##### CODING PHASE 1\n+\n+- Create a class named `TomlConfParser` to load settings from TOML\n+  file into sections.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Write and test all possible settings in the new parser. \n+\n+##### CODING PHASE 2\n+\n+- Create a class named `TomlConfWriter` to write sections into  \n+  TOML file.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Test all possible settings in the new writer.\n+\n+##### CODING PHASE 3\n+\n+- Support required and missing features in the parser by making PR's to\n+  [toml](https://github.com/uiri/toml)\n+- New coala tutorials and user guides have been created to show how to","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-03-11T14:07:28Z","lastEditedAt":"2019-03-11T14:08:41Z","updatedAt":"2019-03-11T14:08:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Nzg2MTYyMg==","url":"https://github.com/coala/projects/pull/720#discussion_r267861622","bodyText":"can you also add this idea too? Also check why travis fails.","diffHunk":"@@ -0,0 +1,70 @@\n+collaborating_projects:\n+  - coala\n+desc: \"Provide support to a standardised file format(TOML) for writing configurations\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+markdown: standardised-file-format.md\n+mentors:\n+  - \n+name: \"Support TOML for writing configurations\"\n+requirements:\n+  - \"The applicant should have at least one patch merged to\n+    coala\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"The applicant should be familiar with coala configuration system\"\n+tags:\n+  - Core\n+  - Configuration\n+  - TOML\n+---\n+\n+This project aims to support a standardised file format like TOML for writing settings.\n+Currently coala has a INI style config. It has `LineParser` and `ConfParser` classes to\n+parse the settings into sections. These sections are later executed by running the\n+appropriate bear. coala also a `ConfWriter` class to write sections back into settings\n+file like `.coafile`\n+\n+This approach has certain limitations. Custom sub-level parsing in INI style config\n+is tough and error prone. It makes `LineParser` and `ConfParser` more complex and \n+bug prone and also would slow down the speed of development. A solution would be to \n+use standardised file format like TOML. Using `toml.load` on the config file will \n+return a dictionary. This makes custom sub-level parsing not only easy and accurate\n+but also less error prone. Also more importantly completely removes the need \n+for `LineParser`.\n+\n+TOML provides flexibility, consistency, backwards compatibility and standard. It has\n+widespread acceptance, documentation and robust parsers. TOML has been recommended as\n+the configuration file for software packages to specify their build dependencies. Due \n+to its popularity it offers a reduced learning curve compared to INI style config.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant should be familiar with the codebase.\n+- The applicant should know how to work with the community.\n+\n+##### CODING PHASE 1\n+\n+- Create a class named `TomlConfParser` to load settings from TOML\n+  file into sections.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Write and test all possible settings in the new parser. \n+\n+##### CODING PHASE 2\n+\n+- Create a class named `TomlConfWriter` to write sections into  \n+  TOML file.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Test all possible settings in the new writer.\n+\n+##### CODING PHASE 3\n+\n+- Support required and missing features in the parser by making PR's to\n+  [toml](https://github.com/uiri/toml)\n+- New coala tutorials and user guides have been created to show how to","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-03-21T17:01:34Z","lastEditedAt":null,"updatedAt":"2019-03-21T17:01:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Nzg3Mjk2MA==","url":"https://github.com/coala/projects/pull/720#discussion_r267872960","bodyText":"I will add it.","diffHunk":"@@ -0,0 +1,70 @@\n+collaborating_projects:\n+  - coala\n+desc: \"Provide support to a standardised file format(TOML) for writing configurations\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+markdown: standardised-file-format.md\n+mentors:\n+  - \n+name: \"Support TOML for writing configurations\"\n+requirements:\n+  - \"The applicant should have at least one patch merged to\n+    coala\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"The applicant should be familiar with coala configuration system\"\n+tags:\n+  - Core\n+  - Configuration\n+  - TOML\n+---\n+\n+This project aims to support a standardised file format like TOML for writing settings.\n+Currently coala has a INI style config. It has `LineParser` and `ConfParser` classes to\n+parse the settings into sections. These sections are later executed by running the\n+appropriate bear. coala also a `ConfWriter` class to write sections back into settings\n+file like `.coafile`\n+\n+This approach has certain limitations. Custom sub-level parsing in INI style config\n+is tough and error prone. It makes `LineParser` and `ConfParser` more complex and \n+bug prone and also would slow down the speed of development. A solution would be to \n+use standardised file format like TOML. Using `toml.load` on the config file will \n+return a dictionary. This makes custom sub-level parsing not only easy and accurate\n+but also less error prone. Also more importantly completely removes the need \n+for `LineParser`.\n+\n+TOML provides flexibility, consistency, backwards compatibility and standard. It has\n+widespread acceptance, documentation and robust parsers. TOML has been recommended as\n+the configuration file for software packages to specify their build dependencies. Due \n+to its popularity it offers a reduced learning curve compared to INI style config.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant should be familiar with the codebase.\n+- The applicant should know how to work with the community.\n+\n+##### CODING PHASE 1\n+\n+- Create a class named `TomlConfParser` to load settings from TOML\n+  file into sections.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Write and test all possible settings in the new parser. \n+\n+##### CODING PHASE 2\n+\n+- Create a class named `TomlConfWriter` to write sections into  \n+  TOML file.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Test all possible settings in the new writer.\n+\n+##### CODING PHASE 3\n+\n+- Support required and missing features in the parser by making PR's to\n+  [toml](https://github.com/uiri/toml)\n+- New coala tutorials and user guides have been created to show how to","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-03-21T17:26:10Z","lastEditedAt":null,"updatedAt":"2019-03-21T17:26:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODM4Mzc4Mw==","url":"https://github.com/coala/projects/pull/720#discussion_r268383783","bodyText":"@PrajwalM2212 regarding question-\nis there any limitation with adopting TOML? I don't know why people built a custom parser and configuration format instead of using a standard one, but maybe there is some reason. \nI know TOML format is better but there will be a valid reason imo that they not started with TOML format from the start.\nThere will be many edge cases in integrating the TOML format, you should write down all the cases one by one and also write down what will break, how you are going to solve it and what will improve.\nPing @jayvdb @Makman2","diffHunk":"@@ -0,0 +1,70 @@\n+collaborating_projects:\n+  - coala\n+desc: \"Provide support to a standardised file format(TOML) for writing configurations\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+markdown: standardised-file-format.md\n+mentors:\n+  - \n+name: \"Support TOML for writing configurations\"\n+requirements:\n+  - \"The applicant should have at least one patch merged to\n+    coala\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"The applicant should be familiar with coala configuration system\"\n+tags:\n+  - Core\n+  - Configuration\n+  - TOML\n+---\n+\n+This project aims to support a standardised file format like TOML for writing settings.\n+Currently coala has a INI style config. It has `LineParser` and `ConfParser` classes to\n+parse the settings into sections. These sections are later executed by running the\n+appropriate bear. coala also a `ConfWriter` class to write sections back into settings\n+file like `.coafile`\n+\n+This approach has certain limitations. Custom sub-level parsing in INI style config\n+is tough and error prone. It makes `LineParser` and `ConfParser` more complex and \n+bug prone and also would slow down the speed of development. A solution would be to \n+use standardised file format like TOML. Using `toml.load` on the config file will \n+return a dictionary. This makes custom sub-level parsing not only easy and accurate\n+but also less error prone. Also more importantly completely removes the need \n+for `LineParser`.\n+\n+TOML provides flexibility, consistency, backwards compatibility and standard. It has\n+widespread acceptance, documentation and robust parsers. TOML has been recommended as\n+the configuration file for software packages to specify their build dependencies. Due \n+to its popularity it offers a reduced learning curve compared to INI style config.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant should be familiar with the codebase.\n+- The applicant should know how to work with the community.\n+\n+##### CODING PHASE 1\n+\n+- Create a class named `TomlConfParser` to load settings from TOML\n+  file into sections.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Write and test all possible settings in the new parser. \n+\n+##### CODING PHASE 2\n+\n+- Create a class named `TomlConfWriter` to write sections into  \n+  TOML file.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Test all possible settings in the new writer.\n+\n+##### CODING PHASE 3\n+\n+- Support required and missing features in the parser by making PR's to\n+  [toml](https://github.com/uiri/toml)\n+- New coala tutorials and user guides have been created to show how to","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTM2MzY2Nw==","createdAt":"2019-03-23T06:50:52Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-03-23T06:06:47Z","lastEditedAt":null,"updatedAt":"2019-03-23T06:06:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODM4NDMxOQ==","url":"https://github.com/coala/projects/pull/720#discussion_r268384319","bodyText":"@RaiVaibhav\n\nis there any limitation with adopting TOML? I don't know why people built a custom parser and configuration format instead of using a standard one, but maybe there is some reason.\nWhen coala started out, the syntax did not require custom sub level parsing, so INI style config was good and sufficient.\nBut when we started to implement aspects we had to face with tough task of custom sub level parsing. This makes LineParser and ConfParser more complex and error prone.  coala/coala#4511.  Now it would be nice to have a config system where we would not be limited by its complexity.  It would be much more comfortable if we can focus on implementation of a feature and worry less about how to make the parser accommodate the feature.\nThere will be many edge cases in integrating the TOML format .\nThe only challenge is to define the mapping between current coafile syntax and TOML syntax.\nbears = SpaceConsistencyBear, LineLengthBear can be easily mapped to bears = [ \"SpaceConsistencyBear\", \"LineLengthBear\" ].\nBut what does files += app.py  map into in TOML ? This has to be decided by the community. What syntax would they like ? No matter what syntax they may like, it can be easily implemented in TOML.\nOther challenge is that TOML parser does not load comments. There is an existing issue to solve this.\nwrite down what will break\nAccording to my current plan, absolutely nothing shall break down. I shall not be altering/interfering any existing functionality.  I will add classes like TomlConfWriter , TomlConfParser  etc, but not break/alter anything.\nThe project flows from configuration to processing to actions. I shall not have to worry about anything that comes after configuration like processing and actions. This is due to the fact that after configuration gathering code provides sections to processing, it goes out of focus. Now I shall create a system that will convert TOML file into sections. So I will not be interfering with the existing parsers and writers of coafile as well . This way I shall not touch the exiting configuration system as well. Essentially no existing parts are modified. The existing Section and Settings class will be used as they are without changing them.\n\nI have written a very detailed plan in https://github.com/PrajwalM2212/Coala-GSoC-Plan.\nI have read the codebase and made a implementation guide.  You can have a look at it for more details.\nThanks for the questions.  😊","diffHunk":"@@ -0,0 +1,70 @@\n+collaborating_projects:\n+  - coala\n+desc: \"Provide support to a standardised file format(TOML) for writing configurations\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+markdown: standardised-file-format.md\n+mentors:\n+  - \n+name: \"Support TOML for writing configurations\"\n+requirements:\n+  - \"The applicant should have at least one patch merged to\n+    coala\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"The applicant should be familiar with coala configuration system\"\n+tags:\n+  - Core\n+  - Configuration\n+  - TOML\n+---\n+\n+This project aims to support a standardised file format like TOML for writing settings.\n+Currently coala has a INI style config. It has `LineParser` and `ConfParser` classes to\n+parse the settings into sections. These sections are later executed by running the\n+appropriate bear. coala also a `ConfWriter` class to write sections back into settings\n+file like `.coafile`\n+\n+This approach has certain limitations. Custom sub-level parsing in INI style config\n+is tough and error prone. It makes `LineParser` and `ConfParser` more complex and \n+bug prone and also would slow down the speed of development. A solution would be to \n+use standardised file format like TOML. Using `toml.load` on the config file will \n+return a dictionary. This makes custom sub-level parsing not only easy and accurate\n+but also less error prone. Also more importantly completely removes the need \n+for `LineParser`.\n+\n+TOML provides flexibility, consistency, backwards compatibility and standard. It has\n+widespread acceptance, documentation and robust parsers. TOML has been recommended as\n+the configuration file for software packages to specify their build dependencies. Due \n+to its popularity it offers a reduced learning curve compared to INI style config.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant should be familiar with the codebase.\n+- The applicant should know how to work with the community.\n+\n+##### CODING PHASE 1\n+\n+- Create a class named `TomlConfParser` to load settings from TOML\n+  file into sections.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Write and test all possible settings in the new parser. \n+\n+##### CODING PHASE 2\n+\n+- Create a class named `TomlConfWriter` to write sections into  \n+  TOML file.\n+- The corresponding code is properly tested, documented, reviewed,\n+  and merged.\n+- Test all possible settings in the new writer.\n+\n+##### CODING PHASE 3\n+\n+- Support required and missing features in the parser by making PR's to\n+  [toml](https://github.com/uiri/toml)\n+- New coala tutorials and user guides have been created to show how to","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTM2OTIwMQ==","createdAt":"2019-03-23T14:00:57Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}},{"id":"MDg6UmVhY3Rpb24zOTM2OTIwNg==","createdAt":"2019-03-23T14:01:01Z","content":"LAUGH","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2019-03-23T06:32:28Z","lastEditedAt":"2019-03-23T08:12:28Z","updatedAt":"2019-03-23T08:12:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MTMwOTE3MQ==","url":"https://github.com/coala/projects/pull/720#issuecomment-471309171","bodyText":"Mentor details are yet to be added.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-03-10T14:05:13Z","lastEditedAt":"2019-03-10T14:05:29Z","updatedAt":"2019-03-10T14:05:29Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1558649982000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/721","number":721,"title":"projects.html: Add hyperlink to the mentors' name","body":"The coala projects site https://projects.coala.io/#/projects didn't had\nhyperlink to the mentors' name in the modal window of each project\ndescription. This improvement adds hyperlink to it for convenience.\nCloses #36\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2019-03-12T08:38:31Z","updatedAt":"2019-05-23T22:19:42Z","closedAt":null,"state":"open","user":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4"},"owner":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4"},"assignee":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/721","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDY1NzI4Nw==","url":"https://github.com/coala/projects/pull/721#discussion_r264657287","bodyText":"There is no use of class clickable here as it just sets the cursor pointer. Since an anchor tag has been used, adding clickable class is just adding an extra CSS that can be avoided.\nBreak the HTML code to multiple lines for this div as it will look pretty. It will be good if you start anchor tag from next line ;-)","diffHunk":"@@ -68,7 +68,7 @@\n         <div ng-show=\"currentProject.difficulty\" class=\"project-detail-element\">\n           <div class=\"small-heading uppercase\">Difficulty</div> <span class=\"pr-element-detail chip\">{{ currentProject.difficulty }}</span> </div>\n         <div ng-show=\"currentProject.mentors.length>0\" class=\"project-detail-element\">\n-          <div class=\"small-heading uppercase\">Mentors</div> <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\">@{{mentor}}</span> </div>\n+          <div class=\"small-heading uppercase\">Mentors</div> <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\"><a ng-href=\"https://github.com/{{mentor}}\" class=\"mentors-github-id chip clickable\" target=\"_blank\">@{{mentor}}</a></span> </div>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-12T12:42:54Z","lastEditedAt":null,"updatedAt":"2019-03-12T12:42:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDgyMzQ1Nw==","url":"https://github.com/coala/projects/pull/721#discussion_r264823457","bodyText":"Reason for this change?","diffHunk":"@@ -34,15 +34,15 @@ Why?\n 1. Install [asdf-vm](https://asdf-vm.github.io/asdf/#/core-manage-asdf-vm) for your OS.\n 2. Using asdf-vm, install [ruby](https://github.com/asdf-vm/asdf-ruby).\n 3. Install Jekyll\n-    \n+","author":{"login":"rajdeepbharati","avatarUrl":"https://avatars1.githubusercontent.com/u/30660439?v=4","name":"Rajdeep Bharati"},"reactions":[],"createdAt":"2019-03-12T18:26:52Z","lastEditedAt":null,"updatedAt":"2019-03-12T18:26:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDgyNDAyMg==","url":"https://github.com/coala/projects/pull/721#discussion_r264824022","bodyText":"I guess removing whitespaces is unrelated to this issue","diffHunk":"@@ -34,15 +34,15 @@ Why?\n 1. Install [asdf-vm](https://asdf-vm.github.io/asdf/#/core-manage-asdf-vm) for your OS.\n 2. Using asdf-vm, install [ruby](https://github.com/asdf-vm/asdf-ruby).\n 3. Install Jekyll\n-    \n+\n         $ gem install jekyll bundler\n \n ### Clone and Run\n \n Clone coala Projects repository\n-    \n+\n     $ git clone https://github.com/coala/projects.git\n-    \n+","author":{"login":"rajdeepbharati","avatarUrl":"https://avatars1.githubusercontent.com/u/30660439?v=4","name":"Rajdeep Bharati"},"reactions":[],"createdAt":"2019-03-12T18:28:16Z","lastEditedAt":null,"updatedAt":"2019-03-12T18:28:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDgyNjE4Nw==","url":"https://github.com/coala/projects/pull/721#discussion_r264826187","bodyText":"I was trying to resolve the issues that the Travis Log said. I thought it failed at indentations, so I removed them. I didn't know there is another issue for this. I'll uncommit it. :)","diffHunk":"@@ -34,15 +34,15 @@ Why?\n 1. Install [asdf-vm](https://asdf-vm.github.io/asdf/#/core-manage-asdf-vm) for your OS.\n 2. Using asdf-vm, install [ruby](https://github.com/asdf-vm/asdf-ruby).\n 3. Install Jekyll\n-    \n+","author":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4","name":"Ashish Kushwaha"},"reactions":[],"createdAt":"2019-03-12T18:33:24Z","lastEditedAt":null,"updatedAt":"2019-03-12T18:33:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTE2ODI4OA==","url":"https://github.com/coala/projects/pull/721#discussion_r265168288","bodyText":"Why is there an extra space after @{{mentor}}?","diffHunk":"@@ -68,7 +68,11 @@\n         <div ng-show=\"currentProject.difficulty\" class=\"project-detail-element\">\n           <div class=\"small-heading uppercase\">Difficulty</div> <span class=\"pr-element-detail chip\">{{ currentProject.difficulty }}</span> </div>\n         <div ng-show=\"currentProject.mentors.length>0\" class=\"project-detail-element\">\n-          <div class=\"small-heading uppercase\">Mentors</div> <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\">@{{mentor}}</span> </div>\n+          <div class=\"small-heading uppercase\">Mentors</div>\n+            <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\">\n+              <a ng-href=\"https://github.com/{{mentor}}\" class=\"mentors-github-id chip\" target=\"_blank\">@{{mentor}} </a>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-03-13T14:53:45Z","lastEditedAt":null,"updatedAt":"2019-03-13T14:53:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MjEwNjY2Mw==","url":"https://github.com/coala/projects/pull/721#issuecomment-472106663","bodyText":"@ashkush21 Changes in README.md isn't related to this issue. A separate has been created for that one #713\nPlease un-commit those changes, after this no changes need to me made IMO 💯","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-12T17:40:55Z","lastEditedAt":null,"updatedAt":"2019-03-12T17:40:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MjE0Mjc5Nw==","url":"https://github.com/coala/projects/pull/721#issuecomment-472142797","bodyText":"The commit heading is too large. Please reword the commit heading as well as commit description.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODY1ODA0Mg==","createdAt":"2019-03-12T19:15:57Z","content":"THUMBS_UP","user":{"login":"rajdeepbharati","name":"Rajdeep Bharati"}}],"createdAt":"2019-03-12T19:14:09Z","lastEditedAt":null,"updatedAt":"2019-03-12T19:14:09Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1557231565000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/704","number":704,"title":"Add result reporter tool project","body":"Closes #555\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2019-02-01T16:09:09Z","updatedAt":"2019-05-07T12:19:25Z","closedAt":"2019-05-07T12:19:25Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/704","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTU4NzI2Mw==","url":"https://github.com/coala/projects/pull/704#discussion_r261587263","bodyText":"It might also provide should be changed to Providing linters with ...","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide","author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"reactions":[],"createdAt":"2019-03-01T12:36:42Z","lastEditedAt":null,"updatedAt":"2019-03-01T12:36:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTU4ODcyOA==","url":"https://github.com/coala/projects/pull/704#discussion_r261588728","bodyText":"Can you please explain, In what way would pushing the unit test results as XML to the CI help?\nI mean, Isn't our CI run when someone makes a PR. And whenever  CI is run all the unit tests are executed by default and the results can be seen. Sorry if this might sound silly, but I haven't yet come across a case when we had to push the XML's of unit tests.","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to","author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"reactions":[],"createdAt":"2019-03-01T12:42:14Z","lastEditedAt":null,"updatedAt":"2019-03-01T12:42:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTk1NjQ1Ng==","url":"https://github.com/coala/projects/pull/704#discussion_r261956456","bodyText":"https://circleci.com/docs/2.0/collect-test-data/ is a good example","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTA5MTU2OA==","createdAt":"2019-03-19T16:31:13Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-03-04T08:22:18Z","lastEditedAt":null,"updatedAt":"2019-03-04T08:22:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDg4NTY3OA==","url":"https://github.com/coala/projects/pull/704#discussion_r270885678","bodyText":"Candidates need to think about this - can we make it automatic? What change do we need to make to existing CI configs used in coala?","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide\n+linters with a solid set of classes and output formats for their CLI, letting\n+them focus on linting algorithms.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant has done research on different formats, including JUnit,\n+  checkstyle, TAP, Language Server Protocol (LSP), etc.\n+- The applicant has done research on different formats required by CI\n+  tools and platforms, including Jenkins, Circle CI, Appveyor, Phabricator, etc.\n+\n+##### CODING PHASE 1\n+\n+- A tool that converts JSON results to JUnit format is implemented, tested,\n+  and documented.\n+- Test and add doc regarding how to upload coala results into Circle CI and","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTkxNjYzNQ==","createdAt":"2019-04-01T14:12:50Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}},{"id":"MDg6UmVhY3Rpb24zOTkxNjgzMQ==","createdAt":"2019-04-01T14:15:16Z","content":"THUMBS_UP","user":{"login":"AkshJain99","name":"Akshit Jain"}}],"createdAt":"2019-04-01T14:10:39Z","lastEditedAt":null,"updatedAt":"2019-04-01T14:10:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDg4OTQ1OQ==","url":"https://github.com/coala/projects/pull/704#discussion_r270889459","bodyText":"@li-boxuan  , what actually you mean by automatic here ?\nI mean here we need tool that take coala Json response and convert it into corresponding junit response\nis it. so should be done automatically here according to you 🤔","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide\n+linters with a solid set of classes and output formats for their CLI, letting\n+them focus on linting algorithms.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant has done research on different formats, including JUnit,\n+  checkstyle, TAP, Language Server Protocol (LSP), etc.\n+- The applicant has done research on different formats required by CI\n+  tools and platforms, including Jenkins, Circle CI, Appveyor, Phabricator, etc.\n+\n+##### CODING PHASE 1\n+\n+- A tool that converts JSON results to JUnit format is implemented, tested,\n+  and documented.\n+- Test and add doc regarding how to upload coala results into Circle CI and","author":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4","name":"Akshit Jain"},"reactions":[],"createdAt":"2019-04-01T14:18:34Z","lastEditedAt":null,"updatedAt":"2019-04-01T14:18:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDg5MTU5OQ==","url":"https://github.com/coala/projects/pull/704#discussion_r270891599","bodyText":"Nope, I am not talking about the format itself.\nI mean, how to make the \"upload\" process itself automatic. I didn't spend too much time investigating, so this question is left for students. For example, (maybe) Circle CI allows uploading a report (with JUnit format) in every continuous integration check. Maybe that requires some configuration in .circleci/config.yml.\nEDIT: seems https://circleci.com/docs/2.0/configuration-reference/#store_test_results might be what we need. Then we can make pull requests to all coala repositories which use these CIs.","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide\n+linters with a solid set of classes and output formats for their CLI, letting\n+them focus on linting algorithms.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant has done research on different formats, including JUnit,\n+  checkstyle, TAP, Language Server Protocol (LSP), etc.\n+- The applicant has done research on different formats required by CI\n+  tools and platforms, including Jenkins, Circle CI, Appveyor, Phabricator, etc.\n+\n+##### CODING PHASE 1\n+\n+- A tool that converts JSON results to JUnit format is implemented, tested,\n+  and documented.\n+- Test and add doc regarding how to upload coala results into Circle CI and","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTkxNzYxNQ==","createdAt":"2019-04-01T14:24:12Z","content":"THUMBS_UP","user":{"login":"AkshJain99","name":"Akshit Jain"}}],"createdAt":"2019-04-01T14:23:00Z","lastEditedAt":"2019-04-01T14:23:55Z","updatedAt":"2019-04-01T14:23:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDg5MjQ0Ng==","url":"https://github.com/coala/projects/pull/704#discussion_r270892446","bodyText":"ohh okay will think about it and will mention it in my proposal","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide\n+linters with a solid set of classes and output formats for their CLI, letting\n+them focus on linting algorithms.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant has done research on different formats, including JUnit,\n+  checkstyle, TAP, Language Server Protocol (LSP), etc.\n+- The applicant has done research on different formats required by CI\n+  tools and platforms, including Jenkins, Circle CI, Appveyor, Phabricator, etc.\n+\n+##### CODING PHASE 1\n+\n+- A tool that converts JSON results to JUnit format is implemented, tested,\n+  and documented.\n+- Test and add doc regarding how to upload coala results into Circle CI and","author":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4","name":"Akshit Jain"},"reactions":[],"createdAt":"2019-04-01T14:24:38Z","lastEditedAt":null,"updatedAt":"2019-04-01T14:24:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM4MTE5NQ==","url":"https://github.com/coala/projects/pull/704#discussion_r271381195","bodyText":"To add a bit more, currently there is one problem with using coala in CIs - it is very hard to locate where the error is. We have to look for errors in the massive log. This is one of the motivations why we need to report results to CIs.","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide\n+linters with a solid set of classes and output formats for their CLI, letting\n+them focus on linting algorithms.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant has done research on different formats, including JUnit,\n+  checkstyle, TAP, Language Server Protocol (LSP), etc.\n+- The applicant has done research on different formats required by CI\n+  tools and platforms, including Jenkins, Circle CI, Appveyor, Phabricator, etc.\n+\n+##### CODING PHASE 1\n+\n+- A tool that converts JSON results to JUnit format is implemented, tested,\n+  and documented.\n+- Test and add doc regarding how to upload coala results into Circle CI and","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MDAxMjEwMg==","createdAt":"2019-04-02T16:23:45Z","content":"THUMBS_UP","user":{"login":"AkshJain99","name":"Akshit Jain"}}],"createdAt":"2019-04-02T16:02:33Z","lastEditedAt":null,"updatedAt":"2019-04-02T16:02:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM4ODA1MQ==","url":"https://github.com/coala/projects/pull/704#discussion_r271388051","bodyText":"Students should investigate coala/coala#5910 a bit.\nThat might be out of the scope of this project, but it would be good to mention in the proposal.","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide\n+linters with a solid set of classes and output formats for their CLI, letting\n+them focus on linting algorithms.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant has done research on different formats, including JUnit,\n+  checkstyle, TAP, Language Server Protocol (LSP), etc.\n+- The applicant has done research on different formats required by CI\n+  tools and platforms, including Jenkins, Circle CI, Appveyor, Phabricator, etc.\n+\n+##### CODING PHASE 1\n+\n+- A tool that converts JSON results to JUnit format is implemented, tested,\n+  and documented.\n+- Test and add doc regarding how to upload coala results into Circle CI and\n+  Appveyor.\n+- Add infrastructure (CI, doc) to coala-json repository, where most part of\n+  this project will probably reside.\n+\n+##### CODING PHASE 2\n+\n+- Extend the tool to support different formats, including Checkstyle format,\n+  TAP, Clover.\n+- Test and add doc regarding how to upload coala results into Jenkins and\n+  Phabricator.\n+- Import converters into coala main repository to improve coala output mode.\n+\n+##### CODING PHASE 3\n+\n+- Provide various linters with a solid set of classes and output formats for\n+  their CLI.\n+- Handle JSON/xml reports from linters before feeding into linter bears.","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MDAxMjE5OQ==","createdAt":"2019-04-02T16:25:03Z","content":"THUMBS_UP","user":{"login":"AkshJain99","name":"Akshit Jain"}}],"createdAt":"2019-04-02T16:18:46Z","lastEditedAt":null,"updatedAt":"2019-04-02T16:18:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTM5MDYwMA==","url":"https://github.com/coala/projects/pull/704#discussion_r271390600","bodyText":"yes i was also wondering for the issue might be helpful for us","diffHunk":"@@ -0,0 +1,86 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Implement a result reporter tool that converts linter/bear results\n+into various formats\"\n+difficulty: medium\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/555\"\n+  - \"https://github.com/coala/coala/issues/2757\"\n+  - \"https://github.com/coala/coala/issues/5910\"\n+  - \"https://gitlab.com/coala/coala-json/issues/3\"\n+markdown: result-reporter-tool.md\n+mentors:\n+  - li-boxuan\n+name: \"Result Reporter Tool\"\n+requirements:\n+  - \"The applicant should have at least one non-trivial patch merged to\n+    coala or coala-bears.\"\n+  - \"The applicant should be familiar with Python.\"\n+  - \"Familiarity with continuous integration tools (e.g. Jenkins) is a plus.\"\n+tags:\n+  - Core\n+  - Linter\n+  - CI\n+---\n+\n+Apart from common CLI output, coala provides json format output. However, there\n+are other formats which are useful for reporting tests and failures, but coala\n+does not support at the moment.\n+\n+This is not only for coala, result format inconsistencies has been a problem for\n+a long time. Converting the static analysis results into a test results format\n+has been done a few times, such as early PEP8 plugins to Jenkins. The mapping\n+isn't exact, but the benefits of using the test result format is tight\n+integration with various systems.\n+\n+Most commonly used is JUnit format. CircleCI can accept\n+[this format](https://circleci.com/docs/2.0/collect-test-data). AppVeyor can\n+receive test results in [XML format](https://www.appveyor.com/docs/running-tests/#uploading-xml-test-results).\n+Other formats include [TAP](https://testanything.org/),\n+[Clover](http://openclover.org/doc/manual/latest/ant--clover-report.html),\n+There are some systems, such as Phabricator, which have a\n+[custom format](https://github.com/facebook/infer/issues/673) they expect.\n+\n+The applicant is welcomed to propose additional ideas around format topic, to\n+improve coala workflow, continuous integration workflow or linters workflow.\n+For example, pulling the coala results from CI could be a way to inform newbies\n+of the style problems with their PRs. Pushing the unit test results as XML to\n+the CI (using combination XML files if necessary). It might also provide\n+linters with a solid set of classes and output formats for their CLI, letting\n+them focus on linting algorithms.\n+\n+#### Milestones\n+\n+##### PREPARATION/BONDING\n+\n+- The applicant has created and merged a cEP for this project.\n+- The applicant has done research on different formats, including JUnit,\n+  checkstyle, TAP, Language Server Protocol (LSP), etc.\n+- The applicant has done research on different formats required by CI\n+  tools and platforms, including Jenkins, Circle CI, Appveyor, Phabricator, etc.\n+\n+##### CODING PHASE 1\n+\n+- A tool that converts JSON results to JUnit format is implemented, tested,\n+  and documented.\n+- Test and add doc regarding how to upload coala results into Circle CI and\n+  Appveyor.\n+- Add infrastructure (CI, doc) to coala-json repository, where most part of\n+  this project will probably reside.\n+\n+##### CODING PHASE 2\n+\n+- Extend the tool to support different formats, including Checkstyle format,\n+  TAP, Clover.\n+- Test and add doc regarding how to upload coala results into Jenkins and\n+  Phabricator.\n+- Import converters into coala main repository to improve coala output mode.\n+\n+##### CODING PHASE 3\n+\n+- Provide various linters with a solid set of classes and output formats for\n+  their CLI.\n+- Handle JSON/xml reports from linters before feeding into linter bears.","author":{"login":"AkshJain99","avatarUrl":"https://avatars2.githubusercontent.com/u/29670791?v=4","name":"Akshit Jain"},"reactions":[],"createdAt":"2019-04-02T16:25:05Z","lastEditedAt":null,"updatedAt":"2019-04-02T16:25:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1OTc5MDI2Mg==","url":"https://github.com/coala/projects/pull/704#issuecomment-459790262","bodyText":"Deploy preview: https://deploy-preview-704--coala-projects.netlify.com/#/projects?project=result_reporter_tool","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-02-01T16:55:29Z","lastEditedAt":null,"updatedAt":"2019-02-01T16:55:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NTk1OTY2OQ==","url":"https://github.com/coala/projects/pull/704#issuecomment-475959669","bodyText":"I'm getting a lot confused over coding-phase 3. I'm not able to figure out what has to be done in that phase. Please help me in the last phase also. It would a great help to me.\nTill coding phase 2, the coala results can be converted to various other formats acc. to JUnit, Checkstyle, Clover and TAP. And each of them has its own schema specification/configuration. Also, I've understood how to write a linter bear. But I'm not able to figure out that\n\nwhat does \"Provide various linter with a set of classes\" means? Does that mean, we have to lint over the converted coala results and for that, we have to create a new separate class for each different output format i.e. 4 new classes??\nAlso does \"output formats for their cli\" means that we have to display converted coala results into the CLI?\nAnd, can you please help me know what type of \"handling\" has to be carried out over JSON/XML reports?\n\nSorry if these questions seem to be silly, I just want to get more in deep so that I can research more about them in the right direction","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-24T13:32:05Z","lastEditedAt":null,"updatedAt":"2019-03-24T13:32:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NTk3ODUxMw==","url":"https://github.com/coala/projects/pull/704#issuecomment-475978513","bodyText":"I'm getting a lot confused over coding-phase 3. I'm not able to figure out what has to be done in that phase\n\nJust a kind reminder: the applicant's proposal does not have to follow the rough schedule I proposed. That's just a very rough and simple schedule.\n\nwhat does \"Provide various linter with a set of classes\" means\n\nThis has nothing to do with coala. We want to make our work more meaningful in that our upstream linters can use our work. For example, we provide a library that they can easily use to support different output formats.\n\nAlso does \"output formats for their cli\" means that we have to display converted coala results into the CLI\n\nSame as the answer above.\n\nAnd, can you please help me know what type of \"handling\" has to be carried out over JSON/XML reports\n\nFor example, validation.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTM5MDc2Mg==","createdAt":"2019-03-24T17:37:54Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}},{"id":"MDg6UmVhY3Rpb24zOTc0MzIxMw==","createdAt":"2019-03-28T21:25:34Z","content":"THUMBS_UP","user":{"login":"AkshJain99","name":"Akshit Jain"}}],"createdAt":"2019-03-24T17:03:45Z","lastEditedAt":null,"updatedAt":"2019-03-24T17:03:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzQxODA0Nw==","url":"https://github.com/coala/projects/pull/704#issuecomment-477418047","bodyText":"@AkshJain99 I've answered the same question before (see my comment above)","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTY2MDQ5OQ==","createdAt":"2019-03-28T03:03:42Z","content":"THUMBS_UP","user":{"login":"AkshJain99","name":"Akshit Jain"}}],"createdAt":"2019-03-28T02:16:51Z","lastEditedAt":null,"updatedAt":"2019-03-28T02:16:51Z"}]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false},{"id":"MDU6TGFiZWwxMjE4ODkyMjU4","name":"area/dependencies","color":"96f7bf","default":false}]},{"repoOwner":"coala","repoName":"coala-bears","labels":[{"id":"MDU6TGFiZWwzMjcwNDg3MDQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MDU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjA=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjE=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjI=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjM=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMjczNjcxMTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2Mjg=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Mjg=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Nzg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwzMjg1NDk4MDg=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNjA=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNzU=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjk2MDc1MDg=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDg1MjY=","name":"type/test","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MDg5MTQ=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDkwMDM=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODU=","name":"importance/low","color":"70e870","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODY=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkzNDM=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4MjA=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4Nzk=","name":"type/codestyle","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMjk2MTE5MTA=","name":"status/needs design","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MTI5MjU=","name":"status/needs info","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0MzI=","name":"status/wontfix/accepting patches","color":"555555","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0OTA=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjk2MTkwMDc=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzNDg2NTk2MzE=","name":"area/lintbears","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzNDg2NjY2Mzk=","name":"area/documentation","color":"c5def5","default":false},{"id":"MDU6TGFiZWwzNzM3ODc1MzY=","name":"type/dependencies","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MTMxOTIzMjY=","name":"bear proposal","color":"ADFF2F","default":false},{"id":"MDU6TGFiZWw0MzQ3MDk3MDU=","name":"long-term-project","color":"c5def5","default":false},{"id":"MDU6TGFiZWw0MzYzMTQwNDQ=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM4MDEzOTY=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTI0NDE0NjI=","name":"hacktoberfest","color":"b60205","default":false},{"id":"MDU6TGFiZWw0ODM0OTI0NTY=","name":"area/newsettings","color":"006b75","default":false},{"id":"MDU6TGFiZWw0ODM1MDQ5MzQ=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw1MDkwMjY0MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1MjgxMjIzMjY=","name":"area/genericbears","color":"D01975","default":false},{"id":"MDU6TGFiZWw1NjYwNzE5MDc=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODUzMzI3NDM=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw1OTQ2NzgyMDM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw1OTQ2Nzg1MzM=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWw1OTQ3MzEwMDQ=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjAxNjU4NzE=","name":"area/ci","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjcxMTYzNTY=","name":"type/performance","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2ODA4NDE3NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDE2NzkwNjI=","name":"area/tests","color":"c5def5","default":false},{"id":"MDU6TGFiZWw3NDE2NzYzNDI=","name":"language/ruby","color":"dd27c8","default":false},{"id":"MDU6TGFiZWw3NDY4NzgxOTQ=","name":"status/needs discussion","color":"ead40e","default":false},{"id":"MDU6TGFiZWw4Njc1NzI1Mjk=","name":"area/install","color":"0b14bc","default":false},{"id":"MDU6TGFiZWw4NzU1ODUyMzk=","name":"status/non-free","color":"8f0dbf","default":false},{"id":"MDU6TGFiZWw5MDY3ODUyNjk=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5ODMyMTYyMDQ=","name":"needs rebase","color":"f4cd69","default":false},{"id":"MDU6TGFiZWw5OTg4NjE3NjI=","name":"type/style","color":"168fe0","default":false},{"id":"MDU6TGFiZWwxMDAwNDgxMzgw","name":"type/spelling","color":"50b5f4","default":false},{"id":"MDU6TGFiZWwxMDQzNzk3ODQ0","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMTAxMTE5MjMz","name":"language/c","color":"a0e5e4","default":false},{"id":"MDU6TGFiZWwxMTAxMTMzNDcx","name":"language/go","color":"4345cc","default":false},{"id":"MDU6TGFiZWwxMTAxMTM1MDA2","name":"language/python","color":"0a8474","default":false},{"id":"MDU6TGFiZWwxMTAxMTQ1MDYx","name":"area/globalbears","color":"3cc9a8","default":false},{"id":"MDU6TGFiZWwxMTAxMTc1MjE3","name":"area/nativebear","color":"36c14d","default":false},{"id":"MDU6TGFiZWwxMTAxMTgxMDYx","name":"language/javascript","color":"5abbfc","default":false},{"id":"MDU6TGFiZWwxMTAxMTg4MDY1","name":"language/perl","color":"b867ea","default":false}]},{"repoOwner":"coala","repoName":"documentation","labels":[{"id":"MDU6TGFiZWwzNDcxNjk0NTI=","name":"bug","color":"fc2929","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTM=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTQ=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTU=","name":"help wanted","color":"159818","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTc=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw0Mjc0OTIzNjA=","name":"area/documentation","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjE=","name":"cool and awesome","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjI=","name":"difficulty/medium","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzc=","name":"difficulty/newcomer","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzg=","name":"importance/low","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0Mjc0OTY0NjQ=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDE2Nzc=","name":"status/needs design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDIyNjA=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDE=","name":"area/usability","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDI=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc1MDMzOTg=","name":"importance/high","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0Mjc1MTA5MTA=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MzEwMDExMDM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0MzEwMDExODE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0MzE0MzQ5NzY=","name":"size/S","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0MzE0MzgxNjg=","name":"size/XS","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzE0NTI5ODI=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzIwNTAyMDE=","name":"size/M","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM1Njc4Mzk=","name":"size/L","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw0NDQzODgyODI=","name":"size/XL","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTI0NDIxNDQ=","name":"hacktoberfest","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTYxMTgwNzE=","name":"review carefully!","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTg1NDUwOTI=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MTAyNTE0Nzk=","name":"initiatives/gci","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDQxODE=","name":"status/stale","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NjE4MjQ3MDA=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw4MTg0NDUyNjI=","name":"status/needs info","color":"9bf2cf","default":false},{"id":"MDU6TGFiZWw4MzI2ODAwMzk=","name":"status/needs discussion","color":"f4ab8b","default":false},{"id":"MDU6TGFiZWw4NDcxMDQ2MDk=","name":"area/ci","color":"f49093","default":false},{"id":"MDU6TGFiZWwxMjA4OTMyMDQ0","name":"type/bug","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMjIzMDYwNDc4","name":"area/sphinx","color":"47c3cc","default":false}]},{"repoOwner":"coala","repoName":"projects","labels":[{"id":"MDU6TGFiZWw1MjAwNDU5MzU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5MzY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDE=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4MTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4Mzg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMTI2NDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMzA5ODU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MjAxMzgzMjY=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjAxNDgxNzc=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxNzM1OTQ=","name":"design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw1MjAxOTc5MjE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAyMDYyNTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA0MTEwMTk=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3MTI=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3NjI=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MjE5NDE2MTI=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjQzODgxMzc=","name":"community_team","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTM4ODMyNzI=","name":"Project Proposal","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDM5NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzAzNzE5NDQ=","name":"initiatives/gci","color":"fc7d0f","default":false},{"id":"MDU6TGFiZWw3MzgxODI0MzY=","name":"upstream","color":"ffb5bd","default":false},{"id":"MDU6TGFiZWw3NTE3NjE0NTk=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw4MzYzNjUxNjE=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw4MzcxMjA3OTA=","name":"importance/low","color":"2fe055","default":false},{"id":"MDU6TGFiZWw4MzcxNjY3NTk=","name":"difficulty/medium","color":"9dea67","default":false},{"id":"MDU6TGFiZWw4MzcxNzIzOTI=","name":"importance/medium","color":"f2db30","default":false},{"id":"MDU6TGFiZWw4NjIyMDU3MjQ=","name":"status/needs info","color":"71fcb7","default":false},{"id":"MDU6TGFiZWw4NzgxODM1OTc=","name":"status/blocked","color":"e56994","default":false},{"id":"MDU6TGFiZWw5MTIxODM1MTc=","name":"status/needs design","color":"f9a7df","default":false},{"id":"MDU6TGFiZWwxMDUxNDM0NjAx","name":"status/wontfix","color":"f2a90c","default":false}]},{"repoOwner":"coala","repoName":"devops","labels":[{"id":"MDU6TGFiZWw2MDkyNjQ4MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjQyMjkyMzE=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWw2MjU3NzY1MzM=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWw2MjgxNTMwNjk=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxNTM3MTA=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTM4NzI=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWw2MjgxNTQwODM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjgxNTQzMjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxNTQ4OTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTUwODE=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWw2MjgxNTU0NjE=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWw2MjgxOTMwNTQ=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjgxOTMxNTM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTM4OTE=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTQwMjk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQxMDI=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTQyMDI=","name":"status/invalid","color":"668866","default":false},{"id":"MDU6TGFiZWw2MjgxOTQzMzA=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ1MDg=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ2NTI=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ3NTk=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ5MDg=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTUwMjk=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTUyMjA=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTUzOTA=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjgxOTU3OTU=","name":"area/security","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxOTYwMzQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MjgxOTY5Nzg=","name":"scope/internal","color":"D01975","default":false},{"id":"MDU6TGFiZWw2MjgxOTczNjQ=","name":"area/ops","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjgxOTg4Nzc=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NDk5ODc=","name":"service/venus","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAwNDQ=","name":"service/nginx","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxNTg=","name":"service/cobot","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxODc=","name":"service/cherry-pick-bot","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAzMzU=","name":"type/new service","color":"006b75","default":false},{"id":"MDU6TGFiZWw2Mjg0NTA0NzA=","name":"area/web development","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTE2MDI=","name":"area/communication","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTY3ODQ=","name":"service/landing","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyMjI=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyOTQ=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0MTQ=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0Nzg=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1Mjk=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1NjU=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MzI5MTU0MTY=","name":"service/corobo","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTcyOTQ=","name":"area/CD","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTkwNjM=","name":"service/ikari","color":"ab78ff","default":false},{"id":"MDU6TGFiZWw2MzI5MTkzMzI=","name":"area/monitoring","color":"aaff88","default":false},{"id":"MDU6TGFiZWw2MzI5MTk4MjE=","name":"cool and awesome","color":"aaffdd","default":false},{"id":"MDU6TGFiZWw2ODA4NDM4MTA=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2ODU2MDMyOTc=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw3MzI4OTUxMTk=","name":"initiatives/gci","color":"936ed3","default":false},{"id":"MDU6TGFiZWw5MjY3OTg3OTc=","name":"process/pending_review","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"corobo","labels":[{"id":"MDU6TGFiZWw2MDExMDE3NTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjE=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDEzNTc0Mjk=","name":"importance/low","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2MDEzNTc0ODc=","name":"importance/high","color":"e99695","default":false},{"id":"MDU6TGFiZWw2MDEzNTc1OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MDEzNTc2NzE=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MDEzNTc3NDk=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWw2MDEzOTE3OTY=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MDEzOTMxOTY=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDE0MDQ2Mjc=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MDM2ODcwMTM=","name":"stretch goal","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3Mjk=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3NjU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MTQ2OTYxMzE=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MTUyODM2MTU=","name":"ready","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUyODUyMzI=","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUzNjgxODU=","name":"documentation","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTcwNzUyNDA=","name":"pr available","color":"cccccc","default":false},{"id":"MDU6TGFiZWw2MTg0MTI1ODU=","name":"cool and awesome","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTg0MTMzNTk=","name":"plugin proposal","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2MTg5NjE5MDA=","name":"poll","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTk4NTMxNzU=","name":"design","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjI2MjMyMzE=","name":"decided","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjI3MTg0NTE=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw2MjI3MTg1MDE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjM0MDU1NTE=","name":"difficulty/newcomer","color":"65c8ff","default":false},{"id":"MDU6TGFiZWw2MjQyMzcwMjQ=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjQ3NzY3ODg=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjY3NDQ0MzY=","name":"deployment","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjY4NTIxOTM=","name":"non-existent","color":"ededed","default":false},{"id":"MDU6TGFiZWw2Mjc5NjE1Mjc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjkyODg1NDY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzA0NTUwODk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzIxMzg2ODg=","name":"upstream","color":"b60205","default":false},{"id":"MDU6TGFiZWw2NTc1NjY5MTY=","name":"gsoc2017/phase3","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2ODA4NDM3ODg=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MjY4ODMyMzQ=","name":"initiatives/gci","color":"f79e9f","default":false},{"id":"MDU6TGFiZWw3Mzk0NDIzNzA=","name":"status/cannot reproduce","color":"000000","default":false},{"id":"MDU6TGFiZWw3NDI4NzcxODA=","name":"importance/medium","color":"ddba61","default":false},{"id":"MDU6TGFiZWw3NTg3MDM2MzA=","name":"area/ui","color":"dd02cf","default":false},{"id":"MDU6TGFiZWw3NTg3MDQzNDU=","name":"area/labhub","color":"63ccf9","default":false},{"id":"MDU6TGFiZWw3NTg3MDUyNDY=","name":"area/security","color":"fc6805","default":false},{"id":"MDU6TGFiZWw3NjE3NTA5NTc=","name":"type/markdown","color":"2a0582","default":false},{"id":"MDU6TGFiZWw3NjE3OTU1NzE=","name":"type/regex","color":"d453e2","default":false},{"id":"MDU6TGFiZWw3NjE5NDI5ODM=","name":"area/errbot","color":"ed3d9b","default":false},{"id":"MDU6TGFiZWw3NjE5NDMzNTQ=","name":"backend/gitter","color":"7cf9c1","default":false},{"id":"MDU6TGFiZWw3NjE5NDQwMDg=","name":"backend/zulip","color":"0a546b","default":false},{"id":"MDU6TGFiZWw3NjE5NjI2ODg=","name":"backend/telegram","color":"e26858","default":false},{"id":"MDU6TGFiZWw3NjIwMTE4MTI=","name":"area/config","color":"60a1db","default":false},{"id":"MDU6TGFiZWw3NjIwMTIyNTM=","name":"area/tests","color":"5facd8","default":false},{"id":"MDU6TGFiZWw3NjIwMjkyMTI=","name":"status/needs info","color":"8e081e","default":false},{"id":"MDU6TGFiZWw3NjI0MTgyNzI=","name":"area/documentation","color":"969bdd","default":false},{"id":"MDU6TGFiZWw3NjY2Mzc1ODM=","name":"area/ci","color":"ab04e8","default":false},{"id":"MDU6TGFiZWw5OTg4NjM0Nzc=","name":"type/style","color":"567c09","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5NjE2","name":"hoster/github","color":"e57be5","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5ODMz","name":"hoster/gitlab","color":"bc4c32","default":false}]},{"repoOwner":"coala","repoName":"community","labels":[{"id":"MDU6TGFiZWw3NjYwMTk2MDQ=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDU=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDY=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDc=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDg=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDk=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTE=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NjYyMTU3OTg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw3NjYyMTU4NzE=","name":"initiatives/gci","color":"ff9549","default":false},{"id":"MDU6TGFiZWw3NjYyMTY0Njc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NjYyMzg3OTg=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3NjYzMjMwMjc=","name":"needs design","color":"db81c7","default":false},{"id":"MDU6TGFiZWw3Njc0MjMzMDE=","name":"process/wip","color":"f2d815","default":false},{"id":"MDU6TGFiZWw3Njg2NDc1NDg=","name":"upstream","color":"fcc4c5","default":false},{"id":"MDU6TGFiZWw3Njg3NTEyNzk=","name":"importance/low","color":"9cc6fc","default":false},{"id":"MDU6TGFiZWw3Njg3NTE3Nzc=","name":"importance/high","color":"e0401d","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyMTA=","name":"process/pending review","color":"9fe589","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyNDg=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4Njc2NDE=","name":"status/blocked","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzAxOTkwODc=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw3NzAzMDQ4MTY=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzA0MTk0MTA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzI2MTI0MzU=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzM5NDU4NjU=","name":"importance/medium","color":"ccf945","default":false},{"id":"MDU6TGFiZWw3Nzg1OTkxODY=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Nzg3Mzk5MjY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE1NTY4MzY=","name":"initiatives/gsoc","color":"ed95c1","default":false},{"id":"MDU6TGFiZWw3ODIxMTU0NDM=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODI1Njg2MjA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjI0MDg1NzI=","name":"area/ci","color":"4c95ad","default":false},{"id":"MDU6TGFiZWw5OTg4NjI4MTU=","name":"type/style","color":"93f486","default":false},{"id":"MDU6TGFiZWwxMDA1MjQ0Mjgx","name":"area/tests","color":"7b68dd","default":false},{"id":"MDU6TGFiZWwxMDQ0MDM3Njc3","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMDg3MDEwODA4","name":"area/documentation","color":"f296f0","default":false},{"id":"MDU6TGFiZWwxMDk1NjQxNTQ4","name":"importance/critical","color":"e21f98","default":false}]},{"repoOwner":"coala","repoName":"gci-leaders","labels":[{"id":"MDU6TGFiZWw3NjkyMjg1NTg=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NTk=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjA=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjE=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjI=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjM=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjQ=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjU=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw3Njk1ODQ5MjM=","name":"difficulty/low","color":"59db91","default":false},{"id":"MDU6TGFiZWw3Njk1ODQ5OTY=","name":"initiatives/gci","color":"98e9f9","default":false},{"id":"MDU6TGFiZWw3Njk1ODY4NTA=","name":"difficulty/newcomer","color":"ffcce2","default":false},{"id":"MDU6TGFiZWw3Njk1OTg5ODY=","name":"difficulty/medium","color":"ff91cd","default":false},{"id":"MDU6TGFiZWw3Njk2NDAyNjg=","name":"difficulty/high","color":"a667f7","default":false},{"id":"MDU6TGFiZWw3Njk2NDExNDk=","name":"status/blocked","color":"cc4158","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzMjE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzNjI=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk3MDg3Mjg=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw3Njk5MzE3MTA=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzAxMDE1MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw3NzA3MzgyMDU=","name":"area/ui","color":"442cf7","default":false},{"id":"MDU6TGFiZWw3NzA4MTQwMjk=","name":"type/bug","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzA5NDg4ODk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzEwOTQ3Njg=","name":"area/i18n","color":"ffccee","default":false},{"id":"MDU6TGFiZWw3NzQ3MTc4OTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzQ4ODI2ODM=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzYyNjk4NzM=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE0NTgxMTg=","name":"importance/low","color":"fcf1a6","default":false},{"id":"MDU6TGFiZWw3ODQxMDY0NDM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5NDc0NjU=","name":"importance/high","color":"dd007d","default":false},{"id":"MDU6TGFiZWwxMDUxMjg1NDUx","name":"importance/critical","color":"ed0e79","default":false},{"id":"MDU6TGFiZWwxMTE1NTM4NDMy","name":"importance/medium","color":"c595db","default":false}]},{"repoOwner":"coala","repoName":"gh-board","labels":[{"id":"MDU6TGFiZWw3NTM5MzE2OTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTg=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTk=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDA=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDE=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDI=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NTU4MTU1MzQ=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NzQyNDUxNDA=","name":"difficulty/low","color":"07eded","default":false},{"id":"MDU6TGFiZWw3NzQyNDU1NDI=","name":"initiatives/gci","color":"e5ce95","default":false},{"id":"MDU6TGFiZWw3ODU0MzEyMDI=","name":"difficulty/medium","color":"d30a8d","default":false},{"id":"MDU6TGFiZWw4NDA0NzA4Njk=","name":"process/wip","color":"ead483","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2MTg=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2OTE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NjI0NjY2NTA=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAwMjc1NTE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAxOTA1NTk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAyMzc5NDc=","name":"difficulty/high","color":"e88e53","default":false},{"id":"MDU6TGFiZWw5MjIzNjc2Nzg=","name":"importance/medium","color":"65f23e","default":false},{"id":"MDU6TGFiZWw5MjM2MTYxMTQ=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5ODk3ODk=","name":"upstream","color":"6ded77","default":false},{"id":"MDU6TGFiZWw5MzA1Mzc3NzI=","name":"importance/low","color":"1394a0","default":false},{"id":"MDU6TGFiZWw5MzgzMTQ4MjE=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTg5MTUwMDI=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk1OTUyODA=","name":"difficulty/newcomer","color":"33a7bf","default":false},{"id":"MDU6TGFiZWwxMDExNjQ0Mjg5","name":"area/dependencies","color":"ef88a2","default":false},{"id":"MDU6TGFiZWwxMDY1MDEyNTI5","name":"in progress","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"coala-html","labels":[{"id":"MDU6TGFiZWwzMjY1MzQ5Nzg=","name":"type/bug","color":"fc2929","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5Nzk=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODE=","name":"status/wontfix/accepting patches","color":"777777","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODI=","name":"status/invalid","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODM=","name":"status/need-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODQ=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NTU=","name":"difficulty/newcomer","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NjQ=","name":"difficulty/low","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3OTU=","name":"difficulty/medium","color":"fef2c0","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4MzE=","name":"difficulty/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4NzU=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzM=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzQ=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzODI=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTA=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTE=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTk=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMzI5NTk1MTI=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWwzMzMxMzU3NDk=","name":"status/blocked","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzMyNDI0NDU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMzMzNDE1OTY=","name":"status/needs design","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYyMDYxOTQ=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYzMTg0NTQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2ODA4NDQzNjM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzEwMjg5NTk=","name":"initiatives/gci","color":"f78589","default":false}]},{"repoOwner":"coala","repoName":"landing-frontend","labels":[{"id":"MDU6TGFiZWw1MjE2NDU4MTA=","name":"type/bug","color":"ee0701","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTE=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTQ=","name":"status/wontfix/not happening","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTU=","name":"needs-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTY=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjE3MDE0OTc=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjE3MDE1MzY=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MzE1MzAwNjE=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MzE1OTEwMDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE2MTQzODU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE3NDgxNzc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE4MzA2ODg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzIxNzM0NTY=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1NTk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1OTE=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjM0NzM5Mjg=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2NjkxNjAwOTA=","name":"status/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjkxNjEwODA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODc1ODI1ODg=","name":"area/documentation","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDU3ODgwNzM=","name":"needs-discussion","color":"aa52aa","default":false},{"id":"MDU6TGFiZWw3MzAzNTE0NDc=","name":"initiatives/gci","color":"f2d5a4","default":false},{"id":"MDU6TGFiZWw3NDgzMDE3MzE=","name":"difficulty/high","color":"f762d7","default":false},{"id":"MDU6TGFiZWw3ODQ4Mzc1NjQ=","name":"difficulty/medium","color":"dbc255","default":false},{"id":"MDU6TGFiZWw3ODYxOTA3MzM=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4Njc1Nzc2MzI=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw4ODM0MDIxNDI=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4OTU1MjU0NDM=","name":"enhancement","color":"097287","default":true}]},{"repoOwner":"coala","repoName":"coalaCSS","labels":[{"id":"MDU6TGFiZWw2MDk0OTkxNzc=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzg=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzk=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODA=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODE=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODI=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODM=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw2MzAzNTEzNDg=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzAzNTE1MjU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgyNTE=","name":"area/landing-frontend","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgzMzY=","name":"area/projects","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MzQ3OTg0ODU=","name":"design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MzQ3OTkzMjk=","name":"importance/critical","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mzk0NDkwNTc=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODEwMjUyMzA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzMwNDk1MjU=","name":"initiatives/gci","color":"ee79f7","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE0Nzc=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE2MDY=","name":"importance/low","color":"99c1dd","default":false},{"id":"MDU6TGFiZWw3Mzk1MDA1OTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NTEzMzIxMzA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDkxMjMwMjk=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw4NDkxMjM4OTY=","name":"difficulty/medium","color":"0052cc","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2019-05-27T12:04:20Z"},{"repoOwner":"coala","repoName":"coala-bears","isPrivate":false,"lastSeenAt":"2019-05-29T04:19:31Z"},{"repoOwner":"coala","repoName":"documentation","isPrivate":false,"lastSeenAt":"2019-04-01T13:29:55Z"},{"repoOwner":"coala","repoName":"projects","isPrivate":false,"lastSeenAt":"2019-05-28T07:28:36Z"},{"repoOwner":"coala","repoName":"devops","isPrivate":false,"lastSeenAt":"2018-08-18T10:36:44Z"},{"repoOwner":"coala","repoName":"corobo","isPrivate":false,"lastSeenAt":"2019-05-25T13:45:48Z"},{"repoOwner":"coala","repoName":"community","isPrivate":false,"lastSeenAt":"2019-05-23T17:36:57Z"},{"repoOwner":"coala","repoName":"gci-leaders","isPrivate":false,"lastSeenAt":"2019-02-24T20:30:03Z"},{"repoOwner":"coala","repoName":"gh-board","isPrivate":false,"lastSeenAt":"2019-02-08T15:22:21Z"},{"repoOwner":"coala","repoName":"coala-html","isPrivate":false,"lastSeenAt":"2019-05-23T15:46:10Z"},{"repoOwner":"coala","repoName":"landing-frontend","isPrivate":false,"lastSeenAt":"2019-04-15T17:45:47Z"},{"repoOwner":"coala","repoName":"coalaCSS","isPrivate":false,"lastSeenAt":"2018-11-23T05:07:32Z"}]}