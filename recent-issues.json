{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535895139000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5745","number":5745,"title":"Imported classes should be arranged lexicographically","body":"Classes being imported in coala/coalib/bearlib/languages/__init__.py file should be arranged alphabetically.\nA good newcomer issue.","comments":0,"createdAt":"2018-09-01T23:10:26Z","updatedAt":"2018-09-02T13:32:19Z","closedAt":null,"state":"open","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535894816000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5739","number":5739,"title":"Add language for scss","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:03Z","updatedAt":"2018-09-02T13:26:56Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"rishabhgarg25699","avatarUrl":"https://avatars1.githubusercontent.com/u/34981401?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535847517000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5740","number":5740,"title":"Add language for SASS","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:30Z","updatedAt":"2018-09-02T00:18:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753851000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5726","number":5726,"title":"Add language file for D","body":"","comments":0,"createdAt":"2018-08-20T08:25:23Z","updatedAt":"2018-08-20T08:30:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535416866000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5730","number":5730,"title":"Add json language definition","body":"A JSON Language definition for coala in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions","comments":0,"createdAt":"2018-08-25T06:49:06Z","updatedAt":"2018-08-28T00:41:06Z","closedAt":"2018-08-28T00:41:06Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535808813000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5737","number":5737,"title":"Discard ** in ignore = foo/**","body":"An ignore glob of ignore = foo/** will walk the entire structure of foo/, which is silly.\nThat is #3655 .\nBut a quicker problem to solve : ignore = foo/** can be rewritten as ignore = foo/ and suddenly it doesnt walk foo/ .\ncoala should recognise foo/** in the ignore and warn the user , and then remove the**` internally.","comments":2,"createdAt":"2018-08-29T12:25:03Z","updatedAt":"2018-09-01T13:33:33Z","closedAt":"2018-09-01T13:33:33Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535888951000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5738","number":5738,"title":"Fix mistake in Writing_Good_Commits.rst","body":"On line 36 it should be Closes instead of Fixes\nProbably a good newcomer issue.","comments":2,"createdAt":"2018-08-30T01:07:20Z","updatedAt":"2018-09-02T11:49:11Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533576774000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5695","number":5695,"title":"Add graphQL in language definitions","body":"https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions","comments":0,"createdAt":"2018-08-06T17:31:30Z","updatedAt":"2018-08-06T17:32:54Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991654000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5697","number":5697,"title":"Support File Proxies","body":"cola can only perform analysis on disk files as of now, it should also support analysis on in-memory files. This should be done using File Proxies so that it fits into current ecosystem.\nRefer: cEP-0028","comments":1,"createdAt":"2018-08-08T14:33:27Z","updatedAt":"2018-08-11T12:47:34Z","closedAt":"2018-08-11T12:47:34Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533947025000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5702","number":5702,"title":"Add meta-review process into newcomer guide","body":"Newcomers should do at least one meta-review or receive a meta-review before becoming developers.\nPlease assign this to me ;)","comments":0,"createdAt":"2018-08-10T13:57:23Z","updatedAt":"2018-08-11T00:23:45Z","closedAt":"2018-08-11T00:23:45Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534320371000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5708","number":5708,"title":"Files to be checked debug log entry is emitting a message for every file","body":"59f78c1 resulting in very volumous log entries for each file.","comments":0,"createdAt":"2018-08-15T07:25:05Z","updatedAt":"2018-08-15T08:06:11Z","closedAt":"2018-08-15T08:06:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535922225000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5710","number":5710,"title":"Create separate language definitions for varieties of Shell","body":"There is one language 'Shell' in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions .\nFor coala/coala-bears#2665 , we need at least the four varieties supported by ShellCheck","comments":2,"createdAt":"2018-08-15T09:13:07Z","updatedAt":"2018-09-02T21:03:45Z","closedAt":"2018-09-02T21:03:45Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535886247000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5722","number":5722,"title":"LocalBearTestHelper.check_results allow regex as message text","body":"Sometimes the message text varies based on linter version, as we see at coala/coala-bears#2678,  or is incredibly long and not helpful to match the entire text.\nIt should be possible to specify only a regex to match the message text.","comments":2,"createdAt":"2018-08-17T13:48:14Z","updatedAt":"2018-09-02T11:04:07Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535046202000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5724","number":5724,"title":"Release notes not published at http://api.coala.io","body":"https://github.com/coala/coala/blob/master/RELEASE_NOTES.rst is not published in the api docs\n(or in the user docs, but that will be a bit more effort)","comments":5,"createdAt":"2018-08-19T13:22:57Z","updatedAt":"2018-08-23T17:43:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534750954000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5725","number":5725,"title":"Listing bears failes with ImportError: attempted relative import with no known parent package","body":"Overview Description\nListing bears failes with ImportError: attempted relative import with no known parent package\nSteps to Reproduce\n\npip3 install --user coala-bears\npython3.6 ~/.local/lib64/python3.6/site-packages/coalib/coala.py -B\n\nActual Results\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\nGlobalBear\nLocalBear\n\n\nExpected Results\nA list of bears.\nReproducibility\nFull\nAdditional Information:\n\ncoalib version 0.11.0\ncoala_utils 0.6.7","comments":0,"createdAt":"2018-08-20T07:41:20Z","updatedAt":"2018-08-20T07:42:34Z","closedAt":null,"state":"open","user":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"owner":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533378692000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5667","number":5667,"title":"Can not invoke coala as a Python modules","body":"$ python3.7 -m coala --bears TextLintBear --files README.rst \n/bin/python3.7: No module named coala\npython3.7 -m coalib --bears TextLintBear --files README.rst \n/bin/python3.7: No module named coalib","comments":8,"createdAt":"2018-07-26T09:09:26Z","updatedAt":"2018-08-04T10:31:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535844501000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5668","number":5668,"title":"Add Jekyll Liquid language","body":"We use Liquid language in Jekyll sites.\nWe should have a language definition for it.","comments":5,"createdAt":"2018-07-26T10:53:09Z","updatedAt":"2018-09-01T23:28:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534329612000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5674","number":5674,"title":"TestUtilities.execute_coala should check for timeouts","body":"If there was a timeout during a test using execute_coala, pytest-timeout will emit Failed: Timeout >35.0s (number may change) and the timeout failure will be lost inside execute_coala/bear_test_module.\nThe test module will continue with the assertions, and cause various errors, as these coala output will be in a strange incomplete state.\nThis is one of the problems affecting #5571 and #5390\nA quick workaround is to detect Failed: Timeout is stderr inside execute_coala and re-raise the problem with the complete stderr and stdout for debugging purposes.","comments":4,"createdAt":"2018-07-28T02:19:42Z","updatedAt":"2018-08-15T10:40:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"starlord1311","avatarUrl":"https://avatars3.githubusercontent.com/u/32419214?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535815764000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5676","number":5676,"title":"Fix the API breakage problem because of `debugger` flag in bear base class","body":"For further information https://github.com/coala/coala/pull/5599/files#r203964627","comments":8,"createdAt":"2018-07-28T10:40:37Z","updatedAt":"2018-09-01T15:29:24Z","closedAt":"2018-09-01T15:26:40Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533965471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5683","number":5683,"title":"deprecate_settings to support splitting a value to two new args","body":"I would like to split the checkstyle_configs arg into two args, as they are two different data-types.\nIt seems @deprecate_settings and FunctionMetadata cant support this, as they expect a deprecated arg to only be used once.\nHere is a more detailed look at what I tried to do, and failed.\ndef get_name(value):\n    if value in known_checkstyles.keys():\n        return value\n\ndef get_path(value):\n    if value not in known_checkstyles.keys():\n        return value\n\nclass CheckstyleBear:\n    ...\n\n    @deprecate_settings(\n        java_style_name=('checkstyle_configs',\n                         get_name),\n        checkstyle_config=('checkstyle_configs',\n                           get_path),\n    )\n    def create_arguments(\n            self, filename, file, config_file,\n            checkstyle_config: path = None,\n            java_style_name: CheckstyleStyle = 'google',\n            ...","comments":0,"createdAt":"2018-07-31T02:49:26Z","updatedAt":"2018-08-11T05:31:11Z","closedAt":"2018-08-11T05:31:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533555354000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5685","number":5685,"title":"Inappropriate prompt message","body":"When coala is invoked with --single-action, a menu is shown with a prompt saying [ ] Enter number (Ctrl-D to exit): but valid input is a letter, not a number.\nNeeds a fix in:\nSTR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format('Z' if platform.system() == 'Windows' else 'D')\nDifficulty: Newcomer","comments":6,"createdAt":"2018-08-04T09:35:38Z","updatedAt":"2018-08-06T11:35:54Z","closedAt":"2018-08-06T11:35:54Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991680000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5689","number":5689,"title":"Add tag based section filters.","body":"We need to have a way using which sections can be tagged and specific tags can be invoked. For example:\n[samples]\ntags = tag_one\nbears = SomeLongBear\n\n[other_sample]\nbears = SomeLongBear\n\nWhen run using coala --tags tag_one tag_two only samples section should be invoked.\nPart of cEP-0028.","comments":1,"createdAt":"2018-08-05T14:41:33Z","updatedAt":"2018-08-11T12:48:00Z","closedAt":"2018-08-11T12:48:00Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533581367000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5692","number":5692,"title":"Add XML language in definitions","body":"c.f https://gitlab.com/coala/bears/coala-antlr/merge_requests/25/diffs?commit_id=36142dfb4456b6dd9ee4255e042ab313eab894b2#note_92551492\nRequired by XMLIndentBear","comments":1,"createdAt":"2018-08-05T16:36:07Z","updatedAt":"2018-08-06T18:49:27Z","closedAt":"2018-08-06T18:49:27Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533541805000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5694","number":5694,"title":"Modify `Linter` module for aspects","body":"Linter module needs to be modified so that the Result object makes use of aspects. It can be made similar to the implementation in the Result module plus more features can be added to make it even more usable.","comments":0,"createdAt":"2018-08-06T07:45:07Z","updatedAt":"2018-08-06T07:50:05Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421399000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5603","number":5603,"title":"Add alias Node to language JavaScript","body":"'node' is a common alias for JavaScript.","comments":0,"createdAt":"2018-07-07T04:41:35Z","updatedAt":"2018-08-28T01:56:39Z","closedAt":"2018-08-28T01:56:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535905243000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5604","number":5604,"title":"docs: Replace the Basic rST link with a working link","body":"Steps to reproduce:\n\nHead to https://api.coala.io/en/latest/Developers/Useful_Links.html.\nClick on the Basic rST in rST-Links\n\nThe page would show a permission denied error.\nReplace the link with a proper working link.","comments":2,"createdAt":"2018-07-07T08:08:02Z","updatedAt":"2018-09-02T16:20:43Z","closedAt":"2018-07-09T07:34:08Z","state":"closed","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"assignee":{"login":"m3rc3n4ry","avatarUrl":"https://avatars2.githubusercontent.com/u/29359259?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148882000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5605","number":5605,"title":"Newcomers_Guide.rst: display \"move on to more difficult issues\" message as note block","body":"On Newcomers Guide page there is a message saying:\n\nNote: After you have solved a difficulty/newcomer issue, please don’t take up any more. Instead, move on to more difficult issues.\n\nAs this message starts with \"Note:\", maybe it would be more logical to have this marked as \"Note\" block (similar to \"Don’t just fix a newcomer issue!\" message which is lower on that page).","comments":1,"createdAt":"2018-07-07T15:08:50Z","updatedAt":"2018-08-24T22:14:42Z","closedAt":null,"state":"open","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"assignee":{"login":"InquiridorTechie","avatarUrl":"https://avatars1.githubusercontent.com/u/31249906?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421576000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5621","number":5621,"title":"Create doc page about moban","body":"moban is now fairly established in coala repos.\nIt is time for some docs.\nEspecially about how to do sync PR whenever it is needed.","comments":5,"createdAt":"2018-07-10T14:16:38Z","updatedAt":"2018-08-28T01:59:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535886147000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5636","number":5636,"title":"Python 3.3 unsupported check failing due to pytest 3.6.1 not available for that version","body":"Collecting pytest~=3.6.1 (from -r requirements.txt (line 20))\n  Could not find a version that satisfies the requirement pytest~=3.6.1 (from -r requirements.txt (line 20)) (from versions: 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.3.5, 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.7.0, 2.7.1, 2.7.2, 2.7.3, 2.8.0, 2.8.1, 2.8.2, 2.8.3, 2.8.4, 2.8.5, 2.8.6, 2.8.7, 2.9.0, 2.9.1, 2.9.2, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.1.0, 3.1.1, 3.1.2, 3.1.3, 3.2.0, 3.2.1, 3.2.2, 3.2.3, 3.2.4, 3.2.5)\nNo matching distribution found for pytest~=3.6.1 (from -r requirements.txt (line 20))\n\nSee https://travis-ci.org/coala/coala/builds/404413480 for example","comments":0,"createdAt":"2018-07-17T09:02:11Z","updatedAt":"2018-09-02T11:02:27Z","closedAt":"2018-09-02T11:02:27Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533312840000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5637","number":5637,"title":"Make `LocalBearTestHelper` compatible with aspects","body":"LocalBearTestHelper needs to be modified to use aspects as well in order to test aspect functionality in bears.","comments":0,"createdAt":"2018-07-18T07:05:34Z","updatedAt":"2018-08-03T16:14:00Z","closedAt":"2018-08-03T16:14:00Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583275000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5442","number":5442,"title":"CachingUtilities.pickle_load and .pickle_dump docstring refers to non-existant filename","body":"Docstring is\ndef pickle_load(log_printer, identifier, fallback=None):\n    \"\"\"\n    Get the data stored in ``filename`` present in the user\n    config directory. Example usage:\n    ...\n    \"\"\"\nBut filename is not a parameter.  A better description is needed to explain which file is loaded.\nThe same applies to pickle_dump.","comments":5,"createdAt":"2018-05-05T05:16:49Z","updatedAt":"2018-08-29T22:54:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535812834000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5508","number":5508,"title":"Undeclared coalib dependency on pytest-timeout","body":"coalib currently depends on pytest-timeout, which isnt listed as a dependency in requirements.txt\n$ git grep pytest coalib/\ncoalib/testing/LocalBearTestHelper.py:import pytest\ncoalib/testing/LocalBearTestHelper.py:    @pytest.mark.timeout(timeout)\n\nThis was done in 328bce6, and released in 0.9.0.\nIt originally came from coala/coala-bears@9d02f80\nWe would not want to add pytest-timeout or even pytest in the dependencies of coalib, as that makes any enviroment with coala dicate the test environment versions that the coala user must use, which may conflict with their own needs.\nPossibly we need to move the test helpers to a separate repo, in order to avoid our test needs poluting the environment of our users.","comments":1,"createdAt":"2018-06-09T23:22:37Z","updatedAt":"2018-09-01T14:40:34Z","closedAt":"2018-09-01T14:40:34Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534335534000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5509","number":5509,"title":"Incorrect syntax in HelloWorldBear","body":"Incorrect syntax\nlogging.debug(\"Hello World! Checking file\", filename, \".\")\nhttp://api.coala.io/en/latest/Developers/Writing_Native_Bears.html#a-hello-world-bear","comments":14,"createdAt":"2018-06-10T00:13:00Z","updatedAt":"2018-08-15T12:18:54Z","closedAt":"2018-06-15T18:24:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533994812000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5510","number":5510,"title":"Typo in parse_cli","body":"docstring and function signature for parse_cli method uses variable name comment_seperators, should be comment_separators to fix spelling and to align with function signature of Setting class definition.\nProbably a good newcomer issue.","comments":10,"createdAt":"2018-06-10T00:37:26Z","updatedAt":"2018-08-11T13:40:12Z","closedAt":"2018-08-11T13:40:12Z","state":"closed","user":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"owner":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533963951000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5515","number":5515,"title":"Create taste `min_file_length`","body":"Create a taste min_file_length (under FileLength aspect) corresponding to LineCountBear setting min_lines_per_file https://github.com/coala/coala-bears/blob/master/bears/general/LineCountBear.py#L21.\nIt can be of the same format as the taste max_file_length as per the cEP https://github.com/coala/cEPs/blob/master/cEP-0010.md.","comments":0,"createdAt":"2018-06-13T04:40:57Z","updatedAt":"2018-08-11T05:05:51Z","closedAt":"2018-08-11T05:05:51Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753145000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5519","number":5519,"title":"Rename the `Formatting` aspect of the doctest","body":"The Formatting aspect in the doctests (here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/root.py#L18) needs to be renamed to some crazy name as a workaround till #5518 is resolved.","comments":4,"createdAt":"2018-06-13T10:09:57Z","updatedAt":"2018-08-20T08:19:05Z","closedAt":"2018-08-20T08:19:04Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813657000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5532","number":5532,"title":"Multiple += in single settings section","body":"The following should work\n[foo]\nignore += blah\nignore += baz","comments":10,"createdAt":"2018-06-16T04:13:00Z","updatedAt":"2018-09-01T14:54:17Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535708043000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5537","number":5537,"title":"Add module docstrings to core nextgen components","body":"As part of #5359 , nextgen core component (coalib/core/) needs module docstrings which explain the purpose of each module.\nThey should conform with pep257, and be tested with pydocstyle.","comments":2,"createdAt":"2018-06-17T03:48:18Z","updatedAt":"2018-08-31T09:34:03Z","closedAt":"2018-08-31T09:34:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533484589000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5550","number":5550,"title":"Improve the Review Doc","body":"Recently I saw this happen #5521 (comment)\nBoth the duplicate PRs had reviews from developers even I was about to review it when I found out that both the newcomers didn't ask for assignment on the related issue thread.\nMaybe we should add a few points to our review docs http://api.coala.io/en/latest/Developers/Review.html#for-the-reviewers that the reviewers should check for whether the author asked for assignment or not and what to do in case there are duplicate PRs for the same issue and neither have been assigned to their respective authors (imo all of the unassigned ones should be closed)\nThis seems like a newcomer issue","comments":2,"createdAt":"2018-06-21T15:48:13Z","updatedAt":"2018-08-05T15:56:29Z","closedAt":null,"state":"open","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533997034000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5567","number":5567,"title":"Add `escape_quotes` to language definitions","body":"escape_quotes (like \\\", \\' and \"\", '') need to be added to the language definition as per the language compatibility and preference. This will be helpful for designing respective tastes for the QuotesBear as well as for the usage in the bear itself.","comments":1,"createdAt":"2018-06-26T04:44:19Z","updatedAt":"2018-08-11T14:17:14Z","closedAt":"2018-08-11T14:17:14Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5574","number":5574,"title":"Create 'unsupported' language definitions for languages which do not use `\\` as escape sequence","body":"https://gitlab.com/coala/coala-utils/issues/64 shows that escape char \\ is hard-wired into many functions and can not be easily removed.\nTo prevent bugs, we need coalang files for languages which do not use \\ as the escape character, and those files need to clearly indicate that the language is not supported, with a comment explaining why.","comments":0,"createdAt":"2018-06-27T13:59:23Z","updatedAt":"2018-09-01T14:52:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813921000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5310","number":5310,"title":"Result.py: Add docstring regarding the case that line or column is None","body":"The output generated by coala can have line being None or column being None.\ncolumn = None means there is an error with the whole line.\nline = None means the whole file. The reason behind it is that it's an unknown line means it can occur anywhere in the file.\nAll combinations with None values and numbers for line and column are allowed, except line=None and column=<some number>\nThis should be clarified in the documentation.\n(ref: http://api.coala.io/en/latest/coalib.results.html#module-coalib.results.Result)","comments":2,"createdAt":"2018-04-04T04:13:32Z","updatedAt":"2018-09-01T14:58:41Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533790471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5329","number":5329,"title":"Diff.py: Update ``split_diff`` docstring","body":"In the docstring of split_diff function, Line 323 should be updated to - If ``-1`` is given, every change....\nThis is needed to prevent bear developers from using any arbitrary negative value (and use a common value) in order to ease out the process of implementing changes to the current behavior in future.\ndifficulty/newcomer\narea/documentation","comments":5,"createdAt":"2018-04-06T15:29:52Z","updatedAt":"2018-08-09T04:54:31Z","closedAt":"2018-08-09T04:54:31Z","state":"closed","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"assignee":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534727663000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5333","number":5333,"title":"Make all blocks even colored in Newcomers Guide","body":"See #5119\nThe grey colored patches over yellow background are due to the extra colon before the exemplar commands. Just remove one colon and it will look fine.","comments":17,"createdAt":"2018-04-07T11:45:51Z","updatedAt":"2018-08-20T01:14:23Z","closedAt":null,"state":"open","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533471909000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5341","number":5341,"title":"Processing.instantiate_processes: Remove superfluous parameter in inner function call to `collect_files`","body":"The None in here is unnecessary:\n    filename_list = collect_files(\n        glob_list(section.get('files', '')),\n        None,\n        ...","comments":4,"createdAt":"2018-04-08T12:17:06Z","updatedAt":"2018-08-05T12:25:09Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"riddhyasona","avatarUrl":"https://avatars1.githubusercontent.com/u/32356489?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813846000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5345","number":5345,"title":"Shouldn't be getting Executing section cli... when [cli] is empty","body":"","comments":0,"createdAt":"2018-04-08T16:54:01Z","updatedAt":"2018-09-01T14:57:26Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533552560000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5389","number":5389,"title":"Remove E133, E242 and E303 from pycodestyle_ignore list of .coafile","body":"These 2 checks are important to select and will not affect any code.\ndifficulty/newcomer","comments":7,"createdAt":"2018-04-15T14:40:05Z","updatedAt":"2018-08-06T10:49:20Z","closedAt":"2018-08-06T10:49:20Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535425850000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5398","number":5398,"title":"\"filters\" rewrite","body":"Foremost,\n[['language', 'c', 'java'], ['can_fix', 'syntax']]\n\nis just wrong on every level.\nVery worst case it should be tuples, not lists.\nHowever it should be a dict, or OrderedDict if the order matters.\n{'language': ['c', 'java'], 'can_fix': 'syntax'}\n\nAnd better yet it should be a proper class, so that it can be used in type annotations.\nIn some places this 'structure' is given argument name filters, which hints it may contain multiple items.\nIn other places (e.g. apply_filter) it is filter_name.\nAnd for is_valid_filter, the arg name is filter, which is a builtin function.","comments":6,"createdAt":"2018-04-17T06:25:33Z","updatedAt":"2018-08-28T03:10:50Z","closedAt":"2018-08-28T03:10:50Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535472169000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5403","number":5403,"title":"Add git commit to Newcomers guide","body":"Part of Step 4 (Sending Your Changes) is \"create a commit\"\nBut the command to do this is not shown.","comments":15,"createdAt":"2018-04-18T22:14:46Z","updatedAt":"2018-08-28T16:02:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813739000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5432","number":5432,"title":"Writing_Documentation.rst: root directory --> docs directory","body":"difficulty/newcomer","comments":0,"createdAt":"2018-04-29T05:18:05Z","updatedAt":"2018-09-01T14:55:39Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535081523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5109","number":5109,"title":"Writing native bears tutorial: use the `format` string method in an example","body":"In the first example code of the tutorial \"Guide to Writing a Native Bear\" (in the section \"A Hello World Bear\"), the call to debug should be passed one argument: a string that would be formatted using the methode format.","comments":21,"createdAt":"2018-01-24T18:02:15Z","updatedAt":"2018-08-24T03:32:03Z","closedAt":"2018-08-24T03:32:02Z","state":"closed","user":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"owner":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534079847000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5188","number":5188,"title":"persistent_hash: Missing support for collection types with not guaranteed iteration order","body":"Like dict and set. sorted can be used to sort the data beforehand.","comments":14,"createdAt":"2018-02-19T22:31:05Z","updatedAt":"2018-08-12T13:17:27Z","closedAt":"2018-08-12T13:17:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811028000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5202","number":5202,"title":"In `ask_for_action_and_apply()`, if `apply_single` is non-False, function should return when match is found","body":"In the function ask_for_action_and_apply() in ConsoleInteraction.py, if the apply_single parameter is non-False, then the for loop inside it iterates through the entire metadata_list before returning False.\nIMHO we should include a break statement inside the if block (which is in the for loop) such that the function may return after a match is found because there is no need to go through the remaining actions in metadata_list.","comments":15,"createdAt":"2018-02-23T18:17:22Z","updatedAt":"2018-09-01T14:10:28Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535396095000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4861","number":4861,"title":"ConsoleInteractionTest.test_ask_for_actions_and_apply is defined twice","body":"Just like #4859 and also useful for properly testing of PRs like #4179\ncc @mrtes @Nosferatul @Adrianzatreanu @yukiisbored","comments":8,"createdAt":"2017-11-12T15:29:04Z","updatedAt":"2018-08-27T18:54:55Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"pkcod","avatarUrl":"https://avatars3.githubusercontent.com/u/29246710?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148976000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4904","number":4904,"title":"docs: Explain unack usage explicitly","body":"Explain that unack is used for disapprove commit that is ack-ed by someone else.\ndifficulty/newcomer\nOpened by @mamat-rahmat at Gitter","comments":7,"createdAt":"2017-11-24T01:58:29Z","updatedAt":"2018-08-24T22:16:16Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"darthgera123","avatarUrl":"https://avatars1.githubusercontent.com/u/30871411?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535581277000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4604","number":4604,"title":"Write a Mesos scheduler for coala!","body":"Distributed code checking! Imagine running complex analysis on the Linux repo, but instead of taking 2 days, it takes 1h :)\nThis package may be the choice for the Mesos Framework API:\nhttps://github.com/daskos/mentor","comments":2,"createdAt":"2017-08-01T14:32:06Z","updatedAt":"2018-08-29T22:21:17Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/very-high","color":"e11d21"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534985203000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4188","number":4188,"title":"argparse.ArgumentParser is wrongly named ArgParser several times","body":"(In doc strings)\nRealized while reviewing: #4161 (comment)\n> grep -R ArgParser coalib\ncoalib/coala.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/coala_main.py:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/coala_main.py.orig:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/misc/BuildManPage.py:            --parser=coalib.parsing.DefaultArgParser:default_arg_parser\ncoalib/parsing/CliParsing.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/parsing/CliParsing.py:    :param arg_parser:                  Instance of ArgParser that is used to\ncoalib/parsing/DefaultArgParser.py:    This function creates an ArgParser to parse command line arguments.\ncoalib/parsing/DefaultArgParser.py.orig:    This function creates an ArgParser to parse command line arguments.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:  An ``ArgParser`` object.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:       Instance of ArgParser that is used to parse\n\nBut actually argparse.ArgumentParser is meant there. So those occurrences should be changed accordingly to clearly know what is meant. Otherwise it looks like some coala-internal ArgParser class\n@Udayan12167 @supergr35 @JohnS-01","comments":14,"createdAt":"2017-05-07T19:55:11Z","updatedAt":"2018-08-23T00:46:43Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534589257000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4090","number":4090,"title":"Replace pytest-timeout with pytest-faulthandler","body":"https://pypi.python.org/pypi/pytest-faulthandler activates on a timeout, but dumps out much more useful info.\nNot sure we want this, as mostly our timeouts are network timeouts, and the cause is fairly self-evident.\nSee docker timeout issues.\nKeeping this issue open as a place to record any new timeouts we encounter, to see if there is occasions we need more info than pytest-timeout provides.","comments":1,"createdAt":"2017-04-11T03:11:53Z","updatedAt":"2018-08-18T10:47:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534324248000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3807","number":3807,"title":"An automated way to measure speed-up over time","body":"I was learning about Amdahl's law today and I thought it'd be neat to have a graphical representation of how fast coala has been over time. A good measure would be running coala on the coalib codebase and logging the completion time for each commit progressively.","comments":7,"createdAt":"2017-02-28T11:56:27Z","updatedAt":"2018-08-15T09:10:48Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534350610000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3843","number":3843,"title":"Git Basics: Mention Xcode for MacOS","body":"Following on from #3256 , the macos note should mention that git may be installed via Xcode.\nhttps://www.atlassian.com/git/tutorials/install-git#mac-os-x\nXcode has other useful tools for developers, so it should be a preferred and recommended way to get these tools.","comments":1,"createdAt":"2017-03-03T15:28:47Z","updatedAt":"2018-08-15T16:30:10Z","closedAt":"2018-08-15T14:19:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Rddhima-R","avatarUrl":"https://avatars0.githubusercontent.com/u/22348449?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535679808000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3717","number":3717,"title":"Coverage.py warning: Could not parse Python file","body":"We are seeing a lot of \"Coverage.py warning: Could not parse Python file .....py\"  on Travis only.\ne.g.\nhttps://travis-ci.org/coala/coala/jobs/199030440#L514\nIt may be a problem with codecov-bash, or with coverage.","comments":6,"createdAt":"2017-02-07T22:35:16Z","updatedAt":"2018-08-31T01:43:28Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811421000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3755","number":3755,"title":"Mention \"Adding CI\" in Newcomers guide","body":"It should be mentioned in step 4 5\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2017-02-16T16:15:34Z","updatedAt":"2018-09-01T14:17:01Z","closedAt":"2018-09-01T14:17:01Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535782416000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2683","number":2683,"title":"CommitBear: Check proper use of `https` when referencing issues","body":"https://github.com/coala/coala-bears/blob/master/bears/vcs/CommitBear.py#L360 matches links and tags, e.g. fix #123, fix https://github.com\nThis would also pass the test Closes http://github.com. However, this would not trigger GitHub autolinked reference feature. The commit message should be Closes https://github.com instead.\nFor those who are not familiar with autolinked reference feature, I did a simple experiment. I created an issue first li-boxuan/github-playground#1\nThen I create a pr, aiming to close that issue. See commit message https://github.com/li-boxuan/github-playground/pull/2/commits. However, after this pr gets merged, it doesn't close the corresponding issue automatically.\nFinally, this pr https://github.com/li-boxuan/github-playground/pull/3/commits closes the corresponding issue automatically when it's merged. Check commit messages carefully to see the difference.\nThat means we should check proper usage of https, at least for GitHub. Not sure if GitLab has similar features.","comments":0,"createdAt":"2018-09-01T06:09:48Z","updatedAt":"2018-09-01T06:13:36Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535356417000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2681","number":2681,"title":"Install only some selected bears instead of all bears","body":"Hi,\nIs there a way to install only some of the selected bears instead of all bears. cib is mentioned in documentation but it is broken. So, is there some other way of doing this?\nThanks!","comments":4,"createdAt":"2018-08-19T05:23:00Z","updatedAt":"2018-08-27T07:53:37Z","closedAt":null,"state":"open","user":{"login":"ankita240796","avatarUrl":"https://avatars3.githubusercontent.com/u/15226041?v=4"},"owner":{"login":"ankita240796","avatarUrl":"https://avatars3.githubusercontent.com/u/15226041?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535888712000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2682","number":2682,"title":"CSSCombBear: do not use stdin","body":"csscomb 's languages should be expanded to add SCSS and SASS\ncsscomb determines file type using file extension, so therefore it is critical that the filename be given on the command line, and not use stdin.","comments":0,"createdAt":"2018-08-30T04:37:21Z","updatedAt":"2018-09-02T11:45:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534125895000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2673","number":2673,"title":"Clang bears on Windows","body":"Currently we use the following on Windows to avoid certain bears\n\npython -m pytest --cov -k \"not  ClangASTPrintBear and not ClangCloneDetectionBear and not ClangComplexityBear and not ClangCountVectorCreator and not ClangCountingConditions\"\n\nWe need to avoid that list of not somehow, so that Windows can use the standard templates without that special hack.","comments":0,"createdAt":"2018-08-13T02:04:55Z","updatedAt":"2018-08-13T02:04:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534219993000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2674","number":2674,"title":"Handle Github temporary merge commit in GitCommitMetadataBear","body":"GitHub temporary merge commit is a commit that's created by GitHub in refs/<PR_number>/merge ref. Travis-CI pulls that ref in their CI for testing which makes GitCommitMetadataBear fetch the temporary merge commit instead of the actual commit. This would make GitCommitMetadataBear doesn't work properly, and so it dependants.\nMore info #2501\ncc @kriti21","comments":1,"createdAt":"2018-08-14T01:48:10Z","updatedAt":"2018-08-14T04:13:13Z","closedAt":null,"state":"open","user":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"owner":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"assignee":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535391445000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2677","number":2677,"title":"Extra commas and missing braces in JSON","body":"The bear could detect extra commas and remove them.\nAlso It could add missing braces wherever needed.","comments":3,"createdAt":"2018-08-17T02:37:29Z","updatedAt":"2018-08-27T17:37:25Z","closedAt":null,"state":"open","user":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"owner":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"importance/low","color":"70e870"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535581747000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2678","number":2678,"title":"BanditBear test_jinja2_templating failing ","body":"Error:\n\nUsing jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.\n\nhttps://travis-ci.org/coala/coala-bears/jobs/417074263","comments":1,"createdAt":"2018-08-17T04:01:24Z","updatedAt":"2018-08-29T22:29:07Z","closedAt":"2018-08-29T22:29:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"type/test","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533990735000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2660","number":2660,"title":"Allow version 1.3.x for autopep8","body":"PEP8 bear should also allow version 1.3.x","comments":3,"createdAt":"2018-08-07T16:34:00Z","updatedAt":"2018-08-11T12:32:15Z","closedAt":"2018-08-11T12:32:04Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"status/invalid","color":"000000"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533750776000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2662","number":2662,"title":".coafile: Set max line characters to 80","body":"This is a partial revert of #580\nThe line feed at the end is never counted when counting line length.  If for no other reason that it differs per OS.\nThe idea behind that issue was ok, but it was just one repo, while the other repos stayed at 80cpl , especially as it was often hard-coded into their .coafile such as https://github.com/coala/coala/blob/master/.coafile#L7.\nIt would be rather disruptive to change coala core to be 79 cpl, for no benefit.\nWe have occasionally discussed increasing it to a much higher number, such as 120 , so increasing it now to 80 is going in the right direction.","comments":0,"createdAt":"2018-08-08T15:03:59Z","updatedAt":"2018-08-08T17:52:56Z","closedAt":"2018-08-08T17:52:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"type/codestyle","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533798200000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2664","number":2664,"title":"Travis CI failing due to infer breakage","body":"Recent travis build for python 3.6 fail while trying to build infer.\nError: No implementations provided for the following modules:\n         CamomileLibrary__UTF8 referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__UChar referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__ referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\nCommand exited with code 2.\nmake[2]: *** [build_java] Error 10\nmake[2]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer/src'\nmake[1]: *** [java] Error 2\nmake[1]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer'\nmake: *** [java] Error 2\n  compilation failure; you can try running\n    make clean\n    ./build-infer.sh java\nThe command \".ci/deps.opam.sh\" failed and exited with 1 during .\n\nhttps://travis-ci.org/coala/coala-bears/jobs/413575180","comments":2,"createdAt":"2018-08-08T17:04:00Z","updatedAt":"2018-08-09T07:03:20Z","closedAt":null,"state":"open","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534324415000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2665","number":2665,"title":"ShellCheckBear: replace shell setting with language","body":"Following up from #2532 (comment)\nSetting shell should be deprecated and replaced with a language setting.\nThis depends on having a coalang definition for all four of the shell variations.","comments":2,"createdAt":"2018-08-10T09:17:39Z","updatedAt":"2018-08-15T09:13:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/lintbears","color":"fbca04"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533965828000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2668","number":2668,"title":"CheckStyleBear: Split and deprecate known_checkstyle_or_path","body":"c.f. #2532 (comment) and coala/coala#5701","comments":0,"createdAt":"2018-08-11T05:33:24Z","updatedAt":"2018-08-11T05:37:08Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534406877000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2669","number":2669,"title":"GNUIndentBear: max_line_length=0 does not work","body":"#2255 did nothing at all, having set the max_line_length after the CLI option had been created.","comments":3,"createdAt":"2018-08-11T12:40:51Z","updatedAt":"2018-08-16T08:07:57Z","closedAt":"2018-08-16T08:07:57Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534008259000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2670","number":2670,"title":"GofmtBear tests do not skip if not installed","body":"#1727 forgot to add the skip decorator on the new test class\n@generate_skip_decorator(GofmtBear)","comments":0,"createdAt":"2018-08-11T14:49:41Z","updatedAt":"2018-08-11T17:24:19Z","closedAt":"2018-08-11T17:24:19Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534040587000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2672","number":2672,"title":"Trailing comma bear","body":"https://www.python.org/dev/peps/pep-0008/?#when-to-use-trailing-commas\nhttps://pypi.org/project/flake8-commas/ and https://pypi.org/project/add-trailing-comma/","comments":0,"createdAt":"2018-08-12T02:22:28Z","updatedAt":"2018-08-12T02:23:07Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535890672000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2632","number":2632,"title":"No response generated ","body":"No response is being generated on filling search bar and pressing 'Enter' at https://coala.io/#/languages","comments":2,"createdAt":"2018-07-21T19:07:21Z","updatedAt":"2018-09-02T12:17:52Z","closedAt":"2018-09-02T12:17:52Z","state":"closed","user":{"login":"prankshaw","avatarUrl":"https://avatars3.githubusercontent.com/u/22571701?v=4"},"owner":{"login":"prankshaw","avatarUrl":"https://avatars3.githubusercontent.com/u/22571701?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534091553000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2635","number":2635,"title":"Add settings for EslintBear","body":"Add language setting to EslintBear to support using various parsers and plugins available for the linter.","comments":1,"createdAt":"2018-07-22T11:22:43Z","updatedAt":"2018-08-12T16:32:33Z","closedAt":"2018-08-12T16:32:33Z","state":"closed","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534337484000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2651","number":2651,"title":"Bump lxml version?","body":"Any particular reason that we are pinning lxml==3.6.0 despite the newest being 4.2.3? The new version fixes installation issues on my Mac (macos 10.13, Python 3.7.0).","comments":2,"createdAt":"2018-08-01T06:40:36Z","updatedAt":"2018-08-15T12:51:24Z","closedAt":null,"state":"open","user":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"owner":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533965321000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2653","number":2653,"title":"Migrate `PEP8Bear` to aspects","body":"Migrate PEP8Bear to the Root.Formatting.Length.LineLength aspect with max_line_length as taste.","comments":0,"createdAt":"2018-08-05T05:31:28Z","updatedAt":"2018-08-11T05:28:41Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533646619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2656","number":2656,"title":"Migrate `PycodestyleBear` to aspects","body":"Migrate PycodestyleBear to the Root.Formatting.Length.LineLength aspect with max_line_length as taste.","comments":0,"createdAt":"2018-08-05T18:17:57Z","updatedAt":"2018-08-07T12:56:59Z","closedAt":"2018-08-07T12:56:59Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534179215000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2659","number":2659,"title":"Jinja2Bear: Allow end of block to not have a comment","body":"The docstring of this bear mentions \"Control labels: ...\" and requires a trailing comment for every block\n                {% for x in y %}\n                  do something\n                {% endfor %}{# for x in y %}\nThat might seem nice, but it creates a mess when the for or if is a complicated expression.\nAs a result we have turned off the bear on some repos.\nAdd the ability for this rule to be disabled, so that we can continue using the rest of the bears functionality.","comments":1,"createdAt":"2018-08-06T14:33:52Z","updatedAt":"2018-08-13T16:53:35Z","closedAt":"2018-08-13T16:53:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534985037000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2583","number":2583,"title":".ci/adjust_version_number.py: Use single quotes","body":"This file isnt in line with coala style.\nc.f. #2582","comments":2,"createdAt":"2018-07-06T01:32:19Z","updatedAt":"2018-08-23T00:43:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533473401000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2585","number":2585,"title":"ClangBear.py: Rename variable range","body":"range is a python builtin and shouldn't be redefined. Rename occurrences at 1 and 2.\nDifficulty: Newcomer","comments":12,"createdAt":"2018-07-06T10:53:39Z","updatedAt":"2018-08-05T12:50:01Z","closedAt":"2018-08-05T12:50:01Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533342711000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2602","number":2602,"title":"Migrate `LineLengthBear` to aspects","body":"Migrate LineLengthBear to the following aspects and tastes:\nRoot.Formatting.Length.LineLength aspect with max_line_length as taste.","comments":0,"createdAt":"2018-07-10T05:54:50Z","updatedAt":"2018-08-04T00:31:51Z","closedAt":"2018-08-04T00:31:51Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534402619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2611","number":2611,"title":"coala requires 3.4.4 but coala-bears requires 3.4.0","body":"coala/coala#4350 updated the minimum version of Python to 3.4.4, and coala-bears version checks were not updated at the same time.\nWe have two jobs which check the error message for other versions of Python, and even after 6906e54 they passed.  They should have failed.\nThose jobs were still installing the released package of coala, not the master.\nThe cause of that was https://gitlab.com/coala/mobans/issues/63","comments":0,"createdAt":"2018-07-16T23:50:26Z","updatedAt":"2018-08-16T06:56:59Z","closedAt":"2018-08-16T06:56:59Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533990472000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2618","number":2618,"title":"Generate php composer dependencies","body":".ci/generate_bear_requirements.py generates bear-requirements.yaml which moban uses to generate package.json, bear-requirements.txt, Gemfile, and coala-bears.cabal.\nThe same process should generate composer requirements in an format usable by php composer, using jinja2 templates.","comments":0,"createdAt":"2018-07-19T04:54:50Z","updatedAt":"2018-08-11T12:27:52Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533581461000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2621","number":2621,"title":"Bump pyflakes version to 2.0.0","body":"Difficulty: Newcomer","comments":1,"createdAt":"2018-07-19T07:10:45Z","updatedAt":"2018-08-06T18:51:01Z","closedAt":"2018-08-06T18:51:01Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533450442000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2479","number":2479,"title":"Generate languages.yaml","body":"https://github.com/coala/coala-bears/blob/master/.ci/generate_bear_requirements.py loads all bears and only generates bear-requirements.yaml.\nIt should provide more information in yaml format.\nA very useful dataset to create is a mapping of languages to bears.\nThat will allow the list of languages to be generated by moban if we templatise README.md: #2169","comments":3,"createdAt":"2018-05-12T07:42:30Z","updatedAt":"2018-08-05T06:27:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534402619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2488","number":2488,"title":"Issues with python3.3 travis check","body":"We only check for the unsupported python versions now on very specific PRs (direct push to master branch only), so it is hard to see it happening in other cases as well.\nThe issue as quoted from travis builds:\nSearching for bandit~=1.2\nReading https://pypi.python.org/simple/bandit/\nBest match: bandit 1.4.0\nDownloading https://files.pythonhosted.org/packages/45/b2/f5a4adb1e7773e6d631481b784ad49e6ec56aa81e9fdafcabf0fe3e0241a/bandit-1.4.0.tar.gz#sha256=cb977045497f83ec3a02616973ab845c829cdab8144ce2e757fe031104a9abd4\nProcessing bandit-1.4.0.tar.gz\nWriting /tmp/easy_install-euwn9c/bandit-1.4.0/setup.cfg\nRunning bandit-1.4.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-euwn9c/bandit-1.4.0/egg-dist-tmp-ib9fmh\nERROR:root:Error parsing\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/pbr/core.py\", line 111, in pbr\n    attrs = util.cfg_to_args(path, dist.script_args)\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/pbr/util.py\", line 248, in cfg_to_args\n    kwargs = setup_cfg_to_setup_kwargs(config, script_args)\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/pbr/util.py\", line 382, in setup_cfg_to_setup_kwargs\n    cmd = cls(dist)\n  File \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/setuptools/__init__.py\", line 124, in __init__\n    _Command.__init__(self,dist)\n  File \"/opt/python/3.3.6/lib/python3.3/distutils/cmd.py\", line 57, in __init__\n    raise TypeError(\"dist must be a Distribution instance\")\nTypeError: dist must be a Distribution instance\nerror: Setup script exited with error in setup command: Error parsing /tmp/easy_install-euwn9c/bandit-1.4.0/setup.cfg: TypeError: dist must be a Distribution instance\n+retval=1\n+set +x\nsetup.py error code 1 ok\n\nneeds more investigation,\nExample builds of this issue:\nhttps://travis-ci.org/virresh/coala-bears/builds/380033068\nhttps://travis-ci.org/coala/coala-bears/builds/378397254","comments":1,"createdAt":"2018-05-17T13:31:42Z","updatedAt":"2018-08-16T06:56:59Z","closedAt":"2018-08-16T06:56:59Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533517545000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2503","number":2503,"title":"JSONFormatBear: Message not appropriate when settings are omitted","body":"This file can be reformatted by sorting keys and following indentation.\n\nis always displayed, regardless whether you have actually enabled json_sort (to sort keys) or not. Especially it's displayed when you omit the setting altogether, and the default is actually false. So you think that the default is true.\nThe message has to be flexible for different parameters, so a user won't become confused.\nAcceptance criteria:\n\nThe JSONFormatBear produces following messages for results in case that reformatting is possible:\n\nWhen json_sort is False, the result message should be just This file can be reformatted by following indentation..\nWhen json_sort is True, the result message should be like before (This file can be reformatted by sorting keys and following indentation.)","comments":1,"createdAt":"2018-05-24T15:20:13Z","updatedAt":"2018-08-06T01:05:45Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533966176000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2532","number":2532,"title":"Adding type annotations to bears","body":"This can be performed in 3 ways:\n\nUsing the contracts module\nUsing python default type hinting\nManually checking using decorators or the bears run() or create_arguments() method.\n\nUsing contracts\nWe we need custom checks for settings which only accept a discrete set of values. The only option seems to follow is use custom contract type eg.\nnew_contract('valid_name', lambda s: isinstance(s, str) and len(s)>0)\n@contract(names='dict(int: (valid_name, int))')\ndef process_accounting(records):\n    ...\n\nThe problem occurring over here is the function name provided to the new_contract method gets the value of the argument implicitly as the one and only argument. Since this doesn't even receive the self or any other kind of variable its impossible to access other objects from inside this method which means we can't populate a class for storing metadata of the acceptable set of values and unless we modify contracts itself or define the acceptable set of values in the function itself. When defining the acceptable values in the function itself it is impossible to access those values outside the method thus defeating the purpose. contracts also follows a strict syntax which makes it impossible to predefine a custom set of methods for each kind of setting in the base classes to which the actual bear can just pass the acceptable values and the setting list to compare against. Everything needs to be implemented in each bear itself. Summing up things like\n[new_contract(i, lambda s: isinstance(s, str) and len(s)>0) for i in in setting_list]\n\nalso doesn't work which makes the code much more difficult to read. The usage of contracts module also provides difficulty when the some default values of the bear setting are assumed in case of the value to the setting is not provided or invalid value is given.\nUsing Type hints provided by python\nThese are pretty much worthless. They can be only used for documentation purposes unless the type checking is performed specially with loading the mypy module which just checks for type hint inconsistencies and doesn't actually run the program. (Haven't tested this out with custom classes). Normal runs of the code don't point out any inconsistencies in invalid types according to type hints.\nWriting code and manual checks for each setting in some way or the other\nThis should be the last resort unless an elegant way is devised. Can be done using decorators or the bear code is itself but a common set of classnames have to be come upon which will be used by all the bears to extract out information about these settings. This can be performed by adding classes to the base class and asking the bear writers to fill them up. Functions can also be made in the base classes to test out settings to automatically provide just the setting and the default values, calling the correct function for the correct setting type and checking whether the value provided is valid or not.","comments":16,"createdAt":"2018-06-10T06:59:58Z","updatedAt":"2018-08-11T05:42:56Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535890821000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2554","number":2554,"title":"Coala website languages section is empty","body":"I tried to visit https://coala.io/#/languages because the old docs seem to be unmaintained (https://github.com/coala/bear-docs/).\nHowever, the search box seems to not be wired up. Both in Chromium and in Firefox, typing any text (for example \"python\") yields no new network requests, no exceptions or errors or warnings logged to the Dev Console and no content.\nAs that page is the only official documentation source for bears (as far as I know), I'd say this problem is critical.","comments":2,"createdAt":"2018-06-26T23:40:39Z","updatedAt":"2018-09-02T12:20:21Z","closedAt":"2018-09-02T12:20:08Z","state":"closed","user":{"login":"abread","avatarUrl":"https://avatars3.githubusercontent.com/u/1618009?v=4"},"owner":{"login":"abread","avatarUrl":"https://avatars3.githubusercontent.com/u/1618009?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534394227000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2304","number":2304,"title":"GitCommitBearTest.py : Typo in line 50","body":"There's a typo at https://github.com/coala/coala-bears/blob/master/tests/vcs/git/GitCommitBearTest.py#L50\nmessgae -> message","comments":5,"createdAt":"2018-03-03T17:52:58Z","updatedAt":"2018-08-16T04:37:07Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"codeKAMAT","avatarUrl":"https://avatars3.githubusercontent.com/u/36402247?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535295907000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2383","number":2383,"title":"Add package-lock.json to .gitignore","body":"package-lock.json is a lock file of JS dependencies.\ndifficulty/new comer","comments":8,"createdAt":"2018-03-28T10:41:40Z","updatedAt":"2018-08-26T15:05:07Z","closedAt":"2018-05-24T13:22:08Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535923329000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2453","number":2453,"title":"CIRCLE_NODE_INDEX hack for travis is not required anymore","body":".travis.yml sets CIRCLE_NODE_INDEX=-1 to avoid being a circle worker\nRemove code related to this hack as pip deps are no more called from travis","comments":3,"createdAt":"2018-04-26T16:47:58Z","updatedAt":"2018-09-02T21:22:09Z","closedAt":null,"state":"open","user":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"owner":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534436530000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2062","number":2062,"title":"JSONFormatBear complains about number representation","body":"Let's say I have a file test.json for a simulation I'm running,\n{\n    \"expansion-coefficient\": 23.4e-6\n}\nNow, when I run coala -b JSONFormatBear --files=test.json, it wants to change the number to 2.34e-05, which is of course mathematically equivalent. But I often have an intuition about numbers in a certain \"exponent\", changing that is often not helpful. Consider \"length\": 3.2e-3 as 3.2mm, when coala applies the patch it wants to, that changes to \"length\": 0.0032, as in 0.0032m, which is not as intuitive.","comments":13,"createdAt":"2017-10-03T09:44:29Z","updatedAt":"2018-08-16T16:22:10Z","closedAt":null,"state":"open","user":{"login":"Psirus","avatarUrl":"https://avatars1.githubusercontent.com/u/1187292?v=4"},"owner":{"login":"Psirus","avatarUrl":"https://avatars1.githubusercontent.com/u/1187292?v=4"},"assignee":{"login":"Psirus","avatarUrl":"https://avatars1.githubusercontent.com/u/1187292?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"area/newsettings","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534168425000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2080","number":2080,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":3,"createdAt":"2017-10-25T16:30:52Z","updatedAt":"2018-08-13T13:53:45Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"chetasr","avatarUrl":"https://avatars3.githubusercontent.com/u/12978868?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534085537000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2214","number":2214,"title":"Bear Proposal: Gherkin-lint","body":"https://github.com/vsiakka/gherkin-lint","comments":2,"createdAt":"2018-01-06T08:17:05Z","updatedAt":"2018-08-12T14:52:17Z","closedAt":"2018-08-12T14:52:17Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534077232000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2226","number":2226,"title":"Bear Proposal: bashate","body":"https://github.com/openstack-dev/bashate","comments":7,"createdAt":"2018-01-08T21:53:56Z","updatedAt":"2018-08-12T12:33:52Z","closedAt":"2018-08-12T12:33:52Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533991357000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2249","number":2249,"title":"GNUIndentBear: Add infinite line length when max_line_length is set to 0","body":"difficulty/low\nI would like to work on it.","comments":4,"createdAt":"2018-01-22T06:26:39Z","updatedAt":"2018-08-11T12:42:37Z","closedAt":"2018-04-06T04:32:43Z","state":"closed","user":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"owner":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534071130000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1888","number":1888,"title":"RuboCopBear: Missing documentation","body":"Missing documentation of rubocop_config: str='' in create_arguments(...).\ndifficulty/newcomer\narea/documentation","comments":7,"createdAt":"2017-07-05T05:36:26Z","updatedAt":"2018-08-12T10:52:10Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"AKG001","avatarUrl":"https://avatars2.githubusercontent.com/u/34455289?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534091549000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1951","number":1951,"title":"JSStandardBear: Document rules","body":"Since we're aiming for high quality bears, inclusion of settings becomes trivial.\nThey can be found here. Refer to the StylintBear for reference.\ndifficulty/low\narea/documentation","comments":12,"createdAt":"2017-07-27T04:23:08Z","updatedAt":"2018-08-12T16:32:29Z","closedAt":"2018-08-12T16:32:29Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"area/newsettings","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535522865000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1965","number":1965,"title":"ApertiumLintBear: Incomplete and incorrect line break","body":":param repeated_attributes_pardef:\n            This issue is responsible for checking any repeated entries in\n            the attributes associated with an entry in the parameter\n            definition section\n            n monodix files.\n\nshould be corrected to :\n:param repeated_attributes_pardef:\n            This issue is responsible for checking any repeated entries in\n            the attributes associated with an entry in the parameter\n            definition in monodix files.\n\ndifficulty/newcomer\narea/documentation","comments":13,"createdAt":"2017-08-01T06:41:19Z","updatedAt":"2018-08-29T06:07:45Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533886757000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1976","number":1976,"title":"GitCommitBear: Require [ci skip] for changes only modifying non-tested files  ","body":"[ci skip]/[skip ci] are supported by most CI providers.\ncommits which only modify files not covered by .coafile, or tests, etc, shouldnt cause CI to run.","comments":2,"createdAt":"2017-08-04T05:04:13Z","updatedAt":"2018-08-10T07:39:17Z","closedAt":"2018-08-10T07:39:17Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535896848000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1733","number":1733,"title":"Use Test in test class module names","body":"The following use verify_local_bear to create a test class, but then do not use the word Test in the stored class name, which is confusing by itself as the name should describe what it does.\n\nTailorBearTest.py\n\nTailorBearWithoutConfig = verify_local_bear(TailorBear, ...)\nTailorBearWithConfig = verify_local_bear(TailorBear, ...)\nTailorBearWithSetting = verify_local_bear(TailorBear, ...)\n\n\nTSLintBearTest.py\n\nTSLintBearWithoutConfig = verify_local_bear(TSLintBear, ...)\nTSLintBearOtherOptions = verify_local_bear(TSLintBear, ...)\n\n\n\nAdd Test to those variable name, like is done in most other test modules that use verify_local_bear.","comments":7,"createdAt":"2017-05-14T15:01:38Z","updatedAt":"2018-09-02T14:00:48Z","closedAt":"2018-09-02T14:00:48Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533990321000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1307","number":1307,"title":"Check copied files are identical copies of upstream","body":"fossasia/gci16.fossasia.org#614 was raised due to ads appearing on the Github Pages site, and there was concern, initially at least, that this had occurred because someone had added something to a minified file that had been copied from upstream.\nIt would be good to check that any files that are copies of upstream are identical to a specified upstream URL.  This would also help with license checks, as a list of all upstream resources would be kept.  The fetched upstream file should be cached appropriately to avoid slowing down CI and potentially breaking CI in the event of a network problem.\ndifficulty medium\nOpened via gitter by @jayvdb","comments":4,"createdAt":"2017-01-14T17:54:12Z","updatedAt":"2018-08-11T12:25:21Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533634125000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1119","number":1119,"title":"hlint minimum version 1.9.1 not recorded","body":"HaskellLintBear should say that the hlint minimum version is 1.9.1, due to the use of the --json argument.\nNeeds either coala/coala#3237 or coala/coala#3236 fixed first.","comments":4,"createdAt":"2016-12-13T16:01:50Z","updatedAt":"2018-08-07T09:28:45Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-25T06:12:11Z","dueOn":"2017-06-30T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala-bears/milestone/13","description":""},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533742323000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1199","number":1199,"title":"Move generate_package.py to a helper script","body":"As noted on #1000 , there is not much in \"bears\" except plugins.  If we can empty out \"bears\" of everything not loaded via setuptools entry points, all dependencies belong to each plugin, and there is no developer API in \"bears\", so no need for API backwards compatibility, only user settings backwards compatibility.\nRemoving all python files from the top bears directory is also necessary for adopting PEP 420 -- Implicit Namespace Packages.\nThis should probably be done after #617 .","comments":2,"createdAt":"2016-12-24T05:50:24Z","updatedAt":"2018-08-08T15:32:03Z","closedAt":"2018-08-08T15:32:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1534168440000,"issue":{"htmlUrl":"https://github.com/coala/documentation/issues/472","number":472,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coalafor reference.\nlabel: initiative/gci\nOpened by @Monal5031 at gitter/coala/gci","comments":6,"createdAt":"2017-10-25T16:04:46Z","updatedAt":"2018-08-13T13:54:00Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"bfd4f2"},{"name":"status/blocked","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535269488000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/652","number":652,"title":"Cohesive Editor Support: update related issues","body":"coala/coala-eclipse#25 is closed.\ncoala/coala-eclipse#51 should be mentioned instead\ncoala/coala-emacs#11 is also closed, and should be simply removed.\nThe body of the project says\n\nFor VI and emacs, we will most likely use a testing framework such as Vimcasts.\n\nemacs should be removed as testing for it was implemented.","comments":2,"createdAt":"2018-08-24T04:03:16Z","updatedAt":"2018-08-26T07:44:48Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534775810000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/648","number":648,"title":"Create git-bug project","body":"https://github.com/MichaelMure/git-bug cc @MichaelMure who has agreed to mentor.\nInitial concept is bidirectional sync to GitHub issues with support for bridge impersonating multiple users, e.g. so corobo could be used to create issues as the person who used the bot (or maybe gitmate)\nAnother idea is GitLab issues support.\nAnother is a meta-git-bug for handling lots of projects, e.g. super repo with subtrees/submodules/etc of git-bug repos , or housing many GitHub sync'd repos of issue in a single git-bug repo\nUltimately this needs to be quite a broad project definition at this stage as many medium sized enhancements planned now might be completed before GSoC begins in 2019\nAlso worth investigating is git-appraise .","comments":0,"createdAt":"2018-08-20T14:36:50Z","updatedAt":"2018-08-20T14:36:50Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534775838000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/649","number":649,"title":"Create MargeBot project","body":"","comments":0,"createdAt":"2018-08-20T14:37:18Z","updatedAt":"2018-08-20T14:37:18Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534447769000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/628","number":628,"title":"Reports: add live contribution list links","body":"There are some fantastic websites for listing a GitHub usernames contributions.\nOne of them should be added by the template , using the GitHub username from social:\nAlso if possible we should find a decent GitLab one and do the same.","comments":2,"createdAt":"2018-08-11T13:13:21Z","updatedAt":"2018-08-16T19:29:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535367222000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/636","number":636,"title":"Update status of 2018 GSoC projects","body":"The following are done:\n\nhttps://projects.coala.io/#/projects?project=integrate_antlr_v4_into_coala\nhttps://projects.coala.io/#/projects?project=automate_whitelist_creation_for_vulture\nhttps://projects.coala.io/#/projects?project=coala_language_server\nhttps://projects.coala.io/#/projects?project=commit_content_inspection\nhttps://projects.coala.io/#/projects?project=convert_bears_to_aspects\nhttps://projects.coala.io/#/projects?project=corobo_enhancements(security,_configurability_and_tests)\nhttps://projects.coala.io/#/projects?project=debug_and_profile_bears\nhttps://projects.coala.io/#/projects?project=implement_gitmate_plugins_for_coala\nhttps://projects.coala.io/#/projects?project=improve_installation_of_coala_and_coala-bears\nhttps://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala_\nhttps://projects.coala.io/#/projects?project=meta-review\nhttps://projects.coala.io/#/projects?project=newcomer_metrics_and_gamification\nhttps://projects.coala.io/#/projects?project=optimize_caching\nhttps://projects.coala.io/#/projects?project=quickstart_green_mode\n\nThe following were not started, and should be available again:\n\nhttps://projects.coala.io/#/projects?project=handle_nested_programming_languages\n\nThe following are incomplete / still in progress, and will need to be closed or heavily revised, and should be marked disabled:\n\nhttps://projects.coala.io/#/projects?project=improve_lint_bear_quality\nhttps://projects.coala.io/#/projects?project=automation_of_dependency_management_using_repology\nhttps://projects.coala.io/#/projects?project=git_task_list\nhttps://projects.coala.io/#/projects?project=linter_dependency_management_from_a_bare-metal_system\n\nNon GSoC projects with status unknown:\n\nhttps://projects.coala.io/#/projects?project=cohesive_editor_support\nhttps://projects.coala.io/#/projects?project=implement_jira_support_for_gitmate","comments":1,"createdAt":"2018-08-13T02:44:44Z","updatedAt":"2018-08-27T10:53:42Z","closedAt":"2018-08-27T10:53:42Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/medium","color":"f2db30"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535814392000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/642","number":642,"title":"Update the GSoC information link in FAQ's","body":"The link for 'further information of GSoC' in the FAQ's section is now not supported and has been moved on to a new address. This link needs to be updated.\nLink to the page referred: http://projects.coala.io/#/faq","comments":3,"createdAt":"2018-08-14T20:15:38Z","updatedAt":"2018-09-01T15:06:32Z","closedAt":null,"state":"open","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534523063000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/644","number":644,"title":"Fix grammatical mistakes in _reports/NitanshuVashistha.md","body":"This report got merged when time for completing GSoC final evaluation was running out. I messed up the language in the bio. Here are the changes that'd most probably correct the grammar of the .\n-  My project was dedicated make corobo secure by reducing its surface\n-  vulnerability. I also implemented a better testing infrastructure to test\n-  plugins , as well as to made the existing plugins configurable so that they\n+  My project was dedicated to make corobo secure by reducing its surface\n+  vulnerability. I also implemented a better testing infrastructure to test the\n+  plugins, as well as to make the existing plugins configurable so that they","comments":0,"createdAt":"2018-08-17T15:13:51Z","updatedAt":"2018-08-17T16:24:23Z","closedAt":"2018-08-17T16:24:23Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533302151000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/606","number":606,"title":"Gitmate: Contextually sensitive actions on PRs","body":"Currently Gitmate adds a lot of noise to PRs.\nIt shouldnt repeat messages it has already put on PRs.\nIt could add a note to the existing message that the problem was seen again in the latest commit.\nIt should hide as 'Outdated' messages for errors which have been resolved.\netc","comments":4,"createdAt":"2018-08-02T11:47:43Z","updatedAt":"2018-08-03T13:15:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533653118000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/608","number":608,"title":"Enhance report.md to support year","body":"_layouts/report.md currently emits \"2017\" all the time.\nIt should derive it from other information.\nThe 2017 ones all have a year in the URL, so that should be able to be used somehow\nSee #359","comments":1,"createdAt":"2018-08-03T10:12:42Z","updatedAt":"2018-08-07T14:45:18Z","closedAt":"2018-08-07T14:45:18Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534068099000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/615","number":615,"title":"Update GSoC report template","body":"https://github.com/coala/projects/blob/master/reports/example.md needs an update\nAdd OpenHub profile link","comments":4,"createdAt":"2018-08-09T15:19:57Z","updatedAt":"2018-08-12T10:01:39Z","closedAt":"2018-08-12T10:01:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535082641000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/616","number":616,"title":"2017 GSoC report activity yaml should be 1 based, not 0 based","body":"The yaml being submitted currently contains\nactivity:\n- 0:\n  - repo: name\n  - link: URL\n  - details: shortlog\n\nIt should be either 1 based, or be an array like\nactivity:\n\nrepo: name\nlink: URL\ndetails: shortlog\nrepo: name2\nlink: URL2\ndetails: shortlog2","comments":1,"createdAt":"2018-08-09T15:24:40Z","updatedAt":"2018-08-24T03:50:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534004192000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/620","number":620,"title":"Typo in commit_based_perftest.md","body":"Variable name for project should be changed from intiatives to initiatives to fix spelling and to align with projects.liquid.\nProbably a good newcomer issue.","comments":1,"createdAt":"2018-08-11T00:42:11Z","updatedAt":"2018-08-11T16:16:32Z","closedAt":"2018-08-11T16:16:32Z","state":"closed","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535324545000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/623","number":623,"title":"reports/adhikasp.md: Split PRs into commits","body":"reports/adhikasp.md links only to the pull requests.\nThey are all merged.\nIt should link to the commits in those pull requests, which is often a few commits per pull request.","comments":1,"createdAt":"2018-08-11T03:56:41Z","updatedAt":"2018-08-26T23:02:25Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533960009000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/624","number":624,"title":"reports/ : Use pull/123/commits/deadbeef","body":"For the GitHub links, I think it is more usefull to link to repo/pull/123/commits/deadbeef , as this gives the PR and the commit , and also shows big purple merged at the top.\nOtherwise, if only linking to repo/commit/deadbeef , ir only shows \"master\" as the branch to verify that it is a merged commit.","comments":0,"createdAt":"2018-08-11T04:00:09Z","updatedAt":"2018-08-11T04:00:09Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533993221000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/627","number":627,"title":"reports: Add tarball hash","body":"The reports should include a tarball hash , as a variable in the yaml and this should be displayed beside the tarball in the HTML.\nMentors should check that the hash is correct before approving work reports.","comments":1,"createdAt":"2018-08-11T13:09:44Z","updatedAt":"2018-08-11T13:13:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533568764000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/583","number":583,"title":".coafile: Set max line length for project pages","body":"Similar to coala/cEPs#134 , the project pages (i.e. pages in https://github.com/coala/projects/tree/master/_projects) should have a reasonable line length to improve the ability to read & code review them.\nc.f. coala/cEPs#157\nTry length 120 for existing files so it requires less disruptive changes to the existing files.\nThen add another section which requires 80 cpl and excludes the existing files.","comments":13,"createdAt":"2018-05-23T11:53:53Z","updatedAt":"2018-08-06T15:19:24Z","closedAt":"2018-08-06T15:19:24Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533946333000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/589","number":589,"title":"Rule based ignores","body":"Currently coala can ignore rules based on in-source comments.\nThat can get very messy when particular rules sgould always be ignored in common but well defined scenarios.\nIn those case it is better to define a rule about the relevant lines.\nSee flake8-putty, which uses regex to describe scenarios.\nThe solution for this project should be more generic that flake8-putty, possibly using bears to define ranges when custom actions which ignore results.","comments":0,"createdAt":"2018-06-03T15:24:13Z","updatedAt":"2018-08-11T00:12:13Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533284765000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/597","number":597,"title":"Windows bears","body":"There are many bears which are not being tested on Windows, and very likely some which do not work on Windows and we dont know about it.\nThis project would bring our bears CI to 100% coverage, fixing all bugs in bears that are related to Windows.","comments":1,"createdAt":"2018-07-02T06:44:02Z","updatedAt":"2018-08-03T08:26:05Z","closedAt":"2018-08-03T08:26:05Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533990342000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/603","number":603,"title":"Proposal: Gitmate to submit patches when available from master builds","body":"If coala dependencies update, new fixes may be automatically available.\nThey may come from new versions of linter tools, new releases of bears, or new data used by old bears.\nThe most common case for coala is updates to our mobans repo which need to be rolled out to all repos.\nFor this we will need a MobanBear .\nThe mechanism for creating PRs is simple, but will require some improvements to IGitt.\nThe logic for how to do this sanely in a constantly moving repo with humans involved is harder and needs a careful design and more careful implementation. We can and should do better than greenkeeper and similar.","comments":2,"createdAt":"2018-07-23T06:32:53Z","updatedAt":"2018-08-11T12:25:42Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533753399000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/605","number":605,"title":"Vulture : use pyflakes as an initial parse basis","body":"Pyflakes does a lot of analysis which can be used by vulture.\npyflakes has long ago decided that it will not report dead code.\nHowever it does need to report other problems caused by dead code, and this can be done by tracking dead code.\nThere is a POC at\nhttps://github.com/jayvdb/pyflakes/tree/dead-code\nvulture can use this base on which to do more sophisticated analysis which is beyond scope of vulture.\nOne of the key benefits of using pyflakes is errors in the code can be detected by pyflakes base and vulture can fail when those errors would make vulture results unreliable.","comments":4,"createdAt":"2018-08-01T10:01:06Z","updatedAt":"2018-08-08T18:36:39Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534089008000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/529","number":529,"title":"Add .md to whitespace consistency rule","body":"Whaaa\nhttps://github.com/coala/projects/blob/master/.coafile#L30\nhttps://github.com/coala/projects/blob/ec5c428/.coafile#L35","comments":8,"createdAt":"2018-03-25T11:48:07Z","updatedAt":"2018-08-12T15:50:08Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/medium","color":"f2db30"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533286523000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/547","number":547,"title":"Update nested language proposal","body":"The examples are confusing rather than helpful.\nPhp/HTML is a good example.\nAnother great example is reStructuredText, which allows specification of a language for a code block.  And Markdown now has a similar concept.  Our rstcheck bear already uses this and lints the code blocks.  Ideally this project would re-implement the rstcheck's linting of code blocks, so the splitting and spawning of linters is done inside coala instead of inside rstcheck, and the same functionality would be available for markdown without a custom bear.","comments":1,"createdAt":"2018-04-07T03:29:03Z","updatedAt":"2018-08-03T08:55:23Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"labels":[{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534730652000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/552","number":552,"title":"Disable jetbrains project ","body":"@traff isnt mentoring atm; project needs to be disabled until he plans to be a mentor again.","comments":2,"createdAt":"2018-04-13T12:47:25Z","updatedAt":"2018-08-20T02:04:12Z","closedAt":"2018-08-20T02:04:12Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533918114000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/555","number":555,"title":"JSON result reporter tool","body":"The coala json format provides a stable output.\nThere are other formats which are useful for reporting tests and failures.\nMost commonly used is JUnit format. (which isnt really a specified format; see https://blog.ilias.xyz/unit-test-output-formats-a-state-of-affairs-5734b4c8e577)\nConverting the static analysis results into a test results format has been done a few times, such as early PEP8 plugins to Jenkins.  The mapping isnt exact, but the benefits of using the test result format is tight integration with various system.\nCircleCI can accept this format: https://circleci.com/docs/2.0/collect-test-data/\nAppVeyor can receive a test results XML format, in the format output by xunit, presumably the same as JUnit.\nhttps://www.appveyor.com/docs/running-tests/#uploading-xml-test-results\nThe first project phase could involve converting the JSON to JUnit format and uploading into Circle CI and Appveyor.\nThe JUnit format should also be tested with a Jenkins install, to ensure it is uploading correctly there.  This would mean our Jenkins project is much less important.\nAnother common format is TAP.\nAnd there is Clover XML format.\nThen there are some system, such as Phabricator, which have a custom format they expect.\nc.f. facebook/infer#673\nThe above probably doesnt fill 3 months.\nPulling the coala results from CI using this format could be a way to inform newbies of the style problems with their PRs.\nAnother way to expand this project is to also push the unit test results as XML to the CI (using combination XML files if necessary)","comments":3,"createdAt":"2018-04-17T11:07:57Z","updatedAt":"2018-08-10T16:21:54Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533284698000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/564","number":564,"title":"Split repology project into two projects","body":"We have two different projects both utilising Repology for installation.\nAnd there is only one repology project here: https://github.com/coala/projects/blob/master/_projects/automate_dependacy_repology.md\nAlso relevant is the cib project, which will also be improving our dependency management, but it will be fixing an end-user tool, and will likely be trying to leverage conda to help get the dependencies installed.\nAs a result, the cib project will inevitable be solving the pip dependencies.\nThe 'Go on BSD' project is clearly about Go, and only Go.  The meat of this project is supporting lots of versions of Go, and different BSD, and possible also other more obscure OS like Alpine Linux.\nThe current repology project is about getting 'all' linters linked to Repology.\nI suspect the timeline is not allowing enough time for the process of creating Repology packages for linters that are not yet in Repology, and it seems large numbers of them are missing.  So this will take quite a bit longer than planned.  We'll need to look at various methods of automating the process.  Maybe we rename it to be the 'repology metadata' project.  It will still need to include implementation of the installation routines, but it probably wont have time to solve installation of every bear.  Perhaps it should focus only on linters managed via ruby bundler, and or npm.  That will avoid most conflicts with the other two projects.\n@yzgyyang , the first step is for you to create a new very basic proposal page for your project.","comments":8,"createdAt":"2018-04-24T20:57:14Z","updatedAt":"2018-08-03T08:24:58Z","closedAt":"2018-08-03T08:24:58Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534142636000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/573","number":573,"title":"Remove trailing underscore in pyflakes URL","body":"The pyflakes project link is\nhttp://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala_\nWithout the underscore it doesnt work.\nhttp://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala\nWe need both to work, and the former redirect to the latter.\nIt might be possible to use Netlify _redirects to do the redirect.","comments":7,"createdAt":"2018-05-12T05:51:53Z","updatedAt":"2018-08-13T06:43:56Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534168445000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/374","number":374,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coalafor reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":1,"createdAt":"2017-10-25T16:16:19Z","updatedAt":"2018-08-13T13:54:05Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/needs info","color":"71fcb7"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533289110000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/391","number":391,"title":"Project proposal: lint rst single vs double backticks","body":"There isnt any clear guidance on single vs double backticks in RST, especially when RST is not embedded within Python, however a rule of thumb is that single backticks should be implicit references to something.\nhttps://stackoverflow.com/questions/22256995/restructuredtext-in-sphinx-and-docstrings-single-vs-double-back-quotes-or-back\nhttps://mail.zope.org/pipermail/grok-dev/2008-December/006823.html\nFor documentation especially, it would be helpful to have a checker that finds a section heading somewhere in the docs for anything in single backticks, and errors if it cant be found.\nhttps://github.com/myint/rstcheck would likely be the best spot for this to be implemented.\nAnd myint/rstcheck#32 would be an ideal task to be done to familiarise oneself with the project.","comments":2,"createdAt":"2017-11-01T13:18:54Z","updatedAt":"2018-08-03T09:38:30Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533946764000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/452","number":452,"title":"Create CheckStyle project","body":"","comments":2,"createdAt":"2018-02-14T13:43:08Z","updatedAt":"2018-08-11T00:19:24Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534158331000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/470","number":470,"title":"Add support for multiple status labels on a project card","body":"Proposed by @sims1253 on #285\nFor example a card can have \"High Involvement\" as well as \"In Progress\" as status.","comments":1,"createdAt":"2018-03-10T05:50:24Z","updatedAt":"2018-08-13T11:05:31Z","closedAt":"2018-08-13T11:05:31Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533946418000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/480","number":480,"title":"Meta-review project","body":"An important aspect of newcomer gamification and the undefined developer->maintainer process is good feedback on their reviews.\nAny 'points' should be held in waiting until the PRs have been merged, and a developer or maintainer has given feedback on review comments which were given by the newcomer or developer.\nA more complete write up is at coala/coala#3615","comments":6,"createdAt":"2018-03-18T15:39:20Z","updatedAt":"2018-08-11T00:13:38Z","closedAt":"2018-08-11T00:13:38Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534507346000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/224","number":224,"title":"Broken link and typo in Gitmate for GitLab","body":"The goals for the project Implement GitLab and Bitbucket Support for GitMate\nhas a few typos and a broken link.\nDifficulty/Newcomer\nOpened via gitter by @nemaniarjun","comments":6,"createdAt":"2017-02-15T11:30:33Z","updatedAt":"2018-08-17T12:02:26Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535084976000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/359","number":359,"title":"reports: Make a report list page","body":"Task Description :\n\n\nA proper webpage must be in place using which we can show the list of work submission urls / profiles of GCI and GSOC students.\n\n\nAn overview of webpage structure\n\n\n\nLinks of work submission of GSoC Students, sorted yearwise\nLinks of work submission / profile of GCI students, sorted yearwise\n\nSteps :\n\n\nCreate  a new layout (.md file) in _layouts directory, and use Jekyll + Liquid syntax to obtain array of all the pages where layout is report  (such pages are in https://github.com/coala/projects/tree/master/reports) .\n\n\nThen you can iterate over this array as many times and show lists of links pertaining to GSoC and GCI, in separate markup sections.","comments":6,"createdAt":"2017-08-29T13:37:40Z","updatedAt":"2018-08-24T04:29:36Z","closedAt":"2018-08-24T04:29:36Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"}]}},{"repoOwner":"coala","repoName":"devops","updatedAtMs":1534168514000,"issue":{"htmlUrl":"https://github.com/coala/devops/issues/86","number":86,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T13:57:22Z","updatedAt":"2018-08-13T13:55:14Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"status/stale","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"devops","updatedAtMs":1534588604000,"issue":{"htmlUrl":"https://github.com/coala/devops/issues/87","number":87,"title":"Add PULL_REQUEST_TEMPLATE.md","body":"Add a file named PULL_REQUEST_TEMPLATE.md which includes general information and guidelines for the author of Pull Request, you can see PULL_REQUEST_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T17:02:12Z","updatedAt":"2018-08-18T10:36:44Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"status/stale","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535418483000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/617","number":617,"title":"webservices.raml: Remove comment about merged todo","body":"webservices.raml includes a note about https://gitlab.com/coala/landing/merge_requests/39 , which is now merged.\nThe comment should be removed.","comments":4,"createdAt":"2018-08-17T02:34:56Z","updatedAt":"2018-08-28T01:08:03Z","closedAt":"2018-08-28T01:08:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533820982000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/611","number":611,"title":"100% branch coverage","body":"https://travis-ci.org/jayvdb/corobo/builds/413532424 shows quite a few corners where the tests dont reach","comments":0,"createdAt":"2018-08-08T13:10:59Z","updatedAt":"2018-08-09T13:23:02Z","closedAt":"2018-08-09T13:23:02Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534473227000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/615","number":615,"title":"Make explain plugin configurable","body":"explain currently uses hardcoded coala explanations. Configuring sub-directories explain/generic and explain/<org name> so that other organizations can include their culture-specific explanations.","comments":0,"createdAt":"2018-08-16T09:08:49Z","updatedAt":"2018-08-17T02:33:47Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"documentation","color":"5319e7"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533439136000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/603","number":603,"title":"Alert whenever a @mention is of someone not in the room","body":"Similar to #317 , but for room membership.\nThe wording needs to be moderately toned, as it isnt 'bad' to mention a org member who isnt in the room - on gitter, they will get a notification to join the room, and they can read the room without joining, so it is OK to ping them, and they can ignore it.\nAlso c.f. #602","comments":1,"createdAt":"2018-08-05T03:14:46Z","updatedAt":"2018-08-05T03:18:56Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"e99695"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533729974000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/607","number":607,"title":"Create LabHubTestCase for testing LabHub dependent plugins and adapt GitStats tests","body":"The role of this TestCase is to do the setUp necessary for testing a plugin which depends on LabHub.","comments":0,"createdAt":"2018-08-07T19:09:24Z","updatedAt":"2018-08-08T12:06:14Z","closedAt":"2018-08-08T12:06:14Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533819290000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/609","number":609,"title":"DefaultConfigMixin needs 100% branch coverage","body":"The directory utils was omitted from coverage, and so this work was not completed to the coala standard.\nutils/mixin.py 26 20 14 0 15% 7-9, 12-15, 18-22, 25-38","comments":5,"createdAt":"2018-08-08T10:18:50Z","updatedAt":"2018-08-09T12:54:50Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533729654000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/610","number":610,"title":"ban command needs 100% branch test coverage","body":"plugins/ban.py 37 0 18 6 89% 21->24, 38->36, 42->36, 56->59, 72->70, 76->70\nhttps://travis-ci.org/jayvdb/corobo/builds/413532424","comments":0,"createdAt":"2018-08-08T10:56:15Z","updatedAt":"2018-08-08T12:00:54Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534869998000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/385","number":385,"title":"Mention Zulip backend in README.md","body":"Opened by @jayvdb","comments":4,"createdAt":"2017-11-26T14:28:13Z","updatedAt":"2018-08-21T16:46:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"documentation","color":"5319e7"},{"name":"type/markdown","color":"2a0582"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534137845000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/412","number":412,"title":"Update the default channel list","body":"The default list is stored in config.py\nlow, newcomer, gci\nOpened by @jayvdb at Gitter","comments":7,"createdAt":"2017-11-28T21:15:23Z","updatedAt":"2018-08-13T05:24:05Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533429176000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/441","number":441,"title":"Repeated invite message ","body":"Please refer to https://gitter.im/coala/coala?at=5a2198e9540c78242d7146a9 for more information\ndifficulty/newcomer\nOpened by @RaiVaibhav at Gitter","comments":5,"createdAt":"2017-12-01T18:08:14Z","updatedAt":"2018-08-05T00:32:56Z","closedAt":"2018-08-05T00:30:32Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534153238000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/496","number":496,"title":"Travis CI invokes pip three times","body":"117c747#diff-354f30a63fb0907d4ad57269548329e3R18\npip install coala-bears\npip install -r requirements.txt\npip install -r test-requirements.txt\n\nWIP at #466\nHowever due to coala outdated pinned dependency on colorlog , it is hard to fix this because a more recent version of colorlog can be installed.","comments":1,"createdAt":"2017-12-20T12:57:01Z","updatedAt":"2018-08-13T09:40:38Z","closedAt":"2018-08-13T09:40:38Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533647423000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/519","number":519,"title":"Change nevermind plugin regex","body":"Currently corobo says sorry, whenever there is nm or nevermind in a sentence(when corobo is first word), so make it a full match. It should only respond when we say corobo nm  or corobo nevermind.\nlabel: type/regex difficulty/newcomer","comments":3,"createdAt":"2018-04-02T13:37:54Z","updatedAt":"2018-08-07T13:10:23Z","closedAt":"2018-08-07T13:10:23Z","state":"closed","user":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"owner":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534363356000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/536","number":536,"title":".gitignore: Add .pytest_cache","body":"difficulty/newcomer","comments":3,"createdAt":"2018-06-01T15:39:32Z","updatedAt":"2018-08-15T20:02:36Z","closedAt":"2018-06-20T23:47:48Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533953463000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/543","number":543,"title":"Fix indentation in labhub_test.py","body":"Example: https://github.com/coala/corobo/blob/master/tests/labhub_test.py#L52\nThere are many similar lines where indentation needs to be fixed.","comments":7,"createdAt":"2018-06-05T06:20:15Z","updatedAt":"2018-08-11T02:11:03Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"status/blocked","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533893719000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/554","number":554,"title":"Use activate instead of __init__ for LabHub plugins","body":"","comments":1,"createdAt":"2018-06-09T11:31:15Z","updatedAt":"2018-08-10T09:35:19Z","closedAt":"2018-08-10T09:35:19Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/labhub","color":"63ccf9"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534135080000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/574","number":574,"title":"[Poll]: Configuration of corobo","body":"Since corobo lives inside a Docker container and is deployed after every commit.\nTo use the configuration templates, we'll need a way to pre-configure the plugins so that bot admins don't have to configure them after every deployment.\nIn the comment section, are the different proposed option than can be implemented to auto-configure the plugins at the time of deployment.\nPlease use a ' 👍  ' to vote for the best-suited implementation.\ncc @meetmangukiya @gbin @jayvdb","comments":8,"createdAt":"2018-06-24T10:34:28Z","updatedAt":"2018-08-13T04:38:00Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534143697000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/579","number":579,"title":"searchdocs_test: change `http://` links to 'https://`","body":"Change http to https\n\n  \n    \n      corobo/tests/searchdocs_test.py\n    \n    \n         Line 7\n      in\n      de4fbaf\n    \n    \n    \n    \n\n        \n          \n           'http://api.coala.io/en/latest/search.html?q=this+is+search+string') \n        \n    \n  \n\n\ndifficulty/newcomer","comments":8,"createdAt":"2018-07-06T08:00:34Z","updatedAt":"2018-08-13T07:01:37Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"difficulty/newcomer","color":"65c8ff"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533950015000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/593","number":593,"title":"Remove dependency on nltk","body":"This was an unused dependency, and the import was removed in #589\nThe entry in requirements.txt also needs to be removed.","comments":2,"createdAt":"2018-07-29T05:05:00Z","updatedAt":"2018-08-11T01:13:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534168618000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/594","number":594,"title":"Minor refractoring in labhub tests","body":"Do minor changes in labhub_tests as asked here #572 (review) (see below)\ndifficulty/low","comments":10,"createdAt":"2018-07-31T10:23:08Z","updatedAt":"2018-08-13T13:56:58Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"ssg2526","avatarUrl":"https://avatars2.githubusercontent.com/u/22372359?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/low","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534045735000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/596","number":596,"title":"DefaultConfigurationMixin: Modify implementation ","body":"Current implementation is either DEFAULT_CONFIG or CONFIG_TEMPLATE. But a better implementation will be if we can store the default values in CONFIG_TEMPLATE and then allow a subset of those config variables overridden in the config.py's DEFAULT_CONFIG.\nThis way we can provide the partial configuration in the CONFIG_TEMPLATE, and allow partial reconfiguration through config.py's DEFAULT_CONFIG.","comments":0,"createdAt":"2018-08-04T14:23:01Z","updatedAt":"2018-08-12T03:48:55Z","closedAt":"2018-08-12T03:48:55Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535941107000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/600","number":600,"title":"spam plugin should implement check_configuration","body":"MAX_LINES = 1 is invalid, as it will mean anyone writing one line is spamming, which is silly.\nMAX_MSG_LEN <= length of BOT_PREFIX is invalid, as means invoking a command is spamming, which is silly.","comments":9,"createdAt":"2018-08-05T02:26:47Z","updatedAt":"2018-09-03T02:18:27Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"CodeSparkle","avatarUrl":"https://avatars3.githubusercontent.com/u/40273492?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/newcomer","color":"65c8ff"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533476654000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/601","number":601,"title":"plugins/coatils.py: Remove empty `__init__`","body":"The __init__ in this module only invokes super, which will happen anyway if the __init__ is removed.\nThis is medium importance because we do not want any plugin to be using __init__, as they should be using activate. (c.f. #577)","comments":0,"createdAt":"2018-08-05T02:48:23Z","updatedAt":"2018-08-05T13:44:14Z","closedAt":"2018-08-05T13:44:14Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534548304000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/602","number":602,"title":"Make LabHub is_room_member a private function of the module","body":"LabHub.is_room_member is unnecessarily a static method of the class.\nIt can be moved to a private function _is_room_member at the module level, and then the tests can be improved to remove the need to do special plugin mocking.\nSee #572 (comment) for context","comments":1,"createdAt":"2018-08-05T03:08:45Z","updatedAt":"2018-08-17T23:25:04Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136654000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/296","number":296,"title":"Mention that users need to be a developer (and point to the requirements) if they try to assign a medium issue","body":"Opened by @adtac at gitter/coala/coala","comments":2,"createdAt":"2017-09-24T09:13:01Z","updatedAt":"2018-08-13T05:04:14Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533654484000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/306","number":306,"title":"Only allow GCI students to claim issues with \"initiative/gci\" label","body":"How to determine who are GCI students TBD.\nOpened by @jayvdb at gitter/coala/gci","comments":17,"createdAt":"2017-10-18T12:41:13Z","updatedAt":"2018-08-07T15:08:04Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"labels":[{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/high","color":"b319e7"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534588559000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/316","number":316,"title":"Add PULL_REQUEST_TEMPLATE.md","body":"Add a file named PULL_REQUEST_TEMPLATE.md which includes general information and guidelines for the author of Pull Request, you can see PULL_REQUEST_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T17:03:23Z","updatedAt":"2018-08-18T10:35:59Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533470781000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/317","number":317,"title":"Issue warning whenever someone is mentioned using `@` if the target is not a member of the org","body":"difficulty/low initiative/gci\nOpened by @jayvdb at gitter/coala/coala","comments":6,"createdAt":"2017-10-28T04:56:00Z","updatedAt":"2018-08-05T12:06:21Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"e99695"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136747000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/328","number":328,"title":"Assign: Eligibility error should give the precise problem","body":"Currently it gives a list of possible problems, which is long and doesnt give precise guidance for what is the next step\nOpened by @jayvdb at Gitter","comments":6,"createdAt":"2017-11-07T06:55:07Z","updatedAt":"2018-08-13T05:05:47Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535089082000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/345","number":345,"title":"Mention the coala StackOverflow tag in lmgtfy ","body":"https://gitlab.com/coala/cobot/issues/23","comments":15,"createdAt":"2017-11-22T09:40:16Z","updatedAt":"2018-08-24T05:38:02Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"type/markdown","color":"2a0582"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534166423000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/358","number":358,"title":"Limit pitchfork command to developers","body":"#36 requested \"When issued by an authorized person to cobot,..\" , however that bit wasnt done.\nThis needs to be fixed before GCI or there will be mayhem when this easter egg is found.","comments":7,"createdAt":"2017-11-22T13:56:31Z","updatedAt":"2018-08-13T13:20:23Z","closedAt":"2018-08-13T13:20:23Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"b60205"},{"name":"status/blocked","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533654811000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/359","number":359,"title":"Limit test commands to only operate in test rooms","body":"In the same vein as #358 , commands like corobo render test should not be possible on the main rooms, even not in offtopic rooms.","comments":7,"createdAt":"2017-11-22T14:12:57Z","updatedAt":"2018-08-07T15:13:31Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"b60205"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533435506000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/380","number":380,"title":"Move constants into config using get_configuration_template","body":"plugins/constants.py should be removed, replaced with config variables defined using get_configuration_template\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":2,"createdAt":"2017-11-26T12:43:37Z","updatedAt":"2018-08-05T02:18:26Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534045736000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/381","number":381,"title":"answers plugin: Should use get_configuration_template","body":"Replace environment variables with config variables\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":1,"createdAt":"2017-11-26T12:49:43Z","updatedAt":"2018-08-12T03:48:56Z","closedAt":"2018-08-12T03:48:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533893719000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/382","number":382,"title":"labhub plugin: Should use get_configuration_template","body":"Replace environment variables with config variables\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":1,"createdAt":"2017-11-26T12:49:43Z","updatedAt":"2018-08-10T09:35:19Z","closedAt":"2018-08-10T09:35:19Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534045736000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/383","number":383,"title":"wolfram_alpha plugin: Should use get_configuration_template","body":"Replace environment variables with config variables\nsee http://errbot.io/en/latest/user_guide/plugin_development/configuration.html","comments":2,"createdAt":"2017-11-26T12:49:45Z","updatedAt":"2018-08-12T03:48:56Z","closedAt":"2018-08-12T03:48:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1535902777000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/187","number":187,"title":"typo: Correct the spelling of 'participants'","body":"In https://github.com/coala/community/blob/master/gamification/process/update.py there is a typo.\nThe spelling of participants  is written as particiapnts which needs to be corrected.\nThis would be a good newcomer issue","comments":0,"createdAt":"2018-09-02T15:38:06Z","updatedAt":"2018-09-02T15:39:37Z","closedAt":null,"state":"open","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1535807255000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/184","number":184,"title":"Make .ci/build.sh re-runnable","body":".ci/build.sh contains commands like mkdir private _site public, which assume a clean repository.\nIt should be enhanced to expect to be re-run after a partial or compete build is finished.","comments":1,"createdAt":"2018-08-20T23:04:53Z","updatedAt":"2018-09-01T13:07:35Z","closedAt":"2018-09-01T13:07:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"9cc6fc"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534834548000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/185","number":185,"title":"Error message when gh-board does not exist is confusing","body":"See https://gitter.im/coala/community?at=5b7baa45d8d36815e56a0c8a","comments":0,"createdAt":"2018-08-21T06:55:48Z","updatedAt":"2018-08-21T06:55:48Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ccf945"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533564335000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/175","number":175,"title":"Reach 100% test coverage","body":"This will take a while, but we can break it up into smaller achievable sub-tasks.","comments":0,"createdAt":"2018-08-06T14:05:35Z","updatedAt":"2018-08-06T14:05:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533829497000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/176","number":176,"title":"Get 100% coverage for the data app","body":"Related to #175","comments":0,"createdAt":"2018-08-08T10:58:27Z","updatedAt":"2018-08-09T15:44:57Z","closedAt":"2018-08-09T15:44:57Z","state":"closed","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534806867000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/181","number":181,"title":"Add meta-review to Gamification app","body":"We have both meta-review and gamification.\nAnd the rules for 'Developer' just changed to require use of meta-review, so that needs to be added to gamification\ncoala/coala@42a3ffa","comments":4,"createdAt":"2018-08-11T13:16:08Z","updatedAt":"2018-08-20T23:14:27Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ccf945"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534479556000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/182","number":182,"title":"Add support for Django 2.x","body":"We were initially using Django 2.x but at that time django-distill doesn't has the support for the same, so we downgraded to a lesser version. But as replied at this issue they have fixed the problem. So, I think we could update this repo to use Django 2.x with some minor changes.","comments":1,"createdAt":"2018-08-17T03:44:08Z","updatedAt":"2018-08-17T04:19:16Z","closedAt":null,"state":"open","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"area/ci","color":"4c95ad"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533393130000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/165","number":165,"title":"gitorg.py: Unused variable","body":"Pyflakes error report =>\n./gci/gitorg.py:55: local variable 'e' is assigned to but never used\n\ndifficulty/newcomer","comments":2,"createdAt":"2018-07-19T11:42:32Z","updatedAt":"2018-08-04T14:32:10Z","closedAt":"2018-08-04T14:32:10Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"cypher-naman","avatarUrl":"https://avatars1.githubusercontent.com/u/36116312?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/style","color":"93f486"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533810075000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/172","number":172,"title":".travis.yml: Disable AUTH=true job for PRs ","body":"Travis PR builds do not get tokens, so we have effectively two identical jobs running for PRs.  And AUTH=true is confusing as it suggests some auth might exist.\nWe do want two jobs running for builds on forks, and for master builds.\nSee coala core .travis.yml for how to disable jobs on PRs","comments":0,"createdAt":"2018-07-28T15:34:10Z","updatedAt":"2018-08-09T10:21:15Z","closedAt":"2018-08-09T10:21:15Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"4c95ad"},{"name":"bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533565454000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/129","number":129,"title":"Add jinja bear to .coafiles","body":"The templates are in jinja format.\nWe have a bear for those.","comments":0,"createdAt":"2018-04-19T03:09:08Z","updatedAt":"2018-08-06T14:24:14Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"ccf945"},{"name":"status/blocked","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533989380000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/136","number":136,"title":"Setup gamification app","body":"For the Newcomer metrics and Gamification project, we need an app name gamification with models User,  Activity, Level, and Badge with their required methods.","comments":1,"createdAt":"2018-05-23T06:01:13Z","updatedAt":"2018-08-11T12:09:40Z","closedAt":"2018-08-11T12:09:39Z","state":"closed","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gci-leaders","updatedAtMs":1535475858000,"issue":{"htmlUrl":"https://github.com/coala/gci-leaders/issues/2","number":2,"title":"Create a README.md","body":"The new README should explain the\n\nbasic objects of the projects, and\nthe technologies used,\nhow developers can build it","comments":3,"createdAt":"2017-12-05T00:58:41Z","updatedAt":"2018-08-28T17:04:18Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"ffcce2"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533793109000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/154","number":154,"title":"Inline source links render badly","body":"This comment\n#147 (comment)\nrenders very badly in meta-review","comments":0,"createdAt":"2018-08-09T05:38:25Z","updatedAt":"2018-08-09T05:38:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533893725000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/151","number":151,"title":"Enable source map in production","body":"Real production apps might not want this, but we want this to ease reviewing of MR preview and easier reporting of bugs in general.\nThis will give proper stack traces just like in development mode.","comments":1,"createdAt":"2018-08-07T13:47:15Z","updatedAt":"2018-08-10T09:35:25Z","closedAt":"2018-08-10T09:35:25Z","state":"closed","user":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"owner":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"assignee":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"labels":[{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533830430000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/152","number":152,"title":"README.md: Add meta-review section","body":"I'll take this ;)","comments":0,"createdAt":"2018-08-09T00:53:03Z","updatedAt":"2018-08-09T16:00:30Z","closedAt":"2018-08-09T16:00:30Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533801317000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/146","number":146,"title":"Implement ability to do meta-reviews directly on gh-board","body":"s.t. users can add/remove reactions directly on gh-board.","comments":0,"createdAt":"2018-08-04T02:29:56Z","updatedAt":"2018-08-09T07:55:17Z","closedAt":"2018-08-09T07:55:17Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535886070000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/148","number":148,"title":"package.json: tab is mistakenly used","body":"gh-board/package.json\n    \n    \n         Line 110\n      in\n      3638063\n    \n    \n    \n    \n\n        \n          \n           ]","comments":2,"createdAt":"2018-08-04T02:55:01Z","updatedAt":"2018-09-02T11:01:10Z","closedAt":"2018-09-02T11:01:10Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"},{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533428783000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/149","number":149,"title":"meta-review ignore content has wrong regular expression","body":"gh-board/src/github-client.js\n    \n    \n         Line 226\n      in\n      d1a7ea3\n    \n    \n    \n    \n\n        \n          \n           const ignoreContent = '@gitmate-bot @rultor /^(unack|ack)/g'; \n        \n    \n  \n\n\n\n  \n    \n      gh-board/script/fetch-issues.js\n    \n    \n         Line 34\n      in\n      d1a7ea3\n    \n    \n    \n    \n\n        \n          \n           '@gitmate-bot @rultor /^(unack|ack)/g'; \n        \n    \n  \n\n\nShould be\n^(ack|unack)\ninstead.\nSee difference:\n> 'ack 123'.match(/^(ack|unack)/g)\n[ 'ack' ]\n> 'ack 123'.match('/^(ack|unack)/g')\nnull\n> 'ack 123'.match('^(ack|unack)')\n[ 'ack', 'ack', index: 0, input: 'ack 123' ]","comments":1,"createdAt":"2018-08-04T07:08:57Z","updatedAt":"2018-08-05T00:26:23Z","closedAt":"2018-08-05T00:26:23Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535305857000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/137","number":137,"title":"router.jsx  'replace' is defined but never used ","body":"/home/travis/build/coala/gh-board/src/router.jsx\n30:22  warning  'replace' is defined but never used  no-unused-vars","comments":10,"createdAt":"2018-07-29T14:27:17Z","updatedAt":"2018-08-26T17:50:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ANURADHAJHA99","avatarUrl":"https://avatars2.githubusercontent.com/u/34815869?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1533343950000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/84","number":84,"title":"UI Enhancements","body":"Listing few general areas where the UI can be enhanced and made easier to use:\n\nIt'd be great to have some breathing space around the emoji button row and between the buttons as well. That'd\n\n\nwould remove cluttering\nbe easily clickable\nfont size of emoji's needs to grow 2x to have a clear view\n\n\n\nMeta Review button click action - Clicking on a button should add a small chip / banner on this card telling that it has been meta-reviewed by you or some check mark which shows that reviewer has clicked an emoji button.\n\nAlso a nice idea would be to add a \"+1\" inside the button indicating that it has been clicked, like github does.","comments":3,"createdAt":"2018-07-21T16:43:23Z","updatedAt":"2018-08-04T00:52:30Z","closedAt":"2018-08-04T00:52:30Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"enhancement","color":"84b6eb"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535334667000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/88","number":88,"title":"log \"warning: no available reaction data! ... error: undefined\"","body":"https://travis-ci.org/jayvdb/gh-board/jobs/408352263#L1581\ncould it be 'errors: 0'\nOr something shorter.\nExcessive logging makes it harder to spot real problems.","comments":3,"createdAt":"2018-07-26T09:34:26Z","updatedAt":"2018-08-27T01:51:07Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"},{"name":"importance/low","color":"1394a0"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535882932000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/100","number":100,"title":"Org logos","body":"Repos should show the logo of their org / user","comments":4,"createdAt":"2018-07-27T07:17:51Z","updatedAt":"2018-09-02T10:08:52Z","closedAt":"2018-09-02T10:08:52Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1534730278000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/6","number":6,"title":"Add configuration support","body":"#1 is going to need to include configurability, so that repos with different structure can work in different ways.  i.e. we need to at least support @philschatz 's label system and derived gh-board layout, and support what @ryanprior likes, and what @coala needs, so that our patches will be able to make it back through the forks to the main repo (c.f. #2 )\nThere is one existing configuration item upstream, which is 'SAMPLE_REPOS' , and coala has added 'REPOSITORIES' for the pre-fetching.  I am surprised that there are no forks which have modified this (c.f. #5), as that seems like a logical easy way to improve the front page (c.f. #3).\nIncluding configuration in the master branch causes forks to diverge.  We need to avoid that.\nSome options for where to put the configuration:\n\nthe wiki\na different branch\nan issue ;-)\n\nOr, the configuration could be all derived from GitHub, if we ignore SAMPLE_REPOS. (and if we build a way to easily configure the front page, nobody will try to abuse this anyway.)  It will increase build time to extract an ideal layout based on GitHub org/repo metadata.  Also fetching the list of repos for an org requires an extra scope which orgs may not want in their Travis env vars, and if they use secure vars in the .travis.yml , their fork diverges.","comments":1,"createdAt":"2017-12-22T05:38:50Z","updatedAt":"2018-08-20T01:57:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"d30a8d"}]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1535416989000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/29","number":29,"title":"Undefined function in issue-blurb.jsx","body":"onClickIcon is used here but defined nowhere.\nIt seems onClick attribute is not being used by the library react-octicons: https://github.com/philschatz/react-octicons/blob/master/build.js#L29, which is why the undefined onClickIcon doesn't lead to an exception.\nNeeds investigation.\nRelated to #17 (comment)","comments":3,"createdAt":"2018-05-07T14:40:51Z","updatedAt":"2018-08-28T00:43:09Z","closedAt":"2018-08-28T00:43:09Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/low","color":"07eded"},{"name":"importance/medium","color":"65f23e"}]}},{"repoOwner":"coala","repoName":"coala-html","updatedAtMs":1534168336000,"issue":{"htmlUrl":"https://github.com/coala/coala-html/issues/126","number":126,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coalafor reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-25T16:13:17Z","updatedAt":"2018-08-13T13:52:16Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535809418000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/277","number":277,"title":"Bookmarkable example on homepage","body":"Currently, when selecting to a language example, we have no way to bookmark it.\n\nThis can be done via adding a query parameter to the url after the selection.\nand add\ndocument.getElementById('example').scrollIntoView();\n\nafter adding id to the example's div","comments":4,"createdAt":"2018-05-23T09:19:20Z","updatedAt":"2018-09-01T13:43:38Z","closedAt":null,"state":"open","user":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"owner":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"assignee":{"login":"anstkras","avatarUrl":"https://avatars2.githubusercontent.com/u/16261056?v=4"},"labels":[{"name":"area/documentation","color":"ededed"},{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"type/bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535417879000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/270","number":270,"title":"\"Add Bear\" Button : Change font family to Roboto from Times New Roman","body":"From coala Online :","comments":8,"createdAt":"2018-04-09T11:11:20Z","updatedAt":"2018-08-28T00:57:59Z","closedAt":"2018-08-28T00:57:59Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1534168319000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/237","number":237,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":3,"createdAt":"2017-10-27T13:56:07Z","updatedAt":"2018-08-13T13:51:59Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535811326000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/69","number":69,"title":"allow users to copy code snippets to clipboard with a single button","body":"https://clipboardjs.com/ is a non flash based method to do this\nOpened via gitter by @sudheesh001","comments":6,"createdAt":"2017-01-30T11:33:57Z","updatedAt":"2018-09-01T14:15:26Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"}]}},{"repoOwner":"coala","repoName":"coalaCSS","updatedAtMs":1534168429000,"issue":{"htmlUrl":"https://github.com/coala/coalaCSS/issues/21","number":21,"title":"Add ISSUE_TEMPLATE.md","body":"Add a file named ISSUE_TEMPLATE.md which includes general information and guidelines for issue reporter, you can see ISSUE_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T16:39:11Z","updatedAt":"2018-08-13T13:53:49Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"coalaCSS","updatedAtMs":1534588545000,"issue":{"htmlUrl":"https://github.com/coala/coalaCSS/issues/22","number":22,"title":"Add PULL_REQUEST_TEMPLATE.md","body":"Add a file named PULL_REQUEST_TEMPLATE.md which includes general information and guidelines for the author of Pull Request, you can see PULL_REQUEST_TEMPLATE.md of coala repository for reference.\nlabel: initiatives/gci\nOpened by @Monal5031 at gitter//Monal5031","comments":0,"createdAt":"2017-10-27T17:11:23Z","updatedAt":"2018-08-18T10:35:45Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534402619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2612","number":2612,"title":"Python minimum version 3.4.4","body":"Closes #2611\nCloses #2488","comments":13,"createdAt":"2018-07-17T03:58:45Z","updatedAt":"2018-08-16T06:56:59Z","closedAt":"2018-08-16T06:56:59Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"},{"name":"type/bug","color":"e11d21"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2612","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNTQ1MzY4MQ==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-405453681","bodyText":"Demo of the py27 and py33 jobs: https://travis-ci.org/jayvdb/coala-bears/builds/404723796\nThat is commit jayvdb@8229d58 which has parent 807b537, same commit as this PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T04:10:31Z","lastEditedAt":null,"updatedAt":"2018-07-17T04:10:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTQ1Mzg4Mw==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-405453883","bodyText":"The GitMate PR error is because of the revert commit, 44012a9 , which goes over the length limit because #2241 hasnt been finished.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T04:12:14Z","lastEditedAt":null,"updatedAt":"2018-07-17T04:12:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTUxMDY1Ng==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-405510656","bodyText":"Demo https://travis-ci.org/jayvdb/coala-bears/builds/404768441\nis commit jayvdb@3728c6d with parent jayvdb@ace719b which is the same as this PR","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T08:57:04Z","lastEditedAt":null,"updatedAt":"2018-07-17T08:57:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzA2NDk0Mw==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-413064943","bodyText":"Verified at https://travis-ci.org/jayvdb/coala-bears/builds/416160340","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T01:16:34Z","lastEditedAt":null,"updatedAt":"2018-08-15T01:16:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIxMTI4Mw==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-413211283","bodyText":"Fresh verification build https://travis-ci.org/jayvdb/coala-bears/builds/416374555\nTo verify yourself, cherry-pick the following and run on a fork\ndiff --git a/.travis.yml b/.travis.yml\nindex c3e4fb4..80b0b6c 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -24,7 +24,7 @@ stages:\n   - test\n   - moban\n   - name: unsupported\n-    if: branch = master AND type = push\n+    if: type != pull_request\n \n .check_moban: &check_moban\n   <<: *disable_global","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T14:16:03Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:16:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzQ0Mzc3OQ==","url":"https://github.com/coala/coala-bears/pull/2612#issuecomment-413443779","bodyText":"LGTM.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-08-16T06:49:30Z","lastEditedAt":null,"updatedAt":"2018-08-16T06:49:30Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533342711000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2613","number":2613,"title":"LineLengthBear: Migrate to aspects","body":"This migrates LineLengthBear to its respective\naspects and tastes.\nCloses #2602\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-17T04:14:43Z","updatedAt":"2018-08-04T00:31:51Z","closedAt":"2018-08-04T00:31:51Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2613","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjg5Nzk0MQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202897941","bodyText":"Below it says LANGUAGES = {'All'}.\nAnd the logic of this bear should work with any language.\nI dont believe we have any language properties which help with these settings.\nCan we drop languages here?\nI will need to see some new tests for this bear which use aspects in the settings; that will help us understand how this works.","diffHunk":"@@ -5,15 +5,33 @@\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+    Indentation,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+                Indentation,\n+            ]},\n+        languages=['python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-17T05:28:33Z","lastEditedAt":null,"updatedAt":"2018-07-17T05:28:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjg5ODA4MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202898080","bodyText":"Again, why py here?\nCan it be omitted?\nNeed tests to validate what works vs what doesnt work, so we can see if any coalib changes are needed to make this implementation sensible.","diffHunk":"@@ -49,4 +67,6 @@ def run(self,\n                     line=line_number + 1,\n                     column=max_line_length + 1,\n                     end_line=line_number + 1,\n-                    end_column=len(line))\n+                    end_column=len(line),\n+                    aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-17T05:29:41Z","lastEditedAt":null,"updatedAt":"2018-07-17T05:29:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjkyNTQ5MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202925490","bodyText":"We can't drop it. I don't know why but bear classes accept either 1 or 3 arguments. If I don't specify the language, it gives an error. We need a list of all languages here. I see most of the language files are imported here https://github.com/coala/coala/blob/master/coalib/bearlib/languages/__init__.py, can we import rest of the files there and make a function to return a list of all languages (in a separate PR)?","diffHunk":"@@ -5,15 +5,33 @@\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+    Indentation,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+                Indentation,\n+            ]},\n+        languages=['python'],","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-17T07:56:41Z","lastEditedAt":"2018-07-17T07:58:35Z","updatedAt":"2018-07-17T07:58:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjkyOTczMw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202929733","bodyText":"Currently, we have to pass the language here to create an object of the Formatting aspect. Otherwise, it pops an error, I will see if I can do some changes in the aspect core to omit this. I had explained the problem before https://gitter.im/coala/aspects?at=5b46f760b5efcd5aeef47912. But got no response.\nRegarding the tests, LocalBearTestHelper needs to be modified for adding the tests. Let me know whether to do it here or in a separate PR?","diffHunk":"@@ -49,4 +67,6 @@ def run(self,\n                     line=line_number + 1,\n                     column=max_line_length + 1,\n                     end_line=line_number + 1,\n-                    end_column=len(line))\n+                    end_column=len(line),\n+                    aspect=Formatting('py'),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-17T08:12:09Z","lastEditedAt":null,"updatedAt":"2018-07-17T08:12:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjk4NjYyMA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202986620","bodyText":"Yes, we need an object which represents 'all languages' (including Unknown) which can be imported and used here.","diffHunk":"@@ -5,15 +5,33 @@\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+    Indentation,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+                Indentation,\n+            ]},\n+        languages=['python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-17T11:31:37Z","lastEditedAt":null,"updatedAt":"2018-07-17T11:31:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjk4NjY3NQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r202986675","bodyText":"an approach you might like to try (test on a different fork; no PR necessary) is adding a bear setting for language : Language = Unknown , which you can pass to the Formatting aspect to make it happy.\nLocalBearTestHelper is in a different repo, so it needs to be a separate PR.","diffHunk":"@@ -49,4 +67,6 @@ def run(self,\n                     line=line_number + 1,\n                     column=max_line_length + 1,\n                     end_line=line_number + 1,\n-                    end_column=len(line))\n+                    end_column=len(line),\n+                    aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjYwOTQzMg==","createdAt":"2018-07-18T07:14:31Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-17T11:31:49Z","lastEditedAt":null,"updatedAt":"2018-07-17T11:31:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyNzkwNw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r205927907","bodyText":"including this aspect is confusing.\nThe test files do not use tabs, so this is irrelevant, and the bear has a default value, so it isnt needed here.\nCreate a separate test for the indent aspect.","diffHunk":"@@ -26,3 +30,29 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearAspectTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('LineLength')('Unknown', max_line_length=4),\n+        get_aspect('Indentation')('Unknown', indent_size=2),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:08:57Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:08:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyNzk1MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r205927950","bodyText":"as above.","diffHunk":"@@ -26,3 +30,29 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearAspectTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('LineLength')('Unknown', max_line_length=4),\n+        get_aspect('Indentation')('Unknown', indent_size=2),\n+        ]),\n+        )\n+\n+\n+LineLengthBearAspectPriorityTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('Indentation')('Unknown', indent_size=2),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:09:19Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:09:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzMTU1Nw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r205931557","bodyText":"Yes, you are right, seems like LineLengthBear is not for indentation. Even doing only settings={'indent_size': '4'} gives an error as the bear does not yield any result. I am removing this aspect from this bear. 👍","diffHunk":"@@ -26,3 +30,29 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearAspectTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=('testa',\n+                   'test line'),\n+    aspects=AspectList([\n+        get_aspect('LineLength')('Unknown', max_line_length=4),\n+        get_aspect('Indentation')('Unknown', indent_size=2),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-28T03:47:57Z","lastEditedAt":"2018-07-28T03:50:41Z","updatedAt":"2018-07-28T03:50:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM4OTYyMg==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207389622","bodyText":"This should be language: language = languages.Unknown.  Also this arg should be the first setting, immediately after file.\nWas there some problem doing that?\nI notice that AnnotationBear and IndentationBear uses language: str\nCPDBear uses language: language","diffHunk":"@@ -1,26 +1,43 @@\n import re\n+import logging\n \n from coalib.bearlib import deprecate_settings\n from coalib.bearlib.spacing.SpacingHelper import SpacingHelper\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.languages.Language import Language, UnknownLanguageError\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+            ]},\n+        ):\n     LANGUAGES = {'All'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     @deprecate_settings(indent_size='tab_width')\n     def run(self,\n             filename,\n             file,\n             max_line_length: int = 79,\n             indent_size: int = SpacingHelper.DEFAULT_TAB_WIDTH,\n             ignore_length_regex: typed_list(str) = (),\n+            language: str = None,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:05:49Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:05:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MTE0Mg==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207391142","bodyText":"this disappears when you use language: language","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:13:15Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:13:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MTUyNg==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207391526","bodyText":"Ideally coalib sets max_line_length automatically in coalib using aspects + language.\nA project for another day ... ;-)","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]\n+            except UnknownLanguageError:\n+                logging.warn(\n+                    language + ' is an invalid language name '\n+                    'or is not recognized by coala. Language specific '\n+                    'line length limitation can not be applied.'\n+                )\n+                language = Language['Unknown']\n+            else:\n+                if 'max_line_length' in language.attributes:\n+                    max_line_length = language.max_line_length","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:15:15Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:15:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MjA3OQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207392079","bodyText":"no.  we fall back to the setting , which will be in the arg max_line_length, which defaults to 79 cpl.\nBut most Language will never have a max_line_length, because most languages dont restrict that, so this warning is not user friendly, nor is it developer friendly.  We dont want patches for adding max_line_length to language definitions unless the language does restrict line length, and we know that is rare.","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]\n+            except UnknownLanguageError:\n+                logging.warn(\n+                    language + ' is an invalid language name '\n+                    'or is not recognized by coala. Language specific '\n+                    'line length limitation can not be applied.'\n+                )\n+                language = Language['Unknown']\n+            else:\n+                if 'max_line_length' in language.attributes:\n+                    max_line_length = language.max_line_length\n+                else:\n+                    logging.warn(\n+                        'Language ' + str(language) + ' does not have '\n+                        '`maximum line length` defined in coalang. '\n+                        'Falling back to 80 characters as maximum line length.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzM5NzA1Nw==","createdAt":"2018-08-03T05:37:50Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-02T22:18:11Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:18:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM5MjkxNw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207392917","bodyText":"closing brackets for these verify_local_bear calls should be hard set against the left margin","diffHunk":"@@ -26,3 +34,50 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearLangSpecificLineLengthTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=(invalid_VB_file,),\n+    settings={'language': 'VisualBasic'},\n+        )\n+\n+\n+LineLengthBearValidLanguageTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=(invalid_general_file,),\n+    settings={'language': 'C'},\n+        )","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-02T22:22:33Z","lastEditedAt":null,"updatedAt":"2018-08-02T22:22:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ0MDY3NQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207440675","bodyText":"Okay, I'll remove the warning :)","diffHunk":"@@ -30,7 +47,30 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if language:\n+            try:\n+                language = Language[language]\n+            except UnknownLanguageError:\n+                logging.warn(\n+                    language + ' is an invalid language name '\n+                    'or is not recognized by coala. Language specific '\n+                    'line length limitation can not be applied.'\n+                )\n+                language = Language['Unknown']\n+            else:\n+                if 'max_line_length' in language.attributes:\n+                    max_line_length = language.max_line_length\n+                else:\n+                    logging.warn(\n+                        'Language ' + str(language) + ' does not have '\n+                        '`maximum line length` defined in coalang. '\n+                        'Falling back to 80 characters as maximum line length.'","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-03T04:55:46Z","lastEditedAt":null,"updatedAt":"2018-08-03T04:55:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ0NDk4MQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207444981","bodyText":"The problem I am facing with language: language is in case of an invalid language. It is designed for bears where one valid language is compulsory. If the language is invalid, it jumps out of the bear with ValueError (without running the bear), we won't be able to set the language to Unknown if there is an invalid language. Even if I do language: language = None, it doesn't help.","diffHunk":"@@ -1,26 +1,43 @@\n import re\n+import logging\n \n from coalib.bearlib import deprecate_settings\n from coalib.bearlib.spacing.SpacingHelper import SpacingHelper\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.languages.Language import Language, UnknownLanguageError\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+            ]},\n+        ):\n     LANGUAGES = {'All'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     @deprecate_settings(indent_size='tab_width')\n     def run(self,\n             filename,\n             file,\n             max_line_length: int = 79,\n             indent_size: int = SpacingHelper.DEFAULT_TAB_WIDTH,\n             ignore_length_regex: typed_list(str) = (),\n+            language: str = None,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-03T05:35:38Z","lastEditedAt":null,"updatedAt":"2018-08-03T05:35:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ1NDUwNQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207454505","bodyText":"If the language is invalid, it should give a ValueError.  They should omit it, or specify language = Unknown ;-).","diffHunk":"@@ -1,26 +1,43 @@\n import re\n+import logging\n \n from coalib.bearlib import deprecate_settings\n from coalib.bearlib.spacing.SpacingHelper import SpacingHelper\n from coalib.bears.LocalBear import LocalBear\n from coalib.results.Result import Result\n from coalib.settings.Setting import typed_list\n+from coalib.bearlib.languages.Language import Language, UnknownLanguageError\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import (\n+    Formatting,\n+    LineLength,\n+)\n \n \n-class LineLengthBear(LocalBear):\n+class LineLengthBear(\n+        LocalBear,\n+        aspects={\n+            'detect': [\n+                LineLength,\n+            ]},\n+        ):\n     LANGUAGES = {'All'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     @deprecate_settings(indent_size='tab_width')\n     def run(self,\n             filename,\n             file,\n             max_line_length: int = 79,\n             indent_size: int = SpacingHelper.DEFAULT_TAB_WIDTH,\n             ignore_length_regex: typed_list(str) = (),\n+            language: str = None,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T06:44:51Z","lastEditedAt":null,"updatedAt":"2018-08-03T06:44:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ5Njc4Nw==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207496787","bodyText":"If the user has specified a language, we should respect that when we create the Result.","diffHunk":"@@ -30,7 +46,13 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.\n         '''\n+        if 'max_line_length' in language.attributes:\n+            max_line_length = language.max_line_length\n+        else:\n+            language = Language['Unknown']","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T09:52:06Z","lastEditedAt":null,"updatedAt":"2018-08-03T09:52:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ5Njk2MA==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207496960","bodyText":"#2613 (comment) not done.","diffHunk":"@@ -26,3 +34,42 @@\n     settings={\n         'max_line_length': '4',\n         'ignore_length_regex': 'http://, https://, ftp://'})\n+\n+\n+LineLengthBearLangSpecificLineLengthTest = verify_local_bear(\n+    LineLengthBear,\n+    valid_files=(test_file,),\n+    invalid_files=(invalid_VB_file,),\n+    settings={'language': 'VisualBasic'},\n+    )","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T09:52:46Z","lastEditedAt":null,"updatedAt":"2018-08-03T09:52:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU0MTM5NQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207541395","bodyText":"should have also been moved up","diffHunk":"@@ -30,7 +46,11 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQxODc5OQ==","createdAt":"2018-08-03T14:16:34Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-03T13:20:20Z","lastEditedAt":null,"updatedAt":"2018-08-03T13:20:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU1ODc2OQ==","url":"https://github.com/coala/coala-bears/pull/2613#discussion_r207558769","bodyText":"Yeah, forgot, will move up once core PR is merged so that there's only one next push :)","diffHunk":"@@ -30,7 +46,11 @@ def run(self,\n         :param indent_size:         Number of spaces per indentation level.\n         :param ignore_length_regex: Lines matching each of the regular\n                                     expressions in this list will be ignored.\n+        :param language:            Programming language of the source code.","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-03T14:16:46Z","lastEditedAt":null,"updatedAt":"2018-08-03T14:16:46Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533461236000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2615","number":2615,"title":"setup.cfg: Remove pytest config 'python_functions'","body":"setup.cfg currently contains:\npython_functions = *_test\nThis has the effect of allowing functions like test(..) to\nexist and not be considered test functions.  Two sets have appeared.\nWhen pytest defaults are used, these two sets of functions called\ntest(..) result in pytest loading failures as they are not valid\npytest test functions, but are helper functions for unittests.\nThe arguments on these functions should be fixture names, and they\nare not.  This confuses people who know pytest naming conventions.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-07-17T15:17:31Z","updatedAt":"2018-08-05T09:27:16Z","closedAt":"2018-08-05T09:26:53Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2615","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533314274000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2625","number":2625,"title":"generate_bear_requirements.py: Generate cabal requirements","body":"Closes #2617","comments":7,"createdAt":"2018-07-19T17:57:56Z","updatedAt":"2018-08-03T16:37:54Z","closedAt":"2018-07-21T07:27:11Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"importance/medium","color":"fbca04"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2625","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MzgxNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203953817","bodyText":"there are more to come, so create a list, one line for each.","diffHunk":"@@ -189,7 +210,8 @@ def deep_diff(target, src):\n \n \n def sort_requirements(req_dict):\n-    for key in ['pip_requirements', 'npm_requirements', 'gem_requirements']:\n+    for key in ['pip_requirements', 'npm_requirements', 'gem_requirements',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:02:00Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:02:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDIzMg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954232","bodyText":"as you are creating a new function, write a better algorithm ;-)","diffHunk":"@@ -94,28 +97,42 @@ def get_inherited_requirements():\n \n     return inherited_requirements\n \n+def helper(requirements, pip_requirements, npm_requirements,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:04:48Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:04:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDQ2Mg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954462","bodyText":"no trailing blank line pls","diffHunk":"@@ -0,0 +1,16 @@\n+Name: coala-bears\n+Version: 0.10\n+cabal-version: >= 1.2\n+build-type: Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, hlint==1.9.27{%\n+  for package, data in cabal_requirements.items() | sort %}, {{ package }}{{ data.version }}{%\n+  endfor %}{# for package, data in cabal_requirements.items() | sort #}\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:06:14Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:06:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDUxNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954517","bodyText":"use variables","diffHunk":"@@ -0,0 +1,16 @@\n+Name: coala-bears","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:06:35Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:06:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1NDUzNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r203954537","bodyText":"use variables","diffHunk":"@@ -0,0 +1,16 @@\n+Name: coala-bears\n+Version: 0.10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T07:06:43Z","lastEditedAt":null,"updatedAt":"2018-07-20T07:06:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA4MDAxOQ==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204080019","bodyText":"{{ \",\" if not loop.last }}","diffHunk":"@@ -0,0 +1,20 @@\n+Name:               {{ name }}\n+Version:            0.12.0\n+cabal-version:      >= 1.2\n+build-type:         Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends:    base,\n+                    Cabal>=1.16,\n+                    safe==0.3.9,\n+                    cmdargs==0.10.14,\n+                    hlint==1.9.27\n+{% for package, data in cabal_requirements.items() | sort %}\n+                    {{ package }}{{ data.version }},","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T15:21:19Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:21:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA4MDkwNQ==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204080905","bodyText":"ugh ... https://github.com/coala/coala-bears/pulls?q=is%3Apr+HaskellLintBear+is%3Aclosed\nAssigned to you #1358","diffHunk":"@@ -0,0 +1,20 @@\n+Name:               {{ name }}\n+Version:            0.12.0\n+cabal-version:      >= 1.2\n+build-type:         Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends:    base,\n+                    Cabal>=1.16,\n+                    safe==0.3.9,\n+                    cmdargs==0.10.14,\n+                    hlint==1.9.27","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T15:24:08Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:24:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA5OTA1Ng==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204099056","bodyText":"Why haven't you added these requirements in bear-requirements.yaml?","diffHunk":"@@ -0,0 +1,18 @@\n+Name: {{ name }}\n+{# cabal cannot parse .dev version syntax #}\n+Version: {{ version[:-4] }}\n+cabal-version: >= 1.2\n+build-type: Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, hlint==1.9.27","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-20T16:26:19Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:26:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwMDUyMg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204100522","bodyText":"bear-requirements.yaml is generated from generate_bear_requirements.py. It will only have dependencies from the bears","diffHunk":"@@ -0,0 +1,18 @@\n+Name: {{ name }}\n+{# cabal cannot parse .dev version syntax #}\n+Version: {{ version[:-4] }}\n+cabal-version: >= 1.2\n+build-type: Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, hlint==1.9.27","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-20T16:31:49Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:31:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwMjU2Mw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204102563","bodyText":"cabal was not able to parse this list  😓 I am sticking with the single line","diffHunk":"@@ -0,0 +1,20 @@\n+Name:               {{ name }}\n+Version:            0.12.0\n+cabal-version:      >= 1.2\n+build-type:         Simple\n+\n+-- safe 0.3.9 is needed to coexist with Cabal 1.16\n+-- safe 0.3.10 requires Cabal 1.18\n+\n+-- Note trusty apt package \"haskell-platform\" includes mtl-2.1.2\n+-- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n+\n+library\n+  build-depends:    base,\n+                    Cabal>=1.16,\n+                    safe==0.3.9,\n+                    cmdargs==0.10.14,\n+                    hlint==1.9.27\n+{% for package, data in cabal_requirements.items() | sort %}\n+                    {{ package }}{{ data.version }},","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-20T16:39:32Z","lastEditedAt":"2018-07-20T16:46:46Z","updatedAt":"2018-07-20T16:46:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNTE1MA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204125150","bodyText":"move these to the next line indented, as we will want to add entries at the end, so also use a trailing comma with closing bracket on the following line.","diffHunk":"@@ -44,6 +47,10 @@\n \n PROJECT_BEAR_DIR = os.path.abspath(os.path.join(PROJECT_DIR, 'bears'))\n \n+SUPPORTED_INSTANCES = ('PipRequirement',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:02:44Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:02:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNTU4Mw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204125583","bodyText":"80 cpl\nthis file isnt under CI yet, so check your changes manually with pyflakes, pycodestyle and pydocstyle.\nbut ... if you return instance_dict here, the sorting can happen outside of the function, and we avoid returning tuples which are inherently unsuitable here as the size of them increases as new requirement types are added.","diffHunk":"@@ -95,28 +102,26 @@ def get_inherited_requirements():\n     return inherited_requirements\n \n \n+def helper(requirements, instance_dict):\n+    for requirement in requirements:\n+        if isinstance(requirement, AnyOneOfRequirements):\n+            helper(requirement.requirements, instance_dict)\n+        elif any(type(requirement).__name__ == instance\n+                 for instance in SUPPORTED_INSTANCES):\n+            instance_dict[type(requirement).__name__].add(requirement)\n+\n+\n def get_all_requirements(bears):\n-    pip_requirements = []\n-    npm_requirements = []\n-    gem_requirements = []\n+    instance_dict ={}\n+\n+    for instance in SUPPORTED_INSTANCES:\n+        instance_dict[instance] = set()\n \n     for bear in bears:\n-        for requirement in bear.REQUIREMENTS:\n-            if isinstance(requirement, PipRequirement) and \\\n-               requirement not in pip_requirements:\n-                pip_requirements.append(requirement)\n-            elif isinstance(requirement, NpmRequirement) and \\\n-               requirement not in npm_requirements:\n-                npm_requirements.append(requirement)\n-            elif isinstance(requirement, GemRequirement) and \\\n-               requirement not in gem_requirements:\n-                gem_requirements.append(requirement)\n-\n-    return (\n-        sorted(pip_requirements, key=lambda requirement: requirement.package),\n-        sorted(npm_requirements, key=lambda requirement: requirement.package),\n-        sorted(gem_requirements, key=lambda requirement: requirement.package)\n-        )\n+        helper(bear.REQUIREMENTS, instance_dict)\n+\n+    return [sorted(instance_dict[instance], key=lambda requirement: requirement.package)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:04:13Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:04:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNjIwNw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204126207","bodyText":"store this list in a global variable structured ready for the next entry to be added as a single line modification.","diffHunk":"@@ -189,7 +198,10 @@ def deep_diff(target, src):\n \n \n def sort_requirements(req_dict):\n-    for key in ['pip_requirements', 'npm_requirements', 'gem_requirements']:\n+    for key in ['pip_requirements',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:06:28Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:06:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyODk1OA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204128958","bodyText":"As mentioned above, we should avoid returning tuples.\nget_all_requirements could return something else...\nalternatively...\nall_reqs = get_all_requirements(get_all_bears(bear_dirs))\npip_reqs, npm_reqs, gem_reqs = all_reqs[0:2]\n....\nrequirements['cabal_requirements'] = get_gem_requirements(all_reqs[3])\nThen it is easy to add another one afterwards.","diffHunk":"@@ -202,7 +214,7 @@ def sort_requirements(req_dict):\n     if args.bear_dirs is not None:\n         bear_dirs.extend(args.bear_dirs)\n \n-    pip_reqs, npm_reqs, gem_reqs = (\n+    pip_reqs, npm_reqs, gem_reqs, cabal_reqs = (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:16:47Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:16:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyOTIwMw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204129203","bodyText":"split on . and use the first three","diffHunk":"@@ -0,0 +1,18 @@\n+Name: {{ name }}\n+{# cabal cannot parse .dev version syntax #}\n+Version: {{ version[:-4] }}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjc2ODE5NA==","createdAt":"2018-07-20T19:11:13Z","content":"LAUGH","user":{"login":"anctartica","name":""}},{"id":"MDg6UmVhY3Rpb24yNjc2ODIwNA==","createdAt":"2018-07-20T19:11:21Z","content":"HOORAY","user":{"login":"anctartica","name":""}}],"createdAt":"2018-07-20T18:17:41Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:17:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE0MjAzNg==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204142036","bodyText":"done checking under coala","diffHunk":"@@ -95,28 +102,26 @@ def get_inherited_requirements():\n     return inherited_requirements\n \n \n+def helper(requirements, instance_dict):\n+    for requirement in requirements:\n+        if isinstance(requirement, AnyOneOfRequirements):\n+            helper(requirement.requirements, instance_dict)\n+        elif any(type(requirement).__name__ == instance\n+                 for instance in SUPPORTED_INSTANCES):\n+            instance_dict[type(requirement).__name__].add(requirement)\n+\n+\n def get_all_requirements(bears):\n-    pip_requirements = []\n-    npm_requirements = []\n-    gem_requirements = []\n+    instance_dict ={}\n+\n+    for instance in SUPPORTED_INSTANCES:\n+        instance_dict[instance] = set()\n \n     for bear in bears:\n-        for requirement in bear.REQUIREMENTS:\n-            if isinstance(requirement, PipRequirement) and \\\n-               requirement not in pip_requirements:\n-                pip_requirements.append(requirement)\n-            elif isinstance(requirement, NpmRequirement) and \\\n-               requirement not in npm_requirements:\n-                npm_requirements.append(requirement)\n-            elif isinstance(requirement, GemRequirement) and \\\n-               requirement not in gem_requirements:\n-                gem_requirements.append(requirement)\n-\n-    return (\n-        sorted(pip_requirements, key=lambda requirement: requirement.package),\n-        sorted(npm_requirements, key=lambda requirement: requirement.package),\n-        sorted(gem_requirements, key=lambda requirement: requirement.package)\n-        )\n+        helper(bear.REQUIREMENTS, instance_dict)\n+\n+    return [sorted(instance_dict[instance], key=lambda requirement: requirement.package)","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-20T19:05:16Z","lastEditedAt":null,"updatedAt":"2018-07-20T19:05:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE5ODAwMA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204198000","bodyText":"trailing comma","diffHunk":"@@ -44,6 +41,20 @@\n \n PROJECT_BEAR_DIR = os.path.abspath(os.path.join(PROJECT_DIR, 'bears'))\n \n+SUPPORTED_INSTANCES = (\n+    'PipRequirement',\n+    'NpmRequirement',\n+    'GemRequirement',\n+    'CabalRequirement',\n+)\n+\n+INSTANCE_NAMES = (\n+    'pip_requirements',\n+    'npm_requirements',\n+    'gem_requirements',\n+    'cabal_requirements'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T01:33:33Z","lastEditedAt":null,"updatedAt":"2018-07-21T01:33:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE5ODAyMw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204198023","bodyText":"this should have been a defaultdict(set)","diffHunk":"@@ -95,28 +106,25 @@ def get_inherited_requirements():\n     return inherited_requirements\n \n \n+def helper(requirements, instance_dict):\n+    for requirement in requirements:\n+        if isinstance(requirement, AnyOneOfRequirements):\n+            helper(requirement.requirements, instance_dict)\n+        elif any(type(requirement).__name__ == instance\n+                 for instance in SUPPORTED_INSTANCES):\n+            instance_dict[type(requirement).__name__].add(requirement)\n+\n+\n def get_all_requirements(bears):\n-    pip_requirements = []\n-    npm_requirements = []\n-    gem_requirements = []\n+    instance_dict = {}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T01:34:14Z","lastEditedAt":null,"updatedAt":"2018-07-21T01:34:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE5ODE5MA==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204198190","bodyText":"oh its failing.\nprobably because ShellCheck needs to be last.\nManually reorder them in bear-requirements.yaml , and leave a note that the order is needed for cabal to work","diffHunk":"@@ -10,4 +10,4 @@ build-type: Simple\n -- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n \n library\n-  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ghc-mod==5.6.0.0, hlint==1.9.27, ShellCheck==0.4.1\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ShellCheck==0.4.1, ghc-mod==5.6.0, hlint==1.9.27","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T01:39:10Z","lastEditedAt":null,"updatedAt":"2018-07-21T01:39:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIwMzU0Mw==","url":"https://github.com/coala/coala-bears/pull/2625#discussion_r204203543","bodyText":"i tested this.. it still didn't work\nthe version for ghc-mod should be 5.6.0.0 rather than 5.6.0 as specified in the bear","diffHunk":"@@ -10,4 +10,4 @@ build-type: Simple\n -- which is incompatible with ShellCheck 0.4.1 which needs mtl-2.2.1\n \n library\n-  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ghc-mod==5.6.0.0, hlint==1.9.27, ShellCheck==0.4.1\n+  build-depends: base, Cabal>=1.16, safe==0.3.9, cmdargs==0.10.14, ShellCheck==0.4.1, ghc-mod==5.6.0, hlint==1.9.27","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-07-21T06:08:16Z","lastEditedAt":"2018-07-21T06:08:26Z","updatedAt":"2018-07-21T06:08:26Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533581461000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2641","number":2641,"title":"bear-requirements.txt: Bump pyflakes","body":"Upgrades pyflakes version to 2.0.0\nCloses #2621\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-07-24T14:58:46Z","updatedAt":"2018-08-06T18:51:01Z","closedAt":"2018-08-06T18:51:01Z","state":"merged","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2641","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNzg5NzAzOA==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-407897038","bodyText":"Based on https://gitlab.com/jayvdb/coala-pyflakes/-/jobs/84416570 , we need to ensure we have a test which has an error on line 1, to ensure that we have the right setting for 0 or 1 based line offsets.\nAlso the autoflake bear (PyUnusedCodeBear?).\nIf there is no test covering that, create an issue and fix pls.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-25T21:10:50Z","lastEditedAt":null,"updatedAt":"2018-07-25T21:10:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODkzNTI1Mw==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-408935253","bodyText":"This was handled in here. Forgot to mention here. The problem was that python AST starts col_offset from 0 and I was feeding coalib the same. Now the results have been fixed in coala-pyflakes. A test case for the same has been added here. The error is made to occur at 0 offset.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-30T16:58:06Z","lastEditedAt":"2018-07-30T17:00:28Z","updatedAt":"2018-07-30T17:00:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODkzOTEzMA==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-408939130","bodyText":"@MacBox7 , ideally we have tests in this repo which verify that the line/col offsets of the bears are correct.\nAll bears should have an error on line 1, and verify that the error reported is against line 1 and not against line 0.  Likewise with columns.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-30T17:10:49Z","lastEditedAt":null,"updatedAt":"2018-07-30T17:10:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTExMjY5Nw==","url":"https://github.com/coala/coala-bears/pull/2641#issuecomment-409112697","bodyText":"We can implement a method in LocalBearTestHelper that asserts for this.\ndef test_result_offset(self):\n        if getattr(self, 'initial_offset_file', False):\n            self.check_results(\n                self.uut,\n                self.initial_offset_file.splitlines(True),\n                [Result.from_values(self.uut.__class__.__name__,\n                                    self.initial_offset_message,\n                                    file='test',\n                                    line=1,\n                                    column=1)],\n                filename='test')\n\nWe can have 2 such methods rather than 1. One for testing lineno and other for column offset because every bear may not provide column offset.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-31T06:42:36Z","lastEditedAt":"2018-07-31T06:44:43Z","updatedAt":"2018-07-31T06:44:43Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533742343000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2648","number":2648,"title":"generate_package.py: Remove from coala-bears","body":"Closes #1199","comments":5,"createdAt":"2018-07-28T18:18:17Z","updatedAt":"2018-08-08T15:32:23Z","closedAt":"2018-08-08T15:32:03Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2648","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODU0NzkwMA==","url":"https://github.com/coala/coala-bears/pull/2648#discussion_r208547900","bodyText":"this shouldnt need changing.\nother than the bears directory, the script shouldnt rely on anything else being in some specific location.","diffHunk":"@@ -95,7 +95,8 @@ def create_upload_parser():\n def main():\n     args = create_upload_parser().parse_args()\n \n-    os.chdir(os.path.join(os.path.dirname(__file__), '..'))\n+    current_dir = os.path.dirname(__file__)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T11:37:14Z","lastEditedAt":null,"updatedAt":"2018-08-08T11:37:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODU0ODIyNw==","url":"https://github.com/coala/coala-bears/pull/2648#discussion_r208548227","bodyText":"create an argparse arg for the file filename of the template ; the tests already allow this extra arg to be added once in the setUp .\nIt is very important that we use explicit paths so it isnt 'magic' - they need to read this file, and hopefully improve it, before uploading crappy packages to pypi with that template.\nmy preference would be to keep this file in .moban.dt , but I have no objection if you feel it is better in .ci","diffHunk":"@@ -145,7 +146,7 @@ def main():\n                                  'BEAR_NAME': bear_name,\n                                  'ENTRY': 'coala' + bear_name}\n \n-            create_file_from_template(os.path.join('bears', 'setup.py.in'),\n+            create_file_from_template(os.path.join(current_dir, 'setup.py.in'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T11:38:28Z","lastEditedAt":null,"updatedAt":"2018-08-08T11:38:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2MzM2OA==","url":"https://github.com/coala/coala-bears/pull/2648#issuecomment-408663368","bodyText":"anctartica/bear-packages#3\nI have added a positional argument to the script which takes the path to the coala-bears repository. Tested locally.","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-29T09:18:56Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:18:56Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533303499000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2649","number":2649,"title":"MypyBear: Upgrade mypy","body":"This upgrades mypy to the latest release.\nCloses #2601\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":13,"createdAt":"2018-07-28T20:44:06Z","updatedAt":"2018-08-03T13:38:19Z","closedAt":"2018-07-29T15:14:39Z","state":"merged","user":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"owner":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2649","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3MTc2MQ==","url":"https://github.com/coala/coala-bears/pull/2649#discussion_r205971761","bodyText":"'==0.590' will work here","diffHunk":"@@ -96,7 +96,7 @@ class MypyBear:\n \n     LANGUAGES = {'Python', 'Python 2', 'Python 3'}\n     AUTHORS = {'Petr Viktorin'}\n-    REQUIREMENTS = {PipRequirement('mypy-lang', '0.4.6')}\n+    REQUIREMENTS = {PipRequirement('mypy', '0.590')}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T12:25:52Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:25:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2OTk2MQ==","url":"https://github.com/coala/coala-bears/pull/2649#issuecomment-408669961","bodyText":"@jayvdb made the changes.","diffHunk":null,"author":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4","name":"Nitesh Sharma"},"createdAt":"2018-07-29T11:28:39Z","lastEditedAt":null,"updatedAt":"2018-07-29T11:28:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY4MDY2MQ==","url":"https://github.com/coala/coala-bears/pull/2649#issuecomment-408680661","bodyText":"oops; wrong command","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T14:14:42Z","lastEditedAt":null,"updatedAt":"2018-07-29T14:14:42Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534126141000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2652","number":2652,"title":"GitRevertInspectBear.py: New bear","body":"Bear to inspect git revert commits\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-08-02T09:50:36Z","updatedAt":"2018-08-13T02:09:01Z","closedAt":"2018-08-13T02:08:38Z","state":"merged","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"CFB80A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2652","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIwNTgzMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207205832","bodyText":"We shouldn't place this logic here, this logic should be done after the bear is sure that the commit is a revert commit. Place this after line 38","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:24:08Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:24:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIwOTQyMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207209423","bodyText":"Remove this","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:37:10Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:37:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIwOTg3NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207209874","bodyText":"I think you might want to rename it to get_files_command, or place directly the command string into the run_shell_command's argument","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:38:48Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:38:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxMTczOQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207211739","bodyText":"Change this into reverted_commit_sha, and also in most cases, the distance between reverted_commit and revert_commit varies from 1 commit, even 100 commits between them, and it's rare to find a reverted commit and revert commit placed consecutively.\nGet the reverted_commit_sha from the commit message string, you can use regex group to do that.","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:45:52Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:45:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNDA4MA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207214080","bodyText":"Change this to get_reverted_commit_diff_command","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:53:55Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:53:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNTUzOA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207215538","bodyText":"👍 for this. I just know that we can negate the diff by just flipping the argument","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T12:58:38Z","lastEditedAt":null,"updatedAt":"2018-08-02T12:58:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNjQxMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207216413","bodyText":"Make the minimum ratio as a setting, like minimum_similarity_ratio, so user of this bear can configure it","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')\n+                expected_parent_commit_diff = run_shell_command(\n+                    'git diff HEAD^ HEAD')[0]\n+\n+                matcher = SequenceMatcher(\n+                    None, parent_commit_diff, expected_parent_commit_diff)\n+                if matcher.real_quick_ratio() < 0.7:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:01:35Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:01:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxNzY2Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207217662","bodyText":"... But in here we need to get the reverted commit diff, to do that we can do git diff <reverted_commit_sha>^ <reverted_commit_sha>","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:05:39Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:05:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxODg0OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207218848","bodyText":"Place head_commit_branch^ (one previous commit from the head_commit_branch) as a base here instead of master, since we want to get rid of the revert commit that's already on the head_commit_branch and creating the \"expected revert commit\"","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:09:48Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:09:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxOTA0Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207219042","bodyText":"I think we don't need to rebase the branch","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:10:23Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:10:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxOTMxNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207219317","bodyText":"Revert the reverted_commit_sha","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:11:25Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:11:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIxOTQxNA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207219414","bodyText":"expected_revert_commit_diff","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')\n+                expected_parent_commit_diff = run_shell_command(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T13:11:43Z","lastEditedAt":null,"updatedAt":"2018-08-02T13:11:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzIzODI4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207238287","bodyText":"Switch to the head_commit_branch again and delete inspectrevertbranch","diffHunk":"@@ -0,0 +1,105 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+        \"\"\"\n+        if not allow_git_revert_commit:\n+            yield Result(self, 'Revert commit is not allowed.')\n+            return\n+\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            parent_commit_sha = result.parent_commits[0].strip('\\n')\n+            command = ('git log -n 1 ' + str(parent_commit_sha) +\n+                       ' --pretty=%B')\n+            run_shell_command(command)[0]\n+\n+            get_files = ('git show --pretty=\"\" --name-status %s' %\n+                         (parent_commit_sha))\n+\n+            all_files = run_shell_command(get_files)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_parent_commit_diff = 'git diff HEAD ' + parent_commit_sha\n+                parent_commit_diff = run_shell_command(\n+                    get_parent_commit_diff)[0]\n+\n+                run_shell_command('git checkout -b inspectrevertbranch master')\n+                rebase_command = 'git rebase ' + head_commit_branch\n+                run_shell_command(rebase_command)\n+                run_shell_command('git revert HEAD --no-edit')\n+                expected_parent_commit_diff = run_shell_command(\n+                    'git diff HEAD^ HEAD')[0]\n+\n+                matcher = SequenceMatcher(\n+                    None, parent_commit_diff, expected_parent_commit_diff)\n+                if matcher.real_quick_ratio() < 0.7:\n+                    yield Result(self, 'Changes in modified file %s of revert'\n+                                       'commit is not exactly revert of '\n+                                       'changes in reverted commit.' %\n+                                 file_name)\n+                run_shell_command('git branch -D inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-02T14:05:02Z","lastEditedAt":null,"updatedAt":"2018-08-02T14:05:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjEyMA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726120","bodyText":":param minimum_similarity_ratio:","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:01:04Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:01:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjEyNg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726126","bodyText":"Remove this blank line","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:01:17Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:01:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjE5Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726192","bodyText":"Make this regex as this Bear's constant variable, something like GIT_REVERT_COMMIT_RE","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:05:05Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:05:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjI1NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726254","bodyText":"See my comment on line 37.\nUse the regex group from GIT_REVERT_COMMIT_RE to capture the reverted_commit_sha","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:07:39Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:07:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjQyMQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726421","bodyText":"And add a regex group for the reverted commit sha, so the regex would be like this:\nr'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.'\nThen you can capture the regex group to get the reverted commit sha","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:16:25Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:16:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjgwMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726802","bodyText":"What we wanna compare is the current revert commit (which is on the HEAD) and the \"expected revert commit\".\nWe don't wanna compare the reverted commit with the \"expected revert commit\", because they're might be very different (but in some cases, the difference are just + and - sign, but still they're different)\nAnd also we want to get the diff for just one file (because this is a loop, and we compare them one by one), so the command would be changed to git diff HEAD^ HEAD file_name","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:37:38Z","lastEditedAt":"2018-08-05T08:21:09Z","updatedAt":"2018-08-05T08:21:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjg4NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207726884","bodyText":"You forgot your inspectrevertbranch in the command","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:41:22Z","lastEditedAt":"2018-08-05T07:11:18Z","updatedAt":"2018-08-05T07:11:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzAyNg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727026","bodyText":"Catch the err (move err definition from line 105 to here)","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)\n+                run_shell_command(create_new_branch_command)\n+\n+                create_expected_revert_commit = ('git revert %s --no-edit' %\n+                                                 reverted_commit_sha)\n+                run_shell_command(create_expected_revert_commit)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:49:01Z","lastEditedAt":"2018-08-05T07:11:07Z","updatedAt":"2018-08-05T07:11:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzA0Mw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727043","bodyText":"After the self.warn do git revert --abort to make sure that we can checkout to the master","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)\n+                run_shell_command(create_new_branch_command)\n+\n+                create_expected_revert_commit = ('git revert %s --no-edit' %\n+                                                 reverted_commit_sha)\n+                run_shell_command(create_expected_revert_commit)\n+\n+                expected_revert_commit_diff, err = run_shell_command(\n+                    'git diff HEAD^ HEAD')\n+                if err:\n+                    self.warn('Cannot compare the modified files.')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:49:51Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:49:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzA2Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727062","bodyText":"Change the reverted_commit_diff with revert_commit_diff","diffHunk":"@@ -0,0 +1,121 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit: Whether revert commit\n+                                        is allowed or not.\n+\n+        :minimum_similarity_ratio:      Minimum similarity ratio\n+                                        required by files in revert\n+                                        commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            if not re.search(\n+                r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s[0-9a-f]{40}\\.',\n+                    result.raw_commit_message):\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            sha_regex = re.compile(r'([0-9a-f]{40})')\n+            reverted_commit_sha = re.findall(\n+                sha_regex, result.raw_commit_message)[0]\n+\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name not in reverted_commit_modified_files_list:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+                    return\n+\n+                head_commit_branch = run_shell_command(\n+                    'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                get_reverted_commit_diff_command = ('git diff ' +\n+                                                    reverted_commit_sha +\n+                                                    '^ ' + reverted_commit_sha)\n+                reverted_commit_diff = run_shell_command(\n+                    get_reverted_commit_diff_command)\n+\n+                create_new_branch_command = ('git checkout -b %s^' %\n+                                             head_commit_branch)\n+                run_shell_command(create_new_branch_command)\n+\n+                create_expected_revert_commit = ('git revert %s --no-edit' %\n+                                                 reverted_commit_sha)\n+                run_shell_command(create_expected_revert_commit)\n+\n+                expected_revert_commit_diff, err = run_shell_command(\n+                    'git diff HEAD^ HEAD')\n+                if err:\n+                    self.warn('Cannot compare the modified files.')\n+                    return\n+\n+                matcher = SequenceMatcher(\n+                    None, reverted_commit_diff, expected_revert_commit_diff)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T06:50:54Z","lastEditedAt":null,"updatedAt":"2018-08-05T06:50:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzI1NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727255","bodyText":"This shouldn't appear","diffHunk":"@@ -0,0 +1,184 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T07:00:18Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:00:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzQ1Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727457","bodyText":"The name of this test is the same with the previous test, change it","diffHunk":"@@ -0,0 +1,184 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('rm testfile2.txt')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Changed text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of '\n+                          'changes in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T07:09:17Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:09:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzQ3NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r207727475","bodyText":"I think we don't need this","diffHunk":"@@ -0,0 +1,184 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('rm testfile2.txt')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Changed text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.',\n+                          'Changes in modified file testfile1.txt of '\n+                          'revert commit are not exactly revert of '\n+                          'changes in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_invalid_modified_files(self):\n+        run_shell_command('git checkout master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-05T07:09:42Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:09:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMjQ2Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208232462","bodyText":"Also do (like you did in line 120-121)\n                    run_shell_command(switch_branch_command)\n                    run_shell_command('git branch -D inspectrevertbranch')\n\nhere","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')\n+                    run_shell_command(create_new_branch_command)\n+\n+                    create_expected_revert_commit = ('git revert %s --no-'\n+                                                     'edit' %\n+                                                     reverted_commit_sha)\n+                    expected_revert_commit, err = run_shell_command(\n+                        create_expected_revert_commit)\n+                    if err:\n+                        self.warn('Cannot compare the modified files.')\n+                        run_shell_command('git revert --abort')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:37:26Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:37:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMjc4NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208232784","bodyText":"Don't forget the base commit (HEAD^)","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:38:15Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:38:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzMzU1Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208233557","bodyText":"Unused variable expected_revert_commit","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')\n+                    run_shell_command(create_new_branch_command)\n+\n+                    create_expected_revert_commit = ('git revert %s --no-'\n+                                                     'edit' %\n+                                                     reverted_commit_sha)\n+                    expected_revert_commit, err = run_shell_command(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:40:04Z","lastEditedAt":"2018-08-07T13:51:42Z","updatedAt":"2018-08-07T13:51:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzNDM4Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208234382","bodyText":"I think we also want to use isjunk parameter here (see the documentation of difflib.SequenceMatcher).\nWe want to mark the line that are not starting with + and - sign as junk, since we just care about the changes\nisjunk function takes sequence of chars not sequence of lines","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(\n+                        'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+                    get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                                      file_name)\n+\n+                    revert_commit_diff = run_shell_command(\n+                        get_revert_commit_diff_command)[0]\n+\n+                    create_new_branch_command = ('git checkout -b ' +\n+                                                 'inspectrevertbranch')\n+                    run_shell_command(create_new_branch_command)\n+\n+                    create_expected_revert_commit = ('git revert %s --no-'\n+                                                     'edit' %\n+                                                     reverted_commit_sha)\n+                    expected_revert_commit, err = run_shell_command(\n+                        create_expected_revert_commit)\n+                    if err:\n+                        self.warn('Cannot compare the modified files.')\n+                        run_shell_command('git revert --abort')\n+                        return\n+\n+                    get_expected_commit_diff_command = ('git diff HEAD^ '\n+                                                        'HEAD ' + file_name)\n+                    expected_revert_commit_diff = run_shell_command(\n+                        get_expected_commit_diff_command)[0]\n+\n+                    matcher = SequenceMatcher(\n+                        None, revert_commit_diff, expected_revert_commit_diff)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:42:12Z","lastEditedAt":"2018-08-07T14:04:33Z","updatedAt":"2018-08-07T14:04:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODIzNTA4MQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208235081","bodyText":"I think this function is growing too big because of this check, move this check into a new function (the modified file similarity check)","diffHunk":"@@ -0,0 +1,126 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    head_commit_branch = run_shell_command(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T13:44:04Z","lastEditedAt":null,"updatedAt":"2018-08-07T13:44:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI1NzE2NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208257165","bodyText":"run_shell_command won't raise an exception if there's  a content in stderr, use _, err = run_shell_command(... instead","diffHunk":"@@ -0,0 +1,136 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                          file_name)\n+\n+        revert_commit_diff = run_shell_command(\n+            get_revert_commit_diff_command)[0]\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        try:\n+            run_shell_command(create_expected_revert_commit)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T14:37:57Z","lastEditedAt":null,"updatedAt":"2018-08-07T14:37:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI5NjA0Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208296042","bodyText":"Add a docstring that explains about what this function does and the arguments","diffHunk":"@@ -0,0 +1,135 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T16:18:24Z","lastEditedAt":null,"updatedAt":"2018-08-07T16:18:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI5NzQ5Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208297492","bodyText":"I think we might also want to rename this function name to get_modified_file_revert_commit_similarity","diffHunk":"@@ -0,0 +1,135 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T16:22:54Z","lastEditedAt":null,"updatedAt":"2018-08-07T16:22:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI5NzYxMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r208297613","bodyText":"if similarity_ratio is None: return","diffHunk":"@@ -0,0 +1,135 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_name, reverted_commit_sha):\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        get_revert_commit_diff_command = ('git diff HEAD^ HEAD ' +\n+                                          file_name)\n+\n+        revert_commit_diff = run_shell_command(\n+            get_revert_commit_diff_command)[0]\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        get_expected_commit_diff_command = ('git diff HEAD^ '\n+                                            'HEAD ' + file_name)\n+        expected_revert_commit_diff = run_shell_command(\n+            get_expected_commit_diff_command)[0]\n+\n+        matcher = SequenceMatcher(\n+            None, revert_commit_diff, expected_revert_commit_diff)\n+        similarity_ratio = matcher.real_quick_ratio()\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+        return similarity_ratio\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    similarity_ratio = self.check_modified_file_similarity(\n+                        file_name, reverted_commit_sha)","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-07T16:23:17Z","lastEditedAt":null,"updatedAt":"2018-08-07T16:23:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI2OTI5OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209269298","bodyText":"Small hash","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-10T14:02:17Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:02:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MDA4OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209270088","bodyText":"Undefined minimum_similarity_ratio","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:\n+            with open(file_name, 'r') as f:\n+                expected_revert_file_content = f.read()\n+\n+            matcher = SequenceMatcher(\n+                None, revert_file_content, expected_revert_file_content)\n+            similarity_ratio = matcher.real_quick_ratio()\n+            if similarity_ratio < minimum_similarity_ratio:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1Mw==","createdAt":"2018-08-11T15:58:40Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T14:04:50Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:04:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MTMzMQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209271331","bodyText":"I think we might wanna change this function into a private function (by adding _ prefix in front of the function name), since this function probably wouldn't be called neither by the programmer nor user in another source code","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1MA==","createdAt":"2018-08-11T15:58:34Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T14:08:33Z","lastEditedAt":"2018-08-10T15:40:08Z","updatedAt":"2018-08-10T15:40:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MTY4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209271687","bodyText":"I think we don't need to add this check again, as it's already done in line 142","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1OQ==","createdAt":"2018-08-11T15:59:08Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T14:09:38Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:09:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3MjYwMQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209272601","bodyText":"git rm is enough I think","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-10T14:12:40Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:12:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3Mjc2OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209272768","bodyText":"git rm is enough I think","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('rm testfile1.txt')\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('rm testfile2.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-10T14:13:12Z","lastEditedAt":null,"updatedAt":"2018-08-10T14:13:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTMwMTA4Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209301082","bodyText":"These files are of the \"expected revert commit\" that we are creating for comparison.\nLine 142 checks files in the reverted commit. So as to check any extra added or deleted files.","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:","author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE1Nw==","createdAt":"2018-08-11T15:59:05Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T15:38:07Z","lastEditedAt":null,"updatedAt":"2018-08-10T15:38:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTMwMjQyMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209302423","bodyText":"yield from self.check_modified..","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:\n+            with open(file_name, 'r') as f:\n+                expected_revert_file_content = f.read()\n+\n+            matcher = SequenceMatcher(\n+                None, revert_file_content, expected_revert_file_content)\n+            similarity_ratio = matcher.real_quick_ratio()\n+            if similarity_ratio < minimum_similarity_ratio:\n+                yield Result(self, 'Changes in modified file %s of '\n+                             'revert commit are not exactly '\n+                             'revert of changes in reverted '\n+                             'commit.' %\n+                             file_name)\n+\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+\n+        return\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_name in result.added_files:\n+                if file_name not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.deleted_files:\n+                if file_name not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_name))\n+\n+            for file_name in result.modified_files:\n+                if file_name in reverted_commit_modified_files_list:\n+                    self.check_modified_file_similarity(","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5MDE2MQ==","createdAt":"2018-08-11T15:59:16Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-10T15:42:23Z","lastEditedAt":null,"updatedAt":"2018-08-10T15:42:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDM4Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209414382","bodyText":"If the file doesn't exist in the \"expected revert commit\", it means that the file doesn't exist in the reverted commit either (since the \"expected revert commit\" is created purely with git revert without any modification, it should be the negate of the reverted commit). And this function probably won't be called in another source code, so I think it's safe enough to remove this check here","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-11T02:57:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:57:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDM5OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209414398","bodyText":"Un-ident line 79-80","diffHunk":"@@ -0,0 +1,149 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def check_modified_file_similarity(self, file_path, reverted_commit_sha):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:           Relative path to the modified file.\n+        :param reverted_commit_sha: Commit HASH of reverted commit.\n+        \"\"\"\n+        with open(file_name, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                          (expected_revert_commit_sha))\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:])\n+\n+        if file_name in files_modified_list:\n+            with open(file_name, 'r') as f:\n+                expected_revert_file_content = f.read()\n+\n+            matcher = SequenceMatcher(\n+                None, revert_file_content, expected_revert_file_content)\n+            similarity_ratio = matcher.real_quick_ratio()\n+            if similarity_ratio < minimum_similarity_ratio:\n+                yield Result(self, 'Changes in modified file %s of '\n+                             'revert commit are not exactly '\n+                             'revert of changes in reverted '\n+                             'commit.' %\n+                             file_name)\n+\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-11T02:58:15Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:58:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM3MA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430370","bodyText":"extra round brackets around reverted_commit_sha not needed or desirable","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:12Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM4MQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430381","bodyText":"redundant round brackets","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:39Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM4OA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430388","bodyText":"redundant round brackets","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:46Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDM4OQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209430389","bodyText":"redundant round brackets","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 (reverted_commit_sha))\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % (file_path))\n+\n+            for file_path in result.modified_files:\n+                if file_path in reverted_commit_modified_files_list:\n+                    yield from self._check_modified_file_similarity(\n+                        file_path, reverted_commit_sha,\n+                        minimum_similarity_ratio)\n+\n+                else:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                 'file %s that is not in reverted '\n+                                 'commit.' % (file_path))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:57:53Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:57:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjE1Mg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442152","bodyText":"git add testfile5.txt","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:11:57Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:11:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjE1NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442154","bodyText":"git add testfile5.txt","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile6.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:12:04Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:12:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjE1NQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442155","bodyText":"git add testfile5.txt","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Last line\\n')\n+        run_shell_command('git add testfile6.txt')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:12:09Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:12:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjIyMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442222","bodyText":"Please split this test into another test method","diffHunk":"@@ -0,0 +1,216 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile2.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        Path('testfile4.txt').touch()\n+        with open('testfile4.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git add testfile4.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_modified_file_similarity(self):\n+        Path('testfile5.txt').touch()\n+        Path('testfile6.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile4\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Last line\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        self.assertEqual(self.run_uut(),\n+                         ['Changes in modified file testfile5.txt of revert '\n+                          'commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+        run_shell_command('git checkout -b branch4 master')\n+        with open('testfile6.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"modify testfile6\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile6.txt', 'a') as f:\n+            f.write('Some more appended text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        self.assertEqual(self.run_uut(), [])","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:20:44Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:20:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjIyOQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442229","bodyText":"Not used variable, please remove line 65-70","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:21:47Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:21:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0MjI4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209442287","bodyText":"Create a function named clean_inspect_revert_branch inside this function, containing routines in line 85-86 and then use it here and in line 56, as we don't want to get many code duplication","diffHunk":"@@ -0,0 +1,154 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        head_commit_branch = run_shell_command(\n+            'git rev-parse --abbrev-ref HEAD')[0].strip('\\n')\n+        switch_branch_command = ('git checkout ' +\n+                                 head_commit_branch)\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            run_shell_command(switch_branch_command)\n+            run_shell_command('git branch -D inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+        get_files_modified = ('git show --pretty=\"\" --name-status %s' %\n+                              (expected_revert_commit_sha))\n+        files_modified = run_shell_command(get_files_modified)\n+        files_modified_list = []\n+        for line in files_modified:\n+            pos = line.find('\\t')\n+            change = line[:pos]\n+            if change == 'M':\n+                files_modified_list.append(line[pos+1:].strip('\\n'))\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T03:29:35Z","lastEditedAt":null,"updatedAt":"2018-08-12T03:29:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0OTgyNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209449827","bodyText":"add # pragma: no cover after this, so that your build goes green and we can review it","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T10:02:13Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:02:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTAyMw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451023","bodyText":"Move this function definition into the inside of _check_modified_file_similarity() as this function would probably only called there.\nAnd it can be as simple as\ndef clean_inspect_revert_branch():\n    run_shell_command(switch_branch_command)\n    run_shell_command('git branch -D inspectrevertbranch')","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDczMw==","createdAt":"2018-08-12T11:34:20Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T10:56:03Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:56:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTEwMg==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451102","bodyText":".. not in the reverted ..","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDczNg==","createdAt":"2018-08-12T11:34:46Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T10:59:55Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:59:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTEwNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451107","bodyText":".. not in the reverted ...","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDc0MA==","createdAt":"2018-08-12T11:34:55Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T11:00:14Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:00:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTExNA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451114","bodyText":"... not in the reverted ...","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.modified_files:\n+                if file_path in reverted_commit_modified_files_list:\n+                    yield from self._check_modified_file_similarity(\n+                        file_path, reverted_commit_sha,\n+                        minimum_similarity_ratio)\n+\n+                else:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                 'file %s that is not in reverted '","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDc0Mg==","createdAt":"2018-08-12T11:35:05Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T11:00:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:00:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTI4Nw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451287","bodyText":"I think switching to a new branch is a bit superfluous here, remove it","diffHunk":"@@ -0,0 +1,215 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T11:06:30Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:06:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTMyNw==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451327","bodyText":"I think switching to a new branch is a bit superfluous here, remove it","diffHunk":"@@ -0,0 +1,215 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_file_similarity_with_invalid_revert_commit(self):\n+        Path('testfile5.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T11:08:06Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:08:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTM2NA==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451364","bodyText":"I think switching to a new branch is a bit superfluous here, remove it","diffHunk":"@@ -0,0 +1,215 @@\n+import os\n+import platform\n+import shutil\n+import stat\n+import unittest\n+import unittest.mock\n+from pathlib import Path\n+from queue import Queue\n+from tempfile import mkdtemp\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from bears.vcs.git.GitRevertInspectBear import GitRevertInspectBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.settings.Section import Section\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from .GitCommitBearTest import GitCommitBearTest\n+\n+\n+@generate_skip_decorator(GitRevertInspectBear)\n+class GitRevertInspectBearTest(unittest.TestCase):\n+\n+    def run_uut(self, *args, **kwargs):\n+        \"\"\"\n+        Runs the unit-under-test (via `self.uut.run()`) and collects the\n+        messages of the yielded results as a list.\n+\n+        :param args:   Positional arguments to forward to the run function.\n+        :param kwargs: Keyword arguments to forward to the run function.\n+        :return:       A list of the message strings.\n+        \"\"\"\n+        dep_bear = GitCommitMetadataBear(None, self.section, Queue())\n+        deps_results = dict(GitCommitMetadataBear=list(dep_bear.run()))\n+        return list(result.message for result in self.uut.run(\n+            deps_results, *args, **kwargs))\n+\n+    def setUp(self):\n+        self.msg_queue = Queue()\n+        self.section = Section('')\n+        self.uut = GitRevertInspectBear(None, self.section, self.msg_queue)\n+\n+        self._old_cwd = os.getcwd()\n+        self.gitdir = mkdtemp()\n+        os.chdir(self.gitdir)\n+        GitCommitBearTest.run_git_command('init')\n+        GitCommitBearTest.run_git_command(\n+            'config', 'user.email coala@coala.io')\n+        GitCommitBearTest.run_git_command('config', 'user.name coala')\n+\n+    @staticmethod\n+    def _windows_rmtree_remove_readonly(func, path, excinfo):\n+        os.chmod(path, stat.S_IWRITE)\n+        func(path)\n+\n+    def tearDown(self):\n+        os.chdir(self._old_cwd)\n+        if platform.system() == 'Windows':\n+            onerror = self._windows_rmtree_remove_readonly\n+        else:\n+            onerror = None\n+        shutil.rmtree(self.gitdir, onerror=onerror)\n+\n+    def test_check_simple_git_commit(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        self.assertEqual(self.run_uut(), [])\n+\n+    def test_check_revert_commit_not_allowed(self):\n+        Path('testfile1.txt').touch()\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"Add testfile1\"')\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(self.run_uut(\n+            allow_git_revert_commit=False),\n+            ['Revert commit is not allowed.'])\n+\n+    def test_check_git_revert_commit_with_extra_added_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Modify text')\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Modify text')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"reverted commit\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        Path('testfile3.txt').touch()\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has an added file testfile3.txt that '\n+                          'is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_deleted_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git rm testfile1.txt')\n+        run_shell_command('git commit -m \"delete file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        run_shell_command('git rm testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a deleted file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+    def test_check_git_revert_commit_with_extra_modified_file(self):\n+        Path('testfile1.txt').touch()\n+        with open('testfile1.txt', 'w') as f:\n+            f.write('Some text\\n')\n+\n+        Path('testfile2.txt').touch()\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more text\\n')\n+\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit -m \"intial commit\"')\n+\n+        run_shell_command('git checkout -b branch1 master')\n+        with open('testfile1.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile1.txt')\n+        run_shell_command('git commit -m \"modified file\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile2.txt', 'w') as f:\n+            f.write('Some more changed text\\n')\n+        run_shell_command('git add testfile2.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+\n+        self.assertEqual(self.run_uut(),\n+                         ['Revert commit has a modified file testfile2.txt '\n+                          'that is not in reverted commit.'])\n+\n+        Path('testfile3.txt').touch()\n+        with open('testfile3.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch2 master')\n+        with open('testfile3.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile3.txt')\n+        run_shell_command('git commit -m \"modify testfile3\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        self.assertEqual(\n+            self.run_uut(minimum_similarity_ratio=0.7), [])\n+\n+    def test_check_file_similarity_with_invalid_revert_commit(self):\n+        Path('testfile5.txt').touch()\n+        with open('testfile5.txt', 'w') as f:\n+            f.write('Some text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch3 master')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Changed text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit -m \"modify testfile5\"')\n+\n+        run_shell_command('git revert HEAD --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Some text\\nSome more text\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Even more text.\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        with open('testfile5.txt', 'a') as f:\n+            f.write('Last line\\n')\n+        run_shell_command('git add testfile5.txt')\n+        run_shell_command('git commit --amend --allow-empty --no-edit')\n+        self.assertEqual(self.run_uut(),\n+                         ['Changes in modified file testfile5.txt of revert '\n+                          'commit are not exactly revert of changes in '\n+                          'reverted commit.'])\n+\n+    def test_check_file_similarity_with_correct_revert_commit(self):\n+        Path('testfile6.txt').touch()\n+        with open('testfile6.txt', 'w') as f:\n+            f.write('Some other text\\n')\n+        run_shell_command('git add testfile6.txt')\n+        run_shell_command('git commit -m \"Initial commit\"')\n+\n+        run_shell_command('git checkout -b branch4 master')","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-08-12T11:09:56Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:09:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MTk3OQ==","url":"https://github.com/coala/coala-bears/pull/2652#discussion_r209451979","bodyText":"This string should be a constant, with substitution variable for \"added\", \"deleted\" & \"modified\"","diffHunk":"@@ -0,0 +1,148 @@\n+import re\n+\n+from difflib import SequenceMatcher\n+\n+from bears.vcs.git.GitCommitMetadataBear import GitCommitMetadataBear\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.Result import Result\n+\n+\n+class GitRevertInspectBear(GlobalBear):\n+    LANGUAGES = {'Git'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    BEAR_DEPS = {GitCommitMetadataBear}\n+\n+    GIT_REVERT_COMMIT_RE = re.compile(\n+        r'Revert\\s\\\".+\\\"\\n\\nThis\\sreverts\\scommit\\s([0-9a-f]{40})\\.')\n+\n+    def clean_inspect_revert_branch(self, branchname):\n+        \"\"\"\n+        Delete git branch.\n+\n+        branchname:     Name of the branch to be deleted.\n+        \"\"\"\n+        switch_branch_command = 'git checkout ' + branchname\n+        run_shell_command(switch_branch_command)\n+        run_shell_command('git branch -D inspectrevertbranch')\n+\n+    def _check_modified_file_similarity(self, file_path,\n+                                        reverted_commit_sha,\n+                                        minimum_similarity_ratio):\n+        \"\"\"\n+        Compare the changes in file modified by the\n+        revert commit with the changes actually\n+        expected in the revert commit.\n+\n+        :param file_path:                   Relative path to the modified\n+                                            file.\n+        :param reverted_commit_sha:         Commit hash of reverted commit.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        with open(file_path, 'r') as f:\n+            revert_file_content = f.read()\n+\n+        create_new_branch_command = (\n+            'git checkout -b inspectrevertbranch HEAD^')\n+        run_shell_command(create_new_branch_command)\n+\n+        create_expected_revert_commit = ('git revert %s --no-'\n+                                         'edit' %\n+                                         reverted_commit_sha)\n+        _, err = run_shell_command(create_expected_revert_commit)\n+        if err:  # pragma: no cover\n+            self.warn('Cannot compare the modified files.')\n+            run_shell_command('git revert --abort')\n+            self.clean_inspect_revert_branch('inspectrevertbranch')\n+            return\n+\n+        expected_revert_commit_sha = run_shell_command(\n+            'git rev-parse HEAD')[0].strip('\\n')\n+\n+        with open(file_path, 'r') as f:\n+            expected_revert_file_content = f.read()\n+\n+        matcher = SequenceMatcher(\n+            None, revert_file_content, expected_revert_file_content)\n+        similarity_ratio = matcher.real_quick_ratio()\n+        if similarity_ratio < minimum_similarity_ratio:\n+            yield Result(self, 'Changes in modified file %s of '\n+                         'revert commit are not exactly '\n+                         'revert of changes in reverted '\n+                         'commit.' %\n+                         file_path)\n+\n+        self.clean_inspect_revert_branch('inspectrevertbranch')\n+\n+    def run(self, dependency_results,\n+            allow_git_revert_commit: bool = True,\n+            minimum_similarity_ratio: float = 0.8,\n+            **kwargs):\n+        \"\"\"\n+        Inspect the HEAD commit to check if it is a\n+        git revert commit and return result accordingly.\n+\n+        :param allow_git_revert_commit:     Whether revert commit\n+                                            is allowed or not.\n+        :param minimum_similarity_ratio:    Minimum similarity ratio\n+                                            required by files in revert\n+                                            commit.\n+        \"\"\"\n+        for result in dependency_results[GitCommitMetadataBear.name]:\n+\n+            m = self.GIT_REVERT_COMMIT_RE.match(result.raw_commit_message)\n+            if not m:\n+                return\n+\n+            if not allow_git_revert_commit:\n+                yield Result(self, 'Revert commit is not allowed.')\n+                return\n+\n+            reverted_commit_sha = m.group(1)\n+            get_files_command = ('git show --pretty=\"\" --name-status %s' %\n+                                 reverted_commit_sha)\n+\n+            all_files = run_shell_command(get_files_command)[0]\n+            files_modified_by_reverted_commit = all_files.split('\\n')\n+\n+            reverted_commit_modified_files_list = []\n+            reverted_commit_added_files_list = []\n+            reverted_commit_deleted_files_list = []\n+\n+            for line in files_modified_by_reverted_commit:\n+                pos = line.find('\\t')\n+                change = line[:pos]\n+                if change == 'M':\n+                    reverted_commit_modified_files_list.append(line[pos+1:])\n+                elif change == 'A':\n+                    reverted_commit_added_files_list.append(line[pos+1:])\n+                elif change == 'D':\n+                    reverted_commit_deleted_files_list.append(line[pos+1:])\n+\n+            for file_path in result.added_files:\n+                if file_path not in reverted_commit_deleted_files_list:\n+                    yield Result(self, 'Revert commit has an added '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.deleted_files:\n+                if file_path not in reverted_commit_added_files_list:\n+                    yield Result(self, 'Revert commit has a deleted '\n+                                       'file %s that is not in reverted '\n+                                       'commit.' % file_path)\n+\n+            for file_path in result.modified_files:\n+                if file_path in reverted_commit_modified_files_list:\n+                    yield from self._check_modified_file_similarity(\n+                        file_path, reverted_commit_sha,\n+                        minimum_similarity_ratio)\n+\n+                else:\n+                    yield Result(self, 'Revert commit has a modified '\n+                                 'file %s that is not in reverted '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMDg5NQ==","createdAt":"2018-08-12T11:47:30Z","content":"THUMBS_UP","user":{"login":"refeed","name":"Rafid Aslam"}}],"createdAt":"2018-08-12T11:35:37Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:35:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI4MTM2Mw==","url":"https://github.com/coala/coala-bears/pull/2652#issuecomment-412281363","bodyText":"rebase!","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T15:13:15Z","lastEditedAt":null,"updatedAt":"2018-08-11T15:13:15Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533469450000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2654","number":2654,"title":"PEP8Bear: Migrate bear to aspects","body":"This migrates PEP8Bear to its respective\naspects and tastes.\nCloses #2653\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-05T05:34:25Z","updatedAt":"2018-08-05T11:44:10Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2654","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUxNDYxNA==","url":"https://github.com/coala/coala-bears/pull/2654#issuecomment-410514614","bodyText":"Blocked by #2461","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T11:44:10Z","lastEditedAt":null,"updatedAt":"2018-08-05T11:44:10Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533565405000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2655","number":2655,"title":"ClangBear.py: Rename variable range","body":"Variable name range renamed to clang_range.\nFixes #2585\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-08-05T06:08:37Z","updatedAt":"2018-08-06T14:23:25Z","closedAt":"2018-08-05T12:50:01Z","state":"merged","user":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"owner":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"assignee":{"login":"Karna98","avatarUrl":"https://avatars2.githubusercontent.com/u/32186983?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"needs rebase","color":"f4cd69"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"bfd4f2"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2655","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUwNzQ3Mg==","url":"https://github.com/coala/coala-bears/pull/2655#issuecomment-410507472","bodyText":"Needs rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T09:30:05Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:30:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUxMjk3OQ==","url":"https://github.com/coala/coala-bears/pull/2655#issuecomment-410512979","bodyText":"reack a2be308","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T11:11:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T11:11:19Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533646619000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2657","number":2657,"title":"PycodestyleBear: Migrate bear to aspects","body":"This migrates PycodestyleBear to its respective\naspects and tastes.\nCloses #2656\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-05T18:20:55Z","updatedAt":"2018-08-07T12:56:59Z","closedAt":"2018-08-07T12:56:59Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2657","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2MDE2NQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207760165","bodyText":"great. removing this is necessary, because the decorator uses self.section.aspects , and so self is needed.","diffHunk":"@@ -21,9 +23,14 @@ class PycodestyleBear:\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n-    @staticmethod","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4MTAyMw==","createdAt":"2018-08-06T06:12:38Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-06T02:03:24Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:03:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2MDU2Mg==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207760562","bodyText":"We need to verify that the Result object returned uses the aspect.\n(I suspect that it doesnt.)\nIf it doesnt, create a bug against @linter because its default run needs to use aspects for the Result, and map_setting_to_aspect may also need to be improved in the process.\nAnd we may just merge this as-is if the bug is in Linter.\nIf the Result objects correctly use aspects, then this test class needs to be a more detailed test class ... which checks that the Result object reports the correct aspect.","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:09:06Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:09:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc5MTYwOQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207791609","bodyText":"Yes, it doesn't use the aspect.\nWe need to modify @linter to use the aspect just as the Result module does.\nI have created an issue coala/coala#5694","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T07:08:33Z","lastEditedAt":"2018-08-06T07:45:50Z","updatedAt":"2018-08-06T07:45:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwMDQxNw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207800417","bodyText":"Ya, I expected so.  Thanks.\nWhat you could try is add a run method to this bear, and it would do\nfor result in super().run(*args, **kwargs):\n   if (max_line_length is from aspect) and (result is line length problem):\n        result.aspect = LineLength('Python').max_line_length","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T07:49:45Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:49:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg2Mzk1Ng==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207863956","bodyText":"is it possible / sensible to set this to the taste for LineLenght , if the aspect was used to determine the max line length?","diffHunk":"@@ -61,3 +70,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T11:51:05Z","lastEditedAt":null,"updatedAt":"2018-08-06T11:51:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg4MjE2Nw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207882167","bodyText":"See the docstring for Result.aspect.\n\nAn aspectclass instance which this result is associated to.\nNote that this should be a leaf of the aspect tree!\n\nFormatting('py') is not the leaf of the aspect tree.","diffHunk":"@@ -61,3 +70,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=Formatting('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T13:00:02Z","lastEditedAt":null,"updatedAt":"2018-08-06T13:00:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg4Mjc4OQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207882789","bodyText":"Oh, didn't see that one, I'll update it to LineLength","diffHunk":"@@ -61,3 +70,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=Formatting('py'),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T13:02:19Z","lastEditedAt":null,"updatedAt":"2018-08-06T13:02:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzkyMDM2OQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r207920369","bodyText":"not all pycodestyle errors are LineLength('py').\nPlease decode the pycodestyle errors and use appropriate aspects","diffHunk":"@@ -61,3 +67,24 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        output_regex = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                        r'(?P<message>(?P<origin>\\S+).*)')\n+        result = re.match(output_regex, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        yield Result.from_values(\n+            origin=self,\n+            message=message,\n+            file=filename,\n+            line=int(line),\n+            column=int(column),\n+            aspect=LineLength('py'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUxMTg4NA==","createdAt":"2018-08-06T16:36:47Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-06T14:52:47Z","lastEditedAt":null,"updatedAt":"2018-08-06T14:52:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAzODY3Nw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208038677","bodyText":"a trailing comma is useless if followed by a bracket.","diffHunk":"@@ -1,15 +1,16 @@\n import sys\n+import re\n \n from coalib.bearlib.abstractions.Linter import linter\n from coalib.settings.Setting import typed_list\n+from coalib.results.Result import Result\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import LineLength\n \n from dependency_management.requirements.PipRequirement import PipRequirement\n \n \n-@linter(executable='pycodestyle',\n-        output_format='regex',\n-        output_regex=r'(?P<line>\\d+) (?P<column>\\d+) '\n-                     r'(?P<message>(?P<origin>\\S+).*)')\n+@linter(executable='pycodestyle',)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T21:43:10Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:43:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAzODg1Mg==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208038852","bodyText":"keep the output_regex here as a module level variable.\nthe diff will then show that the regex hasnt changed.","diffHunk":"@@ -1,15 +1,16 @@\n import sys\n+import re\n \n from coalib.bearlib.abstractions.Linter import linter\n from coalib.settings.Setting import typed_list\n+from coalib.results.Result import Result\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import LineLength\n \n from dependency_management.requirements.PipRequirement import PipRequirement\n \n \n-@linter(executable='pycodestyle',\n-        output_format='regex',\n-        output_regex=r'(?P<line>\\d+) (?P<column>\\d+) '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T21:43:57Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:43:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAzOTExNQ==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208039115","bodyText":"Now we need a test class which verifies that the aspect is used when the line length is exceeded.","diffHunk":"@@ -63,3 +69,22 @@ def hello():\n     valid_files=(file_with_very_long_line,),\n     invalid_files=(),\n     settings={'max_line_length': 0})\n+\n+PycodestyleBearAspectsTest = verify_local_bear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUzODY0OA==","createdAt":"2018-08-07T04:59:38Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-06T21:45:07Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:45:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODExNzkyNw==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208117927","bodyText":"this is a regression.\nPreviously the origin was the error code.\nyou are discarding that","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T06:58:27Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:58:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEzMzc3OA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208133778","bodyText":"origin is to be kept PycodestyleBear only as that when we want to ignore PycodestyleBear, we have to do # Ignore Pycodestyle and not # Ignore E501(or any other rule).\nI have changed it to rule and kept the origin self only, so that there's no confusion","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-07T08:03:20Z","lastEditedAt":"2018-08-07T08:05:29Z","updatedAt":"2018-08-07T08:05:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEzNjAzNA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208136034","bodyText":"it was previously origin ... was it being ignored previously?\nif the Result objects were previously setting origin to PycodestyleBear, then why was the regex capturing origin .. what was happening with it previously?\nwrt # Ignore ... if the bear was previously using origin of E501, then users must be using # Ignore E501 currently, and if you change it then their CI will break.\nSo we need to be careful.\nWe can still change it, but we need to ensure that change isnt hidden in an 'aspectification' commit.  It needs to be a separate issue which is classified as a bug, and properly analysed.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:11:39Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:11:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0NDI5OA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208144298","bodyText":"Currently, it uses # Ignore Pycodestyle or # Ignore Pycodestyle (E501) (an example is \n  \n    \n      coala-bears/tests/js/PrettierLintBearTest.py\n    \n    \n         Line 11\n      in\n      e46d352\n    \n    \n    \n    \n\n        \n          \n           # Start ignoring PycodestyleBear, LineLengthBear \n        \n    \n  \n\n).\nI see what @linter was doing previously, see https://github.com/coala/coala/blob/d936d1624a8d37b4be96d023079c39f244a351c3/coalib/bearlib/abstractions/Linter.py#L320\nI am changing this to what was being done previously in the linter.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-07T08:38:57Z","lastEditedAt":"2018-08-07T08:43:22Z","updatedAt":"2018-08-07T08:43:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0ODY4MA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208148680","bodyText":"Thank you -- that is better.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(\n+            self,\n+            output,\n+            filename,\n+            file,\n+            ):\n+        result = re.match(OUTPUT_REGEX, output)\n+        if not result:\n+            return\n+        line, column, message, origin = result.groups()\n+        if origin == 'E501':\n+            aspect = LineLength('py')\n+        else:\n+            aspect = None\n+        yield Result.from_values(\n+            origin=self,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:53:19Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:53:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0OTAzOA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208149038","bodyText":"this line does not need to change.\nyou only need to add a line above with self,","diffHunk":"@@ -21,9 +27,14 @@ class PycodestyleBear:\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Formatting'}\n \n-    @staticmethod\n+    @map_setting_to_aspect(\n+        max_line_length=LineLength.max_line_length,\n+    )\n     def create_arguments(\n-            filename, file, config_file,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:54:32Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:54:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0OTM5OA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208149398","bodyText":"all args fit on one line, and should be on one line.  The signature of this method does not change.","diffHunk":"@@ -61,3 +72,26 @@ def create_arguments(\n         arguments.append(filename)\n \n         return arguments\n+\n+    def process_output(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:55:46Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:55:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODE0OTY0MA==","url":"https://github.com/coala/coala-bears/pull/2657#discussion_r208149640","bodyText":"please restore this to 'origin'","diffHunk":"@@ -1,15 +1,21 @@\n import sys\n+import re\n \n from coalib.bearlib.abstractions.Linter import linter\n from coalib.settings.Setting import typed_list\n+from coalib.results.Result import Result\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import LineLength\n \n from dependency_management.requirements.PipRequirement import PipRequirement\n \n \n+OUTPUT_REGEX = (r'(?P<line>\\d+) (?P<column>\\d+) '\n+                r'(?P<message>(?P<rule>\\S+).*)')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-07T08:56:33Z","lastEditedAt":null,"updatedAt":"2018-08-07T08:56:33Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534470074000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2658","number":2658,"title":"setup.cfg: Use template","body":"need to redo the commits","comments":0,"createdAt":"2018-08-06T11:30:43Z","updatedAt":"2018-08-17T01:41:14Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2658","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533797295000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2661","number":2661,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-08T14:39:04Z","updatedAt":"2018-08-09T06:48:15Z","closedAt":"2018-08-09T06:47:43Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2661","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODYxMzMyMQ==","url":"https://github.com/coala/coala-bears/pull/2661#discussion_r208613321","bodyText":"please remove this file.\nand also change your commit message to \"Sync templates\" as was provided to you on gitter.","diffHunk":"@@ -0,0 +1 @@\n+{\"Gemfile\": \"\\u00c1j\\u00b8\\u001d\\u00be\\u00b5\\u00c7N\\u00b0w|\\u000e\\\\\\u0013o \", \"runtime.txt\": \"Nd\\u001d\\u00a2B\\u001e\\u00a7\\u0092\\u0017\\u0018\\u0019\\u00e7\\u008b\\u00d6t\\u0099\", \"bear-requirements.txt\": \"Vy\\u00f3\\u00a0q\\u0002i\\u0084\\u009f\\u00cd\\u00fd\\u0018\\u00e9\\u00be,T\", \".ci/appveyor.yml\": \"\\u009bo\\u00ceZ\\u00c3\\u00c1\\\\T\\u00c23\\u0012\\u0006m*#v\", \"package.json\": \"\\u00a85\\u00be\\u0096Y\\u00d1\\u0094m\\u00e6\\u00c6\\u0001\\u0099s\\u00f89\\u0010\", \"bears/VERSION\": \"\\u00c3\\u000bH\\u0083\\u00cb,\\u00e0&\\u001a\\u00fb\\u00f6\\u001a\\u00bb\\u008f\\u00a9\\u00c2\", \"requirements.txt\": \"\\u00ce\\u00ee\\u00ee&Z4\\u0080\\r\\u00ca\\u00c0\\u0090\\u00b1\\u00cfC\\u000f<\", \"coala-bears.cabal\": \"\\u00e9\\u00c9\\u001e!@\\u008eDf\\u00d9\\u0098\\u0094\\t\\u00d8a\\u0085B\", \"test-requirements.txt\": \"yM\\u00d3N\\u00ff\\u0001s\\u0004wH'\\u00b0\\u008e8\\u00fac\", \"netlify.toml\": \"\\u00fbr\\u00a7\\u00f0{{\\u00b6\\u00e2U\\u00ced\\u00b5<^\\u00aaY\", \".ci/run_with_env.cmd\": \"\\u00aa\\u00d9Kx\\u00ee\\u00be7\\u00ef@\\u0012\\u001e\\u00a4\\u0098\\u00c9\\u00de\\u00a3\", \"setup.py\": \"\\u00e0\\u0005T#M;?\\u000e:\\u00a1\\u0019\\u008c\\u00c1\\u009e\\u008a\\u0094\"}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T14:53:44Z","lastEditedAt":null,"updatedAt":"2018-08-08T14:53:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODYxNzg3OQ==","url":"https://github.com/coala/coala-bears/pull/2661#discussion_r208617879","bodyText":"And to fix this annoyance, please also edit .coafile and change the max line length to 80 instead of 79 .\nI have created an issue for you to do that #2662\nAdd a separate commit which makes that change.","diffHunk":"@@ -100,6 +100,220 @@ def run(self):\n __dir__ = os.path.dirname(__file__)\n \n \n+from distutils.version import LooseVersion  # noqa (late-import)\n+\n+\n+class PEP440Version(LooseVersion):\n+    \"\"\"\n+    Basic PEP440 version with a few features.\n+\n+    Uses the same version semantics as LooseVersion,\n+    with the addition that a ``v`` prefix is allowed\n+    in the version as required by PEP 440.\n+\n+    vstring may be a list, tuple or string.\n+\n+    v_prefix indicates whether output of the version\n+    should include a v prefix.\n+\n+    v_prefix is auto-detected by default.\n+    Set to False to remove if present, or True to add if missing.\n+    \"\"\"\n+\n+    def __init__(self, vstring=None, v_prefix=None):\n+        self._v_prefix = v_prefix\n+\n+        if isinstance(vstring, (list, tuple)):\n+            type_ = type(vstring)\n+            vstring = '.'.join(str(i) for i in vstring)\n+        else:\n+            type_ = list\n+\n+        vstring = vstring.strip()\n+\n+        if vstring.startswith('v'):\n+            vstring = vstring[1:]\n+            if vstring.startswith('!'):\n+                raise ValueError('Invalid use of epoch')\n+            if v_prefix is not False:\n+                self._v_prefix = True\n+\n+        # Can not use super(..) on Python 2.7\n+        LooseVersion.__init__(self, vstring)\n+        if self._v_prefix:\n+            self.vstring = 'v' + self.vstring\n+        if len(self.version) > 1 and self.version[1] == '!':\n+            self._epoch = self.version[0]\n+            if not isinstance(self._epoch, int) or len(self.version) < 3:\n+                raise ValueError('Invalid use of epoch')\n+\n+        # Normalise to lower case\n+        self.version = [\n+            x if isinstance(x, int) else x.lower() for x in self.version\n+            if x not in ('-', '_')]\n+\n+        if self.version[-1] != '*' and not isinstance(self.version[-1], int):\n+            self.version += (0, )\n+\n+        if type_ is tuple:\n+            self.version = tuple(self.version)\n+\n+        self._final = None\n+        self._previous = None\n+\n+    def __repr__(self):\n+        return \"%s('%s')\" % (self.__class__.__name__, str(self))\n+\n+    @property\n+    def is_dev(self):\n+        return any(part == 'dev' for part in self.version)\n+\n+    @property\n+    def has_epoch(self):\n+        return any(part == '!' for part in self.version)\n+\n+    @property\n+    def final(self):\n+        \"\"\"\n+        Provide only the final component of the version.\n+\n+        A new instance is return if this instance is not final.\n+        \"\"\"\n+        if self.has_epoch:\n+            raise NotImplementedError\n+\n+        if self._final is not None:\n+            return self._final\n+\n+        for i, part in enumerate(self.version):\n+            if not isinstance(part, int):\n+                final = self.version[:i]\n+                break\n+        else:\n+            self._final = self\n+            return self\n+\n+        self._final = PEP440Version(final, self._v_prefix)\n+\n+        return self._final\n+\n+    @property\n+    def is_final(self):\n+        return self.final == self\n+\n+    @property\n+    def is_zero(self):\n+        return all(part == 0 for part in self.version)\n+\n+    _zero_message = 'version prior to 0.0 can not exist'\n+\n+    def _estimate_previous(self):\n+        \"\"\"\n+        Return a new version calculated to be the previous version.\n+\n+        Currently only handles when the current instance is a final version.\n+\n+        To really get the previous for 1.0.0, we need to consult PyPi,\n+        git tags, or some other source of all released versions,\n+        to find the highest patch release in the prior minor release, or\n+        highest minor releases if there were no patch releases in the\n+        last minor release, etc.\n+\n+        As a result, currently this assumes that release x.(x-1).0 exists\n+        in that instance.\n+        \"\"\"\n+        if self._previous:\n+            return self._previous\n+\n+        assert self.is_final, '%r is not final' % self\n+\n+        if self.is_zero:\n+            raise ValueError(self._zero_message)\n+\n+        previous = self._decrement(self.version)\n+        self._previous = PEP440Version(previous, self._v_prefix)\n+        return self._previous\n+\n+    @staticmethod\n+    def _decrement(version):\n+        pos = len(version) - 1\n+\n+        # Look for non-zero int part\n+        while pos != 0 and not (isinstance(version[pos], int) and version[pos]):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T15:04:33Z","lastEditedAt":null,"updatedAt":"2018-08-08T15:04:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTY0ODI4Ng==","url":"https://github.com/coala/coala-bears/pull/2661#issuecomment-411648286","bodyText":"Commit metadata includes @anctartica .  How did he get there?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T06:13:02Z","lastEditedAt":null,"updatedAt":"2018-08-09T06:13:02Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1533750777000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2663","number":2663,"title":".coafile: Set max line characters to 80","body":"The attribute max_line_length changed to 80.\nCloses #2662\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-08-08T15:51:33Z","updatedAt":"2018-08-08T17:52:57Z","closedAt":"2018-08-08T17:52:56Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"bfd4f2"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2663","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTQ4Mzg0OA==","url":"https://github.com/coala/coala-bears/pull/2663#issuecomment-411483848","bodyText":"This wasnt rebased.  Keep your master up to date, and check it before pushing a PR","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T17:17:33Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:17:33Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534134018000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2666","number":2666,"title":"appveyor.yml: Install test requirements first","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-08-10T13:58:06Z","updatedAt":"2018-08-13T04:20:18Z","closedAt":"2018-08-13T04:19:37Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2666","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534179215000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2667","number":2667,"title":"Jinja2Bear: Disable the need of trailing comment","body":"This enables the end of block to not have comment.\nHowever by default it would check for the trailing comment\nBut the behavior can be changed by the user explicitly.\nCloses #2659\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-10T16:21:05Z","updatedAt":"2018-08-13T16:53:35Z","closedAt":"2018-08-13T16:53:35Z","state":"merged","user":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"owner":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2667","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxMTA5MQ==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209411091","bodyText":"change this to\nif not check_end_labels:\n    return\nthen you dont need to indent all the other lines","diffHunk":"@@ -308,31 +309,32 @@ def check_control_end_tags(self,\n                 yield self.handle_control_spacing_issue(\n                     file, filename, line, line_number, control_spacing, m)\n \n-            # yield results for incorrect or missing end labels\n-            if label is None and line_number != start_in_line:\n-                diff = generate_label_diff(\n-                    file, filename, line, line_number, m, expected_label)\n-                yield Result.from_values(\n-                    origin=self,\n-                    message='Unlabeled control end tag',\n-                    file=filename,\n-                    line=line_number,\n-                    column=m.start(0) + 1,\n-                    end_line=line_number,\n-                    end_column=m.end(0) + 1,\n-                    diffs=diff)\n-            elif label != expected_label and line_number != start_in_line:\n-                diff = generate_label_diff(\n-                    file, filename, line, line_number, m, expected_label)\n-                yield Result.from_values(\n-                    origin=self,\n-                    message='End tag label does not match expected label',\n-                    file=filename,\n-                    line=line_number,\n-                    column=m.start('label') + 1,\n-                    end_line=line_number,\n-                    end_column=m.end('label') + 1,\n-                    diffs=diff)\n+            if check_end_labels:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T00:44:57Z","lastEditedAt":null,"updatedAt":"2018-08-11T00:44:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjIzNA==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209482234","bodyText":"add trailing , so the next setting is easy to add","diffHunk":"@@ -356,6 +360,7 @@ def run(self,\n             variable_spacing: int = 1,\n             statement_spacing: int = 1,\n             control_spacing: int = 1,\n+            check_end_labels: bool = True","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T02:52:36Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:52:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjI1OA==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209482258","bodyText":"add a trailing comma and move the ) to the next line.","diffHunk":"@@ -420,7 +425,8 @@ def run(self,\n                 file, filename, line, line_number, control_spacing)\n \n             yield from self.check_control_end_tags(\n-                file, filename, line, line_number, control_spacing)\n+                file, filename, line, line_number, control_spacing,\n+                check_end_labels)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T02:53:00Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:53:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjM2OA==","url":"https://github.com/coala/coala-bears/pull/2667#discussion_r209482368","bodyText":"change the variable name to \"valid_file_without_end_comments\" or something like that.","diffHunk":"@@ -164,6 +164,26 @@ def test_control_spacing(self):\n     valid_files=(good_file1, good_file2, good_file3),\n     invalid_files=(bad_file1, bad_file2))\n \n+good_file_01 = \"\"\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T02:54:53Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:54:53Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534008261000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2671","number":2671,"title":"GofmtBearTest: Skip tests if bear is not installed","body":"This enables the tests to skip if the GofmtBear is not\ninstalled.\nFixes #2670\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-11T15:52:37Z","updatedAt":"2018-08-11T17:24:21Z","closedAt":"2018-08-11T17:24:19Z","state":"merged","user":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"owner":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2671","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534535743000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2675","number":2675,"title":"GNUIndentBear.py: Fix max_line_length=0","body":"Add infinite length when\nmax_line_length is set to 0\nFixes coala/coala-bears#2669\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T09:50:30Z","updatedAt":"2018-08-17T19:55:43Z","closedAt":"2018-08-16T08:07:57Z","state":"merged","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2675","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI1MzAwMA==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210253000","bodyText":"The change you have done is ok, but this doesnt solve the problem.\nmax_line_length is not used after here.\nIt needs to be set much earlier in the function, before it is used.","diffHunk":"@@ -193,7 +194,7 @@ def create_arguments(filename, file, config_file,\n \n         # The limit is set to a number which equals to int max in C","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T12:32:39Z","lastEditedAt":null,"updatedAt":"2018-08-15T12:32:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ4MDAyNg==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210480026","bodyText":"Please remove this blank line","diffHunk":"@@ -155,6 +156,11 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T05:26:22Z","lastEditedAt":null,"updatedAt":"2018-08-16T05:26:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ4NTQxNQ==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210485415","bodyText":"Is this comment still relevant?","diffHunk":"@@ -155,6 +156,10 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+        # The limit is set to a number which equals to int max in C","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-08-16T06:10:13Z","lastEditedAt":null,"updatedAt":"2018-08-16T06:10:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ4OTY2Nw==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210489667","bodyText":"It isnt the max size in Python.\nSee https://docs.python.org/3/library/sys.html#sys.maxsize\nNote that Py_ssize_t isnt something that is exposed to the Python 3 language at all -- it is quite internal, so it is better to say this is an arbitrary high number.","diffHunk":"@@ -155,6 +156,10 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+        # The limit is set to a number which equals to the max size in Python","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T06:37:31Z","lastEditedAt":null,"updatedAt":"2018-08-16T06:37:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQ5NTQzOQ==","url":"https://github.com/coala/coala-bears/pull/2675#discussion_r210495439","bodyText":"Okay. Changing it","diffHunk":"@@ -155,6 +156,10 @@ def create_arguments(filename, file, config_file,\n             Any command line options the indent binary understands. They\n             will be simply passed through.\n         \"\"\"\n+        # The limit is set to a number which equals to the max size in Python","author":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4","name":"Amandeep Srivastava"},"createdAt":"2018-08-16T07:09:41Z","lastEditedAt":null,"updatedAt":"2018-08-16T07:09:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzQzMzgwNg==","url":"https://github.com/coala/coala-bears/pull/2675#issuecomment-413433806","bodyText":"@srivama , your commit message uses coala/coala-bears#2669.  You need to use the full URL to the issue.\nAnd you need to rebase.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T05:52:26Z","lastEditedAt":null,"updatedAt":"2018-08-16T05:52:26Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1534344956000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2676","number":2676,"title":"GNUIndentBear.py: Fix max_line_length=0","body":"Add infinite length when\nmax_line_length is set to 0\nFixes coala/coala-bears#2669\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-15T14:47:58Z","updatedAt":"2018-08-15T14:55:56Z","closedAt":"2018-08-15T14:55:55Z","state":"closed","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2676","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyMzkwNw==","url":"https://github.com/coala/coala-bears/pull/2676#issuecomment-413223907","bodyText":"Duplicate of #2675","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T14:55:55Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:55:55Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535581747000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2679","number":2679,"title":"BanditBearTest.py: Support bandit 1.5","body":"Allows the B701 message to vary slightly for bandit 1.5\nCloses #2678\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-17T17:30:34Z","updatedAt":"2018-08-29T22:29:07Z","closedAt":"2018-08-29T22:29:07Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/test","color":"207de5"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2679","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535860647000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2680","number":2680,"title":"JuliaLintBearTest: Remove timeout","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-18T00:20:59Z","updatedAt":"2018-09-02T03:57:27Z","closedAt":"2018-09-02T03:57:27Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/test","color":"207de5"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2680","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535896856000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2684","number":2684,"title":"TailorBearTest.py & TSLintBearTest.py : Change test variables name","body":"Ensures that name of tests are consistent with other test modules\nthat use verify_local_bear\nCloses #1733","comments":12,"createdAt":"2018-09-01T06:16:49Z","updatedAt":"2018-09-02T14:00:56Z","closedAt":"2018-09-02T14:00:48Z","state":"merged","user":{"login":"e-aakash","avatarUrl":"https://avatars2.githubusercontent.com/u/38072663?v=4"},"owner":{"login":"e-aakash","avatarUrl":"https://avatars2.githubusercontent.com/u/38072663?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70e870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2684","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNDQ3Ng==","url":"https://github.com/coala/coala-bears/pull/2684#discussion_r214534476","bodyText":"move all of the parameters to the next line, indented four spaces, for all of these lines you have modified (but not other lines).","diffHunk":"@@ -24,22 +24,24 @@\n }\n \"\"\"\n \n-TailorBearWithoutConfig = verify_local_bear(TailorBear,\n-                                            valid_files=(good_file,),\n-                                            invalid_files=(bad_file,),\n-                                            tempfile_kwargs={\n+TailorBearWithoutConfigTest = verify_local_bear(TailorBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-02T09:32:23Z","lastEditedAt":null,"updatedAt":"2018-09-02T09:32:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNTUwOQ==","url":"https://github.com/coala/coala-bears/pull/2684#discussion_r214535509","bodyText":"In the 4 space indentation, can I put more than 1 parameters in one line, or 1 parameter per line is required?","diffHunk":"@@ -24,22 +24,24 @@\n }\n \"\"\"\n \n-TailorBearWithoutConfig = verify_local_bear(TailorBear,\n-                                            valid_files=(good_file,),\n-                                            invalid_files=(bad_file,),\n-                                            tempfile_kwargs={\n+TailorBearWithoutConfigTest = verify_local_bear(TailorBear,","author":{"login":"e-aakash","avatarUrl":"https://avatars2.githubusercontent.com/u/38072663?v=4","name":"E Aakash"},"createdAt":"2018-09-02T10:19:19Z","lastEditedAt":null,"updatedAt":"2018-09-02T10:19:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzOTkwNQ==","url":"https://github.com/coala/coala-bears/pull/2684#discussion_r214539905","bodyText":"Follow PEP 8 style guide please.","diffHunk":"@@ -24,22 +24,24 @@\n }\n \"\"\"\n \n-TailorBearWithoutConfig = verify_local_bear(TailorBear,\n-                                            valid_files=(good_file,),\n-                                            invalid_files=(bad_file,),\n-                                            tempfile_kwargs={\n+TailorBearWithoutConfigTest = verify_local_bear(TailorBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-02T12:58:39Z","lastEditedAt":null,"updatedAt":"2018-09-02T12:58:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzkwNTAzNA==","url":"https://github.com/coala/coala-bears/pull/2684#issuecomment-417905034","bodyText":"Do I have to change the shorlog of the commit message or the summary?","diffHunk":null,"author":{"login":"e-aakash","avatarUrl":"https://avatars2.githubusercontent.com/u/38072663?v=4","name":"E Aakash"},"createdAt":"2018-09-02T04:54:14Z","lastEditedAt":null,"updatedAt":"2018-09-02T04:54:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzkwNzI4Ng==","url":"https://github.com/coala/coala-bears/pull/2684#issuecomment-417907286","bodyText":"everything","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-02T05:58:44Z","lastEditedAt":null,"updatedAt":"2018-09-02T05:58:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzkwNzczNQ==","url":"https://github.com/coala/coala-bears/pull/2684#issuecomment-417907735","bodyText":"It would be highly helpful if you suggest the changes that i have to do in the commit message.","diffHunk":null,"author":{"login":"e-aakash","avatarUrl":"https://avatars2.githubusercontent.com/u/38072663?v=4","name":"E Aakash"},"createdAt":"2018-09-02T06:11:23Z","lastEditedAt":null,"updatedAt":"2018-09-02T06:11:23Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535879057000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2685","number":2685,"title":"Fix master build","body":"","comments":1,"createdAt":"2018-09-01T19:34:21Z","updatedAt":"2018-09-02T09:04:17Z","closedAt":"2018-09-02T00:31:08Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2685","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg5NjUxNg==","url":"https://github.com/coala/coala-bears/pull/2685#issuecomment-417896516","bodyText":"Dup of #2680 , not reviewed for two weeks.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgyMDUyOQ==","createdAt":"2018-09-02T09:04:14Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-09-02T00:29:33Z","lastEditedAt":null,"updatedAt":"2018-09-02T00:29:33Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1535871877000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2686","number":2686,"title":".travis.yml: Remove Python 3.6","body":"The Python 3.6 job is failing.\nRemove it until it is fixed, so that Travis checks\ncan be required again.\nRelated to #2664\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-09-02T04:05:28Z","updatedAt":"2018-09-02T07:04:37Z","closedAt":"2018-09-02T07:04:37Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2686","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535914060000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/658","number":658,"title":"Change 2017 GSoC report activity yaml","body":"This fixes the previously 0 based yaml and changes it to 1 based.\nFixes #616\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-31T05:01:12Z","updatedAt":"2018-09-02T18:47:40Z","closedAt":null,"state":"open","user":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"owner":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"assignee":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"},{"name":"process/wip","color":"fbca04"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/658","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDI1NjY2MA==","url":"https://github.com/coala/projects/pull/658#discussion_r214256660","bodyText":"Your commit message does not reflect your changes. This file is not 2017 report but 2018.","diffHunk":"@@ -44,392 +44,392 @@ social:\n email: ajankit2304@gmail.com\n blog: https://macbox7.github.io/Blog-GSOC18/\n activity:\n- - 0:\n+ - 1:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-31T06:39:01Z","lastEditedAt":null,"updatedAt":"2018-08-31T06:39:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDMxNDQ1NA==","url":"https://github.com/coala/projects/pull/658#discussion_r214314454","bodyText":"Also your commit message should follow the commit guidelines.","diffHunk":"@@ -44,392 +44,392 @@ social:\n email: ajankit2304@gmail.com\n blog: https://macbox7.github.io/Blog-GSOC18/\n activity:\n- - 0:\n+ - 1:","author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2018-08-31T10:44:34Z","lastEditedAt":null,"updatedAt":"2018-08-31T10:44:34Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535882609000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/656","number":656,"title":"Update adhikasp.md","body":"Made PRs link directly to the commits\nCloses #623","comments":1,"createdAt":"2018-08-26T22:52:12Z","updatedAt":"2018-09-02T10:03:29Z","closedAt":null,"state":"open","user":{"login":"Hax7","avatarUrl":"https://avatars0.githubusercontent.com/u/18662960?v=4"},"owner":{"login":"Hax7","avatarUrl":"https://avatars0.githubusercontent.com/u/18662960?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/low","color":"2fe055"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/656","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjk1MjUyNw==","url":"https://github.com/coala/projects/pull/656#discussion_r212952527","bodyText":"detail should be aspectModule: Add ``get()`` method (commit head)\nlink should be coala/coala@66d0276","diffHunk":"@@ -40,48 +40,48 @@ blog: https://adhikasp.github.io\n activity:\n  - 0:\n    - repo: coala\n-   - link: https://github.com/coala/coala/pull/4412\n+   - link: https://github.com/coala/coala/pull/4412/commits","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-27T12:09:55Z","lastEditedAt":null,"updatedAt":"2018-08-27T12:09:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjk1MjczNg==","url":"https://github.com/coala/projects/pull/656#discussion_r212952736","bodyText":"This PR has 3 commits. You should have 3 items here.","diffHunk":"@@ -40,48 +40,48 @@ blog: https://adhikasp.github.io\n activity:\n  - 0:\n    - repo: coala\n-   - link: https://github.com/coala/coala/pull/4412\n+   - link: https://github.com/coala/coala/pull/4412/commits\n    - details: >\n       aspectModule: Add ``get()`` method\n  - 1:\n    - repo: coala\n-   - link: https://github.com/coala/coala/pull/4392\n+   - link: https://github.com/coala/coala/pull/4392/commits","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-27T12:11:01Z","lastEditedAt":null,"updatedAt":"2018-08-27T12:11:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg3MDM4Ng==","url":"https://github.com/coala/projects/pull/656#issuecomment-417870386","bodyText":"@li-boxuan Thank you very much for the help I've added new commits to the PR.","diffHunk":null,"author":{"login":"Hax7","avatarUrl":"https://avatars0.githubusercontent.com/u/18662960?v=4","name":"Ahmad Asmar"},"createdAt":"2018-09-01T16:22:05Z","lastEditedAt":null,"updatedAt":"2018-09-01T16:22:05Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535686749000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/657","number":657,"title":"Change yaml of 8 files under _reports directory","body":"Changed the yaml of GSoC 2017 report from 0 based to 1 based.\nCloses #616\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-29T11:39:18Z","updatedAt":"2018-08-31T03:39:09Z","closedAt":"2018-08-31T03:38:56Z","state":"closed","user":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"owner":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"assignee":{"login":"hritikhks","avatarUrl":"https://avatars1.githubusercontent.com/u/39440248?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XXL","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/657","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535628955000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/651","number":651,"title":"_projects: Update status of GSoC 2018 projects","body":"This updates the status of GSoC 2018 projects in projects.coala.io\nCloses #636\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-23T15:26:11Z","updatedAt":"2018-08-30T11:35:55Z","closedAt":"2018-08-27T10:53:42Z","state":"merged","user":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"owner":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/medium","color":"f2db30"},{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/651","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUxNTg2Mw==","url":"https://github.com/coala/projects/pull/651#discussion_r212515863","bodyText":"@nkprince007 , what is the status of this project?","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T03:56:20Z","lastEditedAt":null,"updatedAt":"2018-08-24T03:56:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUxNjg1NQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212516855","bodyText":"please re-add GSoC here.\nWhat I meant by 'non-GSoC' was that it had been marked as 'in progress', but no gsoc project had ever commenced, and I wasnt aware of who might have been doing it.\nI've double checked now, and this project is certainly available to be worked on.","diffHunk":"@@ -1,11 +1,9 @@\n ---\n collaborating_projects:\n   - coala\n-status: in_progress\n desc: \"Develop an efficient strategy that allows coala to maintain a number of plugins for different editors.\"\n difficulty: medium\n initiatives:\n-  - GSoC","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T04:07:22Z","lastEditedAt":null,"updatedAt":"2018-08-24T04:07:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUxNjk3NQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212516975","bodyText":"please undo this change.\nSomeone else has already marked it as disabled, and it is also 'in progress' - this is a strange one ;-)","diffHunk":"@@ -17,9 +17,7 @@ requirements:\n   - \"The applicant should have at least one patch merged to any of the coala repositories.\"\n   - \"Familiarity with Git, GitHub API, Phabricator API, and GitLab API\"\n   - \"Familiarity with EmberJS and GitHub Pages\"\n-status:\n-  - in_progress\n-  - disabled\n+status: disabled","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T04:08:41Z","lastEditedAt":null,"updatedAt":"2018-08-24T04:08:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyMzYzMQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212523631","bodyText":"This project never surfaced completion. During the development of this project, we got the award from Mozilla Open Source Support and so, we shifted our focus towards finishing MOSS stuff.","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[],"createdAt":"2018-08-24T05:17:47Z","lastEditedAt":null,"updatedAt":"2018-08-24T05:17:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyMzgyMQ==","url":"https://github.com/coala/projects/pull/651#discussion_r212523821","bodyText":"So status is still \"in_progress\"?","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-24T05:19:50Z","lastEditedAt":null,"updatedAt":"2018-08-24T05:19:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyNzgxMg==","url":"https://github.com/coala/projects/pull/651#discussion_r212527812","bodyText":"Well, more like stopped amidst. No one seems to care about adding support to Jira because it involves having a lot of stuff to develop. First off, it requires our own instance of Jira to begin with.","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[],"createdAt":"2018-08-24T05:57:14Z","lastEditedAt":null,"updatedAt":"2018-08-24T05:57:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyODU2NA==","url":"https://github.com/coala/projects/pull/651#discussion_r212528564","bodyText":"Ok, so the Jira project is available. Right?","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-24T06:03:11Z","lastEditedAt":"2018-08-24T06:04:00Z","updatedAt":"2018-08-24T06:04:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjUyOTEzNw==","url":"https://github.com/coala/projects/pull/651#discussion_r212529137","bodyText":"Yes.","diffHunk":"@@ -43,7 +42,6 @@ requirements:\n   - \"The participant should have at least one patch to\n      [GitMate](https://gitlab.com/gitmate/open-source/gitmate-2) accepted.\"\n   - \"The participant should demonstrate that he can operate Jira from the Python shell in his proposal.\"\n-status: in_progress","author":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4","name":"Naveen Kumar Sangi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODQxODc3Ng==","createdAt":"2018-08-24T09:41:07Z","content":"THUMBS_UP","user":{"login":"123vivekr","name":"Vivek R"}}],"createdAt":"2018-08-24T06:08:01Z","lastEditedAt":null,"updatedAt":"2018-08-24T06:08:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjc4ODIzOA==","url":"https://github.com/coala/projects/pull/651#discussion_r212788238","bodyText":"as this project is available, we need to keep 'GSoC' here","diffHunk":"@@ -7,7 +7,6 @@ desc: \"GitMate.io helps by automating tasks on GitHub and GitLab. It's time to a\n developers_involved: []\n difficulty: medium\n initiatives:\n-  - GSoC","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-25T04:15:44Z","lastEditedAt":null,"updatedAt":"2018-08-25T04:15:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTY2MDAyNA==","url":"https://github.com/coala/projects/pull/651#issuecomment-415660024","bodyText":"@jayvdb Requested changes have been applied. Commit message has been fixed and now abides to the Commit Message Guidelines.","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-24T06:01:52Z","lastEditedAt":null,"updatedAt":"2018-08-24T06:01:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0OTE2OA==","url":"https://github.com/coala/projects/pull/651#issuecomment-415949168","bodyText":"@jayvdb GSoC added to the project.","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-25T07:34:01Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:34:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk1MDQ0Ng==","url":"https://github.com/coala/projects/pull/651#issuecomment-415950446","bodyText":"@jayvdb All the requested changes are done. But TravisCI tests are failing.\nHow do I fix the TravisCI test failing issue?\ndocutils.sourceforge.net is returning error code 503: No backend servers available","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-25T07:50:06Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:50:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjExMjQxNQ==","url":"https://github.com/coala/projects/pull/651#issuecomment-416112415","bodyText":"Travis CI build is passing. Please review :)","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"reactions":[],"createdAt":"2018-08-27T04:41:08Z","lastEditedAt":null,"updatedAt":"2018-08-27T04:41:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjE4OTA4MQ==","url":"https://github.com/coala/projects/pull/651#issuecomment-416189081","bodyText":"Please do not close PRs.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-27T10:51:44Z","lastEditedAt":null,"updatedAt":"2018-08-27T10:51:44Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535582061000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/653","number":653,"title":"gitmate_gitlab.md: Fix typo and broken links","body":"","comments":2,"createdAt":"2018-08-24T08:30:29Z","updatedAt":"2018-08-29T22:34:21Z","closedAt":null,"state":"open","user":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"owner":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"assignee":{"login":"kaushl1998","avatarUrl":"https://avatars0.githubusercontent.com/u/41343571?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/653","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535268601000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/654","number":654,"title":"editor_support: Removed emacs","body":"coala/coala-eclipse#25 is replaced with coala/coala-eclipse#51.\ncoala/coala-emacs#11 is removed. emacs from the project body is also\nremoved.\nFixes #652","comments":2,"createdAt":"2018-08-25T17:01:55Z","updatedAt":"2018-08-26T07:30:01Z","closedAt":"2018-08-26T07:29:50Z","state":"closed","user":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"owner":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"assignee":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/654","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk4MzkxNQ==","url":"https://github.com/coala/projects/pull/654#issuecomment-415983915","bodyText":"Please refer to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html for writing commit messages. Also, you need to squash your commits.","diffHunk":null,"author":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4","name":"Amandeep Srivastava"},"createdAt":"2018-08-25T17:16:56Z","lastEditedAt":null,"updatedAt":"2018-08-25T17:16:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk4NTE2OQ==","url":"https://github.com/coala/projects/pull/654#issuecomment-415985169","bodyText":"@srivama do I need to squash and pull it again?","diffHunk":null,"author":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4","name":"Rahul Jain"},"createdAt":"2018-08-25T17:39:13Z","lastEditedAt":null,"updatedAt":"2018-08-25T17:39:13Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535807463000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/655","number":655,"title":"editor_support.md: Remove emacs and Change coala/coala-eclipse#25","body":"coala/coala-eclipse#25 is replaced with coala/coala-eclipse#51.\ncoala/coala-emacs#11 is removed. emacs from the project body is also\nremoved.\nFixes #652","comments":4,"createdAt":"2018-08-26T04:56:19Z","updatedAt":"2018-09-01T13:11:03Z","closedAt":null,"state":"open","user":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"owner":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"assignee":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/655","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjAzNDk2Nw==","url":"https://github.com/coala/projects/pull/655#issuecomment-416034967","bodyText":"@li-boxuan Requested changes have been applied. Commit message has been fixed.","diffHunk":null,"author":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4","name":"Rahul Jain"},"createdAt":"2018-08-26T12:18:53Z","lastEditedAt":null,"updatedAt":"2018-08-26T12:18:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNDI0OA==","url":"https://github.com/coala/projects/pull/655#issuecomment-416414248","bodyText":"Commit message still wrong     see https://github.com/coala/projects/pull/655/commits","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T00:47:23Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:47:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzIxNDM1Nw==","url":"https://github.com/coala/projects/pull/655#issuecomment-417214357","bodyText":"@jayvdb Commit message modified. Please review again!","diffHunk":null,"author":{"login":"rahuldkjain","avatarUrl":"https://avatars1.githubusercontent.com/u/26406279?v=4","name":"Rahul Jain"},"createdAt":"2018-08-30T07:13:55Z","lastEditedAt":null,"updatedAt":"2018-08-30T07:13:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg1ODY4Mw==","url":"https://github.com/coala/projects/pull/655#issuecomment-417858683","bodyText":"commit message still wildly wrong.\nSee https://coala.io/commit .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T13:10:52Z","lastEditedAt":null,"updatedAt":"2018-09-01T13:10:52Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534240821000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/639","number":639,"title":"_reports/RJ722.md: Update report for RJ722","body":"Add permalink\nAdd new commit","comments":6,"createdAt":"2018-08-14T08:44:43Z","updatedAt":"2018-08-14T10:00:21Z","closedAt":"2018-08-14T09:57:18Z","state":"merged","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/639","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg3MzUxOA==","url":"https://github.com/coala/projects/pull/639#discussion_r209873518","bodyText":"There are three commits in this PR, and they also need to be added to your tarball if you want to add them to the activity report.","diffHunk":"@@ -266,61 +267,66 @@ activity:\n       - details: \"Add --ignore-names flag (#139).\"\n \n   - 46:\n+      - repo: vulture\n+      - link: https://github.com/jendrikseipp/vulture/commit/3c965e2\n+      - details: \"Add Item.get_whitelist_string. (#144)\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T08:50:13Z","lastEditedAt":null,"updatedAt":"2018-08-14T08:50:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg4NTgyMw==","url":"https://github.com/coala/projects/pull/639#discussion_r209885823","bodyText":"I've added the recent ones from Vulture. Anything else left?","diffHunk":"@@ -266,61 +267,66 @@ activity:\n       - details: \"Add --ignore-names flag (#139).\"\n \n   - 46:\n+      - repo: vulture\n+      - link: https://github.com/jendrikseipp/vulture/commit/3c965e2\n+      - details: \"Add Item.get_whitelist_string. (#144)\"","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-14T09:29:31Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:29:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg4OTk3MA==","url":"https://github.com/coala/projects/pull/639#discussion_r209889970","bodyText":"Ah I see , they are squashing into one commit.\nOk, then this checks out.  Thanks","diffHunk":"@@ -266,61 +267,66 @@ activity:\n       - details: \"Add --ignore-names flag (#139).\"\n \n   - 46:\n+      - repo: vulture\n+      - link: https://github.com/jendrikseipp/vulture/commit/3c965e2\n+      - details: \"Add Item.get_whitelist_string. (#144)\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzg4NjA5Ng==","createdAt":"2018-08-14T09:55:13Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-14T09:42:44Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:42:44Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534242076000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/640","number":640,"title":"reports: Add Nitanshu's GSoC report","body":"Deploy Preview: https://deploy-preview-640--coala-projects.netlify.com/gsoc/2018/statusreport/nitanshuvashistha","comments":6,"createdAt":"2018-08-14T09:50:50Z","updatedAt":"2018-08-14T10:21:16Z","closedAt":"2018-08-14T10:20:10Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/640","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534259641000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/641","number":641,"title":"Add ishanSrt's report","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-08-14T14:58:15Z","updatedAt":"2018-08-14T15:14:01Z","closedAt":"2018-08-14T15:11:17Z","state":"merged","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/641","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTk4Njg2OQ==","url":"https://github.com/coala/projects/pull/641#discussion_r209986869","bodyText":"this is the cause of the Netlify breakage.  It doesnt like the \":\" , but a link here will solve that.","diffHunk":"@@ -0,0 +1,162 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Ishan Srivastava\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Quickstart Green Mode\n+project_link: https://summerofcode.withgoogle.com/projects/#5792652830703616\n+tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/d859b05e/ishanSrt.tar.gz\n+sha256sum: 4dcee0f017d832965ca44a76d0a8b20f92d68fd2fb820975984a51b4ff34806a\n+mentors: >\n+  [Satwik Kansal](https://github.com/satwikkansal) &\n+  [Adhityaa Chandrasekar](https://github.com/adtac) &\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/46\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/56\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/70\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/72\n+bio: >\n+  I am a third year student (expected graduation date: May 2020) of Computer\n+  Science and Engineering at Indian Institute of Technology Dharwad. I\n+  participated in GSoC and worked with [coala](http://coala.io) to implement\n+  the coala-quickstart Green Mode for the repository\n+  [coala-quickstart](https://github.com/coala/coala-quickstart) to generate\n+  project dependent configuration files for the coala project, which make\n+  coala show no inconsistencies in the code base and are helpful in detecting\n+  inconsistencies in future commits. I also solved and contributed small\n+  patches to other coala repositories during the time period of GSoC.\n+social:\n+  - GitHub:\n+      - username: ishanSrt\n+      - link: https://github.com/ishanSrt\n+  - GitLab:\n+      - username: ishanSrt\n+      - link: https://gitlab.com/ishanSrt\n+  - Gitter:\n+      - username: ishanSrt\n+      - link: https://gitter.im/ishanSrt\n+  - OpenHub:\n+      - username: ishanSrt\n+      - link: https://www.openhub.net/accounts/ishanSrt\n+email: ishan.srt@gmail.com\n+blog: https://www.dowhatucant.com/gsoc_archive.html\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/e5724fa9b0be71304277e508c2f317318aeed1c4\n+      - details: >\n+         [Bonding Period Work] quickstart_green_mode.md: Add Quickstart Green Mode Project\n+\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/ea3f0ac7e8d98cdf1afa5d6e99345a760f83dc39\n+      - details: >\n+         [Bonding Period Work] .gitignore: Add .DS_Store\n+\n+  - 3:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/0daa94289919d5dff171ce771b24f057c64f33d5\n+      - details: >\n+         README.md: Add green mode cEP\n+\n+  - 4:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/e58b935be77459b9323a80ef9b47267d445d8c5c\n+      - details: >\n+         cEP-0022.md: Add cEP for quickstart green mode\n+\n+  - 5:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/f423227b4868376496f2280ee5e69aeb2db66724\n+      - details: >\n+         CODEOWNERS: Add a list of developers\n+\n+  - 6:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a725f019c898a3422c856e1deae9cca906594883\n+      - details: >\n+         green_mode.py: Run BEAR_DEPS bears while testing\n+\n+  - 7:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/9e91285ac87cd36ee846743f1c9d891c324f8c18\n+      - details: >\n+         bear_settings.yaml: Fix wrong bear for settings\n+\n+  - 8:\n+      - repo: coala-quickstart\n+      - link: Project.py: Fix bug while printing languages","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T15:02:24Z","lastEditedAt":null,"updatedAt":"2018-08-14T15:02:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTk4NzA5OA==","url":"https://github.com/coala/projects/pull/641#discussion_r209987098","bodyText":"Green Mode","diffHunk":"@@ -0,0 +1,162 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Ishan Srivastava\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Quickstart Green Mode\n+project_link: https://summerofcode.withgoogle.com/projects/#5792652830703616\n+tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/d859b05e/ishanSrt.tar.gz\n+sha256sum: 4dcee0f017d832965ca44a76d0a8b20f92d68fd2fb820975984a51b4ff34806a\n+mentors: >\n+  [Satwik Kansal](https://github.com/satwikkansal) &\n+  [Adhityaa Chandrasekar](https://github.com/adtac) &\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/46\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/56\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/70\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/72\n+bio: >\n+  I am a third year student (expected graduation date: May 2020) of Computer\n+  Science and Engineering at Indian Institute of Technology Dharwad. I\n+  participated in GSoC and worked with [coala](http://coala.io) to implement\n+  the coala-quickstart Green Mode for the repository\n+  [coala-quickstart](https://github.com/coala/coala-quickstart) to generate\n+  project dependent configuration files for the coala project, which make\n+  coala show no inconsistencies in the code base and are helpful in detecting\n+  inconsistencies in future commits. I also solved and contributed small\n+  patches to other coala repositories during the time period of GSoC.\n+social:\n+  - GitHub:\n+      - username: ishanSrt\n+      - link: https://github.com/ishanSrt\n+  - GitLab:\n+      - username: ishanSrt\n+      - link: https://gitlab.com/ishanSrt\n+  - Gitter:\n+      - username: ishanSrt\n+      - link: https://gitter.im/ishanSrt\n+  - OpenHub:\n+      - username: ishanSrt\n+      - link: https://www.openhub.net/accounts/ishanSrt\n+email: ishan.srt@gmail.com\n+blog: https://www.dowhatucant.com/gsoc_archive.html\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/e5724fa9b0be71304277e508c2f317318aeed1c4\n+      - details: >\n+         [Bonding Period Work] quickstart_green_mode.md: Add Quickstart Green Mode Project\n+\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/ea3f0ac7e8d98cdf1afa5d6e99345a760f83dc39\n+      - details: >\n+         [Bonding Period Work] .gitignore: Add .DS_Store\n+\n+  - 3:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/0daa94289919d5dff171ce771b24f057c64f33d5\n+      - details: >\n+         README.md: Add green mode cEP\n+\n+  - 4:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/e58b935be77459b9323a80ef9b47267d445d8c5c\n+      - details: >\n+         cEP-0022.md: Add cEP for quickstart green mode\n+\n+  - 5:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/f423227b4868376496f2280ee5e69aeb2db66724\n+      - details: >\n+         CODEOWNERS: Add a list of developers\n+\n+  - 6:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a725f019c898a3422c856e1deae9cca906594883\n+      - details: >\n+         green_mode.py: Run BEAR_DEPS bears while testing\n+\n+  - 7:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/9e91285ac87cd36ee846743f1c9d891c324f8c18\n+      - details: >\n+         bear_settings.yaml: Fix wrong bear for settings\n+\n+  - 8:\n+      - repo: coala-quickstart\n+      - link: Project.py: Fix bug while printing languages\n+      - details: >\n+         Project.py: Fix bug while printing languages\n+\n+  - 9:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/8bbd4dab13853e61a1cd1a2634d0c6da72b09716\n+      - details: >\n+         green_mode_core.py: Fix a bug\n+\n+  - 10:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/94e9eda139234e8b9183ce5462bd7c9a9d97e197\n+      - details: >\n+         Aggregate green mode per file results\n+\n+\n+---\n+\n+### Meta-review","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzkwMzA0OA==","createdAt":"2018-08-14T15:11:05Z","content":"LAUGH","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-14T15:02:59Z","lastEditedAt":null,"updatedAt":"2018-08-14T15:02:59Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534344088000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/643","number":643,"title":"_faq/writing_a_great_proposal.md: Update GSoC info link","body":"Changes the outdated URL for additional info regarding the GSoC into the new one.\nFixes #642\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-15T03:45:11Z","updatedAt":"2018-08-15T14:41:28Z","closedAt":null,"state":"open","user":{"login":"nik1082","avatarUrl":"https://avatars3.githubusercontent.com/u/17260188?v=4"},"owner":{"login":"nik1082","avatarUrl":"https://avatars3.githubusercontent.com/u/17260188?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/643","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534524308000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/645","number":645,"title":"NitanshuVashistha.md: Fix grammatical mistakes","body":"Closes #644\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-17T15:20:27Z","updatedAt":"2018-08-17T16:45:08Z","closedAt":"2018-08-17T16:24:23Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/645","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534773739000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/646","number":646,"title":"Update ishanSrt's report","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-19T06:33:59Z","updatedAt":"2018-08-20T14:02:19Z","closedAt":"2018-08-20T13:55:51Z","state":"merged","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/646","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA5NzkwNg==","url":"https://github.com/coala/projects/pull/646#discussion_r211097906","bodyText":"this is a moban sync","diffHunk":"@@ -107,6 +107,179 @@ activity:\n       - details: >\n          Aggregate green mode per file results\n \n+  - 11:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/81e8a6179a6a93a9b4e68b0e1f138655578220ba\n+      - details: >\n+         Project.py: Ask to select languages\n+\n+  - 12:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/f26b264c72dedcb518aef209035349dd239539e9\n+      - details: >\n+         Add green mode incompatible bears list\n+\n+  - 13:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a725f019c898a3422c856e1deae9cca906594883\n+      - details: >\n+         green_mode.py: Run BEAR_DEPS bears while testing\n+\n+  - 14:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/ffaff5c4f86039d58860a0afe00ff1721860f22e\n+      - details: >\n+         bear_settings.yaml: Add green_mode.py\n+\n+  - 15:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/6bf20749002220d134fe775cf978ff5b2e2e9da2\n+      - details: >\n+         Project.py: Fix bug while printing languages\n+\n+  - 16:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/72de228a299c07d4d0f42196ce4a706b2b6febab\n+      - details: >\n+         Add filename_operations.py\n+\n+  - 17:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/9354c3062cef7f4309c801870e172d3ff180440c\n+      - details: >\n+         .moban.yaml: Increase pytest timeout\n+\n+  - 18:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/836df04a161ffd84ac3fe035bac45ea975812a76\n+      - details: >\n+         Add QuickstartBear\n+\n+  - 19:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/a18281c56e759f2880af9b4519a1ec65bd3ac29b\n+      - details: >\n+         Add bear_settings.yaml\n+\n+  - 20:\n+     - repo: coala-quickstart\n+     - link: https://github.com/coala/coala-quickstart/commit/468893fe4c6b64882a6e1b63b8edfac6ac18dd2c\n+     - details: >\n+        Add GREEN_MODE_COMPATIBLE_BEAR_LIST\n+\n+  - 21:\n+     - repo: coala-quickstart\n+     - link: https://github.com/coala/coala-quickstart/commit/6d02841ed75f6a52c9f15d6d082b6c4f3400da3a\n+     - details: >\n+        FileGlobs.py: Recursively look for gitignore files\n+\n+  - 22:\n+     - repo: coala-quickstart\n+     - link: https://github.com/coala/coala-quickstart/commit/f1b639f396963082bf04043627a12d8c2cfe65da","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T09:55:28Z","lastEditedAt":null,"updatedAt":"2018-08-19T09:55:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTEwMjc3NQ==","url":"https://github.com/coala/projects/pull/646#discussion_r211102775","bodyText":"You have a lot of ._* files in here, and .DS_Store\nAny chance you can remove them?\nOtherwise looks good.","diffHunk":"@@ -10,11 +10,11 @@ organisation_link: https://coala.io\n report_year: 2018\n project: Quickstart Green Mode\n project_link: https://summerofcode.withgoogle.com/projects/#5792652830703616\n-tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/d859b05e/ishanSrt.tar.gz\n-sha256sum: 4dcee0f017d832965ca44a76d0a8b20f92d68fd2fb820975984a51b4ff34806a\n+tarball: https://cdn.rawgit.com/ishanSrt/ishanSrt.github.io/448110a9/ishanSrt.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T13:11:10Z","lastEditedAt":null,"updatedAt":"2018-08-19T13:11:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDMyNDE2MA==","url":"https://github.com/coala/projects/pull/646#issuecomment-414324160","bodyText":"Ack fae5891","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T13:53:45Z","lastEditedAt":null,"updatedAt":"2018-08-20T13:53:45Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535024107000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/647","number":647,"title":"_reports: Add yzgyyang's GSoC report","body":"","comments":9,"createdAt":"2018-08-20T10:52:27Z","updatedAt":"2018-08-23T11:35:07Z","closedAt":"2018-08-20T21:43:58Z","state":"merged","user":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"owner":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/647","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQxODgxNw==","url":"https://github.com/coala/projects/pull/647#discussion_r211418817","bodyText":"this is https://github.com/yzgyyang/get-coala ?\nIt should be a gitlab repo, and polished enough that it is ready to be transferred to @coala .","diffHunk":"@@ -0,0 +1,205 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Guangyuan Yang\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Go Bears on BSD\n+project_link: https://summerofcode.withgoogle.com/projects/#4521151787696128\n+tarball: https://github.com/yzgyyang/gsoc-reports/raw/master/gsoc18/GuangyuanYang-coala-gsoc18.tar.gz\n+sha256sum: adada78166b16d6c6c8e1107d326b3f5fb1505fa59d8f18e492b9ffa1a6f0f09\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/74\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/64\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/67\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/73\n+bio: >\n+  I am a sophomore studying Mathematics and Computer Science at the University\n+  of Waterloo. I participated in GSoC 2018 and worked with\n+  [coala](https://coala.io) to improve linter dependency management, the goal\n+  of which in the duration of this year's GSoC is to have Go Linters installed\n+  automatically on bare-metal BSD systems, with a post-GSoC goal of supporting\n+  more platforms and more kinds of dependencies.\n+\n+social:\n+  - GitHub:\n+      - username: yzgyyang\n+      - link: https://github.com/yzgyyang\n+  - GitLab:\n+      - username: yzgyyang\n+      - link: https://gitlab.com/yzgyyang\n+  - Gitter:\n+      - username: yzgyyang\n+      - link: https://gitter.im/yzgyyang\n+  - OpenHub:\n+      - username: yzgyyang\n+      - link: https://www.openhub.net/accounts/yzgyyang\n+email: yzgyyang@gmail.com\n+blog: https://charlieyang.me/tags/#gsoc18\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/e26976aa8da0379c39a4d294ee6cb6e213db1668\n+      - details: >\n+         meta_review.md: go_bears_on_bsd.md: Add Go on BSD project\n+\n+  - 2:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/ed140c6a1d76520e38ed7d2a2ba003f0735cb000\n+      - details: >\n+         .gitlab-ci.yml: Fix OpenSUSE CI build breakages\n+\n+  - 3:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/94507b56ad0bf101fe1a8fbc7e9d502dbc1c3ea7\n+      - details: >\n+         DistributionRequirement.py: Add FreeBSD pkg\n+\n+  - 4:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/fe065becef284b84f2193e36ae417e82e1da7eff\n+      - details: >\n+         GoRequirement.py: Add Go packages\n+\n+  - 5:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/77c50517b0a47f772950bf13bff5d665389ecb52\n+      - details: >\n+         .ci/common.sh: move CI common setup into a script\n+\n+  - 6:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/3c18d1504b6f6d282fa15ae7058829aa7369aed7\n+      - details: >\n+         GoMetaLinterRequirement.py: Add GoMetaLinterPM\n+\n+  - 7:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/dd1413c9057d7f75db0e1856cfba4a3894400a35\n+      - details: >\n+         PkgRequirement.py: Add pkg for PlatformRequirement\n+\n+  - 8:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/e8ef04e33b5f00f6d751a5450e90d795a778c236\n+      - details: >\n+         .gitlab-ci.yml: Add FreeBSD CI configuration\n+\n+  - 9:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/f0d74e8167edef7b69c3ec6ef4a8f0b3bdb13844\n+      - details: >\n+         Question.py: Add function to ask yes/no questions\n+\n+  - 10:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/0a1000d2601f7a53b2034869cffead422d6efc1a\n+      - details: >\n+         Question.py: Avoid creating objects in arg default\n+\n+  - 11:\n+      - repo: [personal gist]\n+      - link: https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d/9e5591f526917a36fcd3390d4a52901a5af1911f","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T21:51:07Z","lastEditedAt":null,"updatedAt":"2018-08-20T21:51:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQyMDY1OA==","url":"https://github.com/coala/projects/pull/647#discussion_r211420658","bodyText":"very relevant to your accounts in project is links to freebsd systems, e.g. https://reviews.freebsd.org/p/ygy/","diffHunk":"@@ -0,0 +1,205 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-14\n+student: Guangyuan Yang\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Go Bears on BSD\n+project_link: https://summerofcode.withgoogle.com/projects/#4521151787696128\n+tarball: https://github.com/yzgyyang/gsoc-reports/raw/master/gsoc18/GuangyuanYang-coala-gsoc18.tar.gz\n+sha256sum: adada78166b16d6c6c8e1107d326b3f5fb1505fa59d8f18e492b9ffa1a6f0f09\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/74\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/64\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/67\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/73\n+bio: >\n+  I am a sophomore studying Mathematics and Computer Science at the University\n+  of Waterloo. I participated in GSoC 2018 and worked with\n+  [coala](https://coala.io) to improve linter dependency management, the goal\n+  of which in the duration of this year's GSoC is to have Go Linters installed\n+  automatically on bare-metal BSD systems, with a post-GSoC goal of supporting\n+  more platforms and more kinds of dependencies.\n+\n+social:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T21:59:18Z","lastEditedAt":null,"updatedAt":"2018-08-20T21:59:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDMzOTE0Nw==","url":"https://github.com/coala/projects/pull/647#issuecomment-414339147","bodyText":"Needs rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T14:38:27Z","lastEditedAt":null,"updatedAt":"2018-08-20T14:38:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDM0ODY0OQ==","url":"https://github.com/coala/projects/pull/647#issuecomment-414348649","bodyText":"@jayvdb can't merge it.","diffHunk":null,"author":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4","name":"Muhammad Kaisar Arkhan"},"createdAt":"2018-08-20T15:02:55Z","lastEditedAt":null,"updatedAt":"2018-08-20T15:02:55Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535085332000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/650","number":650,"title":"reports.html: Create report listing","body":"Closes #359\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":12,"createdAt":"2018-08-22T06:48:24Z","updatedAt":"2018-08-24T04:35:32Z","closedAt":"2018-08-24T04:29:36Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/650","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjA3NjY1MA==","url":"https://github.com/coala/projects/pull/650#discussion_r212076650","bodyText":"An h1 heading on top saying something as 'coala GSoC reports' would be nice","diffHunk":"@@ -0,0 +1,25 @@\n+---\n+title: Project reports\n+---\n+","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODM0MDAwNQ==","createdAt":"2018-08-23T01:27:16Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-22T19:19:15Z","lastEditedAt":null,"updatedAt":"2018-08-22T19:19:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTAwMjQzNA==","url":"https://github.com/coala/projects/pull/650#issuecomment-415002434","bodyText":"It is far from pretty\nhttps://deploy-preview-650--coala-projects.netlify.com/reports\nI am guessing there is some easy stuff I can do to get it looking a bit better","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-22T11:36:34Z","lastEditedAt":null,"updatedAt":"2018-08-22T11:36:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTY0NjE5NA==","url":"https://github.com/coala/projects/pull/650#issuecomment-415646194","bodyText":"reack 37d1514","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-24T04:16:09Z","lastEditedAt":null,"updatedAt":"2018-08-24T04:16:09Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534147169000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/617","number":617,"title":"report: Add virresh's GSoC report","body":"https://deploy-preview-617--coala-projects.netlify.com/gsoc/2018/statusreport/virresh","comments":13,"createdAt":"2018-08-10T03:06:55Z","updatedAt":"2018-08-13T07:59:29Z","closedAt":"2018-08-13T07:57:45Z","state":"merged","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/617","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzY5NQ==","url":"https://github.com/coala/projects/pull/617#discussion_r209417695","bodyText":"See changes requested at #615","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/virresh\n+student: Viresh Gupta\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+mentors: >\n+ [Dong-hee Na](https://github.com/corona10) &\n+ [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+ Hi ! I am Viresh, an undergrad student at Indraprastha Institute of \n+ Information Technology, Delhi, India. I love coding in and out and like to\n+ lay my hands on whatever tech I can find. I also love to read books, observe\n+ nature and star gaze in my free time. I chose coala for my GSoC project\n+ because I think it's awesome to be able to push my friends a friendly reminder\n+ to indent their code properly, and programmatically detect when they went lazy\n+ in doing so, which helps me to focus on the main logic when working on a team\n+ project.\n+social:\n+ - GitHub:\n+   - username: virresh\n+   - link: https://github.com/virresh\n+ - GitLab:\n+   - username: virresh\n+   - link: https://gitlab.com/virresh\n+ - Gitter:\n+   - username: virresh\n+   - link: https://gitter.im/virresh\n+ - Openhub:\n+   - username: virresh\n+   - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+ - 0:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMzQ0NQ==","createdAt":"2018-08-12T15:13:59Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-08-11T06:04:25Z","lastEditedAt":null,"updatedAt":"2018-08-11T06:04:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDQ1OQ==","url":"https://github.com/coala/projects/pull/617#discussion_r209474459","bodyText":"not suitable for activity report","diffHunk":"@@ -0,0 +1,391 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"\n+  - 4:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/168263a2\n+      - details: >\n+          \"ci: Integrate inital ci test\"\n+  - 5:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/18273f76","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:45:46Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:45:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDUwNA==","url":"https://github.com/coala/projects/pull/617#discussion_r209474504","bodyText":"give this a better \"details\" as the commit summary is misleading","diffHunk":"@@ -0,0 +1,391 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"\n+  - 4:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/168263a2\n+      - details: >\n+          \"ci: Integrate inital ci test\"\n+  - 5:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/18273f76\n+      - details: >\n+          \".gitignore: Add initial ignore files\"\n+  - 6:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/9671f083\n+      - details: >\n+          \"setup.py: Make package installable\"\n+  - 7:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f8067834\n+      - details: >\n+          \"Files Cleaned\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:46:54Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:46:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDU5Nw==","url":"https://github.com/coala/projects/pull/617#discussion_r209474597","bodyText":"try to get this merged : antlr/grammars-v4#1205 (comment)\nif it is an unmerged PR, move it to last in the list","diffHunk":"@@ -0,0 +1,391 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"\n+  - 4:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/168263a2\n+      - details: >\n+          \"ci: Integrate inital ci test\"\n+  - 5:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/18273f76\n+      - details: >\n+          \".gitignore: Add initial ignore files\"\n+  - 6:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/9671f083\n+      - details: >\n+          \"setup.py: Make package installable\"\n+  - 7:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f8067834\n+      - details: >\n+          \"Files Cleaned\"\n+  - 8:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/c80200d2\n+      - details: >\n+          \"Initial walkers implemented,\"\n+  - 9:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/d8146003\n+      - details: >\n+          \"core: Add ASTBear and Implement quote spacing bear\"\n+  - 10:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8bbea04b\n+      - details: >\n+          \".gitlab-ci.yml: Add job for bear run testing\"\n+  - 11:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/1249762a\n+      - details: >\n+          \"PyQuoteSpacingBear: Fix for implicit string concatenation\"\n+  - 12:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/e5f2d83d\n+      - details: >\n+          \".gitlab-ci: Add moban check\"\n+  - 13:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/85cbb026\n+      - details: >\n+          \"Add initial tests\"\n+  - 14:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/7845dec4\n+      - details: >\n+          \"Change the library logic for visiting\"\n+  - 15:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8067ab45\n+      - details: >\n+          \"Add pytest with 100% coverage\"\n+  - 16:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/ec3c90c2\n+      - details: >\n+          \".coafile: Add initial coafile\"\n+  - 17:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8fd5a04a\n+      - details: >\n+          \"setup.py: Add entrypoint for bear discovery\"\n+  - 18:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/fa4bab87\n+      - details: >\n+          \"PyQuoteSpacingBearTest.py: Add tests for slash\"\n+  - 19:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/8334960e\n+      - details: >\n+          \"PyPluralNamingBear: Add Bear\"\n+  - 20:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/1f6df970\n+      - details: >\n+          \"MANIFEST: Add manifest and housekeeping\"\n+  - 21:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/5a6e3a50\n+      - details: >\n+          \"Py3Walker: Use NodeData for get_quote_content\"\n+  - 22:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/bbff6752\n+      - details: >\n+          \"Add sphinx docs\"\n+  - 23:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/7c91ad6e\n+      - details: >\n+          \"Add coantbears docs\"\n+  - 24:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/cbea3e7f\n+      - details: >\n+          \"Add docs for gitlab pages\"\n+  - 25:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/b2166a24\n+      - details: >\n+          \"Add bears metadata and refactor dependencies\"\n+  - 26:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/bc7cf18f\n+      - details: >\n+          \"ASTLoader: Workaround for python\"\n+  - 27:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/7d7d7e4f\n+      - details: >\n+          \"ASTLoader.py: Add check for empty files\"\n+  - 28:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/074c96ba\n+      - details: >\n+          \"coantlib: Move all generated files\"\n+  - 29:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/179bb8a8\n+      - details: >\n+          \"commonutils.py: Extract common utilities\"\n+  - 30:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/3af8d13e\n+      - details: >\n+          \".coafile: Add PyDocStyleBear\"\n+  - 31:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/1a348b4e\n+      - details: >\n+          \".gitlab-ci.yml: Add git installation\"\n+  - 32:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/ba4adcdb\n+      - details: >\n+          \"coantlib: Generalise entrypoint\"\n+  - 33:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/72e2bb72\n+      - details: >\n+          \"tests: Remove hashbangs\"\n+  - 34:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/abc9f3b0\n+      - details: >\n+          \"Python3.py: Make parser PEP8 compliant\"\n+  - 35:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/bfa10282\n+      - details: >\n+          \"ASTBear: Remove redundant `lang` argument\"\n+  - 36:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/27891c28\n+      - details: >\n+          \"XMLIndentBear: Add XMLIndentBear\"\n+  - 37:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/a8a7f6eb\n+      - details: >\n+          \".ci: Add check for XML Upstream grammar\"\n+  - 38:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/d936d162\n+      - details: >\n+          \"XML.py: Add language definition for XML\"\n+  - 39:\n+      - repo: community\n+      - link: https://github.com/coala/community/commit/7e5cd645\n+      - details: >\n+          \".coafile: Add PyPluralNamingBear\"\n+  - 40:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/bf587786\n+      - details: >\n+          \"appveyor.yml: Use pip as a module\"\n+  - 41:\n+      - repo: coala-quickstart\n+      - link: https://github.com/coala/coala-quickstart/commit/99ad0910\n+      - details: >\n+          \"test-requirements.txt: Add packaging\"\n+  - 42:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/97e98900\n+      - details: >\n+          \"GitCommitBear: Refactor issue regexes\"\n+  - 43:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/33cd9e41\n+      - details: >\n+          \"GitCommitBear: Add BitBucket type issue references\"\n+  - 44:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/985217dc\n+      - details: >\n+          \"HgCommitBear: Switch to git-url-parse\"\n+  - 45:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a8f0e9b0\n+      - details: >\n+          \"report.md: Make GSoC year dynamic\"\n+  - 46:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/76ebb40c\n+      - details: >\n+          \"appveyor.yml.jj2: Add template for appveyor config\"\n+  - 47:\n+      - repo: grammars-v4\n+      - link: https://github.com/antlr/grammars-v4/pull/1205","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:49:09Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:49:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUxMTE0Nw==","url":"https://github.com/coala/projects/pull/617#discussion_r209511147","bodyText":"quotes not needed; they are appearing on your report","diffHunk":"@@ -0,0 +1,386 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+student: Viresh Gupta\n+date: 2018-08-12\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Integrate ANTLR v4 to coala\n+project_link: https://summerofcode.withgoogle.com/projects/#6067962113425408\n+report_year: 2018\n+tarball: https://github.com/virresh/GSoC-18_Report/raw/master/patches.tar\n+sha256sum: 43cd5aaf56b735abf34bba8fbf9f83f2cba716c9f20f76c3954228887f61e220\n+mentors: >\n+  [Dong-hee Na](https://github.com/corona10) &\n+  [Udayan Tandon](https://github.com/Udayan12167)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/37\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/38\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/39\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/40\n+bio: >\n+  Hi ! I am Viresh Gupta, an undergrad student at Indraprastha Institute of \n+  Information Technology, Delhi, India. I love coding in and out and like to\n+  lay my hands on whatever tech I can find. I also love to read books, observe\n+  nature and star gaze in my free time. I chose coala for my GSoC project\n+  because I think it's awesome to be able to push my friends a friendly reminder\n+  to indent their code properly, and programmatically detect when they went lazy\n+  in doing so, which helps me to focus on the main logic when working on a team\n+  project.\n+social:\n+  - GitHub:\n+    - username: virresh\n+    - link: https://github.com/virresh\n+  - GitLab:\n+    - username: virresh\n+    - link: https://gitlab.com/virresh\n+  - Gitter:\n+    - username: virresh\n+    - link: https://gitter.im/virresh\n+  - Openhub:\n+    - username: virresh\n+    - link: https://www.openhub.net/accounts/virresh\n+email: viresh16118@iiitd.ac.in\n+blog: https://virresh.wordpress.com/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/49c6cec2\n+      - details: >\n+          \"cEP-0018: Integration of ANTLR in coala\"\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/b8a17299\n+      - details: >\n+          \"cEP-0018.md: Add information about fixes\"\n+  - 3:\n+      - repo: coala-antlr\n+      - link: https://gitlab.com/coala/bears/coala-antlr/commit/f51addcf\n+      - details: >\n+          \"Initial Commit\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T07:20:49Z","lastEditedAt":null,"updatedAt":"2018-08-13T07:20:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTk5NTAyNg==","url":"https://github.com/coala/projects/pull/617#issuecomment-411995026","bodyText":"https://deploy-preview-617--coala-projects.netlify.com/gsoc/2018/statusreport/virresh","diffHunk":null,"author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-10T07:04:47Z","lastEditedAt":null,"updatedAt":"2018-08-10T07:04:47Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534044581000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/618","number":618,"title":"reports: Add li-boxuan's GSoC report","body":"https://deploy-preview-618--coala-projects.netlify.com/gsoc/2018/statusreport/li-boxuan","comments":18,"createdAt":"2018-08-10T15:10:22Z","updatedAt":"2018-08-12T03:29:41Z","closedAt":"2018-08-12T03:28:16Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/618","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTM5NjYxNw==","url":"https://github.com/coala/projects/pull/618#discussion_r209396617","bodyText":"I think you have to add a report_year variable as well","diffHunk":"@@ -0,0 +1,356 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzA3Mw==","createdAt":"2018-08-11T04:31:24Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-10T22:14:57Z","lastEditedAt":null,"updatedAt":"2018-08-10T22:14:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzU5OQ==","url":"https://github.com/coala/projects/pull/618#discussion_r209417599","bodyText":"start at 1\nalso this is yaml, which has two space indents","diffHunk":"@@ -0,0 +1,357 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+ [Hemang Kumar](https://github.com/hemangsk/) &\n+ [Surya Widi](https://github.com/blazeu) &\n+ [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+ - GitHub:\n+   - username: li-boxuan\n+   - link: https://github.com/li-boxuan\n+ - GitLab:\n+   - username: li-boxuan\n+   - link: https://gitlab.com/li-boxuan\n+ - Gitter:\n+   - username: li-boxuan\n+   - link: https://gitter.im/li-boxuan\n+ - Openhub:\n+   - username: li-boxuan\n+   - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+ - 0:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:59:00Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:59:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMDYyNQ==","url":"https://github.com/coala/projects/pull/618#discussion_r209420625","bodyText":"I do  -> I did","diffHunk":"@@ -0,0 +1,357 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+ [Hemang Kumar](https://github.com/hemangsk/) &\n+ [Surya Widi](https://github.com/blazeu) &\n+ [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+ - GitHub:\n+   - username: li-boxuan\n+   - link: https://github.com/li-boxuan\n+ - GitLab:\n+   - username: li-boxuan\n+   - link: https://gitlab.com/li-boxuan\n+ - Gitter:\n+   - username: li-boxuan\n+   - link: https://gitter.im/li-boxuan\n+ - Openhub:\n+   - username: li-boxuan\n+   - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+ - 0:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/2929576df9c20144aad9db8a5e326c1853375158\n+   - details: >\n+      Set up meta_review app\n+ - 1:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/aae015127c96b85a1cd9188199a6e4a46693d9f7\n+   - details: >\n+      Change meta-review models\n+\n+ - 2:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/78e1e3a542a1654982f55cde4e08bbf97ec81c3c\n+   - details: >\n+      Implement meta-review scoring & ranking system\n+\n+ - 3:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/6c83d70a8559d1368fba1d80ad412b31ada7dad3\n+   - details: >\n+      [Bonding Period Work] meta_review.md: Add meta review project\n+\n+ - 4:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/16f8e84036a9ba47d434c60400da021d90a1a740\n+   - details: >\n+      [Bonding Period Work] fetch-issues.js: Build custom generator\n+\n+ - 5:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/46f1ad5ce83d5d72aa95ea00703b92c2fc38b2dc\n+   - details: >\n+      [Bonding Period Work] Remove TODOs in components code\n+\n+ - 6:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/60b8a10f123d2bec71c22c31f3e281ad9609fa07\n+   - details: >\n+      [Bonding Period Work] Modernize existing React component code\n+\n+ - 7:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/e452f41ddda6abe149442d5240675b3ae3333e6a\n+   - details: >\n+      nav.jsx: Fix broken link on header\n+\n+ - 8:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/77830f4146de9d4d29b539740423a0ca43ee219f\n+   - details: >\n+      Pre-fetch pull request review comments & reactions\n+\n+ - 9:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/2a7338b3edff6d1c9f5b019ea07c28640996267a\n+   - details: >\n+      package.json: Add linting on script & test\n+\n+ - 10:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d3c6debe198b369901166be791a9ae53f23b26a0\n+   - details: >\n+      Get test suite working\n+\n+ - 11:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/671f13de1999001e718df9ce5187d7abf278791d\n+   - details: >\n+      Set pre-fetch time limit for pull requests\n+\n+ - 12:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/91fffbbce1713a1d56276122d51cb16c7079b626\n+   - details: >\n+      Fix Travis failure\n+\n+ - 13:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/c33cc70bcab57a4ac13e4f352a255abc213dc874\n+   - details: >\n+      database.js: Fix `closed` filter bug\n+\n+ - 14:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/a2957290794424c6b8a0162ab49694cd771c2445\n+   - details: >\n+      .travis.yml: Enable keep-history\n+\n+ - 15:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/aca0d61832ffe1bac2b2c9d2615ea4219f68d3b6\n+   - details: >\n+      .travis.yml: Let moban task not deploy\n+\n+ - 16:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/4b82e679b83339f500d686967d3b6b843f7e1d40\n+   - details: >\n+      run-test.sh: Verify files exist\n+\n+ - 17:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/0f9f4a45bfdf341c5705d7543688adea7195c5cb\n+   - details: >\n+      Increase test timeout threshold\n+\n+ - 18:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/34c2e6de21ed2933d8f19cca3b6dd177ce32c86f\n+   - details: >\n+      login-modal.jsx: Add exception for default api url\n+\n+ - 19:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/828be376832687373b984df38ca71c1684651aa7\n+   - details: >\n+      Add `meta-review in need` column\n+\n+ - 20:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/ac8b0709b0e82963fd3d6680b37005359225effc\n+   - details: >\n+      Display reactions of reviews\n+\n+ - 21:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/892b87ff808ac188166c9500d1169b1590b8d791\n+   - details: >\n+      dashboard.jsx: Add environment REPOSITORIES\n+\n+ - 22:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/e791bee60bf4af32aec889211d4de63d6418d7ed\n+   - details: >\n+      Setup GraphQL client\n+\n+ - 23:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/5480420793979b9ae4b53117c6d5d757f12013bb\n+   - details: >\n+      Use new graphql client to sync issues\n+\n+ - 24:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/93c842bca04298c8afc2d71d167efe04d432d11f\n+   - details: >\n+      dashboard.jsx: Load repos automatically after login\n+\n+ - 25:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/9eae16877612d21f3ceed99ec23a097ec32e21b3\n+   - details: >\n+      Add review filters functionality\n+\n+ - 26:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d32b25729ee1d9bc7972dce4a898a0bea9146098\n+   - details: >\n+      Refactor pre-fetching\n+\n+ - 27:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/faf793a3679ab32cb4e42c8ac54f174695b6bebc\n+   - details: >\n+      github-graphql.js: Fix several issues\n+\n+ - 28:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/59e9cba6ca38a8fb6396a0864ff43bf749f1d6ec\n+   - details: >\n+      Setup Jest configurations\n+\n+ - 29:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/8a3c49befc2c3d2b68ed11c5f2e217cb177caf57\n+   - details: >\n+      reactions.jsx: Add snapshot test\n+\n+ - 30:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/1f88cfa9c369f5b3f4bd7abafa6c15970196de80\n+   - details: >\n+      Add codecov\n+\n+ - 31:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/3638063072aeea1925bab5f9565d7765bf8d4cf4\n+   - details: >\n+      Separate test logic\n+\n+ - 32:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/10003d073c16c18da669b66f235c0e9abc1230f1\n+   - details: >\n+      netlify.toml: Verify pre-fetched files exist\n+\n+ - 33:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d1a7ea3ea66c7af7a51a9717f67fc635fc35cf41\n+   - details: >\n+      Enhance meta-review UI\n+\n+ - 34:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/b062087825f01c1169accb646f0eaf0d1f0e7cb8\n+   - details: >\n+      Add reaction mutation functionality\n+\n+ - 35:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d4705c5332ecd8e4329f0b62f7df3c9312c35a01\n+   - details: >\n+      repo-kanban.jsx: Use withAuth wrapper\n+\n+ - 36:\n+   - repo: gh-board\n+   - link: https://github.com/coala/gh-board/commit/d1a9bf25061800510cd9cf7d1c089900d2cbd1f1\n+   - details: >\n+      dashboard.jsx: Use withAuth wrapper\n+\n+ - 37:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\n+   - details: >\n+      cEP-0019.md: Meta-review system\n+\n+ - 38:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/dc2cc6a82f72644da55f509f8d4a50ba8fa694ba\n+   - details: >\n+      Linter: Add option to remove 0 number\n+\n+ - 39:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/dfa92b64435b86b10b9a725ee32267896450e565\n+   - details: >\n+      Meta-review.rst: Add meta-review docs\n+\n+ - 40:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/42a3ffac059f279cd65c9539b8e44bf222782773\n+   - details: >\n+      Newcomers_Guide.rst: Add meta-review process\n+\n+ - 41:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/2f6f58b4afa0b139aa25062c3d3fcb27df3ea0d5\n+   - details: >\n+      PyLintBear: Fix column number convention\n+\n+ - 42:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/1f3325519a72cb98669185149b03b11c1ec25f70\n+   - details: >\n+      CPPLintBear: Fix line number convention\n+\n+ - 43:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/705f9db98d957cc9d27e675b1d58f369feb54255\n+   - details: >\n+      HAMLLintBear: Fix line number convention\n+\n+ - 44:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/e5df6bcac33aa06bec70bf21217972620c34e888\n+   - details: >\n+      WriteGoodLintBear: Fix column number convention\n+\n+ - 45:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/e445c04e28e95b7f21983e9e2dd770e81838aa69\n+   - details: >\n+      StylintBear: Fix column number convention\n+\n+ - 46:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/401fa883ffbe21b78a8a4899160592a293f3d4cd\n+   - details: >\n+      CheckStyleBear: Fix offset convention\n+---\n+\n+### Meta-review\n+\n+\n+#### Work Done\n+\n+coala [community](https://github.com/coala/community) website now has a meta-review\n+[ranking list](http://coala-community.netlify.com/meta-review/). coala\n+gh-board [website](https://coala-gh-board.netlify.com/)\n+now has a column displaying review comments that need to be meta-reviewed. I also\n+fixed many issues around [gh-board](https://github.com/coala/gh-board) repo.\n+Apart from all above, I do some other contributions to the community, including","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-11T08:19:29Z","lastEditedAt":null,"updatedAt":"2018-08-11T08:19:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMjg4OA==","url":"https://github.com/coala/projects/pull/618#discussion_r209422888","bodyText":"OpenHub","diffHunk":"@@ -0,0 +1,371 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+  [Hemang Kumar](https://github.com/hemangsk/) &\n+  [Surya Widi](https://github.com/blazeu) &\n+  [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+  - GitHub:\n+    - username: li-boxuan\n+    - link: https://github.com/li-boxuan\n+  - GitLab:\n+    - username: li-boxuan\n+    - link: https://gitlab.com/li-boxuan\n+  - Gitter:\n+    - username: li-boxuan\n+    - link: https://gitter.im/li-boxuan\n+  - Openhub:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T10:10:02Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:10:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMjk4MQ==","url":"https://github.com/coala/projects/pull/618#discussion_r209422981","bodyText":"there are 52 pages in your tarball, but only 49 here.  Some intentionally left out of this list ?  Too small to mention ?\nare these upstream PRs in your tarball ?\nIt isnt work completed, and they are derivatives of your other patches, so listing them here isnt ideal.\nAnd including them in your tarball probably isnt good either.\nI suggest you move these two upstream PRs into the prose below, describing the fact that our enhancements are generic for any gh-board user, and we have been hoping that the upstream gh-board repos will become better maintained.","diffHunk":"@@ -0,0 +1,371 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+  [Hemang Kumar](https://github.com/hemangsk/) &\n+  [Surya Widi](https://github.com/blazeu) &\n+  [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+  - GitHub:\n+    - username: li-boxuan\n+    - link: https://github.com/li-boxuan\n+  - GitLab:\n+    - username: li-boxuan\n+    - link: https://gitlab.com/li-boxuan\n+  - Gitter:\n+    - username: li-boxuan\n+    - link: https://gitter.im/li-boxuan\n+  - Openhub:\n+    - username: li-boxuan\n+    - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+  - 1:\n+    - repo: projects\n+    - link: https://github.com/coala/projects/commit/6c83d70a8559d1368fba1d80ad412b31ada7dad3\n+    - details: >\n+       [Bonding Period Work] meta_review.md: Add meta review project\n+\n+  - 2:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\n+    - details: >\n+       cEP-0019.md: Meta-review system\n+\n+  - 3:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/2929576df9c20144aad9db8a5e326c1853375158\n+    - details: >\n+       Set up meta_review app\n+\n+  - 4:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/aae015127c96b85a1cd9188199a6e4a46693d9f7\n+    - details: >\n+       Change meta-review models\n+\n+  - 5:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/78e1e3a542a1654982f55cde4e08bbf97ec81c3c\n+    - details: >\n+       Implement meta-review scoring & ranking system\n+\n+  - 6:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/16f8e84036a9ba47d434c60400da021d90a1a740\n+    - details: >\n+       [Bonding Period Work] fetch-issues.js: Build custom generator\n+\n+  - 7:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/46f1ad5ce83d5d72aa95ea00703b92c2fc38b2dc\n+    - details: >\n+       [Bonding Period Work] Remove TODOs in components code\n+\n+  - 8:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/60b8a10f123d2bec71c22c31f3e281ad9609fa07\n+    - details: >\n+       [Bonding Period Work] Modernize existing React component code\n+\n+  - 9:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e452f41ddda6abe149442d5240675b3ae3333e6a\n+    - details: >\n+       nav.jsx: Fix broken link on header\n+\n+  - 10:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/77830f4146de9d4d29b539740423a0ca43ee219f\n+    - details: >\n+       Pre-fetch pull request review comments & reactions\n+\n+  - 11:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/2a7338b3edff6d1c9f5b019ea07c28640996267a\n+    - details: >\n+       package.json: Add linting on script & test\n+\n+  - 12:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d3c6debe198b369901166be791a9ae53f23b26a0\n+    - details: >\n+       Get test suite working\n+\n+  - 13:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/671f13de1999001e718df9ce5187d7abf278791d\n+    - details: >\n+       Set pre-fetch time limit for pull requests\n+\n+  - 14:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/91fffbbce1713a1d56276122d51cb16c7079b626\n+    - details: >\n+       Fix Travis failure\n+\n+  - 15:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/c33cc70bcab57a4ac13e4f352a255abc213dc874\n+    - details: >\n+       database.js: Fix `closed` filter bug\n+\n+  - 16:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/a2957290794424c6b8a0162ab49694cd771c2445\n+    - details: >\n+       .travis.yml: Enable keep-history\n+\n+  - 17:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/aca0d61832ffe1bac2b2c9d2615ea4219f68d3b6\n+    - details: >\n+       .travis.yml: Let moban task not deploy\n+\n+  - 18:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/4b82e679b83339f500d686967d3b6b843f7e1d40\n+    - details: >\n+       run-test.sh: Verify files exist\n+\n+  - 19:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/0f9f4a45bfdf341c5705d7543688adea7195c5cb\n+    - details: >\n+       Increase test timeout threshold\n+\n+  - 20:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/34c2e6de21ed2933d8f19cca3b6dd177ce32c86f\n+    - details: >\n+       login-modal.jsx: Add exception for default api url\n+\n+  - 21:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/828be376832687373b984df38ca71c1684651aa7\n+    - details: >\n+       Add `meta-review in need` column\n+\n+  - 22:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/ac8b0709b0e82963fd3d6680b37005359225effc\n+    - details: >\n+       Display reactions of reviews\n+\n+  - 23:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/892b87ff808ac188166c9500d1169b1590b8d791\n+    - details: >\n+       dashboard.jsx: Add environment REPOSITORIES\n+\n+  - 24:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e791bee60bf4af32aec889211d4de63d6418d7ed\n+    - details: >\n+       Setup GraphQL client\n+\n+  - 25:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/5480420793979b9ae4b53117c6d5d757f12013bb\n+    - details: >\n+       Use new graphql client to sync issues\n+\n+  - 26:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/93c842bca04298c8afc2d71d167efe04d432d11f\n+    - details: >\n+       dashboard.jsx: Load repos automatically after login\n+\n+  - 27:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/9eae16877612d21f3ceed99ec23a097ec32e21b3\n+    - details: >\n+       Add review filters functionality\n+\n+  - 28:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d32b25729ee1d9bc7972dce4a898a0bea9146098\n+    - details: >\n+       Refactor pre-fetching\n+\n+  - 29:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/faf793a3679ab32cb4e42c8ac54f174695b6bebc\n+    - details: >\n+       github-graphql.js: Fix several issues\n+\n+  - 30:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/59e9cba6ca38a8fb6396a0864ff43bf749f1d6ec\n+    - details: >\n+       Setup Jest configurations\n+\n+  - 31:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/8a3c49befc2c3d2b68ed11c5f2e217cb177caf57\n+    - details: >\n+       reactions.jsx: Add snapshot test\n+\n+  - 32:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/1f88cfa9c369f5b3f4bd7abafa6c15970196de80\n+    - details: >\n+       Add codecov\n+\n+  - 33:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/3638063072aeea1925bab5f9565d7765bf8d4cf4\n+    - details: >\n+       Separate test logic\n+\n+  - 34:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/10003d073c16c18da669b66f235c0e9abc1230f1\n+    - details: >\n+       netlify.toml: Verify pre-fetched files exist\n+\n+  - 35:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a7ea3ea66c7af7a51a9717f67fc635fc35cf41\n+    - details: >\n+       Enhance meta-review UI\n+\n+  - 36:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/b062087825f01c1169accb646f0eaf0d1f0e7cb8\n+    - details: >\n+       Add reaction mutation functionality\n+\n+  - 37:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d4705c5332ecd8e4329f0b62f7df3c9312c35a01\n+    - details: >\n+       repo-kanban.jsx: Use withAuth wrapper\n+\n+  - 38:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a9bf25061800510cd9cf7d1c089900d2cbd1f1\n+    - details: >\n+       dashboard.jsx: Use withAuth wrapper\n+\n+  - 39:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dc2cc6a82f72644da55f509f8d4a50ba8fa694ba\n+    - details: >\n+       Linter: Add option to remove 0 number\n+\n+  - 40:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dfa92b64435b86b10b9a725ee32267896450e565\n+    - details: >\n+       Meta-review.rst: Add meta-review docs\n+\n+  - 41:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/42a3ffac059f279cd65c9539b8e44bf222782773\n+    - details: >\n+       Newcomers_Guide.rst: Add meta-review process\n+\n+  - 42:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/2f6f58b4afa0b139aa25062c3d3fcb27df3ea0d5\n+    - details: >\n+       PyLintBear: Fix column number convention\n+\n+  - 43:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/1f3325519a72cb98669185149b03b11c1ec25f70\n+    - details: >\n+       CPPLintBear: Fix line number convention\n+\n+  - 44:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/705f9db98d957cc9d27e675b1d58f369feb54255\n+    - details: >\n+       HAMLLintBear: Fix line number convention\n+\n+  - 45:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e5df6bcac33aa06bec70bf21217972620c34e888\n+    - details: >\n+       WriteGoodLintBear: Fix column number convention\n+\n+  - 46:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e445c04e28e95b7f21983e9e2dd770e81838aa69\n+    - details: >\n+       StylintBear: Fix column number convention\n+\n+  - 47:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/401fa883ffbe21b78a8a4899160592a293f3d4cd\n+    - details: >\n+       CheckStyleBear: Fix offset convention\n+\n+  - 48:\n+    - repo: philschatz/gh-board (upstream)\n+    - link: https://github.com/philschatz/gh-board/pull/147\n+    - details: >\n+       Modernise React code, update packages, fix warnings and improve build (open)\n+\n+  - 49:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4NjMyMQ==","createdAt":"2018-08-11T10:24:30Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-11T10:14:58Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:14:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMzE5OA==","url":"https://github.com/coala/projects/pull/618#discussion_r209423198","bodyText":"Some ... are too small to mention?\n\n\n\nYes, I have several small commits which just do gitignore sync, so I didn't mention them in the report.\n\n\n\nare these upstream PRs in your tarball\n\n\n\nI didn't put upstream PRs in my tarball.\n\n\n\nI suggest you move these two upstream PRs into the prose below\n\n\n\nSounds good. Will do that.","diffHunk":"@@ -0,0 +1,371 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/li-boxuan\n+student: Boxuan Li\n+organisation: coala\n+organisation_link : https://coala.io\n+report_year: 2018\n+project: Meta-review\n+project_link: https://summerofcode.withgoogle.com/projects/#5188493739819008\n+tarball: https://github.com/li-boxuan/GSoCReport/raw/master/li-boxuan_coala.tar\n+mentors: >\n+  [Hemang Kumar](https://github.com/hemangsk/) &\n+  [Surya Widi](https://github.com/blazeu) &\n+  [Andrew Dassonville](https://github.com/andrewda)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/14\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/15\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/16\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/17\n+bio: >\n+  I am a final year student (expected graduation date: May 2019) of Computer\n+  Science at The University of Hong Kong. I participated in GSoC and worked\n+  with [coala](http://coala.io) to implement a meta-review system, which\n+  collects and tracks GitHub reactions used by coala community to generate\n+  meaningful analysis. I also improved usability of\n+  [gh-board](http://github.com/coala/gh-board), a serverless kanban board,\n+  fixing some issues and extending it to track reviews & meta-reviews.\n+social:\n+  - GitHub:\n+    - username: li-boxuan\n+    - link: https://github.com/li-boxuan\n+  - GitLab:\n+    - username: li-boxuan\n+    - link: https://gitlab.com/li-boxuan\n+  - Gitter:\n+    - username: li-boxuan\n+    - link: https://gitter.im/li-boxuan\n+  - Openhub:\n+    - username: li-boxuan\n+    - link: https://www.openhub.net/accounts/li-boxuan\n+email: liboxuanhk@gmail.com\n+blog: http://li-boxuan.github.io/\n+activity:\n+\n+  - 1:\n+    - repo: projects\n+    - link: https://github.com/coala/projects/commit/6c83d70a8559d1368fba1d80ad412b31ada7dad3\n+    - details: >\n+       [Bonding Period Work] meta_review.md: Add meta review project\n+\n+  - 2:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\n+    - details: >\n+       cEP-0019.md: Meta-review system\n+\n+  - 3:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/2929576df9c20144aad9db8a5e326c1853375158\n+    - details: >\n+       Set up meta_review app\n+\n+  - 4:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/aae015127c96b85a1cd9188199a6e4a46693d9f7\n+    - details: >\n+       Change meta-review models\n+\n+  - 5:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/78e1e3a542a1654982f55cde4e08bbf97ec81c3c\n+    - details: >\n+       Implement meta-review scoring & ranking system\n+\n+  - 6:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/16f8e84036a9ba47d434c60400da021d90a1a740\n+    - details: >\n+       [Bonding Period Work] fetch-issues.js: Build custom generator\n+\n+  - 7:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/46f1ad5ce83d5d72aa95ea00703b92c2fc38b2dc\n+    - details: >\n+       [Bonding Period Work] Remove TODOs in components code\n+\n+  - 8:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/60b8a10f123d2bec71c22c31f3e281ad9609fa07\n+    - details: >\n+       [Bonding Period Work] Modernize existing React component code\n+\n+  - 9:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e452f41ddda6abe149442d5240675b3ae3333e6a\n+    - details: >\n+       nav.jsx: Fix broken link on header\n+\n+  - 10:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/77830f4146de9d4d29b539740423a0ca43ee219f\n+    - details: >\n+       Pre-fetch pull request review comments & reactions\n+\n+  - 11:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/2a7338b3edff6d1c9f5b019ea07c28640996267a\n+    - details: >\n+       package.json: Add linting on script & test\n+\n+  - 12:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d3c6debe198b369901166be791a9ae53f23b26a0\n+    - details: >\n+       Get test suite working\n+\n+  - 13:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/671f13de1999001e718df9ce5187d7abf278791d\n+    - details: >\n+       Set pre-fetch time limit for pull requests\n+\n+  - 14:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/91fffbbce1713a1d56276122d51cb16c7079b626\n+    - details: >\n+       Fix Travis failure\n+\n+  - 15:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/c33cc70bcab57a4ac13e4f352a255abc213dc874\n+    - details: >\n+       database.js: Fix `closed` filter bug\n+\n+  - 16:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/a2957290794424c6b8a0162ab49694cd771c2445\n+    - details: >\n+       .travis.yml: Enable keep-history\n+\n+  - 17:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/aca0d61832ffe1bac2b2c9d2615ea4219f68d3b6\n+    - details: >\n+       .travis.yml: Let moban task not deploy\n+\n+  - 18:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/4b82e679b83339f500d686967d3b6b843f7e1d40\n+    - details: >\n+       run-test.sh: Verify files exist\n+\n+  - 19:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/0f9f4a45bfdf341c5705d7543688adea7195c5cb\n+    - details: >\n+       Increase test timeout threshold\n+\n+  - 20:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/34c2e6de21ed2933d8f19cca3b6dd177ce32c86f\n+    - details: >\n+       login-modal.jsx: Add exception for default api url\n+\n+  - 21:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/828be376832687373b984df38ca71c1684651aa7\n+    - details: >\n+       Add `meta-review in need` column\n+\n+  - 22:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/ac8b0709b0e82963fd3d6680b37005359225effc\n+    - details: >\n+       Display reactions of reviews\n+\n+  - 23:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/892b87ff808ac188166c9500d1169b1590b8d791\n+    - details: >\n+       dashboard.jsx: Add environment REPOSITORIES\n+\n+  - 24:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/e791bee60bf4af32aec889211d4de63d6418d7ed\n+    - details: >\n+       Setup GraphQL client\n+\n+  - 25:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/5480420793979b9ae4b53117c6d5d757f12013bb\n+    - details: >\n+       Use new graphql client to sync issues\n+\n+  - 26:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/93c842bca04298c8afc2d71d167efe04d432d11f\n+    - details: >\n+       dashboard.jsx: Load repos automatically after login\n+\n+  - 27:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/9eae16877612d21f3ceed99ec23a097ec32e21b3\n+    - details: >\n+       Add review filters functionality\n+\n+  - 28:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d32b25729ee1d9bc7972dce4a898a0bea9146098\n+    - details: >\n+       Refactor pre-fetching\n+\n+  - 29:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/faf793a3679ab32cb4e42c8ac54f174695b6bebc\n+    - details: >\n+       github-graphql.js: Fix several issues\n+\n+  - 30:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/59e9cba6ca38a8fb6396a0864ff43bf749f1d6ec\n+    - details: >\n+       Setup Jest configurations\n+\n+  - 31:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/8a3c49befc2c3d2b68ed11c5f2e217cb177caf57\n+    - details: >\n+       reactions.jsx: Add snapshot test\n+\n+  - 32:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/1f88cfa9c369f5b3f4bd7abafa6c15970196de80\n+    - details: >\n+       Add codecov\n+\n+  - 33:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/3638063072aeea1925bab5f9565d7765bf8d4cf4\n+    - details: >\n+       Separate test logic\n+\n+  - 34:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/10003d073c16c18da669b66f235c0e9abc1230f1\n+    - details: >\n+       netlify.toml: Verify pre-fetched files exist\n+\n+  - 35:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a7ea3ea66c7af7a51a9717f67fc635fc35cf41\n+    - details: >\n+       Enhance meta-review UI\n+\n+  - 36:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/b062087825f01c1169accb646f0eaf0d1f0e7cb8\n+    - details: >\n+       Add reaction mutation functionality\n+\n+  - 37:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d4705c5332ecd8e4329f0b62f7df3c9312c35a01\n+    - details: >\n+       repo-kanban.jsx: Use withAuth wrapper\n+\n+  - 38:\n+    - repo: gh-board\n+    - link: https://github.com/coala/gh-board/commit/d1a9bf25061800510cd9cf7d1c089900d2cbd1f1\n+    - details: >\n+       dashboard.jsx: Use withAuth wrapper\n+\n+  - 39:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dc2cc6a82f72644da55f509f8d4a50ba8fa694ba\n+    - details: >\n+       Linter: Add option to remove 0 number\n+\n+  - 40:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/dfa92b64435b86b10b9a725ee32267896450e565\n+    - details: >\n+       Meta-review.rst: Add meta-review docs\n+\n+  - 41:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/42a3ffac059f279cd65c9539b8e44bf222782773\n+    - details: >\n+       Newcomers_Guide.rst: Add meta-review process\n+\n+  - 42:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/2f6f58b4afa0b139aa25062c3d3fcb27df3ea0d5\n+    - details: >\n+       PyLintBear: Fix column number convention\n+\n+  - 43:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/1f3325519a72cb98669185149b03b11c1ec25f70\n+    - details: >\n+       CPPLintBear: Fix line number convention\n+\n+  - 44:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/705f9db98d957cc9d27e675b1d58f369feb54255\n+    - details: >\n+       HAMLLintBear: Fix line number convention\n+\n+  - 45:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e5df6bcac33aa06bec70bf21217972620c34e888\n+    - details: >\n+       WriteGoodLintBear: Fix column number convention\n+\n+  - 46:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/e445c04e28e95b7f21983e9e2dd770e81838aa69\n+    - details: >\n+       StylintBear: Fix column number convention\n+\n+  - 47:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/401fa883ffbe21b78a8a4899160592a293f3d4cd\n+    - details: >\n+       CheckStyleBear: Fix offset convention\n+\n+  - 48:\n+    - repo: philschatz/gh-board (upstream)\n+    - link: https://github.com/philschatz/gh-board/pull/147\n+    - details: >\n+       Modernise React code, update packages, fix warnings and improve build (open)\n+\n+  - 49:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4NjM1Mw==","createdAt":"2018-08-11T10:27:58Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-11T10:26:23Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:26:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjExNDU3OA==","url":"https://github.com/coala/projects/pull/618#issuecomment-412114578","bodyText":"Preview: https://deploy-preview-618--coala-projects.netlify.com/gsoc/2018/statusreport/li-boxuan","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-10T15:17:46Z","lastEditedAt":null,"updatedAt":"2018-08-10T15:17:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0OTg5Mw==","url":"https://github.com/coala/projects/pull/618#issuecomment-412249893","bodyText":"You could include commits in https://gitlab.com/coala/coala-json/commits/master and  coala/coala-vs-code@59660ef and coala/coala-vs-code@f90e5a2 which were related to your offset work.\nIIRC you also raised an issue about pylint -- IMO that is also worth noting.  You could add a paragraph about it as auxillary work done as part of the community, and it was very important work to improve quality of coala output.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T04:27:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:27:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0OTk3MQ==","url":"https://github.com/coala/projects/pull/618#issuecomment-412249971","bodyText":"Also you sent some patches upstream.  They should be noted, even though they havent been merged.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzA1NA==","createdAt":"2018-08-11T04:29:34Z","content":"HOORAY","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-08-11T04:29:15Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:29:15Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534152159000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/619","number":619,"title":"reports: Add sks444's GSoC report","body":"https://deploy-preview-619--coala-projects.netlify.com/gsoc/2018/statusreport/shrikrishna","comments":25,"createdAt":"2018-08-10T19:44:44Z","updatedAt":"2018-08-13T09:22:39Z","closedAt":"2018-08-13T09:22:31Z","state":"merged","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/619","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzQ2NQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209417465","bodyText":"start with 1","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 0:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:51:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:51:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzQ4OA==","url":"https://github.com/coala/projects/pull/619#discussion_r209417488","bodyText":"put all the unmerged stuff at the end of the list, and add 'WIP' on each of them, or 'POC', or 'Not reviewed' if review is pending.","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 0:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 1:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+     Jinja2.py: Add support for ignore comments\n+ - 2:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 3:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 8:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 9:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     org/: Use igitt_django models to save igitt data\n+ - 14:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     org/: Make an api to show active newcomers\n+ - 15:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 16:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+ - 17:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:52:43Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:52:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzU0Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209417546","bodyText":"https://deploy-preview-619--coala-projects.netlify.com/GSoC/2018/StatusReport/sks444 404","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:56:22Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:56:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMDI5OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209420299","bodyText":"broken syntax","diffHunk":"@@ -0,0 +1,242 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/sks444\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 0:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 1:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+     Jinja2.py: Add support for ignore comments","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T08:03:20Z","lastEditedAt":null,"updatedAt":"2018-08-11T08:03:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMzIxMA==","url":"https://github.com/coala/projects/pull/619#discussion_r209423210","bodyText":"yaml is two space indents, all through the file","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T10:27:05Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:27:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI1OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209424259","bodyText":"put URL on separate line and resume text on line after it.","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:11:37Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:11:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI2NA==","url":"https://github.com/coala/projects/pull/619#discussion_r209424264","bodyText":"move this up, above the WIP, etc.  This is core part of your project","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:11:44Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:11:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI3NQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209424275","bodyText":"avoid going over 80cpl as much as possible -- commits only need 8 characters, not the full sha.","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed\n+URL for all the APIs until there is the integration of continuous deployment in the webservices.\n+\n+##### Building the Gamification system\n+\n+The second and the important part of my work, from [importing the useful newcomers data](https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:12:29Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:12:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI4Mw==","url":"https://github.com/coala/projects/pull/619#discussion_r209424283","bodyText":"80cpl","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed\n+URL for all the APIs until there is the integration of continuous deployment in the webservices.\n+\n+##### Building the Gamification system\n+\n+The second and the important part of my work, from [importing the useful newcomers data](https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4)\n+to building the [gamification app](https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b) has been done in the [community](https://github.com/coala/community) repo. And now we have a [leaderboard](http://coala-community.netlify.com/gamification/) which shows the score, current level and the badges earned by all\n+the active newcomers at coala.\n+\n+#### Challenges\n+\n+The biggest challenge for me was to design the models of the gamification system\n+and choosing the correct path to implement the process. I almost did the wrong\n+implementation of the process twice but again because of well written [cEP](https://github.com/coala/cEPs/blob/master/cEP-0020.md) and the guidance of my mentor John I had a clear","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:12:48Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:12:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDI5Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209424296","bodyText":"80cpl","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:\n+   - repo: webservices.coala.io\n+   - link: https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d\n+   - details: >\n+     Generate a fake api similar to coala's webservices\n+\n+### Newcomer Metrics and Gamification\n+\n+This project is about automating the recognition of activities performed by people\n+who join the coala community, and encourage them to progress towards obtaining the\n+role of \"Developer\" in the community.\n+\n+This project incorporated a gamification system which allows us to track the progress\n+of newcomers activities and assign some points to each of the activities they do.\n+The newcomers will get some score which will be the sum of all the points they have\n+earned by performing several activities. The score they get will be a deciding factor\n+for the current 'Level' of the newcomer and the activities they perform will be a\n+deciding factor for 'Badges' they have earned.\n+\n+coala always tries to be a welcoming organization for newcomers, giving them clear\n+pathways and as much direct assistance as possible. However, it is already known that\n+newcomers face many barriers while attempting to contribute to open source for the\n+first time, and additional barriers while attempting to contribute to projects run\n+by the coala organization. On the other hand, gamification is widely used to engage\n+and motivate people to accomplish tasks and improve their performance.\n+\n+Thus, the goal of this project is to use gamification to orient and motivate newcomers\n+to overcome onboarding barriers to contribute and engage with coala and its community.\n+\n+#### Work Done\n+\n+##### Creating the APIs\n+\n+To build the gamification app, there was a need of constant data supply of all the\n+activities newcomers do, i.e. Getting a pull request merge, Creating an issue and\n+sending messages to the gitter channels. The work to achieve the same has been done\n+in the [webservices](https://gitlab.com/coala/landing/) repo. And the output of all\n+the script can be viewed at [webservices.coala.io](https://github.com/sks444/webservices.coala.io/commit/9d263725092f2ab18fde84fb46dececc95d2a76d) which is a workaround to get a fixed\n+URL for all the APIs until there is the integration of continuous deployment in the webservices.\n+\n+##### Building the Gamification system\n+\n+The second and the important part of my work, from [importing the useful newcomers data](https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4)\n+to building the [gamification app](https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b) has been done in the [community](https://github.com/coala/community) repo. And now we have a [leaderboard](http://coala-community.netlify.com/gamification/) which shows the score, current level and the badges earned by all\n+the active newcomers at coala.\n+\n+#### Challenges\n+\n+The biggest challenge for me was to design the models of the gamification system\n+and choosing the correct path to implement the process. I almost did the wrong\n+implementation of the process twice but again because of well written [cEP](https://github.com/coala/cEPs/blob/master/cEP-0020.md) and the guidance of my mentor John I had a clear\n+idea of what I have to achieve. So, I did some more thinking and research on Django\n+and get the basic work done. And once the algorithms were in place everything went\n+smoothly with the reviews of my mentors.\n+\n+#### Work to be done\n+\n+1). Integration of continous deployment to the webservices.\n+\n+2). Use real webservices APIs.\n+\n+3). The leaderboard on community website is very basic. It could be prettified and improved.\n+\n+4). Add support of Gitter messages analysis to the gamification app. [WIP](https://github.com/coala/community/pull/145).","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:13:35Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:13:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNDMwMg==","url":"https://github.com/coala/projects/pull/619#discussion_r209424302","bodyText":"29 here and 27 in the tarball ... what happened ?","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T11:13:56Z","lastEditedAt":null,"updatedAt":"2018-08-11T11:13:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyNjM4OA==","url":"https://github.com/coala/projects/pull/619#discussion_r209426388","bodyText":"@jayvdb updated the tarball, it contains 28 patches now, it doesn't contain sks444/webservices.coala.io@9d26372 as there is nocode, it just has json.","diffHunk":"@@ -0,0 +1,246 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+ [John Vandenberg](http://github.com/jayvdb),\n+ [Pranav Dixit](https://github.com/prnvdixit),\n+ [Andrew Dassonville](https://github.com/andrewda) &\n+ [Gopala](https://github.com/gkrishnan724)\n+phase:\n+ - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+ - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+ - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+ - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+ I am a final year Computer Science and Engineering undergraduate at\n+ Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+ [community](https://github.com/coala/community) and\n+ [webservices](https://gitlab.com/coala/landing/) project to build a\n+ gamification system for all the active newcomers at coala.\n+\n+social:\n+ - GitHub:\n+   - username: sks444\n+   - link: https://github.com/sks444\n+ - GitLab:\n+   - username: sks444\n+   - link: https://gitlab.com/sks444\n+ - Gitter:\n+   - username: sks444\n+   - link: https://gitter.im/sks444\n+ - OpenHub:\n+   - username: sks444\n+   - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+ - 1:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/d35238fd89be83200b5a28989632e5a1263f1262\n+   - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+ - 2:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/8dfe8376e70b94d3a6f359dc656575b9fb42b35f\n+   - details: >\n+     Jinja2.py: Add support for ignore comments\n+ - 3:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/1ec5b92ca6eb0c55255ed516676177f160930437\n+   - details: >\n+     cEP-0020: Add Newcomer metrics and Gamification system\n+ - 4:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/77f8802e1d573430ea7e1c56cbc240ed901ee427\n+   - details: >\n+     org/cron.py: Use dict.get method to r_json\n+ - 5:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/791baab0f1fbafe035c8941bf2c36264798b65d4\n+   - details: >\n+     Add IGitt Cache mechanism\n+ - 6:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/1b8058c044a805587ad3c240bcb3521121d25440\n+   - details: >\n+     requirements.txt: Use == for installing IGitt\n+ - 7:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/00f3081ea17ba5a97e1b8032fc446af46f4ba4bf\n+   - details: >\n+     Serialize coala issues on GitHub and GitLab\n+ - 8:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/10f622cc4902d8e61f95e0e872a26473c0646ba5\n+   - details: >\n+     Add teams to Contributor Model\n+ - 9:\n+   - repo: IGitt\n+   - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb1dba754b68027c3de0829b05f812f7d9\n+   - details: >\n+     Repository: Add filter_merge_requests method\n+ - 10:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/bafb226be4c4834d127e16e38cbbfe661a2efcb7\n+   - details: >\n+     backend/db.sqlite3: Add old database files\n+ - 11:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/29c2fc4c04d5ce57c1add937d6ea7d134def9953\n+   - details: >\n+     org/: Only pass valid usernames to methods\n+ - 12:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/85372c2d5b7b9068c0f719bc0a288eb9307e9703\n+   - details: >\n+     org/cron.py: Fix contributors cron job\n+ - 13:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/commit/d68a668482340e195ea678b5ce2d9b51e4616a85\n+   - details: >\n+     Serialize coala mrs on GitHub and GitLab\n+ - 14:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/d8e760bf8abd555ef643652bdcdf652fda5575ee\n+   - details: >\n+     data/tests/: Add tests for data app\n+ - 15:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/baae22188f1880fd6fd4102a4a3f12ecce87381a\n+   - details: >\n+     test_management_commands.py: Fix webservices error\n+ - 16:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/e09ae10579481ac61b28d59419c4eddc4c78f83c\n+   - details: >\n+     data/: Fix import_contributors_data command\n+ - 17:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/829ceba7f4ddf829c531a18b0413b6d0e883af0b\n+   - details: >\n+     test_models.py: Fix tests\n+ - 18:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/34748e4b9bcb39bb659edba1bda458cc32734049\n+   - detials: >\n+     Get 100% test coverage for the data app\n+ - 19:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/537602ecbe67263a1c3a877f88444ec6620190f4\n+   - details: >\n+     data/: Import IGitt data\n+ - 20:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/68556ccb73df543f3e6b75092c787243611fda94\n+   - details: >\n+     data/: Add url field to Issue and MergeRequest model\n+ - 21:\n+   - repo: community\n+   - link: https://github.com/coala/community/commit/ef814f6e774a9d04da5a28ee35e2b3a55229694b\n+   - details: >\n+     Add gamification app\n+ - 22:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/153/commits/7bca77cb7261d391132c895c7cdf1b8fba556785\n+   - details: >\n+     [WIP] openhub/tests/: Create tests for openhub app\n+ - 23:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/145/commits/b1ca875cac0aae686d9da454621b07354135f469\n+   - details: >\n+     [WIP] gitter/: Messages, Analysis and Import\n+ - 24:\n+   - repo: community\n+   - link: https://github.com/coala/community/pull/152/commits/3c7173128f884d3b618861355f41f4a2836ab252\n+   - details: >\n+     [WIP] openhub/data.py: Convert data dict to list\n+ - 25:\n+   - repo: igitt-django\n+   - link: https://gitlab.com/sks444/igitt-django/commit/824ced17fc6fbff379aef850ceccb5779d1f5a3e\n+   - details: >\n+     Switch to sqlite3\n+ - 26:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a68252f01c4ae7d78bfec22ba972b2fc5906e\n+   - details: >\n+     [Not Reviewed] Serialize messages on gitter by newcomers\n+ - 27:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c81c981eca81541b7f312beabf97393537\n+   - details: >\n+     [Not Reviewed ] org/: Use igitt_django models to save igitt data\n+ - 28:\n+   - repo: webservices\n+   - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6f4f26e3dc7a10fabd8897a23e27d4332\n+   - details: >\n+     [Not Reviewed] org/: Make an api to show active newcomers\n+ - 29:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-11T13:16:06Z","lastEditedAt":null,"updatedAt":"2018-08-11T13:16:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMDg4MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209430880","bodyText":"add hash per #627","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:16:30Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:16:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTA3OA==","url":"https://github.com/coala/projects/pull/619#discussion_r209431078","bodyText":"reviewed https://gitlab.com/sks444/igitt-django/commit/824ced17\nlooks like a few issues and one or two MRs are needed.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:24:07Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:24:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTE0Mg==","url":"https://github.com/coala/projects/pull/619#discussion_r209431142","bodyText":"not finished.\nremove.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:26:31Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:26:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTE1Mw==","url":"https://github.com/coala/projects/pull/619#discussion_r209431153","bodyText":"not finished.  remove or cut into two PRs, one for the half which does work, and then another for the half which depends on PR 152","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:26:45Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:26:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTIzMg==","url":"https://github.com/coala/projects/pull/619#discussion_r209431232","bodyText":"reviewing now ..","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:29:12Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:29:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTMxMQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209431311","bodyText":"eww .. needs an update, seriously","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:32:09Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:32:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTYxNA==","url":"https://github.com/coala/projects/pull/619#discussion_r209431614","bodyText":"reviewed again;  same opinion as before; please keep description at least, and reactions if possible.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [Not Reviewed] Serialize messages on gitter by newcomers\n+  - 28:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+      [Not Reviewed ] org/: Use igitt_django models to save igitt data","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:46:38Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:46:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMTY4OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209431689","bodyText":"reviewed","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [Not Reviewed] Serialize messages on gitter by newcomers","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T16:50:09Z","lastEditedAt":null,"updatedAt":"2018-08-11T16:50:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MDYxMA==","url":"https://github.com/coala/projects/pull/619#discussion_r209450610","bodyText":"updated","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-12T10:39:05Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:39:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MDYyNw==","url":"https://github.com/coala/projects/pull/619#discussion_r209450627","bodyText":"updated","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-12T10:39:36Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:39:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MDYzMw==","url":"https://github.com/coala/projects/pull/619#discussion_r209450633","bodyText":"updated","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [Not Reviewed] Serialize messages on gitter by newcomers\n+  - 28:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+      [Not Reviewed ] org/: Use igitt_django models to save igitt data","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-12T10:39:45Z","lastEditedAt":null,"updatedAt":"2018-08-12T10:39:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MzY0Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209453646","bodyText":"A\n---\n\nis needed here","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17\n+    - details: >\n+      Switch to sqlite3\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+      [WIP] Serialize messages on gitter by newcomers\n+  - 26:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+      [WIP] org/: Use igitt_django models to save igitt data\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6\n+    - details: >\n+      [WIP] org/: Make an api to show active newcomers\n+","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTUyMw==","createdAt":"2018-08-12T12:42:10Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:33:55Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:33:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MzY2MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209453660","bodyText":"typo in details","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTQ1NA==","createdAt":"2018-08-12T12:37:22Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:34:17Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:34:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MzY4MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209453680","bodyText":"You'll have to add indents in all descriptions\nWithout an indent jekyll will throw errors","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTQ0NQ==","createdAt":"2018-08-12T12:36:55Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:35:00Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:35:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1Mzg2Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209453866","bodyText":"Also consider removing the < since it might lead to incorrect links","diffHunk":"@@ -0,0 +1,248 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTUyNg==","createdAt":"2018-08-12T12:42:43Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:40:57Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:40:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1NDM2NQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209454365","bodyText":"not nearly done.  needs to support pgsql and sqlite.  tests need to show this.","diffHunk":"@@ -0,0 +1,253 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/ShrikrishnaSingh\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Newcomer metrics and gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2>\n+  - Phase 1 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19>\n+  - Phase 2 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43>\n+  - Phase 3 : <https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44>\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+      GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+      Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+      cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+      org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+      Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+      requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+      Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+      Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+      Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+      backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+      org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+      org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+      Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+      data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+      test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+      data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+      test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - detials: >\n+      Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+      Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+      data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+      data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+      Add gamification app\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/153/commits/7bca77cb\n+    - details: >\n+      [WIP] openhub/tests/: Create tests for openhub app\n+  - 24:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+      [WIP] gitter/: Messages, Analysis and Import\n+  - 25:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/152/commits/3c717312\n+    - details: >\n+      [WIP] openhub/data.py: Convert data dict to list\n+  - 26:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T12:56:12Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:56:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1NDM3MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209454370","bodyText":"need to submit MRs\nhttps://gitlab.com/gitmate/open-source/igitt-django/merge_requests","diffHunk":"@@ -0,0 +1,250 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: f5b22d4d8a8fe0d24f322c65c633e0f1304ac3f1e6f9cc0fb105d6e1a04f1278\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+       Add teams to Contributor Model\n+  - 9:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+       Repository: Add filter_merge_requests method\n+  - 10:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+       backend/db.sqlite3: Add old database files\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+       org/: Only pass valid usernames to methods\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+       org/cron.py: Fix contributors cron job\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+       Serialize coala mrs on GitHub and GitLab\n+  - 14:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+       data/tests/: Add tests for data app\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+       test_management_commands.py: Fix webservices error\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+       data/: Fix import_contributors_data command\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+       test_models.py: Fix tests\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - details: >\n+       Get 100% test coverage for the data app\n+  - 19:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+       Generate a fake api similar to coala's webservices\n+  - 20:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+       data/: Import IGitt data\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+       data/: Add url field to Issue and MergeRequest model\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+       Add gamification app\n+  - 23:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/sks444/igitt-django/commit/824ced17","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwMTcxMg==","createdAt":"2018-08-12T13:00:55Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-12T12:56:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:56:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDg0MA==","url":"https://github.com/coala/projects/pull/619#discussion_r209474840","bodyText":"merged","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging\n+  - 9:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+       Add teams to Contributor Model\n+  - 10:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+       Repository: Add filter_merge_requests method\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+       backend/db.sqlite3: Add old database files\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+       org/: Only pass valid usernames to methods\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+       org/cron.py: Fix contributors cron job\n+  - 14:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+       Serialize coala mrs on GitHub and GitLab\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+       data/tests/: Add tests for data app\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+       test_management_commands.py: Fix webservices error\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+       data/: Fix import_contributors_data command\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+       test_models.py: Fix tests\n+  - 19:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - details: >\n+       Get 100% test coverage for the data app\n+  - 20:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+       Generate a fake api similar to coala's webservices\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+       data/: Import IGitt data\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+       data/: Add url field to Issue and MergeRequest model\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+       Add gamification app\n+  - 24:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:54:51Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:54:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NDg5Ng==","url":"https://github.com/coala/projects/pull/619#discussion_r209474896","bodyText":"rebase and this one can get merged","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging\n+  - 9:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/10f622cc\n+    - details: >\n+       Add teams to Contributor Model\n+  - 10:\n+    - repo: IGitt\n+    - link: https://gitlab.com/gitmate/open-source/IGitt/commit/b3caeceb\n+    - details: >\n+       Repository: Add filter_merge_requests method\n+  - 11:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/bafb226b\n+    - details: >\n+       backend/db.sqlite3: Add old database files\n+  - 12:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/29c2fc4c\n+    - details: >\n+       org/: Only pass valid usernames to methods\n+  - 13:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/85372c2d\n+    - details: >\n+       org/cron.py: Fix contributors cron job\n+  - 14:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/d68a6684\n+    - details: >\n+       Serialize coala mrs on GitHub and GitLab\n+  - 15:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/d8e760bf\n+    - details: >\n+       data/tests/: Add tests for data app\n+  - 16:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/baae2218\n+    - details: >\n+       test_management_commands.py: Fix webservices error\n+  - 17:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/e09ae105\n+    - details: >\n+       data/: Fix import_contributors_data command\n+  - 18:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/829ceba7\n+    - details: >\n+       test_models.py: Fix tests\n+  - 19:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/34748e4b\n+    - details: >\n+       Get 100% test coverage for the data app\n+  - 20:\n+    - repo: webservices.coala.io\n+    - link: https://github.com/sks444/webservices.coala.io/commit/9d263725\n+    - details: >\n+       Generate a fake api similar to coala's webservices\n+  - 21:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/537602ec\n+    - details: >\n+       data/: Import IGitt data\n+  - 22:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/68556ccb\n+    - details: >\n+       data/: Add url field to Issue and MergeRequest model\n+  - 23:\n+    - repo: community\n+    - link: https://github.com/coala/community/commit/ef814f6e\n+    - details: >\n+       Add gamification app\n+  - 24:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/59/diffs?commit_id=0581b4c8\n+    - details: >\n+       org/: Use igitt_django models to save igitt data\n+  - 25:\n+    - repo: igitt-django\n+    - link: https://gitlab.com/gitmate/open-source/igitt-django/merge_requests/7/diffs?commit_id=10391892\n+    - details: >\n+       Switch to sqlite3\n+  - 26:\n+    - repo: community\n+    - link: https://github.com/coala/community/pull/145/commits/b1ca875c\n+    - details: >\n+       [WIP] gitter/: Messages, Analysis and Import\n+  - 27:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/45/diffs?commit_id=993a6825\n+    - details: >\n+       [WIP] Serialize messages on gitter by newcomers\n+  - 28:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/merge_requests/60/diffs?commit_id=25e750d6","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:56:07Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:56:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMzU1OQ==","url":"https://github.com/coala/projects/pull/619#discussion_r209503559","bodyText":"@jayvdb, why this description is not showing up in https://deploy-preview-619--coala-projects.netlify.com/gsoc/2018/statusreport/shrikrishna ?","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-13T06:42:19Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:42:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwNTI3Mw==","url":"https://github.com/coala/projects/pull/619#discussion_r209505273","bodyText":"it needs -","diffHunk":"@@ -0,0 +1,255 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Shrikrishna Singh\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Newcomer Metrics and Gamification\n+project_link: https://summerofcode.withgoogle.com/projects/#5892040252981248\n+tarball: https://github.com/sks444/GSoC-18-Patches/raw/master/project.tar.gz\n+sha256sum: 43e4291bf4a8b6d83b004483d260cf2dfdd0d3ae139d598f40e473d05513f9c6\n+mentors: >\n+  [John Vandenberg](http://github.com/jayvdb),\n+  [Pranav Dixit](https://github.com/prnvdixit),\n+  [Andrew Dassonville](https://github.com/andrewda) &\n+  [Gopala](https://github.com/gkrishnan724)\n+phase:\n+  - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/2\n+  - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/19\n+  - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/43\n+  - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/44\n+bio: >\n+  I am a final year Computer Science and Engineering undergraduate at\n+  Shri Mata Vaishno Devi University. As part of the GSoC'18 I worked on\n+  [community](https://github.com/coala/community) and\n+  [webservices](https://gitlab.com/coala/landing/) project to build a\n+  gamification system for all the active newcomers at coala.\n+\n+social:\n+  - GitHub:\n+    - username: sks444\n+    - link: https://github.com/sks444\n+  - GitLab:\n+    - username: sks444\n+    - link: https://gitlab.com/sks444\n+  - Gitter:\n+    - username: sks444\n+    - link: https://gitter.im/sks444\n+  - OpenHub:\n+    - username: sks444\n+    - link: https://www.openhub.net/accounts/sks444\n+email: krishnasingh.ss30@gmail.com\n+blog: https://sks444.github.io\n+activity:\n+  - 1:\n+    - repo: coala-bears\n+    - link: https://github.com/coala/coala-bears/commit/d35238fd\n+    - details: >\n+       GitCommitBear: Parse remote with giturlparse\n+  - 2:\n+    - repo: coala\n+    - link: https://github.com/coala/coala/commit/8dfe8376\n+    - details: >\n+       Jinja2.py: Add support for ignore comments\n+  - 3:\n+    - repo: cEPs\n+    - link: https://github.com/coala/cEPs/commit/1ec5b92c\n+    - details: >\n+       cEP-0020: Add Newcomer metrics and Gamification system\n+  - 4:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/77f8802e\n+    - details: >\n+       org/cron.py: Use dict.get method to r_json\n+  - 5:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/791baab0\n+    - details: >\n+       Add IGitt Cache mechanism\n+  - 6:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1b8058c0\n+    - details: >\n+       requirements.txt: Use == for installing IGitt\n+  - 7:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/00f3081e\n+    - details: >\n+       Serialize coala issues on GitHub and GitLab\n+  - 8:\n+    - repo: webservices\n+    - link: https://gitlab.com/coala/landing/commit/1398c931\n+      details: >\n+       Implement logging","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNzM4Mw==","createdAt":"2018-08-13T06:50:56Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-13T06:50:21Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:50:21Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534158688000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/621","number":621,"title":"Flags: Support for multiple status labels","body":"Add support for multiple status labels on a project card\nCloses #470\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-08-11T01:55:54Z","updatedAt":"2018-08-13T11:11:28Z","closedAt":"2018-08-13T11:05:31Z","state":"merged","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"enhancement","color":"84b6eb"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/621","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNTgyNg==","url":"https://github.com/coala/projects/pull/621#discussion_r209415826","bodyText":"This should be put into css file instead.","diffHunk":"@@ -30,6 +30,17 @@\n   <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\">\n </head>\n \n+<style type=\"text/css\">","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzMzNg==","createdAt":"2018-08-11T05:06:55Z","content":"THUMBS_UP","user":{"login":"blazeu","name":"Surya Widi"}}],"createdAt":"2018-08-11T04:11:01Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:11:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMjIzNw==","url":"https://github.com/coala/projects/pull/621#discussion_r209422237","bodyText":"Support is not really good, only works in Chrome.\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/height","diffHunk":"@@ -85,3 +85,6 @@\n   border: 0;\n   z-index: 9;\n }\n+.status {\n+  height: fit-content;","author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-08-11T09:43:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T09:43:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MjA1OQ==","url":"https://github.com/coala/projects/pull/621#discussion_r209482059","bodyText":"I do not believe this is necessary.\nThere are still many other .md files in this directory which use status: in_progress so it is extremely unlikely that only this one should be modified.\nIdeally , none are modified in this PR.","diffHunk":"@@ -19,7 +19,8 @@ requirements:\n   - \"Being familiar with the current Bear API and what it provides.\"\n   - \"Knowledge of ANTLR and Java is a bonus.\"\n   - \"Knowledge of ASTs and basic language grammar.\"\n-status: in_progress\n+status:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T02:50:06Z","lastEditedAt":null,"updatedAt":"2018-08-13T02:50:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwNTM2MA==","url":"https://github.com/coala/projects/pull/621#discussion_r209505360","bodyText":"do we need two spaces after the : here?  I doubt it","diffHunk":"@@ -16,8 +16,7 @@\n \"collaborating_projects\" : [{% for cp in post.collaborating_projects %}\"{{ cp }}\"{% unless forloop.last %},{% endunless %}{% endfor %}],\n \"content_url\" : \"{{post.url}}\",\n \"path\" : \"{{post.path}}\",\n-\"status\" : \"{{post.status}}\",\n+\"status\" :  [{% for status in post.status %} \"{{ status }}\" {% unless forloop.last %},{% endunless %}{% endfor %}],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:50:59Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:50:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTU1NTU1MQ==","url":"https://github.com/coala/projects/pull/621#discussion_r209555551","bodyText":"Would make more sense to add this change in a separate commit","diffHunk":"@@ -17,7 +17,9 @@ requirements:\n   - \"The applicant should have at least one patch merged to any of the coala repositories.\"\n   - \"Familiarity with Git, GitHub API, Phabricator API, and GitLab API\"\n   - \"Familiarity with EmberJS and GitHub Pages\"\n-status: in_progress\n+status:","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-08-13T10:10:01Z","lastEditedAt":null,"updatedAt":"2018-08-13T10:10:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI4ODM1MQ==","url":"https://github.com/coala/projects/pull/621#issuecomment-412288351","bodyText":"Could you please post some screenshots showing the final layout of project cards after adding multiple labels ?","diffHunk":null,"author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-08-11T17:03:29Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:03:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI5MjAxOQ==","url":"https://github.com/coala/projects/pull/621#issuecomment-412292019","bodyText":"@hemangsk @blazeu\nThis is a peculiar case. The bottom margin only comes up when it is next to another card.\nYou can see here - https://imgur.com/a/1I3ZCB2. The rest of the cards have labels at the bottom except these 3 cards next to the multiple labels card whose labels are pushed up\n\"Vulture dead code removal\" card has no margin bottom here but it gets one here - https://i.imgur.com/lh0HAc8.png When it is next to another card. Also this issue is solved when you search for a specific card in which case It has no bottom margin.\nEdit: I did some changes. The new ui looks like this - https://i.imgur.com/HAlAeIp.png","diffHunk":null,"author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-11T18:05:43Z","lastEditedAt":"2018-08-13T02:20:43Z","updatedAt":"2018-08-13T02:20:43Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534209237000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/622","number":622,"title":"reports: Add report for RJ722 2018","body":"Add Report for RJ722.\nhttps://deploy-preview-622--coala-projects.netlify.com/GSoC/2018/StatusReport/RahulJha\nhttps://deploy-preview-622--coala-projects.netlify.com/gsoc/2018/statusreport/rj722","comments":19,"createdAt":"2018-08-11T02:52:06Z","updatedAt":"2018-08-14T01:13:57Z","closedAt":"2018-08-14T01:08:02Z","state":"merged","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/622","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNTcyOA==","url":"https://github.com/coala/projects/pull/622#discussion_r209415728","bodyText":"https://deploy-preview-622--coala-projects.netlify.com/GSoC/2018/StatusReport/RahulJha not working","diffHunk":"@@ -0,0 +1,370 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T04:05:58Z","lastEditedAt":null,"updatedAt":"2018-08-11T04:05:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzQ4MQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209417481","bodyText":"There was a problem with parsing the \":\" in the commit messages. Resolved!","diffHunk":"@@ -0,0 +1,370 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-11T05:52:03Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:52:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNzU2Mg==","url":"https://github.com/coala/projects/pull/622#discussion_r209417562","bodyText":"Add OpenHub","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T05:57:17Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:57:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxOTk5MA==","url":"https://github.com/coala/projects/pull/622#discussion_r209419990","bodyText":"You should create a project for https://github.com/RJ722/vulture-whitelist-generators at https://www.openhub.net/p/new\nhttps://www.openhub.net/accounts/RJ722/positions","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T07:49:21Z","lastEditedAt":null,"updatedAt":"2018-08-11T07:49:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQyMTIzOA==","url":"https://github.com/coala/projects/pull/622#discussion_r209421238","bodyText":"Still not done","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T08:50:59Z","lastEditedAt":null,"updatedAt":"2018-08-11T08:50:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NDgxMw==","url":"https://github.com/coala/projects/pull/622#discussion_r209444813","bodyText":"Added the openhub profile link. Creating the project on openhub.","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T06:53:34Z","lastEditedAt":null,"updatedAt":"2018-08-12T06:53:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NDk4NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209444984","bodyText":"Here it is: https://www.openhub.net/p/vulture-whitelist-generators","diffHunk":"@@ -0,0 +1,376 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#6564412442804224\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T07:00:35Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:00:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDI5MQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209460291","bodyText":"doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUzMA==","createdAt":"2018-08-12T17:56:41Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:11:14Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:11:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDMwNw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460307","bodyText":"doesnt count.\nthis should have been automated with cookiecutter or moban","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T16:12:10Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:12:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDMwOA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460308","bodyText":"doesnt count.\nthis should have been automated with cookiecutter or moban","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTI5Ng==","createdAt":"2018-08-12T17:36:21Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:12:16Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:12:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDMyNA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460324","bodyText":"nothing much done here","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUyNw==","createdAt":"2018-08-12T17:56:31Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:12:51Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:12:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDM0OQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209460349","bodyText":"give this a better description, as it does more than just Ignore dist/ , and Ignore dist/ should have been an automated part of setting up a repo","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUxOA==","createdAt":"2018-08-12T17:55:40Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:13:53Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:13:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQxNg==","url":"https://github.com/coala/projects/pull/622#discussion_r209460416","bodyText":"wouldnt have made it through any review; should have been squashed into a proper commit","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUxMw==","createdAt":"2018-08-12T17:55:26Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:15:40Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:15:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ0Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460447","bodyText":"doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTUxMg==","createdAt":"2018-08-12T17:55:22Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:15:58Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:15:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ2NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460464","bodyText":"aasdjflkasjdfkljasf? seriously?","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T16:16:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:16:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ3Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460477","bodyText":"should have been automated; doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ5NQ==","createdAt":"2018-08-12T17:53:53Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:16:59Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:16:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDQ5NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209460494","bodyText":"we provide templates for this; doesnt count","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ5Ng==","createdAt":"2018-08-12T17:53:55Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:17:38Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:17:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDU1NQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209460555","bodyText":"this type of addition is being excluded by other students as it didnt involve any additional work","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ5Mg==","createdAt":"2018-08-12T17:53:49Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:19:49Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:19:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDU3Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209460577","bodyText":"should never have been merged with this in it","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85\n+   - details: Support py37\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ec86b525cd9edd8b8eef181dc529e7d53fff3aad","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ4OQ==","createdAt":"2018-08-12T17:52:58Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:20:33Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:20:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDYyMg==","url":"https://github.com/coala/projects/pull/622#discussion_r209460622","bodyText":"should have been automated","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85\n+   - details: Support py37\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ec86b525cd9edd8b8eef181dc529e7d53fff3aad\n+   - details: Debug Travis\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/0eeb52e867c2d01680adba4841a890d282c43e46","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ4OA==","createdAt":"2018-08-12T17:52:51Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:21:50Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:21:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MDY0Ng==","url":"https://github.com/coala/projects/pull/622#discussion_r209460646","bodyText":"not suitable for activity report","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85\n+   - details: Support py37\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ec86b525cd9edd8b8eef181dc529e7d53fff3aad\n+   - details: Debug Travis\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/0eeb52e867c2d01680adba4841a890d282c43e46\n+   - details: \".gitignore: Track MANIFEST.in and remove gibberish\"\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 29:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 30:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 31:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 32:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 33:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 34:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 35:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 36:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 37:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 38:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 39:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 40:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7987889","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgwNTQ4Ng==","createdAt":"2018-08-12T17:52:49Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T16:22:55Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:22:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MjYwNg==","url":"https://github.com/coala/projects/pull/622#discussion_r209462606","bodyText":"this should have been automated with cookiecutter or moban\n\nAhh, I wasn't aware of this. I wrote a script which looked for every commit with the author \"RJ722\" or \"Rahul Jha\" and spitted this. Not very smart, sorry - I'd be removing these.","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:36:07Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:36:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MzA1Mg==","url":"https://github.com/coala/projects/pull/622#discussion_r209463052","bodyText":"Yups, this should be excluded - removing it.","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8\n+   - details: Ignore MANIFEST\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1ec97c5eb83ad7cb0872f96931309fc46e0d8caf\n+   - details: Set up .gitignore\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/186498c4ff7c91811620a5d6152ac8b2b2253eb7\n+   - details: Add setup.cfg\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8de282f0d31fb8e46e2eb96ef93b48004e60ab85","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:53:44Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:53:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2MzEzMg==","url":"https://github.com/coala/projects/pull/622#discussion_r209463132","bodyText":"I learned some important lessons like this one for setting up a new serious project. Would take care. Thanks for pointing this out!","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:56:27Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:56:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ2Mzg0OQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209463849","bodyText":"I prefer to believe that it wasn't me, must've been my dog. ':D","diffHunk":"@@ -0,0 +1,439 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/RahulJha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+report_year: 2018\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b8a8ec8b42b24287560fd07ff3cafe30e92fb585\n+   - details: Initial commit\n+\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/43f6dae0818cdba691fb3f78e6bb4381867beeb3\n+   - details: Create LICENSE\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/312313ad96e22386653ca39686a2eedfa00de82c\n+   - details: Use README.rst and LICENSE.txt\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d2fd1251e69e2e263645f9189c784a82fec81b4a\n+   - details: Add .gitignore\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/22fbb2281503fc75b8960df528e878e2cfa24ed3\n+   - details: Add docs and news\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package codet\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: Ignore dist/\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f8d854059f740d14147dc92906842e5c1bc04c34\n+   - details: Supply packages in setup.py\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/50e5dc1ec3578d02ac01804fda733bdec612998f\n+   - details: Ignore build/\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/836b31fd0a21407224c0f7d7381d1d03047b22f8","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T18:25:04Z","lastEditedAt":null,"updatedAt":"2018-08-12T18:25:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3MzMzNQ==","url":"https://github.com/coala/projects/pull/622#discussion_r209473335","bodyText":"cEP & project definition commits at the top of the list\nf551a2e","diffHunk":"@@ -0,0 +1,390 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:22:11Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:22:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NDYzMA==","url":"https://github.com/coala/projects/pull/622#discussion_r209484630","bodyText":"Done!","diffHunk":"@@ -0,0 +1,390 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp) & [Abdeali Kothari](https://github.com/AbdealiJK) & [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-13T03:24:32Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:24:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4ODAwMA==","url":"https://github.com/coala/projects/pull/622#discussion_r209488000","bodyText":"Grammar: an* ignoring\n:D","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/f551a2e\n+   - details: Add automatic whitelist generator for Vulture\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package code in modules and improve documentation\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: \"Ignore dist/; minor improvements to docs\"\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 29:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 30:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/f216902\n+   - details: \"Update tests to only pass supported arguments to literal_eval (#118)\"\n+\n+ - 31:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/1c22682\n+   - details: \"Fix PEP8 issues (#120)\"\n+\n+ - 32:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/ade4e44\n+   - details: \"Update TODO file (#122)\"\n+\n+ - 33:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/4cb052a\n+   - details: \"Add coveralls support to track code coverage (#124)\"\n+\n+ - 34:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e0e384e\n+   - details: \"Document exit codes (#123)\"\n+\n+ - 35:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/01a5031\n+   - details: \"Increase test coverage (#126)\"\n+\n+ - 36:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/5f77d81\n+   - details: \"Add coveralls badge to README (#127)\"\n+\n+ - 37:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e3ea074\n+   - details: \"Use argparse instead of optparse (#119)\"\n+\n+ - 38:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e425c9a\n+   - details: \"Test file with non utf-8 encoding (#121)\"\n+\n+ - 39:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7ff8d68\n+   - details: \"Skip async tests correctly (#128)\"\n+\n+ - 40:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/d135592\n+   - details: \"tests/test_errors.py: Use pytest's tmpdir fixture (#131)\"\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/544f960\n+   - details: \"Use absolute imports (#132)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/fcd9df8\n+   - details: \"Single-source package version string (#134)\"\n+\n+ - 43:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/3899b22\n+   - details: \"Whitelists: use non-dynamic objects directly instead of mocking them. (#137)\"\n+\n+ - 44:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/527b93c\n+   - details: \"Add --make-whitelist flag (#135). \"\n+\n+ - 45:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/47116ab\n+   - details: \"Add --ignore-names flag (#139).\"\n+\n+ - 46:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/932e52a28a65286e886d98a4691f9008a5f5e892\n+   - details: Add analysis report for localstack\n+\n+ - 47:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/36f88da77dde12334e97c31d5f5a752e79a3a12c\n+   - details: Pre-format logs\n+\n+ - 48:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e50a54e82f7d63ec2892d5fa28f49ab09d277708\n+   - details: Update localstack_analysis.md\n+\n+ - 49:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/b47fc3691055d618576f9142d36832cd1f94fd8c\n+   - details: Make report conform to the given template\n+\n+ - 50:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/513e41cc4904760196e591602e3356bd1a504a5c\n+   - details: Update localstack_analysis.md\n+\n+ - 51:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/3ab0a800db0c2200f0c666d4e198c8558c5fc325\n+   - details: create analysis report for system design primer\n+\n+ - 52:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e40be61b4e6e9cf97d689a328e8aa27c2637a85c\n+   - details: Organise reports into folders.\n+\n+ - 53:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/85de1d41b14544e634a65fe5cb215dfee31eb2cf\n+   - details: add header for localstack\n+\n+ - 54:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/89bfb08fc7fdcada02389bd4251632140a7da86c\n+   - details: Add report for relational-networks\n+\n+ - 55:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/00a0492071c449ee34e36fec7a59254133be2f1b\n+   - details: Add footer\n+\n+ - 56:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/43253a9384cc655c9e854766714cc3f5240e55bb\n+   - details: \"Add report for qutebrowser (#4)\"\n+\n+ - 57:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/5bfabaca9902017815cc01d3b38e92a21107d86d\n+   - details: \"Add report for Sharppy (#5)\"\n+---\n+\n+### Improving whitelisting infrastructure for Vulture\n+\n+#### Work Done\n+\n+<br>\n+\n+1.) Created a command line tool which takes in sip files as input and spits a\n+whitelist with all the virtual functions defined in the [sip][sip] files. This\n+tool was further used to create a whitelist for PyQt which can hereby be used\n+with any project using PyQt. The tool is now completely tested and documented.\n+\n+<br>\n+\n+2.) Created `--make-whitelist` flag to enable reporting of the results in a\n+format which can be directly used as a whitelist. This significantly eased the\n+process of creating and maintaing a whitelist for a project.\n+\n+<br>\n+\n+3.) Implemented a ignoring mechanism for Vulture (`--ignore-names` and","author":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4","name":"AbdealiJK"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDAzNA==","createdAt":"2018-08-13T04:27:53Z","content":"LAUGH","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:10:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:10:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4ODA5NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209488094","bodyText":"It would be good to explain motivation/target being flask and other web frameworks (and usable for other-usecases too)","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/f551a2e\n+   - details: Add automatic whitelist generator for Vulture\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package code in modules and improve documentation\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: \"Ignore dist/; minor improvements to docs\"\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 29:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 30:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/f216902\n+   - details: \"Update tests to only pass supported arguments to literal_eval (#118)\"\n+\n+ - 31:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/1c22682\n+   - details: \"Fix PEP8 issues (#120)\"\n+\n+ - 32:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/ade4e44\n+   - details: \"Update TODO file (#122)\"\n+\n+ - 33:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/4cb052a\n+   - details: \"Add coveralls support to track code coverage (#124)\"\n+\n+ - 34:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e0e384e\n+   - details: \"Document exit codes (#123)\"\n+\n+ - 35:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/01a5031\n+   - details: \"Increase test coverage (#126)\"\n+\n+ - 36:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/5f77d81\n+   - details: \"Add coveralls badge to README (#127)\"\n+\n+ - 37:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e3ea074\n+   - details: \"Use argparse instead of optparse (#119)\"\n+\n+ - 38:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e425c9a\n+   - details: \"Test file with non utf-8 encoding (#121)\"\n+\n+ - 39:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7ff8d68\n+   - details: \"Skip async tests correctly (#128)\"\n+\n+ - 40:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/d135592\n+   - details: \"tests/test_errors.py: Use pytest's tmpdir fixture (#131)\"\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/544f960\n+   - details: \"Use absolute imports (#132)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/fcd9df8\n+   - details: \"Single-source package version string (#134)\"\n+\n+ - 43:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/3899b22\n+   - details: \"Whitelists: use non-dynamic objects directly instead of mocking them. (#137)\"\n+\n+ - 44:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/527b93c\n+   - details: \"Add --make-whitelist flag (#135). \"\n+\n+ - 45:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/47116ab\n+   - details: \"Add --ignore-names flag (#139).\"\n+\n+ - 46:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/932e52a28a65286e886d98a4691f9008a5f5e892\n+   - details: Add analysis report for localstack\n+\n+ - 47:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/36f88da77dde12334e97c31d5f5a752e79a3a12c\n+   - details: Pre-format logs\n+\n+ - 48:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e50a54e82f7d63ec2892d5fa28f49ab09d277708\n+   - details: Update localstack_analysis.md\n+\n+ - 49:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/b47fc3691055d618576f9142d36832cd1f94fd8c\n+   - details: Make report conform to the given template\n+\n+ - 50:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/513e41cc4904760196e591602e3356bd1a504a5c\n+   - details: Update localstack_analysis.md\n+\n+ - 51:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/3ab0a800db0c2200f0c666d4e198c8558c5fc325\n+   - details: create analysis report for system design primer\n+\n+ - 52:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e40be61b4e6e9cf97d689a328e8aa27c2637a85c\n+   - details: Organise reports into folders.\n+\n+ - 53:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/85de1d41b14544e634a65fe5cb215dfee31eb2cf\n+   - details: add header for localstack\n+\n+ - 54:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/89bfb08fc7fdcada02389bd4251632140a7da86c\n+   - details: Add report for relational-networks\n+\n+ - 55:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/00a0492071c449ee34e36fec7a59254133be2f1b\n+   - details: Add footer\n+\n+ - 56:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/43253a9384cc655c9e854766714cc3f5240e55bb\n+   - details: \"Add report for qutebrowser (#4)\"\n+\n+ - 57:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/5bfabaca9902017815cc01d3b38e92a21107d86d\n+   - details: \"Add report for Sharppy (#5)\"\n+---\n+\n+### Improving whitelisting infrastructure for Vulture\n+\n+#### Work Done\n+\n+<br>\n+\n+1.) Created a command line tool which takes in sip files as input and spits a\n+whitelist with all the virtual functions defined in the [sip][sip] files. This\n+tool was further used to create a whitelist for PyQt which can hereby be used\n+with any project using PyQt. The tool is now completely tested and documented.\n+\n+<br>\n+\n+2.) Created `--make-whitelist` flag to enable reporting of the results in a\n+format which can be directly used as a whitelist. This significantly eased the\n+process of creating and maintaing a whitelist for a project.\n+\n+<br>\n+\n+3.) Implemented a ignoring mechanism for Vulture (`--ignore-names` and","author":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4","name":"AbdealiJK"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDAzMg==","createdAt":"2018-08-13T04:27:50Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:11:12Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:11:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4ODIyMw==","url":"https://github.com/coala/projects/pull/622#discussion_r209488223","bodyText":"Minor: 100\"%\"\nTo be a bit pedantic: The python3.7 one is not fix-tests (as they were never tested before) but \"ensure support for py3.7 in CI/CD\" or similar\nAnd should probably be merged with the below point","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/29\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/30\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/31\n+bio: >\n+ Rahul is currently a junior, studying Electronics Engineering at Zakir Hussain\n+ College of Engineering and Technology, Aligarh Muslim University. He loves the\n+ ideology behind Free and Open Source Software and reads about the history of\n+ this revolutionary movement in his leisure time.\n+social:\n+ - GitHub:\n+   - username: RJ722\n+   - link: https://github.com/RJ722\n+ - GitLab:\n+   - username: RJ722\n+   - link: https://gitlab.com/RJ722\n+ - Gitter:\n+   - username: RJ722\n+   - link: https://gitter.im/RJ722\n+ - Openhub:\n+   - username: RJ722\n+   - link: https://openhub.net/accounts/RJ722\n+email: rj722@protonmail.com\n+blog: https://rj722.github.io/blog\n+activity:\n+ - 1:\n+   - repo: projects\n+   - link: https://github.com/coala/projects/commit/f551a2e\n+   - details: Add automatic whitelist generator for Vulture\n+ - 2:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/7fc63f7097ba83093740b4b3c1eea788fd485dd1\n+   - details: Package code in modules and improve documentation\n+\n+ - 3:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/680cc58051d3640b73f9ae1ce936193843b9b604\n+   - details: \"Ignore dist/; minor improvements to docs\"\n+\n+ - 4:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/111bc5d5cab4c516a7eecb75dd637722f1b1aa37\n+   - details: Remove nargs=1\n+\n+ - 5:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/cbdbd4e391925b69c93d64c794d925422b9a10e6\n+   - details: Minor Cosmetics\n+\n+ - 6:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c6c25145b9bdd8372b4f4388eddbbbeeab13ff7b\n+   - details: Rename genereators/qt_utils.py to generators/qt.py\n+\n+ - 7:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/1fccd02ac6fdd893801df0dc498b96b22ef976af\n+   - details: Rename generators to vulture_whitelist\n+\n+ - 8:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/67c3f185452bfb222ff0e78ae6ddb3b15a04782b\n+   - details: Use QtWhitelistCreator as a Creator object\n+\n+ - 9:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/473df29f75460120bbcd97dbb328ac5277032a71\n+   - details: Add tests and configure test suite\n+\n+ - 10:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/fbb42e54b52d88fff95a86eb8cf35da4167a4ad8\n+   - details: Add travis and coveralls\n+\n+ - 11:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/f5c6dfea2ab0b8014413745690dbd299aaa29770\n+   - details: Add sip as a dependency\n+\n+ - 12:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/870b9591fbf84116b9e36a00f377676cead01121\n+   - details: Install sip in travis\n+\n+ - 13:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4170429aa6372e80a7f5698d7908b29f9aaec920\n+   - details: Sort before writing xml\n+\n+ - 14:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/9c0307a379b7c83ca885e6e79ea4d1620fe8765d\n+   - details: \"Install lxml when using local repository.\"\n+\n+ - 15:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/8b6cbd5b5cb03302c90c818848e6992fcf45b74a\n+   - details: \"setup.py: test requires vulture, not sip\"\n+\n+ - 16:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/34bbf0b780b6ae2b04dad3be5cecbe4100daedbc\n+   - details: \"README.rst: Minor nitpicks and cosmetics\"\n+\n+ - 17:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/234cb936a6f3fa59ca03a810212fbe1bb9e5441c\n+   - details: \"setup.py: mention lxml only in install_requires\"\n+\n+ - 18:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/2e40a6a3c45be434214e4b328fbbd489792ab5f0\n+   - details: \"setup.py: Remove pytest runner and import version correctly\"\n+\n+ - 19:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/e58e15ae7f22c466dd0488cee8d1e9e4a2250d7f\n+   - details: \"tests/__init__.py: TESTS and DIR are same\"\n+\n+ - 20:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/77c172ad74f53cdad29b75db234f1a145faa389d\n+   - details: Use Creator object to register new creators\n+\n+ - 21:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/4ef597c5394df9d6cce86b50f9aff1aa33bb10da\n+   - details: \"tests/test_with_vulture.py: Use pytest.fixture\"\n+\n+ - 22:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/5dfd9655e34b73fc759037cb10e0250d4efb8900\n+   - details: \"tests/test_with_vulture.py: Use textwrap.dedent\"\n+\n+ - 23:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/c68aa692d8d4b9fb8b15de72d5e9867c48c6023b\n+   - details: Use absolute imports everywhere\n+\n+ - 24:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/ff49ab876363a173d7228a84037332009c1b1c1f\n+   - details: \"Use python's logging module.\"\n+\n+ - 25:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/bc3af5a9fe6af88433278b35db5026437a6da861\n+   - details: \"Define __version__ in vulture_whitelist/__main__.py\"\n+\n+ - 26:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/d203f12a6f276ac60dab196f1fb2e3b24d1bb8ae\n+   - details: Bump up PyQt versions, update features\n+\n+ - 27:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/b3dc28a1502920fd2d824b7b7c3e064bfcb5ed79\n+   - details: Use pytest's tmpdir fixture\n+\n+ - 28:\n+   - repo: vulture-whitelist-generators\n+   - link: https://github.com/RJ722/vulture-whitelist-generators/commit/aad70ab17bfec8e389292b3c645d0d4b6d931c3a\n+   - details: Single source package version\n+\n+ - 29:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/8efe8af\n+   - details: \"README.rst: Add examples to setup (#114)\"\n+\n+ - 30:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/f216902\n+   - details: \"Update tests to only pass supported arguments to literal_eval (#118)\"\n+\n+ - 31:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/1c22682\n+   - details: \"Fix PEP8 issues (#120)\"\n+\n+ - 32:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/ade4e44\n+   - details: \"Update TODO file (#122)\"\n+\n+ - 33:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/4cb052a\n+   - details: \"Add coveralls support to track code coverage (#124)\"\n+\n+ - 34:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e0e384e\n+   - details: \"Document exit codes (#123)\"\n+\n+ - 35:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/01a5031\n+   - details: \"Increase test coverage (#126)\"\n+\n+ - 36:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/5f77d81\n+   - details: \"Add coveralls badge to README (#127)\"\n+\n+ - 37:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e3ea074\n+   - details: \"Use argparse instead of optparse (#119)\"\n+\n+ - 38:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/e425c9a\n+   - details: \"Test file with non utf-8 encoding (#121)\"\n+\n+ - 39:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/7ff8d68\n+   - details: \"Skip async tests correctly (#128)\"\n+\n+ - 40:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/d135592\n+   - details: \"tests/test_errors.py: Use pytest's tmpdir fixture (#131)\"\n+\n+ - 41:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/544f960\n+   - details: \"Use absolute imports (#132)\"\n+\n+ - 42:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/fcd9df8\n+   - details: \"Single-source package version string (#134)\"\n+\n+ - 43:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/3899b22\n+   - details: \"Whitelists: use non-dynamic objects directly instead of mocking them. (#137)\"\n+\n+ - 44:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/527b93c\n+   - details: \"Add --make-whitelist flag (#135). \"\n+\n+ - 45:\n+   - repo: vulture\n+   - link: https://github.com/jendrikseipp/vulture/commit/47116ab\n+   - details: \"Add --ignore-names flag (#139).\"\n+\n+ - 46:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/932e52a28a65286e886d98a4691f9008a5f5e892\n+   - details: Add analysis report for localstack\n+\n+ - 47:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/36f88da77dde12334e97c31d5f5a752e79a3a12c\n+   - details: Pre-format logs\n+\n+ - 48:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e50a54e82f7d63ec2892d5fa28f49ab09d277708\n+   - details: Update localstack_analysis.md\n+\n+ - 49:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/b47fc3691055d618576f9142d36832cd1f94fd8c\n+   - details: Make report conform to the given template\n+\n+ - 50:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/513e41cc4904760196e591602e3356bd1a504a5c\n+   - details: Update localstack_analysis.md\n+\n+ - 51:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/3ab0a800db0c2200f0c666d4e198c8558c5fc325\n+   - details: create analysis report for system design primer\n+\n+ - 52:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/e40be61b4e6e9cf97d689a328e8aa27c2637a85c\n+   - details: Organise reports into folders.\n+\n+ - 53:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/85de1d41b14544e634a65fe5cb215dfee31eb2cf\n+   - details: add header for localstack\n+\n+ - 54:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/89bfb08fc7fdcada02389bd4251632140a7da86c\n+   - details: Add report for relational-networks\n+\n+ - 55:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/00a0492071c449ee34e36fec7a59254133be2f1b\n+   - details: Add footer\n+\n+ - 56:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/43253a9384cc655c9e854766714cc3f5240e55bb\n+   - details: \"Add report for qutebrowser (#4)\"\n+\n+ - 57:\n+   - repo: vulture-analysis\n+   - link: https://github.com/jendrikseipp/vulture-analysis/commit/5bfabaca9902017815cc01d3b38e92a21107d86d\n+   - details: \"Add report for Sharppy (#5)\"\n+---\n+\n+### Improving whitelisting infrastructure for Vulture\n+\n+#### Work Done\n+\n+<br>\n+\n+1.) Created a command line tool which takes in sip files as input and spits a\n+whitelist with all the virtual functions defined in the [sip][sip] files. This\n+tool was further used to create a whitelist for PyQt which can hereby be used\n+with any project using PyQt. The tool is now completely tested and documented.\n+\n+<br>\n+\n+2.) Created `--make-whitelist` flag to enable reporting of the results in a\n+format which can be directly used as a whitelist. This significantly eased the\n+process of creating and maintaing a whitelist for a project.\n+\n+<br>\n+\n+3.) Implemented a ignoring mechanism for Vulture (`--ignore-names` and\n+`--ignore-decorators`) - thereby enabling users to omit the result(s) which\n+match with the given argument(s) (a glob pattern).\n+\n+<br>\n+\n+4.) Increased test coverage of Vulture from already excellent 95% to 100. Also,","author":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4","name":"AbdealiJK"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDAzNw==","createdAt":"2018-08-13T04:28:08Z","content":"HOORAY","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:12:59Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:12:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4OTU4NA==","url":"https://github.com/coala/projects/pull/622#discussion_r209489584","bodyText":"indentation must pass yamllint","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNDA5Mg==","createdAt":"2018-08-13T04:31:42Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-13T04:29:29Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:29:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4OTc1Nw==","url":"https://github.com/coala/projects/pull/622#discussion_r209489757","bodyText":"actually, all my scripts for editing would go havoc if I change it right now. 😅 Would indent it properly once I've addressed all the review comments.","diffHunk":"@@ -0,0 +1,388 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+report_year: 2018\n+title: Rahul Jha\n+student: Rahul Jha\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve Whitelisting Infrastructure for Vulture\n+project_link: https://summerofcode.withgoogle.com/projects/#5620743946108928\n+tarball: https://drive.google.com/file/d/12HgBb2Wdjl6Zzm7mDqCt13ke8VHj7_Bb/view\n+mentors: >\n+ [Jendrik Seipp](https://github.com/jendrikseipp), [Abdeali Kothari](https://github.com/AbdealiJK), [Florian Bruhin](https://github.com/The-Compiler)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/28","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-13T04:31:43Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:31:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI1NDczMw==","url":"https://github.com/coala/projects/pull/622#issuecomment-412254733","bodyText":"https://github.com/jendrikseipp/vulture-analysis/commits?author=RJ722\n\nAdding those!\n\nRJ722/example-vulture#4\n\nIt was for a demo I did at a meetup. Not directly related to GSoC work. :p","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-11T06:19:58Z","lastEditedAt":null,"updatedAt":"2018-08-11T06:19:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM1MjYzMQ==","url":"https://github.com/coala/projects/pull/622#issuecomment-412352631","bodyText":"jendrikseipp/vulture#143 was what I was worried about in the cEP.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T16:03:09Z","lastEditedAt":null,"updatedAt":"2018-08-12T16:03:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM1OTUwNA==","url":"https://github.com/coala/projects/pull/622#issuecomment-412359504","bodyText":"jendrikseipp/vulture#143 was what I was worried about in the cEP.\n\nThis was the only thing that slipped by, but jendriksiepp/vulture#144 fixes it. I've double checked other things - everything else is exposed to the API.","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:44:39Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:44:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM1OTk5MQ==","url":"https://github.com/coala/projects/pull/622#issuecomment-412359991","bodyText":"First of all, thank you so much for the thorough review @jayvdb. Really appreciate it. :-)\n\nThe activities contains way too many items which are not suitable.\n\nYeps, that's mostly because I didn't know about moban or cookiecutter - I just wrote a script which extracted the commits from the above repositeries and spitted this - Not very smart! :P  I'm removing these activities now.\nAlso, most of the eerie stuff that got into vulture-whitelist-generators was because that PR was awfully polluted by the humongous size of test-data (~500,000+++) and it was extremely difficult to review it. I understand that most of the stuff here should've been squashed but it just so happened to be entagled with a lot of other useful information so it was really painful to separate it. So sorry, would be more careful next time.","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T17:52:39Z","lastEditedAt":null,"updatedAt":"2018-08-12T17:52:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjM2Njg4Mw==","url":"https://github.com/coala/projects/pull/622#issuecomment-412366883","bodyText":"I've removed all the commits mentioned above plus a few more, let me know if you think that anything else is inappropriate.","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T19:42:46Z","lastEditedAt":"2018-08-12T19:43:26Z","updatedAt":"2018-08-12T19:43:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjU5NzQzNQ==","url":"https://github.com/coala/projects/pull/622#issuecomment-412597435","bodyText":"and please rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T17:25:04Z","lastEditedAt":null,"updatedAt":"2018-08-13T17:25:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjYwMTIxMg==","url":"https://github.com/coala/projects/pull/622#issuecomment-412601212","bodyText":"rebased!","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-13T17:36:53Z","lastEditedAt":null,"updatedAt":"2018-08-13T17:36:53Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1533997546000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/625","number":625,"title":".gitignore: Sync","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-08-11T04:04:12Z","updatedAt":"2018-08-11T14:25:46Z","closedAt":"2018-08-11T04:21:16Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/625","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534091564000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/626","number":626,"title":"commit_based_perftest.md: Fix docstring typo","body":"This fixes the typo and changes the variable name\nfor project from intiatives --> initiatives.\nFixes #620\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-11T10:15:20Z","updatedAt":"2018-08-12T16:32:44Z","closedAt":"2018-08-11T16:16:32Z","state":"merged","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/low","color":"2fe055"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/626","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534011745000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/629","number":629,"title":"Ruby 2.5.1","body":"Updates the site to use jekyll 3.8.3 and html-proofer 3.9.2","comments":5,"createdAt":"2018-08-11T14:58:08Z","updatedAt":"2018-08-11T18:22:25Z","closedAt":"2018-08-11T18:13:00Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/629","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI5MjM0MQ==","url":"https://github.com/coala/projects/pull/629#issuecomment-412292341","bodyText":"reack 218933b","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T18:11:27Z","lastEditedAt":null,"updatedAt":"2018-08-11T18:11:27Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534176100000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/630","number":630,"title":"reports: Add anctartica's GSoC report","body":"https://deploy-preview-630--coala-projects.netlify.com/gsoc/2018/statusreport/saksham","comments":5,"createdAt":"2018-08-11T17:05:43Z","updatedAt":"2018-08-13T16:01:40Z","closedAt":"2018-08-13T15:55:42Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/630","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMjE3NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209432174","bodyText":"see #627 and #615","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored) & [Matt Bodenhamer]\n+ (https://github.com/mbodenhamer) & [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T17:09:27Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:09:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMjIwNg==","url":"https://github.com/coala/projects/pull/630#discussion_r209432206","bodyText":"this was an automated change? if so, discard","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored) & [Matt Bodenhamer]\n+ (https://github.com/mbodenhamer) & [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to \n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+ - GitHub:\n+   - username: anctartica\n+   - link: https://github.com/anctartica\n+ - GitLab:\n+   - username: anctartica\n+   - link: https://gitlab.com/anctartica\n+ - Gitter:\n+   - username: anctartica\n+   - link: https://gitter.im/anctartica\n+ - OpenHub:\n+   - username: anctartica\n+   - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+ - 0:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+   - details: >\n+       Create a proposal regarding the project.\n+ - 1:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+   - details: >\n+       Add appveyor CI.\n+ - 2:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/6b1693d6d5f80e4b95ddae602e079c6095e84c67\n+   - details: >\n+      Mobanise appveyor.\n+ - 3:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/e4fb8c73df71da609341b8d0cc759c0a0060517e\n+   - details: >\n+      Mobanise setup.py.\n+ - 4:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df643c956be169978bdc7189b47916da31880d57\n+   - details: >\n+      Mobanise .gitignore.\n+ - 5:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+   - details: >\n+      Use dependency management master\n+ - 6:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+   - details: >\n+      Fix docopt usage pattern.\n+ - 7:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+   - details: >\n+      Fix incorrect behaviour\n+ - 8:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+   - details: >\n+      Clean up code required for 100% coverage\n+ - 9:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+   - details: >\n+      Add unittests for 100% coverage\n+ - 10:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+   - details: >\n+      Mobanise setup.cfg\n+ - 11:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+   - details: >\n+      Allow showing multiple bears\n+ - 12:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+   - details: >\n+      Remove test_pyversion\n+ - 13:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+   - details: >\n+      Add variable for cache dir on appveyor\n+ - 14:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+   - details: >\n+      Add option for Python 3.6 jobs on all repos\n+ - 15:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+   - details: >\n+      Add __init__.py.jj2 template for exporting version\n+ - 16:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+   - details: >\n+      Remove brackets around string with one item in setup.py template\n+ - 17:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+   - details: >\n+      Run coala static code analysis from Appveyor\n+ - 18:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+   - details: >\n+      Pin setuptool to 21 for supporting environment markers\n+ - 19:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+   - details: >\n+      Use coala-bears master for coala analysis on Appveyor\n+ - 20:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+   - details: >\n+      Create coveragerc template to resolve a bug with coverage on cib\n+ - 21:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+   - details: >\n+      Remove error handling on import for complete test coverage on Appveyor build\n+ - 22:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+   - details: >\n+      use __all__ for exports to prevent failing coala --ci check\n+ - 23:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+   - details: >\n+      Use appveyor template for coala-utils\n+ - 24:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+   - details: >\n+      Improve and cleanup script for generating bear requirements and generate cabal requirements\n+ - 25:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+   - details: >\n+      Move the generate_package script from the coala-bears package to .ci directory\n+ - 26:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+   - details: >\n+      Use CabalRequirement for HaskellLintBear\n+ - 27:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/4422063fa78e6b0e0c801ea845974367baabdb69\n+   - details: >\n+      Run coala static code analysis on repo using appveyor\n+ - 28:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+   - details: >\n+      Add PlatformRequirement class for system specific package managers\n+ - 29:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+   - details: >\n+      Return exitcode after running the install command\n+ - 30:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+   - details: >\n+      Add CabalRequirement for backwards compatibility\n+ - 31:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+   - details: >\n+      Run pip as python module\n+ - 32:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+   - details: >\n+      Add playbook for installing individual bears\n+ - 33:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+   - details: >\n+      Test playbook using docker + Travic CI\n+ - 34:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+   - details: >\n+      Add instructions on using playbook\n+ - 35:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/c82a9737c6852d09f681a7fc98a0f094dd38194b\n+   - details: >\n+      Run coala static code analysis","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T17:10:37Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:10:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMjU3MQ==","url":"https://github.com/coala/projects/pull/630#discussion_r209432571","bodyText":"#630 (comment) not done","diffHunk":"@@ -0,0 +1,249 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T17:24:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T17:24:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzMzU2Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209433562","bodyText":"removed all the automated changes :)","diffHunk":"@@ -0,0 +1,268 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link : https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored) & [Matt Bodenhamer]\n+ (https://github.com/mbodenhamer) & [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+ - Phase 1 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+ - Phase 2 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+ - Phase 3 : https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to \n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+ - GitHub:\n+   - username: anctartica\n+   - link: https://github.com/anctartica\n+ - GitLab:\n+   - username: anctartica\n+   - link: https://gitlab.com/anctartica\n+ - Gitter:\n+   - username: anctartica\n+   - link: https://gitter.im/anctartica\n+ - OpenHub:\n+   - username: anctartica\n+   - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+ - 0:\n+   - repo: cEPs\n+   - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+   - details: >\n+       Create a proposal regarding the project.\n+ - 1:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+   - details: >\n+       Add appveyor CI.\n+ - 2:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/6b1693d6d5f80e4b95ddae602e079c6095e84c67\n+   - details: >\n+      Mobanise appveyor.\n+ - 3:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/e4fb8c73df71da609341b8d0cc759c0a0060517e\n+   - details: >\n+      Mobanise setup.py.\n+ - 4:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df643c956be169978bdc7189b47916da31880d57\n+   - details: >\n+      Mobanise .gitignore.\n+ - 5:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+   - details: >\n+      Use dependency management master\n+ - 6:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+   - details: >\n+      Fix docopt usage pattern.\n+ - 7:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+   - details: >\n+      Fix incorrect behaviour\n+ - 8:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+   - details: >\n+      Clean up code required for 100% coverage\n+ - 9:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+   - details: >\n+      Add unittests for 100% coverage\n+ - 10:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+   - details: >\n+      Mobanise setup.cfg\n+ - 11:\n+   - repo: cib\n+   - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+   - details: >\n+      Allow showing multiple bears\n+ - 12:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+   - details: >\n+      Remove test_pyversion\n+ - 13:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+   - details: >\n+      Add variable for cache dir on appveyor\n+ - 14:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+   - details: >\n+      Add option for Python 3.6 jobs on all repos\n+ - 15:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+   - details: >\n+      Add __init__.py.jj2 template for exporting version\n+ - 16:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+   - details: >\n+      Remove brackets around string with one item in setup.py template\n+ - 17:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+   - details: >\n+      Run coala static code analysis from Appveyor\n+ - 18:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+   - details: >\n+      Pin setuptool to 21 for supporting environment markers\n+ - 19:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+   - details: >\n+      Use coala-bears master for coala analysis on Appveyor\n+ - 20:\n+   - repo: moban\n+   - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+   - details: >\n+      Create coveragerc template to resolve a bug with coverage on cib\n+ - 21:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+   - details: >\n+      Remove error handling on import for complete test coverage on Appveyor build\n+ - 22:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+   - details: >\n+      use __all__ for exports to prevent failing coala --ci check\n+ - 23:\n+   - repo: coala-utils\n+   - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+   - details: >\n+      Use appveyor template for coala-utils\n+ - 24:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+   - details: >\n+      Improve and cleanup script for generating bear requirements and generate cabal requirements\n+ - 25:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+   - details: >\n+      Move the generate_package script from the coala-bears package to .ci directory\n+ - 26:\n+   - repo: coala-bears\n+   - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+   - details: >\n+      Use CabalRequirement for HaskellLintBear\n+ - 27:\n+   - repo: coala\n+   - link: https://github.com/coala/coala/commit/4422063fa78e6b0e0c801ea845974367baabdb69\n+   - details: >\n+      Run coala static code analysis on repo using appveyor\n+ - 28:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+   - details: >\n+      Add PlatformRequirement class for system specific package managers\n+ - 29:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+   - details: >\n+      Return exitcode after running the install command\n+ - 30:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+   - details: >\n+      Add CabalRequirement for backwards compatibility\n+ - 31:\n+   - repo: dependency_management\n+   - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+   - details: >\n+      Run pip as python module\n+ - 32:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+   - details: >\n+      Add playbook for installing individual bears\n+ - 33:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+   - details: >\n+      Test playbook using docker + Travic CI\n+ - 34:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+   - details: >\n+      Add instructions on using playbook\n+ - 35:\n+   - repo: bear-install-playbook\n+   - link: https://gitlab.com/coala/bear-install-playbook/commit/c82a9737c6852d09f681a7fc98a0f094dd38194b\n+   - details: >\n+      Run coala static code analysis","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-11T18:03:46Z","lastEditedAt":null,"updatedAt":"2018-08-11T18:03:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYxMDA2MA==","url":"https://github.com/coala/projects/pull/630#discussion_r209610060","bodyText":"indentation; use yamllint","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:34:20Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:34:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYxMDk3NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209610974","bodyText":"I don't get anything from yamllint on this line","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+ - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-13T13:37:01Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:37:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyMDIyNA==","url":"https://github.com/coala/projects/pull/630#discussion_r209620224","bodyText":"see updates to the example.  needs date, categories, and not layout or permalink, etc.","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:02:09Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:02:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyMDI5Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209620292","bodyText":"yamllint.","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:02:21Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:02:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyMDQ4MQ==","url":"https://github.com/coala/projects/pull/630#discussion_r209620481","bodyText":"you can trim these to 8 character shas.\nup to you","diffHunk":"@@ -0,0 +1,266 @@\n+---\n+layout: report\n+permalink: /GSoC/2018/StatusReport/SakshamBansal\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+ [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+ [Matt Bodenhamer](https://github.com/mbodenhamer),\n+ [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:02:51Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:02:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyODQ4OQ==","url":"https://github.com/coala/projects/pull/630#discussion_r209628489","bodyText":"extracting this I get\ntar: Ignoring unknown extended header keyword 'LIBARCHIVE.creationtime'\ntar: Ignoring unknown extended header keyword 'SCHILY.dev'\ntar: Ignoring unknown extended header keyword 'SCHILY.ino'\ntar: Ignoring unknown extended header keyword 'SCHILY.nlink'\ntar: Ignoring unknown extended header keyword 'SCHILY.dev'\ntar: Ignoring unknown extended header keyword 'SCHILY.ino'\ntar: Ignoring unknown extended header keyword 'SCHILY.nlink'","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:24:46Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:24:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYyODg3Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209628872","bodyText":"Also contains .DS_Store","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:25:41Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:25:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYzMDA1NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209630054","bodyText":"59 patches vs 35 work activity entries.\nI see some patches were ust sync' but I easily see some real work patches which are not included here","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T14:28:40Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:28:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYzMDM1NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209630354","bodyText":"the others were really very small to include","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-08-13T14:29:26Z","lastEditedAt":null,"updatedAt":"2018-08-13T14:29:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY0MzQxNw==","url":"https://github.com/coala/projects/pull/630#discussion_r209643417","bodyText":"alright added some more","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzg0Mjc4Mw==","createdAt":"2018-08-13T15:33:23Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-13T15:01:45Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:01:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY0NDM5NA==","url":"https://github.com/coala/projects/pull/630#discussion_r209644394","bodyText":"This was due to BSD tar (on mac) vs. GNU tar.\nShould be fixed now","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzg0MjkxMg==","createdAt":"2018-08-13T15:35:19Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-13T15:04:24Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:04:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY1NTg4Mg==","url":"https://github.com/coala/projects/pull/630#discussion_r209655882","bodyText":"Small is ok, as long as it isnt automated or silly.","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz\n+sha256sum: f413963583c7e18a5ccb42f21405290edcf79a0f8c61106ff21671efe0b98238\n+mentors: >\n+  [Muhammad Kaisar Arkhan](https://github.com/yukiisbored),\n+  [Matt Bodenhamer](https://github.com/mbodenhamer),\n+  [Andrey Safonov](https://github.com/xferra)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/10\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/11\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/12\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/13\n+bio: >\n+ I'm a sophomore year student studying Computer Science at Netaji Subhash\n+ Institute of Technology, Dehli. I am always looking for opportunities to\n+ put my programming skill to good use by contributing to open source which also\n+ allows me to improve my own skill.\n+social:\n+  - GitHub:\n+      - username: anctartica\n+      - link: https://github.com/anctartica\n+  - GitLab:\n+      - username: anctartica\n+      - link: https://gitlab.com/anctartica\n+  - Gitter:\n+      - username: anctartica\n+      - link: https://gitter.im/anctartica\n+  - OpenHub:\n+      - username: anctartica\n+      - link: https://www.openhub.net/accounts/anctartica\n+email: sakshamb.co.17@nsit.net.in\n+blog: https://medium.com/@sakshamb.co.17\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/ca27c58eef778fd7b3aff3b874b0e58f56e4a559\n+      - details: >\n+          Create a proposal regarding the project.\n+  - 2:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/b9f35115b42b105c550cf53c44a01f1257680697\n+      - details: >\n+          Add appveyor CI.\n+  - 3:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/1e2d7170f4f9eb232c48f4d372d957b3c423d05c\n+      - details: >\n+         Use dependency management master\n+  - 4:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/5e8cffc70834ab7263316a7e1648c037b52e2206\n+      - details: >\n+         Fix docopt usage pattern.\n+  - 5:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/aa5e957018331db0d09099963bad1c2b86d147c5\n+      - details: >\n+         Fix incorrect behaviour\n+  - 6:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/437a8e527d2b64d471d3022996ddf24ab754cb5a\n+      - details: >\n+         Clean up code required for 100% coverage\n+  - 7:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/551516fcd5aac2bf46615d6a7827a7a9e8e7505a\n+      - details: >\n+         Add unittests for 100% coverage\n+  - 8:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/df1ffac4e49eead45e56e8649d1378f62330a2a4\n+      - details: >\n+         Mobanise setup.cfg\n+  - 9:\n+      - repo: cib\n+      - link: https://gitlab.com/coala/cib/commit/139490a906645afb704aa083dfbc26727c2a412f\n+      - details: >\n+         Allow showing multiple bears\n+  - 10:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/3f0557bfe4fca5e9bf99ae0226b091f19f5589ab\n+      - details: >\n+         Remove test_pyversion\n+  - 11:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/943e54125c7d354098ee11370251b0eec4ac81ef\n+      - details: >\n+         Add variable for cache dir on appveyor\n+  - 12:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/a7b8f2ff0f3e68bd56afa98a12d88054d6080ab2\n+      - details: >\n+         Add option for Python 3.6 jobs on all repos\n+  - 13:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/dd81996f93b3a48efe18b907fc2190f40ee11bdd\n+      - details: >\n+         Add template for init file for exporting version\n+  - 14:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/8eaac28f36ed8c48ef2462268b764c7d0f484346\n+      - details: >\n+         Remove brackets around string with one item in setup.py template\n+  - 15:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/c3bfe9a235613fd5701cd55f3e2fc5ea4f9f761c\n+      - details: >\n+         Run coala static code analysis from Appveyor\n+  - 16:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/b10ecd5acdfd1c6fc0cb64a696ca8b40ecc8abc2\n+      - details: >\n+         Pin setuptool to 21 for supporting environment markers\n+  - 17:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/7aeb5b7c197cf3d2f5d7a6ed947bed8a1fcf7078\n+      - details: >\n+         Use coala-bears master for coala analysis on Appveyor\n+  - 18:\n+      - repo: coala-mobans\n+      - link: https://gitlab.com/coala/mobans/commit/431d06caaf60eb45d36688244ed110f90f6a58ec\n+      - details: >\n+         Create coveragerc template to resolve a bug with coverage on cib\n+  - 19:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/43c81871476e14ce0d777129bff8cdfc557be342\n+      - details: >\n+         Remove error handling on import for complete test coverage on Appveyor build\n+  - 20:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/18c91bb2824e6bcb09de14af3ae38ec279b8d9e3\n+      - details: >\n+         use __all__ for exports to prevent failing coala --ci check\n+  - 21:\n+      - repo: coala-utils\n+      - link: https://gitlab.com/coala/coala-utils/commit/25cc5a3178586a1d51d0385eca12a176914a0b8c\n+      - details: >\n+         Use appveyor template for coala-utils\n+  - 22:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/c35a2ed04935fd7665514e6af7828f1bfd931a03\n+      - details: >\n+         Improve and cleanup script for generating bear requirements and generate cabal requirements\n+  - 23:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/26b696969dd38ca1a1ab91163e0154f6c905e252\n+      - details: >\n+         Move the generate_package script from the coala-bears package to .ci directory\n+  - 24:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/efdfbc1cec98db76a5bb2c75fbfa414686be4db8\n+      - details: >\n+         Use CabalRequirement for HaskellLintBear\n+  - 25:\n+      - repo: coala-bears\n+      - link: https://github.com/coala/coala-bears/commit/e62d16f8315e4dcd10c9c57af3ab3e5973b10d73\n+      - details: >\n+         Add language setting for ESLintBear using various plugins for eslint\n+  - 26:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Add GherkinLintBear\n+  - 27:\n+      - repo: coala-bears\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add BashateBear\n+  - 28:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/75b3c37f7ffd7b6c9f693d131bf4f627fd95373d\n+      - details: >\n+         Add PlatformRequirement class for system specific package managers\n+  - 29:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/a786450e5cdfd3172caf86c60786c0d1ce6ee10f\n+      - details: >\n+         Return exitcode after running the install command\n+  - 30:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/868afe0dcdf6ab0c964f1ce72152fedb132f44cb\n+      - details: >\n+         Add CabalRequirement for backwards compatibility\n+  - 31:\n+      - repo: dependency_management\n+      - link: https://gitlab.com/coala/package_manager/commit/995b50ba1861296d333442be9e16ba2b1c4a47b6\n+      - details: >\n+         Run pip as python module\n+  - 32:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7ba1c3ef9c29dc58a1c5b0109328317f3b0924df\n+      - details: >\n+         Add playbook for installing individual bears\n+  - 33:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/1b288844aa157ff4e8c80a3179c5d58163a2719f\n+      - details: >\n+         Test playbook using docker + Travic CI\n+  - 34:\n+      - repo: bear-install-playbook\n+      - link: https://gitlab.com/coala/bear-install-playbook/commit/7dee7591927c0883269f5741102b90bfb93f84ff\n+      - details: >\n+         Add instructions on using playbook\n+  - 35:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T15:34:06Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:34:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY1NjYzMw==","url":"https://github.com/coala/projects/pull/630#discussion_r209656633","bodyText":"Still has one .DS_Store in it, but good enough","diffHunk":"@@ -0,0 +1,269 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Saksham Bansal\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Improve installation of coala and coala-bears\n+project_link: https://summerofcode.withgoogle.com/projects/#4642118669172736\n+tarball: https://rawgit.com/anctartica/GSoC-Report/master/work.tar.gz","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T15:36:11Z","lastEditedAt":null,"updatedAt":"2018-08-13T15:36:11Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534081505000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/631","number":631,"title":"reports/example.md: Update GSoC report template","body":"Following changes have been made to the GSoC report template:\n\n Add openhub account\n Add report_year\n Add tarball_hash\n Fix Indentation\n Activities should start at one\n\nCloses: #615","comments":19,"createdAt":"2018-08-12T06:51:38Z","updatedAt":"2018-08-12T13:45:05Z","closedAt":"2018-08-12T10:01:40Z","state":"merged","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/631","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NDkyOQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209444929","bodyText":"gitlab --> GitLab, gitter --> Gitter, hackerrank --> HackerRank, openhub --> OpenHub","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5Nzk4OA==","createdAt":"2018-08-12T07:03:36Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yNzc5ODEyNQ==","createdAt":"2018-08-12T07:18:21Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T06:58:29Z","lastEditedAt":null,"updatedAt":"2018-08-12T06:58:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTA3Mg==","url":"https://github.com/coala/projects/pull/631#discussion_r209445072","bodyText":"it has become named sha256sum:","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODA4Nw==","createdAt":"2018-08-12T07:14:00Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T07:03:23Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:03:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTE0Ng==","url":"https://github.com/coala/projects/pull/631#discussion_r209445146","bodyText":"do a few example entries.\nand the link should include a hash which is only 8 long.\nhttps://github.com/coala/cEPs/commit/e9f75878\nnot\nhttps://github.com/coala/cEPs/commit/e9f7587856e1c236d37e96f54a0cb4d72069776d\nto avoid line length errors","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:\n+    - username: <gitlab username>\n+    - link: https://gitlab.com/<gitlab username>\n+  - gitter:\n+    - username: <gitter username>\n+    - link: https://gitter.im/<gitter username>\n+  - hackerrank:\n+    - username: <hackerrank username>\n+    - link: https://hackerrank.com/<hackerrank username>\n+  - openhub:\n+    - username: <openhub username>\n+    - link: https://openhub.net/accounts/<openhub username>\n email: <email>\n blog: <link to your blog>\n activity:\n- - <number>:\n-   - repo: <repo name>\n-   - link: <link>\n-   - details: >\n+  - <number>:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODExMw==","createdAt":"2018-08-12T07:16:26Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T07:06:17Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:06:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTQzNw==","url":"https://github.com/coala/projects/pull/631#discussion_r209445437","bodyText":"Nice idea! Done!","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:\n+    - username: <gitlab username>\n+    - link: https://gitlab.com/<gitlab username>\n+  - gitter:\n+    - username: <gitter username>\n+    - link: https://gitter.im/<gitter username>\n+  - hackerrank:\n+    - username: <hackerrank username>\n+    - link: https://hackerrank.com/<hackerrank username>\n+  - openhub:\n+    - username: <openhub username>\n+    - link: https://openhub.net/accounts/<openhub username>\n email: <email>\n blog: <link to your blog>\n activity:\n- - <number>:\n-   - repo: <repo name>\n-   - link: <link>\n-   - details: >\n+  - <number>:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T07:17:24Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:17:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NTUxNA==","url":"https://github.com/coala/projects/pull/631#discussion_r209445514","bodyText":"Thanks, done!","diffHunk":"@@ -8,36 +8,41 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+tarball_hash: <shasum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - gitlab:","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T07:19:42Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:19:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NjUwNw==","url":"https://github.com/coala/projects/pull/631#discussion_r209446507","bodyText":"no space before :. YAMLlintbear will complain about that.","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODgyNQ==","createdAt":"2018-08-12T08:33:17Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T07:55:52Z","lastEditedAt":null,"updatedAt":"2018-08-12T07:55:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0Njc1OA==","url":"https://github.com/coala/projects/pull/631#discussion_r209446758","bodyText":"There should be 6 spaces before - username, not 4. Otherwise, YAMLlintbear will complain.\nSee https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODgzMA==","createdAt":"2018-08-12T08:33:39Z","content":"LAUGH","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T08:04:20Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:04:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NjgwMw==","url":"https://github.com/coala/projects/pull/631#discussion_r209446803","bodyText":"Same as above.","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>\n+    - link: https://github.com/<github username>\n+  - GitLab:\n+    - username: <gitlab username>\n+    - link: https://gitlab.com/<gitlab username>\n+  - Gitter:\n+    - username: <gitter username>\n+    - link: https://gitter.im/<gitter username>\n+  - HackerRank:\n+    - username: <hackerrank username>\n+    - link: https://hackerrank.com/<hackerrank username>\n+  - OpenHub:\n+    - username: <openhub username>\n+    - link: https://openhub.net/accounts/<openhub username>\n email: <email>\n blog: <link to your blog>\n activity:\n- - <number>:\n-   - repo: <repo name>\n-   - link: <link>\n-   - details: >\n+  - 1:\n+    - repo: cEPs","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODgyOQ==","createdAt":"2018-08-12T08:33:36Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T08:05:56Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:05:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NjgyOQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209446829","bodyText":"milstone was a typo, and you copied that without detecting typo ;)","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5ODg0Mw==","createdAt":"2018-08-12T08:35:28Z","content":"LAUGH","user":{"login":"RJ722","name":"Rahul Jha"}}],"createdAt":"2018-08-12T08:06:44Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:06:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NzU1MA==","url":"https://github.com/coala/projects/pull/631#discussion_r209447550","bodyText":"Wow, that is super weird. :P","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>\n bio: >\n- <your bio goes here>\n+  <your bio goes here>\n social:\n- - GitHub:\n-   - username: <github username>\n-   - link: https://github.com/<github username>\n- - GitLab:\n-   - username: <gitlab username>\n-   - link: https://gitlab.com/<gitlab username>\n- - Gitter:\n-   - username: <gitter username>\n-   - link: https://gitter.im/<gitter username>\n- - HackerRank:\n-   - username: <hackerrank username>\n-   - link: https://hackerrank.com/<hackerrank username>\n+  - GitHub:\n+    - username: <github username>","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:33:32Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:33:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0NzYwMQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209447601","bodyText":"Ah, it's beyond me how you guys can actually figure out a typo in the whole english mess. ':D","diffHunk":"@@ -8,36 +8,46 @@ organisation: coala\n organisation_link : https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milstone link>","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:34:54Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:34:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0Nzc1OQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209447759","bodyText":"milsetone together with above two is also a typo :P","diffHunk":"@@ -5,40 +5,50 @@ layout: report\n permalink: /GSoC/2017/StatusReport/<name>\n student: <name>\n organisation: coala\n-organisation_link : https://coala.io\n+organisation_link: https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milestone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-12T08:39:42Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:39:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ0Nzk3MQ==","url":"https://github.com/coala/projects/pull/631#discussion_r209447971","bodyText":"Holy smokes!","diffHunk":"@@ -5,40 +5,50 @@ layout: report\n permalink: /GSoC/2017/StatusReport/<name>\n student: <name>\n organisation: coala\n-organisation_link : https://coala.io\n+organisation_link: https://coala.io\n project: <project title>\n project_link: <project link>\n+report_year: <year of completing GSoC>\n tarball: <tarball of patches' link>\n+sha256sum: <sha256sum of tarball>\n mentors: >\n- [mentor1]<link1> & [mentor2]<link2>\n+  [mentor1]<link1> & [mentor2]<link2>\n phase:\n- - Bonding : <bonding milstone link>\n- - Phase 1 : <phase1 milsetone link>\n- - Phase 2 : <phase2 milsetone link>\n- - Phase 3 : <phase3 milsetone link>\n+  - Bonding : <bonding milestone link>\n+  - Phase 1 : <phase1 milsetone link>\n+  - Phase 2 : <phase2 milsetone link>\n+  - Phase 3 : <phase3 milsetone link>","author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:46:22Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:46:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyNjcwNw==","url":"https://github.com/coala/projects/pull/631#issuecomment-412326707","bodyText":"Your commit message doesn't include the issue link","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5OTQ0Mg==","createdAt":"2018-08-12T09:31:23Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T08:16:50Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:16:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyNzY4Mg==","url":"https://github.com/coala/projects/pull/631#issuecomment-412327682","bodyText":"Oops, updating it. Thanks for the review @li-boxuan :-)","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[],"createdAt":"2018-08-12T08:35:16Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:35:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyODMwNg==","url":"https://github.com/coala/projects/pull/631#issuecomment-412328306","bodyText":"There is a redundant : in your commit message - Closes: should be Closes\n\nI don't know why, but I have always used the : :D","diffHunk":null,"author":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4","name":"Rahul Jha"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5OTQ0NA==","createdAt":"2018-08-12T09:31:28Z","content":"THUMBS_DOWN","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T08:48:17Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:48:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMyODUyOQ==","url":"https://github.com/coala/projects/pull/631#issuecomment-412328529","bodyText":"I don't know why, but I have always used the :\n\nI would suggest sticking to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html, but it's your choice.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc5OTA2NQ==","createdAt":"2018-08-12T08:56:41Z","content":"THUMBS_UP","user":{"login":"RJ722","name":"Rahul Jha"}},{"id":"MDg6UmVhY3Rpb24yNzc5OTQ0OA==","createdAt":"2018-08-12T09:31:36Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-12T08:52:35Z","lastEditedAt":null,"updatedAt":"2018-08-12T08:52:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMzMDIzMw==","url":"https://github.com/coala/projects/pull/631#issuecomment-412330233","bodyText":"The colon is wrong, and should not be used, but this is too critical to wait","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T09:29:06Z","lastEditedAt":null,"updatedAt":"2018-08-12T09:29:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMzMDUyNw==","url":"https://github.com/coala/projects/pull/631#issuecomment-412330527","bodyText":"Also wasnt rebased, so I've fixed the commit message","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T09:35:53Z","lastEditedAt":null,"updatedAt":"2018-08-12T09:35:53Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534169054000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/632","number":632,"title":"reports: Add ksdme's GSoC report","body":"https://deploy-preview-632--coala-projects.netlify.com/gsoc/2018/statusreport/ksdme","comments":12,"createdAt":"2018-08-12T10:43:17Z","updatedAt":"2018-08-13T14:04:14Z","closedAt":"2018-08-13T13:58:12Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/632","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MjkzNA==","url":"https://github.com/coala/projects/pull/632#discussion_r209452934","bodyText":"blocked on coala/coala-vs-code#73 getting merged  -- those commit references will disappear on a rebase, so you can not use them.","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 4:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 5:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7\n+      - details: >\n+         .vscode-client: Drop vscode client\n+\n+  - 6:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/6bbad87389004b872affdd6e13e7b079e81b2108\n+      - details: >\n+         tests: Add test helpers and resources\n+\n+  - 7:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/5d4c230cd1a819572d423a5ba90a537d0ca1b91c\n+      - details: >\n+         coalals.utils.log: Add log configuration\n+\n+  - 8:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/3e7defd3b78e2b5a93fedc856cf871bd0f691d52\n+      - details: >\n+         coalals.interface: Add initial coala wrapper\n+\n+  - 9:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/f10159391befe2f184c453183932e5e3747a2c34\n+      - details: >\n+         coalals.results: Add result processing module\n+\n+  - 10:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/9e8473120d2ea998e6b4b1e2e6812e2ff6a56505\n+      - details: >\n+         coalals.langserver: Add language server module\n+\n+  - 11:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/1a5f1c0b71afc1ff0f8455ddc43d89bff20f8436\n+      - details: >\n+         coalals.main: Add main.py\n+\n+  - 12:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/5c5f87f50fe4d61a1fd921a7d03801b669c0ea03\n+      - details: >\n+         test-requirements.txt: Update test requirements\n+\n+  - 13:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/8c64f2af8176f1590be6b7d227d0d62bf28912fd\n+      - details: >\n+         requirements.txt: Update requirements\n+\n+  - 14:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/d56adf2e2c7ef5d2a17ecd47748b35d27291f51c\n+      - details: >\n+         Update test configuration\n+\n+  - 15:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/2/commits/c60a565ef8392bbda571049e29109bdfd231de26\n+      - details: >\n+         coala-ls.sh: Add coala-ls.sh\n+\n+  - 16:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/8/commits/cee8c2c7c047999d639b03802e0e3c0f029e169e\n+      - details: >\n+         README: Update README.md and assets\n+\n+  - 17:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/9/commits/ef8dc592c80d629d90c0596bb1a2be3df75c7b40\n+      - details: >\n+         .coafile: Update config and globs\n+\n+  - 18:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/11/commits/8d7f8d05e506b252179c92335f98cb365102a405\n+      - details: >\n+         perf-metrics.md: Add performance metrics\n+\n+  - 19:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/32fe61caa96d8a039cb532bb46eb1ed8e10cbfb4\n+      - details: >\n+          coalals.results: Refactor to submodule\n+\n+  - 20:\n+    - repo: coala-ls\n+    - link: https://github.com/coala/coala-ls/pull/13/commits/e9745d34b9705787bad41df12a1801eee4cfab7e\n+    - details: >\n+        requirements.txt: coalals.utils.files: Add get_disk_contents()\n+\n+  - 21:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/88d79837106185382d3feadc8c9330f219ea271e\n+      - details: >\n+         requirements.txt: Add whatthepatch\n+\n+  - 22:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         coalals.results.fixes: Add fixes parsing & lsp models\n+\n+  - 23:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 24:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/8e75ead740fac57b461bb12497db4147f78d4d19\n+      - details: >\n+         coalals.langserver: Add support for textDocument/formatting\n+\n+  - 25:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/14/commits/99c0663b0177bba30a4b8025615530d15e4d441b\n+      - details: >\n+         coalals.langserver: Add support for showMessageRequest\n+\n+  - 26:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 27:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/13/commits/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 28:\n+      - repo: coala-ls\n+      - link: https://github.com/coala/coala-ls/pull/15/commits/6e095ca6c18813878766e9767d99a4bec10ec4a8\n+      - details: >\n+         perf-metrics.md: Update perf-metrics for Phase-2\n+\n+  - 29:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/73/commits/52319c23e653850df148b284882fce799724c32c","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T12:07:52Z","lastEditedAt":null,"updatedAt":"2018-08-12T12:07:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3MzgxOQ==","url":"https://github.com/coala/projects/pull/632#discussion_r209473819","bodyText":"not suitable for the report","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 4:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:32:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:32:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3MzgzNg==","url":"https://github.com/coala/projects/pull/632#discussion_r209473836","bodyText":"not suitable for the report","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 4:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 5:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T00:32:56Z","lastEditedAt":null,"updatedAt":"2018-08-13T00:32:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NDk5OA==","url":"https://github.com/coala/projects/pull/632#discussion_r209484998","bodyText":"use coala/coala-vs-code@bd12657 to be consistent with the others.","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:29:44Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:29:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NTA4OQ==","url":"https://github.com/coala/projects/pull/632#discussion_r209485089","bodyText":"merged as coala/cEPs@07a63ec  -- use short shas to keep line lengths under 80","diffHunk":"@@ -0,0 +1,403 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         [Bonding Period Work] coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/pull/171","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:30:37Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:30:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMDMzMw==","url":"https://github.com/coala/projects/pull/632#discussion_r209600333","bodyText":"can stay in your tarball, but doesnt belong in your activity repo.","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:05:32Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:05:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMDUwNw==","url":"https://github.com/coala/projects/pull/632#discussion_r209600507","bodyText":"can stay in your tarball, but doesnt belong in your activity repo.","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 7:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:06:03Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:06:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMDk0MA==","url":"https://github.com/coala/projects/pull/632#discussion_r209600940","bodyText":"can stay in your patches, but doesnt belong in the activity report","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 7:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7\n+      - details: >\n+         .vscode-client: Drop vscode client\n+\n+  - 8:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6bbad87389004b872affdd6e13e7b079e81b2108\n+      - details: >\n+         tests: Add test helpers and resources\n+\n+  - 9:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5d4c230cd1a819572d423a5ba90a537d0ca1b91c\n+      - details: >\n+         coalals.utils.log: Add log configuration\n+\n+  - 10:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/3e7defd3b78e2b5a93fedc856cf871bd0f691d52\n+      - details: >\n+         coalals.interface: Add initial coala wrapper\n+\n+  - 11:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/f10159391befe2f184c453183932e5e3747a2c34\n+      - details: >\n+         coalals.results: Add result processing module\n+\n+  - 12:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/9e8473120d2ea998e6b4b1e2e6812e2ff6a56505\n+      - details: >\n+         coalals.langserver: Add language server module\n+\n+  - 13:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/1a5f1c0b71afc1ff0f8455ddc43d89bff20f8436\n+      - details: >\n+         coalals.main: Add main.py\n+\n+  - 14:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5c5f87f50fe4d61a1fd921a7d03801b669c0ea03\n+      - details: >\n+         test-requirements.txt: Update test requirements\n+\n+  - 15:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8c64f2af8176f1590be6b7d227d0d62bf28912fd\n+      - details: >\n+         requirements.txt: Update requirements\n+\n+  - 16:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/d56adf2e2c7ef5d2a17ecd47748b35d27291f51c\n+      - details: >\n+         Update test configuration\n+\n+  - 17:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/c60a565ef8392bbda571049e29109bdfd231de26\n+      - details: >\n+         coala-ls.sh: Add coala-ls.sh\n+\n+  - 18:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/cee8c2c7c047999d639b03802e0e3c0f029e169e\n+      - details: >\n+         README: Update README.md and assets\n+\n+  - 19:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/ef8dc592c80d629d90c0596bb1a2be3df75c7b40\n+      - details: >\n+         .coafile: Update config and globs\n+\n+  - 20:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8d7f8d05e506b252179c92335f98cb365102a405\n+      - details: >\n+         perf-metrics.md: Add performance metrics\n+\n+  - 21:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/32fe61caa96d8a039cb532bb46eb1ed8e10cbfb4\n+      - details: >\n+         coalals.results: Refactor to submodule\n+\n+  - 22:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         requirements.txt: coalals.utils.files: Add get_disk_contents()\n+\n+  - 23:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/88d79837106185382d3feadc8c9330f219ea271e\n+      - details: >\n+         requirements.txt: Add whatthepatch\n+\n+  - 24:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         coalals.results.fixes: Add fixes parsing & lsp models\n+\n+  - 25:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 26:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8e75ead740fac57b461bb12497db4147f78d4d19\n+      - details: >\n+         coalals.langserver: Add support for textDocument/formatting\n+\n+  - 27:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/99c0663b0177bba30a4b8025615530d15e4d441b\n+      - details: >\n+         coalals.langserver: Add support for showMessageRequest\n+\n+  - 28:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 29:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 30:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6e095ca6c18813878766e9767d99a4bec10ec4a8\n+      - details: >\n+         perf-metrics.md: Update perf-metrics for Phase-2\n+\n+  - 31:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/6648e76bd6374ee826fdbf0a2aafa800d6c101bb\n+      - details: >\n+         Fix single line docstring\n+\n+  - 32:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/de0098b2c7c1b5593fd39fdcdeb98fa24c755a2e\n+      - details: >\n+         .codecov.yml: Increase test coverage target\n+\n+  - 33:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         Update to jsonrpc lib\n+\n+  - 34:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/a0b59d36c33ae537b33ffd01d0f1a383ce1cdd57\n+      - details: >\n+         README.md: Update README.md\n+\n+  - 35:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/2618f470e509a129e05f29ebf6cd9a7f300e9867","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgzMzg0Nw==","createdAt":"2018-08-13T13:15:05Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-13T13:07:25Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:07:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTYwMTA1MQ==","url":"https://github.com/coala/projects/pull/632#discussion_r209601051","bodyText":"can stay in your patches, but doesnt belong in the activity report","diffHunk":"@@ -0,0 +1,444 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+date: 2018-08-12\n+student: Kilari Teja\n+organisation: coala\n+organisation_link: https://coala.io\n+report_year: 2018\n+project: coala language server\n+project_link: https://summerofcode.withgoogle.com/projects/#4971369184362496\n+tarball: https://github.com/ksdme/GSoCReport/raw/master/ksdme_coala.tar.gz\n+sha256sum: 71985d45fbf7648029ac14541b7012d5ff51bcc0e9b2ebf7032a3f69f3ce5b1a\n+mentors: >\n+  [Ce Gao](https://github.com/gaocegege) &\n+  [Nicholas Gates](https://github.com/gatesn) &\n+  [Nalin Bhardwaj](https://github.com/nalinbhardwaj)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/47\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/48\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/49\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/50\n+bio: >\n+  I am Kilari Teja, a final year student of Computer Science Engineering at\n+  Guru Gobind Singh Indraprastha University, located in Delhi, India. I have\n+  been a GSoC'18 student for [coala](http://coala.io) working on bringing\n+  coala to code editors via language server protocol. My projects makes it\n+  possible for linting and fixing code to be performed right from the code\n+  editor using coala.\n+social:\n+  - GitHub:\n+      - username: ksdme\n+      - link: https://github.com/ksdme\n+  - GitLab:\n+      - username: ksdme\n+      - link: https://gitlab.com/ksdme\n+  - Gitter:\n+      - username: ksdme\n+      - link: https://gitter.im/ksdme\n+  - OpenHub:\n+      - username: ksdme\n+      - link: https://www.openhub.net/accounts/ksdme\n+email: ksdme9@gmail.com\n+blog: http://medium.com/ksdme-coala-and-gsoc\n+activity:\n+\n+  - 1:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/10d706aa14325147caacd053e20c4fb77af56376\n+      - details: >\n+         coala_language_server.md: Update project details\n+\n+  - 2:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/07a63ec9661b1d32f7fc7002bf14f74cfc77447e\n+      - details: >\n+         cEP-0028: Optimizing coala for language server\n+\n+  - 3:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/bb881df7bb17ce997de0c37d2ac31b9ee749d745\n+      - details: >\n+         cEP-0028: Fix wiki link template\n+\n+  - 4:\n+      - repo: solar/shortlinks\n+      - link: https://gitlab.com/coala/solar/shortlinks/commit/ebfd0492fc9b424db9af1b635453ea3701b9f097\n+      - details: >\n+         Fix misconfigured endpoints\n+  - 5:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/pull/32/commits/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         [Bonding Period Work] langserver.py: Update to use jsonrpc\n+\n+  - 6:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/305a441742f109166bcae241e10b101ad5d908c9\n+      - details: >\n+         coala_langserver: Drop codebase and tests\n+\n+  - 7:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/b1f5ae490fbafe06a14dcb34fa5578e2fbb118a7\n+      - details: >\n+         .vscode-client: Drop vscode client\n+\n+  - 8:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6bbad87389004b872affdd6e13e7b079e81b2108\n+      - details: >\n+         tests: Add test helpers and resources\n+\n+  - 9:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5d4c230cd1a819572d423a5ba90a537d0ca1b91c\n+      - details: >\n+         coalals.utils.log: Add log configuration\n+\n+  - 10:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/3e7defd3b78e2b5a93fedc856cf871bd0f691d52\n+      - details: >\n+         coalals.interface: Add initial coala wrapper\n+\n+  - 11:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/f10159391befe2f184c453183932e5e3747a2c34\n+      - details: >\n+         coalals.results: Add result processing module\n+\n+  - 12:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/9e8473120d2ea998e6b4b1e2e6812e2ff6a56505\n+      - details: >\n+         coalals.langserver: Add language server module\n+\n+  - 13:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/1a5f1c0b71afc1ff0f8455ddc43d89bff20f8436\n+      - details: >\n+         coalals.main: Add main.py\n+\n+  - 14:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/5c5f87f50fe4d61a1fd921a7d03801b669c0ea03\n+      - details: >\n+         test-requirements.txt: Update test requirements\n+\n+  - 15:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8c64f2af8176f1590be6b7d227d0d62bf28912fd\n+      - details: >\n+         requirements.txt: Update requirements\n+\n+  - 16:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/d56adf2e2c7ef5d2a17ecd47748b35d27291f51c\n+      - details: >\n+         Update test configuration\n+\n+  - 17:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/c60a565ef8392bbda571049e29109bdfd231de26\n+      - details: >\n+         coala-ls.sh: Add coala-ls.sh\n+\n+  - 18:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/cee8c2c7c047999d639b03802e0e3c0f029e169e\n+      - details: >\n+         README: Update README.md and assets\n+\n+  - 19:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/ef8dc592c80d629d90c0596bb1a2be3df75c7b40\n+      - details: >\n+         .coafile: Update config and globs\n+\n+  - 20:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8d7f8d05e506b252179c92335f98cb365102a405\n+      - details: >\n+         perf-metrics.md: Add performance metrics\n+\n+  - 21:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/32fe61caa96d8a039cb532bb46eb1ed8e10cbfb4\n+      - details: >\n+         coalals.results: Refactor to submodule\n+\n+  - 22:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         requirements.txt: coalals.utils.files: Add get_disk_contents()\n+\n+  - 23:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/88d79837106185382d3feadc8c9330f219ea271e\n+      - details: >\n+         requirements.txt: Add whatthepatch\n+\n+  - 24:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/e9745d34b9705787bad41df12a1801eee4cfab7e\n+      - details: >\n+         coalals.results.fixes: Add fixes parsing & lsp models\n+\n+  - 25:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 26:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/8e75ead740fac57b461bb12497db4147f78d4d19\n+      - details: >\n+         coalals.langserver: Add support for textDocument/formatting\n+\n+  - 27:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/99c0663b0177bba30a4b8025615530d15e4d441b\n+      - details: >\n+         coalals.langserver: Add support for showMessageRequest\n+\n+  - 28:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 29:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/7b4d59d0422be7017dc5fa14a4a7879bc5361c63\n+      - details: >\n+         coalals.results.diagnostics: Support fixes collection\n+\n+  - 30:\n+      - repo: coala-ls-gsoc\n+      - link: https://github.com/ksdme/coala-ls-gsoc/commit/6e095ca6c18813878766e9767d99a4bec10ec4a8\n+      - details: >\n+         perf-metrics.md: Update perf-metrics for Phase-2\n+\n+  - 31:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/6648e76bd6374ee826fdbf0a2aafa800d6c101bb\n+      - details: >\n+         Fix single line docstring\n+\n+  - 32:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/de0098b2c7c1b5593fd39fdcdeb98fa24c755a2e\n+      - details: >\n+         .codecov.yml: Increase test coverage target\n+\n+  - 33:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/bd12657c67b257ed4b0f498c14cab389f96cc91a\n+      - details: >\n+         Update to jsonrpc lib\n+\n+  - 34:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/a0b59d36c33ae537b33ffd01d0f1a383ce1cdd57\n+      - details: >\n+         README.md: Update README.md\n+\n+  - 35:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/2618f470e509a129e05f29ebf6cd9a7f300e9867\n+      - details: >\n+         Clean Repository\n+\n+  - 36:\n+      - repo: coala-vs-code\n+      - link: https://github.com/coala/coala-vs-code/commit/9a9ace96b7bb498d6521f1e2b8944290ed3d331f","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgzMzg0NQ==","createdAt":"2018-08-13T13:15:03Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-13T13:07:48Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:07:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjMzNTMxNg==","url":"https://github.com/coala/projects/pull/632#issuecomment-412335316","bodyText":"Preview: https://deploy-preview-632--coala-projects.netlify.com/gsoc/2018/statusreport/ksdme","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-12T11:07:11Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:07:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjUxNjA5NQ==","url":"https://github.com/coala/projects/pull/632#issuecomment-412516095","bodyText":"WIP","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-13T13:22:51Z","lastEditedAt":"2018-08-13T13:39:34Z","updatedAt":"2018-08-13T13:39:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjUyMTE4Nw==","url":"https://github.com/coala/projects/pull/632#issuecomment-412521187","bodyText":"needs rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T13:39:16Z","lastEditedAt":null,"updatedAt":"2018-08-13T13:39:16Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534073904000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/633","number":633,"title":"Create reports collection","body":"This provides automatic permalinks matching\nthose used in 2017.  The file name is used\nas the final component.\nThe added categories are not used, as jekyll\nconverts them to lower-case which breaks existing\nURLs.\nRelated to #359","comments":5,"createdAt":"2018-08-12T11:22:09Z","updatedAt":"2018-08-12T11:38:24Z","closedAt":"2018-08-12T11:34:51Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/633","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1MjA0Ng==","url":"https://github.com/coala/projects/pull/633#discussion_r209452046","bodyText":"whoops.  this should also include above this date: 2018-08-12","diffHunk":"@@ -1,8 +1,10 @@\n <!--\n \n ---\n-layout: report\n-permalink: /GSoC/2017/StatusReport/<name>\n+categories:\n+  - GSoC\n+  - <year of completing GSoC>\n+  - StatusReport\n student: <name>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-12T11:38:23Z","lastEditedAt":null,"updatedAt":"2018-08-12T11:38:23Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534086347000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/634","number":634,"title":".coafile: Ignore _reports dir","body":"Ignore _reports directory from\nfilenames section.","comments":9,"createdAt":"2018-08-12T13:55:05Z","updatedAt":"2018-08-12T15:05:47Z","closedAt":"2018-08-12T14:44:38Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/634","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534154056000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/635","number":635,"title":"reports: Add palash25.md","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":16,"createdAt":"2018-08-12T19:10:50Z","updatedAt":"2018-08-13T09:54:16Z","closedAt":"2018-08-13T09:48:09Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/635","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NTU3Ng==","url":"https://github.com/coala/projects/pull/635#discussion_r209475576","bodyText":"remove this paragraph.\nWork to be done is not about you doing the work; it is just stuff which is left over.\nWhile we hope you'll continue, this work report is the end of your commitment.","diffHunk":"@@ -0,0 +1,187 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: \n+sha256sum: \n+mentors: >\n+  [Mischa Krüger](https://github.com/Makman2),\n+  [Shreyans Doshi](https://github.com/shreyans800755),\n+  [Fabian Neuschmidt](https://github.com/fneu)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/32\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/33\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/34\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/35\n+bio: >\n+  I am second year student of B.Tech Computer Science and Engineering at\n+  International Institute of Information and Technology, Bhubaneswar,\n+  Odisha, India. I worked as a GSoC student under coala to improve coala's\n+  I/O mechanism using `FileFactory` class and adding features to provide\n+  more support for NextGen-Core's caching mechanism.\n+social:\n+  - GitHub:\n+      - username: palash25\n+      - link: https://github.com/palash25\n+  - GitLab:\n+      - username: palash25\n+      - link: https://gitlab.com/palash25\n+  - Gitter:\n+      - username: palash25\n+      - link: https://gitter.im/palash25\n+  - Openhub:\n+      - username: palash25\n+      - link: https://www.openhub.net/accounts/palash25\n+email: npalash25@gmail.com\n+blog: https://medium.com/gsoc-with-coala/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/7272ff6b9463a5cff33c431f73a416e5a999f4ac\n+      - details: >\n+         cEP-0026.md: Adds optimize caching cEP.\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a228c2b39ef17b3c6d3572853601dfa05b938173\n+      - details: >\n+         Updated the details of Optimize Caching project.\n+  - 3:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/759f74f88206c58ac80dd7acd12cadbae13f28cb\n+      - details: >\n+         optimize_caching.md: Changed primary mentor from adtac to Makman2.\n+  - 4:\n+      - repo: devops\n+      - link: https://github.com/coala/devops/commit/e309383bc5aacb007c4986bd74197238a4fcc96d\n+      - details: >\n+         planet.ini: Add palash25 gsoc blog feed.\n+  - 5:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/b06dfe44fa99ffeb997f6f0a4bf302938fb9734c\n+      - details: >\n+         Added `FileFactory` class. Objects of this class are used\n+         to represent files and replace file contents in the file dict.\n+  - 6:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/77c1dca15dc82d1753aa0962017899392d0033ec\n+      - details: >\n+         Added `Directory` class. This class will act as an interface\n+         to directories providing useful information about them. The\n+         objects of this class can be used by bears that operate only\n+         on directories and perform analysis based on the things like\n+         directory structure.\n+  - 7:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fc568a01ba489376b4d6efac12ea772cb3cb1573\n+      - details: >\n+         Added `memoized_property`. `memoized_property` is a decorator\n+         that caches the properties of `FileFactory` class.\n+  - 8:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/81bbca42f82319aed22ba7f90781d886d559d4dd\n+      - details: >\n+         NextGen_Core.rst: Update caching section. \n+  - 9:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         IO.rst: Add FileFactory docs.\n+  - 10:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         NextGen_Core.rst: Add link to IO docs.\n+  - 11:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/54622c2b03e1b84bb122130af182424d706d3de4\n+      - details: >\n+         `FileFactory`: Use `cached_property` instead of `memoized_property`.\n+  - 12:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/415361f5a4c12cd65dd4cc171d2a8ebbba3bc92c\n+      - details: >\n+         A new attribute `newline` was added to `FileFactory` to force\n+         newlines on the file content.\n+  - 13:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fbe8452360eb39340ace4334c2df133a1ee6de97\n+      - details: >\n+         Processing: Add middleware `FileDict` that provides the bears\n+         with the actual file contents instead of the `FileFactory` objects.\n+  - 14:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/e138e4875fc6d1474a93758881f550e05df8e329\n+      - details: >\n+         Processing: Modify tests to use actual files instead of hard coded\n+         tuples as file content.\n+  - 15:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/3ae03bec665943aa6173047245ca929a0a754c69\n+      - details: >\n+         Added support for collection types like `dict` and `set` for\n+         `persistent_hash`.\n+---\n+\n+### Optimize Caching for the NextGen-Core\n+\n+#### Work Done\n+\n+1. Improved I/O mechanism for coala.\n+   1. Added a class `FileFactory` to interface with files and to provide file\n+      contents in different forms like string, binary data or as a tuple.\n+   2. Added a `Directory` class to interface with directories and provide\n+      useful information about them such as the directory path, parent\n+      directory and timestamps. This will be later used to implement ignore\n+      directories functionality.\n+   3. Added documentation for `FileFactory` and improved the NextGen-Core\n+      docs.\n+\n+2. Caching support.\n+   1. Cached the properties of `FileFactory` which turned out to be a\n+      significant performance boost in consecutive coala runs.\n+   2. Added support for unordered collection types in `persistent_hash`\n+      which improved the NextGen-Core's ability to hash much more\n+      complex task objects (which are used in NextGen caching).\n+\n+3. Integrated `FileFactory` with the core.\n+   1. Added line endings support for `FileFactory`.\n+   2. Implemented a middleware `FileDict` that mimics a dictionary\n+      and provides the bears in the old core with the actual file\n+      contents instead of the `FileFactory` objects thereby maintaining\n+      backwards compatibility with the old core.\n+   3. Modified the tests to use actual files and the `FileFactory` objects\n+      instead of hard-coded file contents.\n+\n+#### Challenges\n+\n+One of the first challenges I faced was designing the `FileFactory`.\n+But with my mentors help we were able to come up with a design that\n+could be used for the NextGen-Core and also maintained compatibility\n+with the old core.\n+\n+The biggest challenge that I faced these three months for the integration\n+of the aforementioned `FileFactory` with the core. Initially about thirty\n+tests were failing but after discussing the idea of using a middleware\n+(`FileDict`) to maintain backwards compatibilty with the old core the test\n+failures were significantly reduced to just six. After a while I discovered\n+that `FileFactory` was somehow removing line-endings from the file contents\n+which was fixed by adding support for newlines in `FileFactory` which in turn\n+led to a successful integration.\n+\n+#### Work to be done\n+\n+Two major features were left out because of time constraints:\n+1. Ignore directories functionality for the NextGen-Core.\n+2. Cache control flags for the NextGen-Core (which was\n+   already mentioned as a stretch issue in my GSoC proposal).\n+\n+I have started the work on implementing the cache control flags and will","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgxNjUyMQ==","createdAt":"2018-08-13T06:22:36Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-13T01:11:13Z","lastEditedAt":null,"updatedAt":"2018-08-13T01:11:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ3NTU5Mw==","url":"https://github.com/coala/projects/pull/635#discussion_r209475593","bodyText":"missing ;-)","diffHunk":"@@ -0,0 +1,187 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: ","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T01:11:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T01:11:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUyNjI1OQ==","url":"https://github.com/coala/projects/pull/635#discussion_r209526259","bodyText":"14 patches vs 15 activities.... ?","diffHunk":"@@ -0,0 +1,184 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: https://rawgit.com/palash25/gsoc-18-report/master/project.tar.gz\n+sha256sum: 0af1551d96663f82c5ccf05437008ba00fade628a5a1659bdb78364b3546caf4\n+mentors: >\n+  [Mischa Krüger](https://github.com/Makman2),\n+  [Shreyans Doshi](https://github.com/shreyans800755),\n+  [Fabian Neuschmidt](https://github.com/fneu)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/32\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/33\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/34\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/35\n+bio: >\n+  I am second year student of B.Tech Computer Science and Engineering at\n+  International Institute of Information and Technology, Bhubaneswar,\n+  Odisha, India. I worked as a GSoC student under coala to improve coala's\n+  I/O mechanism using `FileFactory` class and adding features to provide\n+  more support for NextGen-Core's caching mechanism.\n+social:\n+  - GitHub:\n+      - username: palash25\n+      - link: https://github.com/palash25\n+  - GitLab:\n+      - username: palash25\n+      - link: https://gitlab.com/palash25\n+  - Gitter:\n+      - username: palash25\n+      - link: https://gitter.im/palash25\n+  - Openhub:\n+      - username: palash25\n+      - link: https://www.openhub.net/accounts/palash25\n+email: npalash25@gmail.com\n+blog: https://medium.com/gsoc-with-coala/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/7272ff6b9463a5cff33c431f73a416e5a999f4ac\n+      - details: >\n+         cEP-0026.md: Adds optimize caching cEP.\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a228c2b39ef17b3c6d3572853601dfa05b938173\n+      - details: >\n+         Updated the details of Optimize Caching project.\n+  - 3:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/759f74f88206c58ac80dd7acd12cadbae13f28cb\n+      - details: >\n+         optimize_caching.md: Changed primary mentor from adtac to Makman2.\n+  - 4:\n+      - repo: devops\n+      - link: https://github.com/coala/devops/commit/e309383bc5aacb007c4986bd74197238a4fcc96d\n+      - details: >\n+         planet.ini: Add palash25 gsoc blog feed.\n+  - 5:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/b06dfe44fa99ffeb997f6f0a4bf302938fb9734c\n+      - details: >\n+         Added `FileFactory` class. Objects of this class are used\n+         to represent files and replace file contents in the file dict.\n+  - 6:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/77c1dca15dc82d1753aa0962017899392d0033ec\n+      - details: >\n+         Added `Directory` class. This class will act as an interface\n+         to directories providing useful information about them. The\n+         objects of this class can be used by bears that operate only\n+         on directories and perform analysis based on the things like\n+         directory structure.\n+  - 7:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fc568a01ba489376b4d6efac12ea772cb3cb1573\n+      - details: >\n+         Added `memoized_property`. `memoized_property` is a decorator\n+         that caches the properties of `FileFactory` class.\n+  - 8:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/81bbca42f82319aed22ba7f90781d886d559d4dd\n+      - details: >\n+         NextGen_Core.rst: Update caching section. \n+  - 9:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/87d3dffd1a52c42ac60da0199ee34bd95827b8ff\n+      - details: >\n+         IO.rst: Add FileFactory docs.\n+  - 10:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         NextGen_Core.rst: Add link to IO docs.\n+  - 11:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/54622c2b03e1b84bb122130af182424d706d3de4\n+      - details: >\n+         `FileFactory`: Use `cached_property` instead of `memoized_property`.\n+  - 12:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/415361f5a4c12cd65dd4cc171d2a8ebbba3bc92c\n+      - details: >\n+         A new attribute `newline` was added to `FileFactory` to force\n+         newlines on the file content.\n+  - 13:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fbe8452360eb39340ace4334c2df133a1ee6de97\n+      - details: >\n+         Processing: Add middleware `FileDict` that provides the bears\n+         with the actual file contents instead of the `FileFactory` objects.\n+  - 14:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/e138e4875fc6d1474a93758881f550e05df8e329\n+      - details: >\n+         Processing: Modify tests to use actual files instead of hard coded\n+         tuples as file content.\n+  - 15:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T08:24:49Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:24:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUyODA5OA==","url":"https://github.com/coala/projects/pull/635#discussion_r209528098","bodyText":"Sorry I forgot the cEP patch","diffHunk":"@@ -0,0 +1,184 @@\n+---\n+categories:\n+  - GSoC\n+  - 2018\n+  - StatusReport\n+report_year: 2018\n+date: 2018-08-12\n+student: Palash Nigam\n+organisation: coala\n+organisation_link: https://coala.io\n+project: Optimize Caching for the NextGen-Core\n+project_link: https://summerofcode.withgoogle.com/projects/#6434190552203264\n+tarball: https://rawgit.com/palash25/gsoc-18-report/master/project.tar.gz\n+sha256sum: 0af1551d96663f82c5ccf05437008ba00fade628a5a1659bdb78364b3546caf4\n+mentors: >\n+  [Mischa Krüger](https://github.com/Makman2),\n+  [Shreyans Doshi](https://github.com/shreyans800755),\n+  [Fabian Neuschmidt](https://github.com/fneu)\n+phase:\n+  - Bonding: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/32\n+  - Phase 1: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/33\n+  - Phase 2: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/34\n+  - Phase 3: https://gitlab.com/coala/GSoC/GSoC-2018/milestones/35\n+bio: >\n+  I am second year student of B.Tech Computer Science and Engineering at\n+  International Institute of Information and Technology, Bhubaneswar,\n+  Odisha, India. I worked as a GSoC student under coala to improve coala's\n+  I/O mechanism using `FileFactory` class and adding features to provide\n+  more support for NextGen-Core's caching mechanism.\n+social:\n+  - GitHub:\n+      - username: palash25\n+      - link: https://github.com/palash25\n+  - GitLab:\n+      - username: palash25\n+      - link: https://gitlab.com/palash25\n+  - Gitter:\n+      - username: palash25\n+      - link: https://gitter.im/palash25\n+  - Openhub:\n+      - username: palash25\n+      - link: https://www.openhub.net/accounts/palash25\n+email: npalash25@gmail.com\n+blog: https://medium.com/gsoc-with-coala/\n+activity:\n+  - 1:\n+      - repo: cEPs\n+      - link: https://github.com/coala/cEPs/commit/7272ff6b9463a5cff33c431f73a416e5a999f4ac\n+      - details: >\n+         cEP-0026.md: Adds optimize caching cEP.\n+  - 2:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/a228c2b39ef17b3c6d3572853601dfa05b938173\n+      - details: >\n+         Updated the details of Optimize Caching project.\n+  - 3:\n+      - repo: projects\n+      - link: https://github.com/coala/projects/commit/759f74f88206c58ac80dd7acd12cadbae13f28cb\n+      - details: >\n+         optimize_caching.md: Changed primary mentor from adtac to Makman2.\n+  - 4:\n+      - repo: devops\n+      - link: https://github.com/coala/devops/commit/e309383bc5aacb007c4986bd74197238a4fcc96d\n+      - details: >\n+         planet.ini: Add palash25 gsoc blog feed.\n+  - 5:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/b06dfe44fa99ffeb997f6f0a4bf302938fb9734c\n+      - details: >\n+         Added `FileFactory` class. Objects of this class are used\n+         to represent files and replace file contents in the file dict.\n+  - 6:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/77c1dca15dc82d1753aa0962017899392d0033ec\n+      - details: >\n+         Added `Directory` class. This class will act as an interface\n+         to directories providing useful information about them. The\n+         objects of this class can be used by bears that operate only\n+         on directories and perform analysis based on the things like\n+         directory structure.\n+  - 7:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fc568a01ba489376b4d6efac12ea772cb3cb1573\n+      - details: >\n+         Added `memoized_property`. `memoized_property` is a decorator\n+         that caches the properties of `FileFactory` class.\n+  - 8:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/81bbca42f82319aed22ba7f90781d886d559d4dd\n+      - details: >\n+         NextGen_Core.rst: Update caching section. \n+  - 9:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/87d3dffd1a52c42ac60da0199ee34bd95827b8ff\n+      - details: >\n+         IO.rst: Add FileFactory docs.\n+  - 10:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/7bc5d7f7b84e91da9f6aa2f77d40f92e66c850d5\n+      - details: >\n+         NextGen_Core.rst: Add link to IO docs.\n+  - 11:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/54622c2b03e1b84bb122130af182424d706d3de4\n+      - details: >\n+         `FileFactory`: Use `cached_property` instead of `memoized_property`.\n+  - 12:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/415361f5a4c12cd65dd4cc171d2a8ebbba3bc92c\n+      - details: >\n+         A new attribute `newline` was added to `FileFactory` to force\n+         newlines on the file content.\n+  - 13:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/fbe8452360eb39340ace4334c2df133a1ee6de97\n+      - details: >\n+         Processing: Add middleware `FileDict` that provides the bears\n+         with the actual file contents instead of the `FileFactory` objects.\n+  - 14:\n+      - repo: coala\n+      - link: https://github.com/coala/coala/commit/e138e4875fc6d1474a93758881f550e05df8e329\n+      - details: >\n+         Processing: Modify tests to use actual files instead of hard coded\n+         tuples as file content.\n+  - 15:","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzgyMTY5Mw==","createdAt":"2018-08-13T08:40:41Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-13T08:31:10Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:31:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQ2MjgyNg==","url":"https://github.com/coala/projects/pull/635#issuecomment-412462826","bodyText":"all green 🎉","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-13T09:38:22Z","lastEditedAt":null,"updatedAt":"2018-08-13T09:38:22Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1535813125000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/637","number":637,"title":"Remove trailing space from pyflakes project","body":"This redirects the user from link\nhttp://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala_\nto http://projects.coala.io/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala\nFixes #573\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-13T05:37:28Z","updatedAt":"2018-09-01T14:45:25Z","closedAt":null,"state":"open","user":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"owner":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"assignee":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/637","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ5NTg3OQ==","url":"https://github.com/coala/projects/pull/637#discussion_r209495879","bodyText":"to & from need to be reversed.\nand you need to edit the .md to remove the unwanted space","diffHunk":"@@ -1,3 +1,7 @@\n [build]\n   publish = \"_site\"\n   command = \"gem install bundler && .ci/build.sh\"\n+\n+[[redirects]]\n+  from = \"/#/projects?project=integrate_pyflakes-enhanced_ast_into_coala\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:41:22Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:41:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQyMjU3Ng==","url":"https://github.com/coala/projects/pull/637#issuecomment-412422576","bodyText":"netlify redirect isnt working.\nsee #573 (comment)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T06:44:12Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:44:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQ0NTQ4Mg==","url":"https://github.com/coala/projects/pull/637#issuecomment-412445482","bodyText":"Interesting.\nI dont seem to be able to get the popup to work with other pages.\ne.g. https://deploy-preview-637--coala-projects.netlify.com/#/projects?project=improve_generic_bear_quality","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T08:30:25Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:30:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg2NDMxOQ==","url":"https://github.com/coala/projects/pull/637#issuecomment-417864319","bodyText":"See it works on master https://coala-projects.netlify.com/#/projects?project=improve_generic_bear_quality","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T14:44:50Z","lastEditedAt":null,"updatedAt":"2018-09-01T14:44:50Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1534211541000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/638","number":638,"title":"_reports/example.md: Add date","body":"Jekyll uses the year to create the page URL\nRelated to #359\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-08-13T12:22:23Z","updatedAt":"2018-08-14T01:52:21Z","closedAt":"2018-08-14T01:46:40Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/638","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535952221000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/624","number":624,"title":"Added Stack Overflow tag","body":"Added Stack overflow tag in lmgtfy as per issue #345\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":9,"createdAt":"2018-08-24T15:18:12Z","updatedAt":"2018-09-03T05:23:41Z","closedAt":null,"state":"open","user":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"owner":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"assignee":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"},{"name":"type/markdown","color":"2a0582"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/624","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0NDgzMQ==","url":"https://github.com/coala/corobo/pull/624#issuecomment-415944831","bodyText":"Can anybody help in knowing why this Travis build has failed as i just changed the markdown file.Also here i am getting a update branch option should i click that ? Although i had rebased my branch with upstream.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"reactions":[],"createdAt":"2018-08-25T06:41:08Z","lastEditedAt":null,"updatedAt":"2018-08-25T06:41:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0OTEyMw==","url":"https://github.com/coala/corobo/pull/624#issuecomment-415949123","bodyText":"Hi @Dhiraj240, thanks for the PR! Check out this link to learn more about proper commit format (improper commit format will cause the builds to fail). Also, make sure to squash your commits into one!","diffHunk":null,"author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODQ2NDMwNw==","createdAt":"2018-08-25T12:41:00Z","content":"THUMBS_UP","user":{"login":"Dhiraj240","name":"Dhiraj Sharma"}}],"createdAt":"2018-08-25T07:33:32Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:33:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk2NjY0OQ==","url":"https://github.com/coala/corobo/pull/624#issuecomment-415966649","bodyText":"@andrewda Okay, i will do it accordingly.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"reactions":[],"createdAt":"2018-08-25T12:40:49Z","lastEditedAt":null,"updatedAt":"2018-08-25T12:40:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNDQyMA==","url":"https://github.com/coala/corobo/pull/624#issuecomment-416414420","bodyText":"Ping @Dhiraj240 .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-28T00:48:26Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:48:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjU1NTU2Nw==","url":"https://github.com/coala/corobo/pull/624#issuecomment-416555567","bodyText":"@jayvdb sorry, i had just joined my college after insem break so i was caught up with my college sessions.I will do the proper commit by morning.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"reactions":[],"createdAt":"2018-08-28T11:50:42Z","lastEditedAt":null,"updatedAt":"2018-08-28T11:50:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzk0NTI3Ng==","url":"https://github.com/coala/corobo/pull/624#issuecomment-417945276","bodyText":"@jayvdb Sorry for delay i was attending hackathon during last few days,i hope i did the proper commit but still travis yelled at me.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"reactions":[],"createdAt":"2018-09-02T17:14:14Z","lastEditedAt":"2018-09-02T17:16:05Z","updatedAt":"2018-09-02T17:16:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzk2MTU3Mg==","url":"https://github.com/coala/corobo/pull/624#issuecomment-417961572","bodyText":"@Dhiraj240 if you scroll to the bottom of the Travis message, it provides some helpful hints on how to fix any problems. In this case:\n**** GitCommitBear [Section: commit | Severity: NORMAL] ****\n!    ! Shortlog of HEAD commit isn't in imperative mood! Bad words are 'Added'\n\nYou should be using the imperative tense in your commit message (documented here), so say Add StackOverflow tag instead of Added StackOverflow tag. This is the typical format for a Git commit message.","diffHunk":null,"author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-09-02T21:37:30Z","lastEditedAt":null,"updatedAt":"2018-09-02T21:37:30Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534987085000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/622","number":622,"title":"README.md: Add Zulip backend","body":"Added Zulip to the backend list.\nFixed Issue: #385\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":3,"createdAt":"2018-08-22T16:01:00Z","updatedAt":"2018-08-23T01:18:05Z","closedAt":"2018-08-23T01:17:27Z","state":"closed","user":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"owner":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/622","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNTA5MTA5NA==","url":"https://github.com/coala/corobo/pull/622#issuecomment-415091094","bodyText":"What should I change now?","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-22T16:18:45Z","lastEditedAt":null,"updatedAt":"2018-08-22T16:18:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI0MDkwMg==","url":"https://github.com/coala/corobo/pull/622#issuecomment-415240902","bodyText":"No you do not create multiple Pull Requests for the same task.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:18:05Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:18:05Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535180203000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/623","number":623,"title":"Added SO tag","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":0,"createdAt":"2018-08-24T12:48:08Z","updatedAt":"2018-08-25T06:56:43Z","closedAt":"2018-08-24T14:29:30Z","state":"closed","user":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"owner":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/623","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535418522000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/618","number":618,"title":"removed comment in webservices.raml regarding gitlab.com/coala/landin…","body":"…g/merge_request/39\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":15,"createdAt":"2018-08-17T19:26:26Z","updatedAt":"2018-08-28T01:08:42Z","closedAt":"2018-08-28T01:08:03Z","state":"merged","user":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"owner":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"assignee":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/618","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAxMzM5Mw==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414013393","bodyText":"Thanks @mikebmc , that change is good of course.\nCould you amend your commit so that the commit message complies with https://coala.io/commit .  Otherwise the bots go mad and dont let us merge it.\nAlso you need to remove the trailing whitespace from the line you edited.  again, unhappy bots.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-17T23:40:54Z","lastEditedAt":"2018-08-17T23:41:49Z","updatedAt":"2018-08-17T23:41:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA3MDI1MQ==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414070251","bodyText":"@jayvdb thanks! I'd noticed the errors on my way out the door yesterday, but didn't have time to correct them. Travis yelled at me again, but also passed the test? I think the issue is that I failed to use --force in an intermediary push, and it auto generated a commit with too long a message. I will look into fixing that this afternoon.\nI'd forgotten about gizoogle. Should I look into why that test can't connect?","diffHunk":null,"author":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4","name":""},"createdAt":"2018-08-18T16:33:44Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:33:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA3MDY5Ng==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414070696","bodyText":"Dont worry about gizoogle ; our bots sometimes cant get a network connection happening to all the links in the repo.  It has had a lot of development without a release lately, but with GSoC over I think we'll get a bit of release management happening.\nYou have four commits in https://github.com/coala/corobo/pull/618/commits\nYou'll need to squash them into one commit.  https://coala.io/git may be of some help.  If you're stuck, come onto https://coala.io/chat and we'll step through the process.  But please dont close the PR and start a new one, delete your fork or delete your branch.  A PR is always fixable until you, and to be useful in coala you need those skills, and we'll happily help you get those skills - but we dont want to keep getting PRs from developers who dont keep their work tidy, as that creates continual work for maintainers and makes it harder to review patches.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-18T16:41:03Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:41:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA5ODA1OA==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414098058","bodyText":"Great.  Final step...\nThe commit message needs to comply with https://coala.io/commit .\nNote this is a Closes , not a Fixes , as it isnt a bug.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T02:13:59Z","lastEditedAt":null,"updatedAt":"2018-08-19T02:13:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDE0MDAwMQ==","url":"https://github.com/coala/corobo/pull/618#issuecomment-414140001","bodyText":"@jayvdb thanks for your patience! Hopefully this last commit is up to snuff","diffHunk":null,"author":{"login":"mikebmc","avatarUrl":"https://avatars3.githubusercontent.com/u/7380171?v=4","name":""},"createdAt":"2018-08-19T16:44:37Z","lastEditedAt":null,"updatedAt":"2018-08-19T16:44:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNzIyOA==","url":"https://github.com/coala/corobo/pull/618#issuecomment-416417228","bodyText":"Ack 7ec1088","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T01:06:42Z","lastEditedAt":null,"updatedAt":"2018-08-28T01:06:42Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535078653000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/619","number":619,"title":"README.md: Updated README with Zulip; Fixes Issue: https://github.com/coala/corobo/issues/385","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":8,"createdAt":"2018-08-21T16:44:24Z","updatedAt":"2018-08-24T02:44:13Z","closedAt":"2018-08-22T14:01:40Z","state":"closed","user":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"owner":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/619","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDc0OTYzMA==","url":"https://github.com/coala/corobo/pull/619#issuecomment-414749630","bodyText":"Can someone let me know what I should be changing? Thanks.","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-21T17:07:53Z","lastEditedAt":null,"updatedAt":"2018-08-21T17:07:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk3NjQyNQ==","url":"https://github.com/coala/corobo/pull/619#issuecomment-414976425","bodyText":"@nvzard Should I create a new PR?","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-22T09:46:32Z","lastEditedAt":"2018-08-22T09:46:43Z","updatedAt":"2018-08-22T09:46:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI0MTUzOA==","url":"https://github.com/coala/corobo/pull/619#issuecomment-415241538","bodyText":"Re-open this PR @hrithik-jha .\nYou must learn how to use git and GitHub.  That is what https://coala.io/newcomer is about.\nIf you dont learn those skills while doing a newcomer issue, you are wasting our time and we will not let you continue within @coala .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:20:22Z","lastEditedAt":"2018-08-23T01:20:34Z","updatedAt":"2018-08-23T01:20:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTM3ODQ0MA==","url":"https://github.com/coala/corobo/pull/619#issuecomment-415378440","bodyText":"@jayvdb Sorry for the mishap. I can't reopen this PR as it says my branch was force pushed or recreated. What should I do to fix this? Also after amending the commit message Travis still didn't approve of the commit, so what should I do about that? Thank you for your patience.","diffHunk":null,"author":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4","name":"Hrithik Jha"},"createdAt":"2018-08-23T11:11:58Z","lastEditedAt":null,"updatedAt":"2018-08-23T11:11:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYzNDMzMw==","url":"https://github.com/coala/corobo/pull/619#issuecomment-415634333","bodyText":"Come on to https://coala.io/chat and ask for help.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-24T02:44:13Z","lastEditedAt":null,"updatedAt":"2018-08-24T02:44:13Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535805927000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/620","number":620,"title":"answers/requirements.txt: Remove unused nltk ","body":"Closes #593\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":11,"createdAt":"2018-08-22T00:05:34Z","updatedAt":"2018-09-01T12:45:27Z","closedAt":null,"state":"open","user":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"owner":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"assignee":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/620","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDg5MDIzNg==","url":"https://github.com/coala/corobo/pull/620#issuecomment-414890236","bodyText":"@jennyjj which issue are you trying to solve?","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-22T02:46:36Z","lastEditedAt":null,"updatedAt":"2018-08-22T02:46:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkxMjAyOQ==","url":"https://github.com/coala/corobo/pull/620#issuecomment-414912029","bodyText":"The issue is coala/corobo#593","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-08-22T04:59:35Z","lastEditedAt":null,"updatedAt":"2018-08-22T04:59:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTkwODIzNw==","url":"https://github.com/coala/corobo/pull/620#issuecomment-415908237","bodyText":"Hi, I squashed one into one commit (so there are two commits combined).  I somehow deleted one commit (there were originally three).  I hope this is ok.  I believe it is all one commit now.","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-08-24T23:32:31Z","lastEditedAt":null,"updatedAt":"2018-08-24T23:32:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTkwOTk4Ng==","url":"https://github.com/coala/corobo/pull/620#issuecomment-415909986","bodyText":"If you have a look at your published commit, it is now empty.\nYou can see it online at https://github.com/coala/corobo/pull/620/files\nMake the change again, and amend your commit, and re-push.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-24T23:47:11Z","lastEditedAt":null,"updatedAt":"2018-08-24T23:47:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTkyMTA0NA==","url":"https://github.com/coala/corobo/pull/620#issuecomment-415921044","bodyText":"Ok, I think I did it right this time.","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-08-25T01:32:46Z","lastEditedAt":null,"updatedAt":"2018-08-25T01:32:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzgzNDE3Mw==","url":"https://github.com/coala/corobo/pull/620#issuecomment-417834173","bodyText":"Thanks so much, Li!  I have made the change.","diffHunk":null,"author":{"login":"jennyjj","avatarUrl":"https://avatars3.githubusercontent.com/u/27842224?v=4","name":"Jennifer Justh"},"createdAt":"2018-09-01T05:20:40Z","lastEditedAt":null,"updatedAt":"2018-09-01T05:20:40Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534953278000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/621","number":621,"title":"README.md: Added Zulip backend","body":"Added Zulip to the backend list.\nFixed Issue: #385\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2018-08-22T14:03:00Z","updatedAt":"2018-08-22T15:54:38Z","closedAt":"2018-08-22T15:54:38Z","state":"closed","user":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"owner":{"login":"hrithik-jha","avatarUrl":"https://avatars3.githubusercontent.com/u/36108764?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/621","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533635308000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/604","number":604,"title":"plugins/coatils.py: Remove __init__ constructor","body":"This removes init initializer as the init in this module\nonly invokes super, which happens anyway if _init is removed\nCloses #601\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2018-08-05T09:14:08Z","updatedAt":"2018-08-07T09:48:28Z","closedAt":"2018-08-05T13:44:14Z","state":"merged","user":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"owner":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/medium","color":"ddba61"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/604","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUwNzYzNQ==","url":"https://github.com/coala/corobo/pull/604#issuecomment-410507635","bodyText":"The commit looks good to me.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2018-08-05T09:33:16Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:33:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUyMTc0NQ==","url":"https://github.com/coala/corobo/pull/604#issuecomment-410521745","bodyText":"__new__ & __init__ combined are the implementation of the contructor.  You can read about it at https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming) , especially https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)#Python\nFoo() is never a constructor.  It is invoking a constructor.  It is rarely, and always incorrectly, called the constructor.  It should be called instantiation.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NjYzMA==","createdAt":"2018-08-05T14:09:47Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-05T13:53:56Z","lastEditedAt":null,"updatedAt":"2018-08-05T13:53:56Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533579392000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/605","number":605,"title":"nevermind.py: Add caret in regex pattern","body":"Add caret in regex pattern so that 'corobo nm' and 'corobo nevermind'\nare matched only, and only then corobo says \"I'm sorry :(\".\nThus, corobo would not respond with a sorry for commands where nm\nor nevermind appear anywhere in the command.\nFixes #519\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":10,"createdAt":"2018-08-05T19:12:24Z","updatedAt":"2018-08-06T18:16:32Z","closedAt":"2018-08-06T17:44:05Z","state":"closed","user":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"owner":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"207de5"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/605","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk1MTU2OA==","url":"https://github.com/coala/corobo/pull/605#discussion_r207951568","bodyText":"A better way r'^(?:nm|nevermind)$'","diffHunk":"@@ -8,7 +8,7 @@ class Nevermind(BotPlugin):\n     Doesn't mind\n     \"\"\"\n \n-    @re_botcmd(pattern=r'(nm)|(nevermind)', flags=re.IGNORECASE)\n+    @re_botcmd(pattern=r'^(nm)$|^(nevermind)$', flags=re.IGNORECASE)","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-06T16:23:10Z","lastEditedAt":null,"updatedAt":"2018-08-06T16:23:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU2Mjc4Mg==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410562782","bodyText":"See https://github.com/coala/corobo/blob/master/tests/nevermind_test.py","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T01:07:27Z","lastEditedAt":null,"updatedAt":"2018-08-06T01:07:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU5NTMwMw==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410595303","bodyText":"@jayvdb what does \"!\" In the beginning of \"nevermind\" mean in the test file?","diffHunk":null,"author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-06T05:45:27Z","lastEditedAt":null,"updatedAt":"2018-08-06T05:45:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYwODgwMA==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410608800","bodyText":"@bhavya17037  check this out http://errbot.io/en/latest/user_guide/plugin_development/testing.html","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-06T07:04:01Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:04:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYzMTA1MA==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410631050","bodyText":"That is 'BOT_PREFIX' , just like we use 'corobo' as our bot's prefix. Go\nthrough the documentation and you'll understand.\n…\nOn Mon 6 Aug, 2018, 11:15 AM Bhavya Srivastava, ***@***.***> wrote:\n @jayvdb <https://github.com/jayvdb> what does \"!\" In the beginning of\n \"nevermind\" mean in the test file?\n\n —\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub\n <#605 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/ASansMihYVRaJcVouVKzrF6yhTWiFAxQks5uN9f4gaJpZM4Vvf3r>\n .","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-06T08:34:21Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:34:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDc2NzE3OA==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410767178","bodyText":"@bhavya17037 You have multiple commits, squash all your commits into a single one, refer http://api.coala.io/en/latest/Developers/Git_Basics.html#squashing-your-commits, don't close this PR. Also, fix errors reported by coala.","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-06T16:26:40Z","lastEditedAt":null,"updatedAt":"2018-08-06T16:26:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDc5ODcxNw==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410798717","bodyText":"don't close this PR\n\n@bhavya17037 Please read what I have said 😄","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-06T18:05:53Z","lastEditedAt":null,"updatedAt":"2018-08-06T18:05:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDgwMjI1Ng==","url":"https://github.com/coala/corobo/pull/605#issuecomment-410802256","bodyText":"@Vamshi99 Oh no im so sorry! :(\nI have made another pull request with the correct and final changes!Could you please review it? :)\n#606","diffHunk":null,"author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-06T18:16:32Z","lastEditedAt":"2018-08-06T18:17:06Z","updatedAt":"2018-08-06T18:17:06Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533648272000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/606","number":606,"title":"nevermind.py: Change regex pattern","body":"Change regex pattern so that corobo only apologizes\nwhen \"corobo nm\" or \"corobo nevermind\" are used.\nAlso add unit tests for the same\nFixes #519\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2018-08-06T18:10:29Z","updatedAt":"2018-08-07T13:24:32Z","closedAt":"2018-08-07T13:10:23Z","state":"merged","user":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"owner":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"assignee":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/606","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA5Nzc2NA==","url":"https://github.com/coala/corobo/pull/606#discussion_r208097764","bodyText":"Unrelated change?","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-07T04:48:16Z","lastEditedAt":null,"updatedAt":"2018-08-07T04:48:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwMDMwMQ==","url":"https://github.com/coala/corobo/pull/606#discussion_r208100301","bodyText":"Remove this change from the file and do git commit --amend to modify the commit(do not use git commit)","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-07T05:09:46Z","lastEditedAt":null,"updatedAt":"2018-08-07T05:09:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwMTM3MA==","url":"https://github.com/coala/corobo/pull/606#discussion_r208101370","bodyText":"But this change is already in corobo's \"coatils.py\" (master)","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-07T05:18:40Z","lastEditedAt":null,"updatedAt":"2018-08-07T05:18:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwMTc4NQ==","url":"https://github.com/coala/corobo/pull/606#discussion_r208101785","bodyText":"You need to fetch that change from upstream repo(master) by performing a rebase, refer http://api.coala.io/en/latest/Developers/Git_Basics.html#rebasing","diffHunk":"@@ -15,9 +15,6 @@ class Coatils(BotPlugin):\n     Various coala related utilities, exposing the REST API, etc.\n     \"\"\"\n \n-    def __init__(self, bot, name=None):","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-07T05:22:32Z","lastEditedAt":null,"updatedAt":"2018-08-07T05:22:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDgxMzQ1OQ==","url":"https://github.com/coala/corobo/pull/606#issuecomment-410813459","bodyText":"@jayvdb\nI will rebase in a while. Dont worry","diffHunk":null,"author":{"login":"bhavya17037","avatarUrl":"https://avatars0.githubusercontent.com/u/35334585?v=4","name":"Bhavya Srivastava"},"createdAt":"2018-08-06T18:50:09Z","lastEditedAt":null,"updatedAt":"2018-08-06T18:50:09Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533730796000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/608","number":608,"title":"LabHubTestCase: LabHub testing setup ","body":"The role of LabHubTestCase is to do the setUp\nnecessary for testing a plugin which depends\non LabHub plugin. It adapts the tests for\nGitStats plugins to use the LabHubTestCase.\nCloses #607","comments":7,"createdAt":"2018-08-07T19:14:54Z","updatedAt":"2018-08-08T12:19:56Z","closedAt":"2018-08-08T12:06:14Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"bug","color":"ee0701"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/608","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTE5NzU0Mw==","url":"https://github.com/coala/corobo/pull/608#issuecomment-411197543","bodyText":"Yes it was possible to include LabHub also, but Ban is not dependent on labhub. It does not require LabHubTestBase.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-07T20:49:08Z","lastEditedAt":null,"updatedAt":"2018-08-07T20:49:08Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533750154000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/612","number":612,"title":"test-requirements.txt: Sync","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":5,"createdAt":"2018-08-08T14:42:31Z","updatedAt":"2018-08-08T17:42:34Z","closedAt":"2018-08-08T17:42:25Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/612","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533820988000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/613","number":613,"title":" setup.cfg: Use template for enforcing 100% branch coverage","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":12,"createdAt":"2018-08-09T07:48:24Z","updatedAt":"2018-08-09T13:23:08Z","closedAt":"2018-08-09T13:23:02Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/613","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg0Nzg0NA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208847844","bodyText":"def get_configuration_template(self):\n        default_config = self._default_config\n        if default_config:\n            return default_config\n        else self.CONFIG_TEMPLATE:\n            return self.CONFIG_TEMPLATE\n        return\n?","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4NzE1MQ==","createdAt":"2018-08-09T11:46:09Z","content":"THUMBS_DOWN","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-09T08:36:44Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:36:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg0ODc3OA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208848778","bodyText":"No need for else IMO when this will be the last condition instead directly return","diffHunk":"@@ -30,7 +30,7 @@ def search(self, msg, arg):\n             return (self.API_DOCS +\n                     '/search.html?q=' +\n                     '+'.join(re.split(r'\\s+', search_string)))\n-        elif doc_type.lower() == 'user':\n+        else:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4MzcyMA==","createdAt":"2018-08-09T10:24:51Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yNzY4MzcyNw==","createdAt":"2018-08-09T10:24:55Z","content":"LAUGH","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-09T08:39:46Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:39:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg0OTQ3OA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208849478","bodyText":"https://github.com/coala/corobo/pull/613/files#r208848778","diffHunk":"@@ -93,7 +93,7 @@ def contrib_stats(self, msg, match):\n                 len(Coatils.all_langs())\n             )\n         # stats\n-        elif stat_type == '' and entity == '':\n+        else:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4ODY1Nw==","createdAt":"2018-08-09T12:18:26Z","content":"THUMBS_DOWN","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T08:41:42Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:41:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MDI0Mw==","url":"https://github.com/coala/corobo/pull/613#discussion_r208850243","bodyText":"https://github.com/coala/corobo/pull/613/files#r208848778","diffHunk":"@@ -20,6 +20,8 @@ def construct_link(text):\n         elif 'documentation/' in text:\n             text = text.split('documentation/')[-1]\n             return 'https://docs.coala.io/en/latest/' + text\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4NzI0OQ==","createdAt":"2018-08-09T11:47:51Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-09T08:44:03Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:44:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MDg4Mw==","url":"https://github.com/coala/corobo/pull/613#discussion_r208850883","bodyText":"else self.CONFIG_TEMPLATE: is syntax error ;-)","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY3ODI1MQ==","createdAt":"2018-08-09T08:46:57Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T08:45:55Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:45:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MTE4Mw==","url":"https://github.com/coala/corobo/pull/613#discussion_r208851183","bodyText":"oh okay 👍","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-09T08:46:53Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:46:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg1MTcxOA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208851718","bodyText":"these were a minor review, discard below comment directly if there will be some error :)","diffHunk":"@@ -20,6 +20,8 @@ def get_configuration_template(self):\n             return default_config\n         elif self.CONFIG_TEMPLATE:\n             return self.CONFIG_TEMPLATE\n+        else:  # pragma: no cover","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-09T08:48:57Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:48:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg3OTc2NA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208879764","bodyText":"My own words thrown back at me ? ;)","diffHunk":"@@ -30,7 +30,7 @@ def search(self, msg, arg):\n             return (self.API_DOCS +\n                     '/search.html?q=' +\n                     '+'.join(re.split(r'\\s+', search_string)))\n-        elif doc_type.lower() == 'user':\n+        else:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4ODYzNg==","createdAt":"2018-08-09T12:18:06Z","content":"LAUGH","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T10:25:10Z","lastEditedAt":null,"updatedAt":"2018-08-09T10:25:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODg5OTE0OA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208899148","bodyText":"This isnt as simple as the other one.  Each branch yields, and then goes to the end.\nTo remove this else branch, we would need to add returns to all of the other branches, which isnt very helpful.","diffHunk":"@@ -93,7 +93,7 @@ def contrib_stats(self, msg, match):\n                 len(Coatils.all_langs())\n             )\n         # stats\n-        elif stat_type == '' and entity == '':\n+        else:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4ODY1MQ==","createdAt":"2018-08-09T12:18:21Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T11:47:55Z","lastEditedAt":null,"updatedAt":"2018-08-09T11:47:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODkwNzU1NA==","url":"https://github.com/coala/corobo/pull/613#discussion_r208907554","bodyText":"Yeah because your review matter most : P","diffHunk":"@@ -30,7 +30,7 @@ def search(self, msg, arg):\n             return (self.API_DOCS +\n                     '/search.html?q=' +\n                     '+'.join(re.split(r'\\s+', search_string)))\n-        elif doc_type.lower() == 'user':\n+        else:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-09T12:20:55Z","lastEditedAt":"2018-08-09T12:21:21Z","updatedAt":"2018-08-09T12:21:21Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534143735000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/614","number":614,"title":"pushed","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2018-08-13T06:40:56Z","updatedAt":"2018-08-13T07:02:15Z","closedAt":"2018-08-13T07:02:14Z","state":"closed","user":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"owner":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/614","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQyNjEwMQ==","url":"https://github.com/coala/corobo/pull/614#issuecomment-412426101","bodyText":"Duplicate of #595\nJust as bad as #595\nNot serious about contributing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T07:02:14Z","lastEditedAt":null,"updatedAt":"2018-08-13T07:02:14Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534475452000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/616","number":616,"title":"Sync templates","body":"Reviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2018-08-16T18:44:56Z","updatedAt":"2018-08-17T03:10:52Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/616","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDcxMTQ1OA==","url":"https://github.com/coala/corobo/pull/616#discussion_r210711458","bodyText":"ah, this needs to be removed, or we need to fix a bug in an upstream library.\nI'll look into that tomorrow.","diffHunk":"@@ -18,6 +18,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n+  --doctest-modules","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T19:15:59Z","lastEditedAt":null,"updatedAt":"2018-08-16T19:15:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDc5NDYzMA==","url":"https://github.com/coala/corobo/pull/616#discussion_r210794630","bodyText":"Created timofurrer/ramlient#51","diffHunk":"@@ -18,6 +18,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n+  --doctest-modules","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-17T03:02:11Z","lastEditedAt":null,"updatedAt":"2018-08-17T03:02:11Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533893814000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/577","number":577,"title":"LabHub: Use activate and configuration templates","body":"__init__ is executed at load time and\nand any issue in the plugin will lead\nto it not showing up.\nLifeCycle: __init__->configured->enable\nAdapts to the DefaultConfigMixin and\nmigrated to using configuration templates.\nCloses #554\nCloses #382","comments":29,"createdAt":"2018-07-04T12:02:27Z","updatedAt":"2018-08-10T09:36:54Z","closedAt":"2018-08-10T09:35:19Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"enhancement","color":"84b6eb"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/577","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU5NjU1Nw==","url":"https://github.com/coala/corobo/pull/577#discussion_r207596557","bodyText":"shouldnt these be None, and the presense of None used to deactivate the plugin ?\nuseless values are useless.\nthe plugin will fail.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T16:16:53Z","lastEditedAt":null,"updatedAt":"2018-08-03T16:16:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzU5Njc5Mw==","url":"https://github.com/coala/corobo/pull/577#discussion_r207596793","bodyText":"we had coverage of this.  Add tests which cover this.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',\n+        'GH_TOKEN': 'token',\n+        'GL_ORG_NAME': 'org_name',\n+        'GL_TOKEN': 'token',\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def get_configuration_template(self):\n+        DefaultConfigMixin.get_configuration_template(self)\n+\n+    def activate(self):\n+        BotPlugin.activate(self)\n \n         teams = dict()\n         try:\n-            gh = github3.login(token=os.environ.get('GH_TOKEN'))\n+            gh = github3.login(token=self.config['GH_TOKEN'])\n             assert gh is not None\n-        except AssertionError:\n+        except AssertionError:  # pragma: no cover, for logging","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NDY5OA==","createdAt":"2018-08-04T17:10:31Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-03T16:17:45Z","lastEditedAt":null,"updatedAt":"2018-08-03T16:17:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY4NDkxNg==","url":"https://github.com/coala/corobo/pull/577#discussion_r207684916","bodyText":"The order must be consistent for all plugins.\nDefaultConfigMixin first.\nIf that causes problems during testing, you need to enhance DefaultConfigMixin and/or BotPlugin.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T22:53:48Z","lastEditedAt":null,"updatedAt":"2018-08-03T22:53:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY4NTIyMA==","url":"https://github.com/coala/corobo/pull/577#discussion_r207685220","bodyText":"This should not be here. Caused by wrong order of base classes.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',\n+        'GH_TOKEN': 'token',\n+        'GL_ORG_NAME': 'org_name',\n+        'GL_TOKEN': 'token',\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def get_configuration_template(self):\n+        DefaultConfigMixin.get_configuration_template(self)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T22:56:21Z","lastEditedAt":null,"updatedAt":"2018-08-03T22:56:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY4NTQ3MA==","url":"https://github.com/coala/corobo/pull/577#discussion_r207685470","bodyText":"Use super().activate() with the bases classes set up properly.","diffHunk":"@@ -33,47 +32,54 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(BotPlugin, DefaultConfigMixin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': 'org_name',\n+        'GH_TOKEN': 'token',\n+        'GL_ORG_NAME': 'org_name',\n+        'GL_TOKEN': 'token',\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def get_configuration_template(self):\n+        DefaultConfigMixin.get_configuration_template(self)\n+\n+    def activate(self):\n+        BotPlugin.activate(self)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-03T22:58:06Z","lastEditedAt":null,"updatedAt":"2018-08-03T22:58:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMzI5MA==","url":"https://github.com/coala/corobo/pull/577#discussion_r207723290","bodyText":"re-create self.GH_ORG_NAME and self.GL_ORG_NAME as properties that access the config so that your patch is less noisy.","diffHunk":"@@ -33,47 +32,51 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-class LabHub(BotPlugin):\n+class LabHub(DefaultConfigMixin, BotPlugin):\n     \"\"\"GitHub and GitLab utilities\"\"\"  # Ignore QuotesBear\n \n-    GH_ORG_NAME = constants.GH_ORG_NAME\n-    GL_ORG_NAME = constants.GL_ORG_NAME\n+    CONFIG_TEMPLATE = {\n+        'GH_ORG_NAME': None,\n+        'GH_TOKEN': None,\n+        'GL_ORG_NAME': None,\n+        'GL_TOKEN': None,\n+    }\n \n-    def __init__(self, bot, name=None):\n-        super().__init__(bot, name)\n+    def activate(self):\n+        super().activate()\n \n         teams = dict()\n         try:\n-            gh = github3.login(token=os.environ.get('GH_TOKEN'))\n+            gh = github3.login(token=self.config['GH_TOKEN'])\n             assert gh is not None\n-        except AssertionError:\n+        except AssertionError:  # pragma: no cover, for logging\n             self.log.error('Cannot create github object, please check GH_TOKEN')\n         else:\n-            self.GH3_ORG = gh.organization(self.GH_ORG_NAME)\n+            self.GH3_ORG = gh.organization(self.config['GH_ORG_NAME'])\n             for team in self.GH3_ORG.teams():\n                 teams[team.name] = team\n \n         self._teams = teams\n \n-        self.IGH = GitHub(GitHubToken(os.environ.get('GH_TOKEN')))\n-        self.IGL = GitLab(GitLabPrivateToken(os.environ.get('GL_TOKEN')))\n+        self.IGH = GitHub(GitHubToken(self.config['GH_TOKEN']))\n+        self.IGL = GitLab(GitLabPrivateToken(self.config['GL_TOKEN']))\n \n         self.REPOS = dict()\n \n         try:\n             self.gh_repos = {repo.full_name.split('/')[-1]: repo for repo in\n                              filter(lambda x: (x.full_name.split('/')[0] ==\n-                                               self.GH_ORG_NAME),\n+                                               self.config['GH_ORG_NAME']),\n                                     self.IGH.write_repositories)}\n-        except RuntimeError:\n+        except RuntimeError:  # pragma: no cover, for logging\n             self.log.exception('Something went wrong in fetching github repos.')\n         else:\n             self.REPOS.update(self.gh_repos)\n \n         try:\n             self.gl_repos = {repo.full_name.split('/')[-1]: repo for repo in\n                              filter(lambda x: (x.full_name.split('/')[0] ==\n-                                               self.GL_ORG_NAME),\n+                                               self.config['GL_ORG_NAME']),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:55:06Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:55:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMzk1MQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r207723951","bodyText":"note #572 (comment)\nYou probably need a separate test method for this.\nAnd that is not a newcomer problem --it is a test coverage problem which you need to sort out in your project.","diffHunk":"@@ -72,8 +78,6 @@ def test_invite_cmd(self):\n         self.inject_mocks('LabHub', mock_dict)\n         testbot = self\n \n-        plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T02:58:56Z","lastEditedAt":null,"updatedAt":"2018-08-05T02:58:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODY2NTg0Mg==","url":"https://github.com/coala/corobo/pull/577#discussion_r208665842","bodyText":"The current minor coverage error might be related to this","diffHunk":"@@ -72,8 +78,6 @@ def test_invite_cmd(self):\n         self.inject_mocks('LabHub', mock_dict)\n         testbot = self\n \n-        plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-08T17:22:04Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:22:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTExMzEyMA==","url":"https://github.com/coala/corobo/pull/577#discussion_r209113120","bodyText":"do class initialisation in setUpClass , including creating the hidden directory , and then remove the directory in tearDownClass.","diffHunk":"@@ -0,0 +1,23 @@\n+import logging\n+import os\n+\n+from errbot.backends.test import FullStackTest\n+from pathlib import Path\n+\n+\n+class IsolatedTestCase(FullStackTest):\n+\n+    def setUp(self, extra_config=None):\n+        file_name = 'labhub.plug'\n+        file_rename = 'hidden'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzczNTc3Mw==","createdAt":"2018-08-10T07:05:25Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-09T23:56:05Z","lastEditedAt":null,"updatedAt":"2018-08-09T23:56:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjE2OA==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156168","bodyText":"convert to single quotes","diffHunk":"@@ -1,15 +1,14 @@\n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = ['plugins']\n \n-\n-def test_nevermind(testbot):\n-    testbot.assertCommand(\"!nevermind\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nm\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nEverMINd\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nM\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nmxyz\", 'Command \"nmxyz\" not found.')\n-    testbot.assertCommand(\"!hey nM\", 'Command \"hey\" / \"hey nM\" not found.')\n-    testbot.assertCommand(\"!nevermindxyz\", 'Command \"nevermindxyz\" not found.')\n-    testbot.assertCommand(\n-        \"!hey nEverMINd\", 'Command \"hey\" / \"hey nEverMINd\" not found.')\n+class NevermindTest(IsolatedTestCase):\n+    def test_nevermind(self):\n+        self.assertCommand(\"!nevermind\", \"I'm sorry :(\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:29:44Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:29:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjE5OQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156199","bodyText":"split into two lines","diffHunk":"@@ -1,15 +1,14 @@\n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = ['plugins']\n \n-\n-def test_nevermind(testbot):\n-    testbot.assertCommand(\"!nevermind\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nm\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nEverMINd\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nM\", \"I'm sorry :(\")\n-    testbot.assertCommand(\"!nmxyz\", 'Command \"nmxyz\" not found.')\n-    testbot.assertCommand(\"!hey nM\", 'Command \"hey\" / \"hey nM\" not found.')\n-    testbot.assertCommand(\"!nevermindxyz\", 'Command \"nevermindxyz\" not found.')\n-    testbot.assertCommand(\n-        \"!hey nEverMINd\", 'Command \"hey\" / \"hey nEverMINd\" not found.')\n+class NevermindTest(IsolatedTestCase):\n+    def test_nevermind(self):\n+        self.assertCommand(\"!nevermind\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nm\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nEverMINd\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nM\", \"I'm sorry :(\")\n+        self.assertCommand(\"!nmxyz\", 'Command \"nmxyz\" not found.')\n+        self.assertCommand(\"!hey nM\", 'Command \"hey\" / \"hey nM\" not found.')\n+        self.assertCommand(\"!nevermindxyz\", 'Command \"nevermindxyz\" not found.')\n+        self.assertCommand(\n+            \"!hey nEverMINd\", 'Command \"hey\" / \"hey nEverMINd\" not found.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:29:57Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:29:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjI3Nw==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156277","bodyText":"single quotes","diffHunk":"@@ -1,10 +1,9 @@\n import errbot.rendering\n \n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = 'plugins'\n \n-\n-def test_ship_it(testbot):\n-    text = errbot.rendering.text()\n-    testbot.assertCommand(\"!shipit\", text.convert(\"![ship it!]()\"))\n+class ShipItTest(IsolatedTestCase):\n+    def test_ship_it(self):\n+        text = errbot.rendering.text()\n+        self.assertCommand(\"!shipit\", text.convert(\"![ship it!]()\"))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:30:24Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:30:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjM4NQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156385","bodyText":"add instance variable self.testbot = self","diffHunk":"@@ -1,38 +1,28 @@\n-import logging\n import queue\n-import unittest\n \n-from errbot.backends.test import TestBot\n+from tests.isolated_testcase import IsolatedTestCase\n \n \n-class TestSpam(unittest.TestCase):\n-\n-    def setUp(self):\n-        self.testbot = TestBot(extra_plugin_dir='plugins',\n-                               loglevel=logging.ERROR)\n-        self.testbot.start()\n-\n-    def tearDown(self):\n-        self.testbot.stop()\n+class TestSpam(IsolatedTestCase):\n \n     def test_spam_callback(self):\n-        self.testbot.assertCommand('c'*1001, 'you\\'re spamming')\n-        self.testbot.assertCommand('\\n\\n'*11, 'you\\'re spamming')\n+        self.assertCommand('c'*1001, 'you\\'re spamming')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T06:31:06Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:31:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjQ4Mg==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156482","bodyText":"self.testbot = self","diffHunk":"@@ -43,30 +33,24 @@ def setUp(self):\n                 }\n             }\n         }\n-        self.testbot = TestBot(extra_plugin_dir='plugins',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzczOTE3Mw==","createdAt":"2018-08-10T08:21:48Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:31:43Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:31:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjYzNg==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156636","bodyText":"single quotes","diffHunk":"@@ -1,15 +1,15 @@\n import requests_mock\n import vcr\n \n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = 'plugins'\n \n+class GhettoTest(IsolatedTestCase):\n \n-@vcr.use_cassette('tests/cassettes/ghetto.yaml')\n-def test_ghetto(testbot):\n-    testbot.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")\n-    with requests_mock.Mocker() as m:\n-        m.register_uri('POST', 'http://www.gizoogle.net/textilizer.php',\n-                       text='test text which will not match with the regex')\n-        testbot.assertCommand(\"!ghetto ...\", \"Shiznit happens!\")\n+    @vcr.use_cassette('tests/cassettes/ghetto.yaml')\n+    def test_ghetto(self):\n+        self.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc0MTcyNw==","createdAt":"2018-08-10T09:13:48Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:32:43Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:32:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NjY3MQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209156671","bodyText":"single quotes","diffHunk":"@@ -1,15 +1,15 @@\n import requests_mock\n import vcr\n \n-pytest_plugins = ['errbot.backends.test']\n+from tests.isolated_testcase import IsolatedTestCase\n \n-extra_plugin_dir = 'plugins'\n \n+class GhettoTest(IsolatedTestCase):\n \n-@vcr.use_cassette('tests/cassettes/ghetto.yaml')\n-def test_ghetto(testbot):\n-    testbot.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")\n-    with requests_mock.Mocker() as m:\n-        m.register_uri('POST', 'http://www.gizoogle.net/textilizer.php',\n-                       text='test text which will not match with the regex')\n-        testbot.assertCommand(\"!ghetto ...\", \"Shiznit happens!\")\n+    @vcr.use_cassette('tests/cassettes/ghetto.yaml')\n+    def test_ghetto(self):\n+        self.assertCommand(\"!ghetto hi, whats up?\", \"hi, wassup?\")\n+        with requests_mock.Mocker() as m:\n+            m.register_uri('POST', 'http://www.gizoogle.net/textilizer.php',\n+                           text='test text which will not match with the regex')\n+            self.assertCommand(\"!ghetto ...\", \"Shiznit happens!\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc0MTcyMw==","createdAt":"2018-08-10T09:13:44Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:32:57Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:32:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE1NzMyMQ==","url":"https://github.com/coala/corobo/pull/577#discussion_r209157321","bodyText":"you should be able to use requests-mock to break IGitt so it gives a RuntimeError , but ... not critical ... this is OK for now","diffHunk":"@@ -65,7 +68,7 @@ def __init__(self, bot, name=None):\n                              filter(lambda x: (x.full_name.split('/')[0] ==\n                                                self.GH_ORG_NAME),\n                                     self.IGH.write_repositories)}\n-        except RuntimeError:\n+        except RuntimeError:  # pragma: no cover, for logging","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzczODAyMw==","createdAt":"2018-08-10T07:55:39Z","content":"HEART","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-10T06:36:20Z","lastEditedAt":null,"updatedAt":"2018-08-10T06:36:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTM3MzYxMg==","url":"https://github.com/coala/corobo/pull/577#issuecomment-405373612","bodyText":"Blocked until corobotestcase in plugins is implemented.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-16T20:36:12Z","lastEditedAt":"2018-08-02T07:57:09Z","updatedAt":"2018-08-02T07:57:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgxNzA5MQ==","url":"https://github.com/coala/corobo/pull/577#issuecomment-406817091","bodyText":"Still relevant?","diffHunk":null,"author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"reactions":[],"createdAt":"2018-07-21T19:03:26Z","lastEditedAt":null,"updatedAt":"2018-07-21T19:03:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTQ4NzI2NQ==","url":"https://github.com/coala/corobo/pull/577#issuecomment-411487265","bodyText":"Yes, I was working on that only.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-08T17:28:13Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:28:13Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534132782000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/578","number":578,"title":"Emojis for rage, heart eyes, cake, and penguin have been added. 😡😍🎂🐧","body":"Closes #229\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":4,"createdAt":"2018-07-04T19:11:52Z","updatedAt":"2018-08-13T03:59:42Z","closedAt":"2018-08-13T03:59:42Z","state":"closed","user":{"login":"AnirudhaRamesh","avatarUrl":"https://avatars0.githubusercontent.com/u/30972131?v=4"},"owner":{"login":"AnirudhaRamesh","avatarUrl":"https://avatars0.githubusercontent.com/u/30972131?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/578","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMjU0Njc4OA==","url":"https://github.com/coala/corobo/pull/578#issuecomment-402546788","bodyText":"Newcomer, 1st issue :)\n@meetmangukiya","diffHunk":null,"author":{"login":"AnirudhaRamesh","avatarUrl":"https://avatars0.githubusercontent.com/u/30972131?v=4","name":"Anirudha Ramesh"},"createdAt":"2018-07-04T19:24:30Z","lastEditedAt":null,"updatedAt":"2018-07-04T19:24:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjg4OTUzOQ==","url":"https://github.com/coala/corobo/pull/578#issuecomment-402889539","bodyText":"Please read and follow https://coala.io/commit carefully.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-06T00:28:26Z","lastEditedAt":null,"updatedAt":"2018-07-06T00:28:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzAwNTc0OA==","url":"https://github.com/coala/corobo/pull/578#issuecomment-403005748","bodyText":"@AnirudhaRamesh this change is not really required IMHO. You can get assigned to an issue with label 'difficulty/newcomer' first and then open a PR as a solution for that issue.","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-07-06T11:19:30Z","lastEditedAt":"2018-07-06T14:43:34Z","updatedAt":"2018-07-06T14:43:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQwMjg2NQ==","url":"https://github.com/coala/corobo/pull/578#issuecomment-412402865","bodyText":"Abandoned PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T03:59:42Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:59:42Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535453840000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/580","number":580,"title":"searchdocs_test: change http to https","body":"Closes #579\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2018-07-11T13:43:42Z","updatedAt":"2018-08-28T10:57:20Z","closedAt":null,"state":"open","user":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"owner":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"assignee":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4"},"labels":[{"name":"area/tests","color":"5facd8"},{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/580","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNDE3NTkxMQ==","url":"https://github.com/coala/corobo/pull/580#issuecomment-404175911","bodyText":"Can anyone help me to rectify what is wrong with this?","diffHunk":null,"author":{"login":"ankitb073","avatarUrl":"https://avatars2.githubusercontent.com/u/38665863?v=4","name":null},"reactions":[],"createdAt":"2018-07-11T13:48:17Z","lastEditedAt":null,"updatedAt":"2018-07-11T13:48:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNDIxNDUwNA==","url":"https://github.com/coala/corobo/pull/580#issuecomment-404214504","bodyText":"@ankitb073 It might look overwhelming, but go through the logs once and check where the test's fails.\nAlso, check the searchdocs plugin and make the changes required to return a https link. :)","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-07-11T15:36:35Z","lastEditedAt":null,"updatedAt":"2018-07-11T15:36:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjU0MjY5Mw==","url":"https://github.com/coala/corobo/pull/580#issuecomment-416542693","bodyText":"@ankitb073 ping. Come on finish it up, you are really close ;)","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-28T10:57:20Z","lastEditedAt":null,"updatedAt":"2018-08-28T10:57:20Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534143783000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/595","number":595,"title":"as ","body":"Closes #579\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":3,"createdAt":"2018-08-01T20:45:03Z","updatedAt":"2018-08-13T07:03:03Z","closedAt":"2018-08-13T07:03:03Z","state":"closed","user":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"owner":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/595","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwOTcyMTkxNA==","url":"https://github.com/coala/corobo/pull/595#issuecomment-409721914","bodyText":"Please read #579 (comment)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T21:02:25Z","lastEditedAt":null,"updatedAt":"2018-08-01T21:02:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQyNjI1NQ==","url":"https://github.com/coala/corobo/pull/595#issuecomment-412426255","bodyText":"Created duplicate PRs that are broken.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T07:03:03Z","lastEditedAt":null,"updatedAt":"2018-08-13T07:03:03Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534046570000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/597","number":597,"title":"DefaultConfigMixin: Modify implementation","body":"Store the default values in CONFIG_TEMPLATE and\nthen allow a subset of those config variables\noverridden in the config.py's DEFAULT_CONFIG.\nCloses #596","comments":25,"createdAt":"2018-08-04T14:30:20Z","updatedAt":"2018-08-12T04:02:50Z","closedAt":"2018-08-12T03:48:55Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/ci","color":"ab04e8"},{"name":"area/config","color":"60a1db"},{"name":"area/labhub","color":"63ccf9"},{"name":"difficulty/low","color":"207de5"},{"name":"enhancement","color":"84b6eb"},{"name":"importance/low","color":"f9d0c4"},{"name":"importance/medium","color":"ddba61"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/597","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcxNDg2MQ==","url":"https://github.com/coala/corobo/pull/597#discussion_r207714861","bodyText":"Why change from 500 to 50?","diffHunk":"@@ -38,8 +38,7 @@ def setUp(self):\n         extra_config = {\n             'DEFAULT_CONFIG': {\n                 'SpammingAlert': {\n-                    'MAX_MSG_LEN': 500,\n-                    'MAX_LINES': 5,\n+                    'MAX_MSG_LEN': 50,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NjYzMQ==","createdAt":"2018-08-04T19:52:13Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-04T17:47:36Z","lastEditedAt":null,"updatedAt":"2018-08-04T17:47:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcxNzkxNg==","url":"https://github.com/coala/corobo/pull/597#discussion_r207717916","bodyText":"misjudgement","diffHunk":"@@ -38,8 +38,7 @@ def setUp(self):\n         extra_config = {\n             'DEFAULT_CONFIG': {\n                 'SpammingAlert': {\n-                    'MAX_MSG_LEN': 500,\n-                    'MAX_LINES': 5,\n+                    'MAX_MSG_LEN': 50,","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NjYzMw==","createdAt":"2018-08-04T19:52:18Z","content":"THUMBS_DOWN","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-04T19:52:10Z","lastEditedAt":null,"updatedAt":"2018-08-04T19:52:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTIyMzU0Nw==","url":"https://github.com/coala/corobo/pull/597#discussion_r209223547","bodyText":"why this?\nThat is the default, so an override shouldnt be necessary, iiuc","diffHunk":"@@ -9,12 +9,24 @@\n \n class WolframAlphaTest(IsolatedTestCase):\n \n+    def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'WolframAlpha': {\n+                    'WA_TOKEN': None,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T11:03:51Z","lastEditedAt":null,"updatedAt":"2018-08-10T11:03:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTIyNTYwNA==","url":"https://github.com/coala/corobo/pull/597#discussion_r209225604","bodyText":"Yes, this was excessive, removed it.","diffHunk":"@@ -9,12 +9,24 @@\n \n class WolframAlphaTest(IsolatedTestCase):\n \n+    def setUp(self):\n+        extra_config = {\n+            'DEFAULT_CONFIG': {\n+                'WolframAlpha': {\n+                    'WA_TOKEN': None,","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-10T11:15:12Z","lastEditedAt":null,"updatedAt":"2018-08-10T11:15:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTIzMDc0Ng==","url":"https://github.com/coala/corobo/pull/597#discussion_r209230746","bodyText":"this looks wrong.\nThe current config is self.answer_end_point","diffHunk":"@@ -24,6 +26,7 @@ def test_answer(self):\n         self.assertIn('Please checkout the following links', self.pop_message())\n         self.push_message('!answer shell autocompletion')\n         self.assertIn('Please checkout the following links', self.pop_message())\n+        self.assertCommand('!plugin config answer', '{\\'ANSWER_END\\': None}')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T11:39:54Z","lastEditedAt":null,"updatedAt":"2018-08-10T11:39:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzOTkzNw==","url":"https://github.com/coala/corobo/pull/597#discussion_r209439937","bodyText":"incorrect syntax!!","diffHunk":"@@ -10,31 +10,28 @@ def _default_config(self):\n \n     def __init__(self, bot, name=None):\n         super().__init__(bot, name=name)\n-        default_config = self._default_config\n-        if default_config and not hasattr(self, 'config'):\n-            self.configure(default_config)\n+        if not hasattr(self, 'CONFIG_TEMPLATE'):  # pragma: no cover\n+            self.log.error('CONFIG_TEMPLATE for plugin %s is missing.', self.name)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T23:53:27Z","lastEditedAt":null,"updatedAt":"2018-08-11T23:53:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQzOTk4MQ==","url":"https://github.com/coala/corobo/pull/597#discussion_r209439981","bodyText":"use self.answer_end_point , and dont # Ignore InvalidLinkBear","diffHunk":"@@ -24,6 +26,9 @@ def test_answer(self):\n         self.assertIn('Please checkout the following links', self.pop_message())\n         self.push_message('!answer shell autocompletion')\n         self.assertIn('Please checkout the following links', self.pop_message())\n+        self.assertCommand('!plugin config answer',\n+                           # Ignore InvalidLinkBear\n+                           '{\\'ANSWER_END\\': \\'http://0.0.0.0:8000\\'}')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T23:56:18Z","lastEditedAt":null,"updatedAt":"2018-08-11T23:56:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5MTA2NA==","url":"https://github.com/coala/corobo/pull/597#issuecomment-410491064","bodyText":"I would like to see separate commits included in this PR for all of the configuration upgrades which we need (except for LabHub):\n\n#380\n#381\n#383\n\nAny others?\nOnly by putting them all in here together can we ensure that this is the last change needed to DefaultConfigMixin for your project.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NTYwMw==","createdAt":"2018-08-05T12:50:21Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-05T02:32:26Z","lastEditedAt":"2018-08-05T02:33:44Z","updatedAt":"2018-08-05T02:33:44Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533450303000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/598","number":598,"title":"GitStats: Remove LabHub inheritance","body":"Inheritence was resulting in labhub commands\nbeing triggered twice when used. This creates\ndependency on labhub instead of inheritance.\nFixes #441","comments":5,"createdAt":"2018-08-04T20:58:54Z","updatedAt":"2018-08-05T06:25:03Z","closedAt":"2018-08-05T00:30:32Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"ddba61"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/598","comments":[]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1535376796000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/599","number":599,"title":"Make noisy commands private to org members","body":"Pitchfork command is accessible only by\nmembers of the organization.\nCloses #358","comments":14,"createdAt":"2018-08-04T22:35:10Z","updatedAt":"2018-08-27T13:33:16Z","closedAt":"2018-08-13T13:20:23Z","state":"merged","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"b60205"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/599","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMjc4Mw==","url":"https://github.com/coala/corobo/pull/599#discussion_r207722783","bodyText":"why change name?","diffHunk":"@@ -1,6 +1,7 @@\n [Core]\n-name = pitchfork\n+name = Pitchfork","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:00:27Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:00:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMjgwMA==","url":"https://github.com/coala/corobo/pull/599#discussion_r207722800","bodyText":"Many of our plugins which be changed to using labhub permissions.\ncreate a LabHubTestCase subclassing CoroboTestCase which does all the setUp necessary for testing a plugin which depends on LabHub.","diffHunk":"@@ -1,9 +1,54 @@\n-pytest_plugins = ['errbot.backends.test']\n-extra_plugin_dir = 'plugins'\n+import github3\n+import IGitt\n+import plugins.labhub\n+import plugins.pitchfork\n \n+from unittest.mock import PropertyMock\n+from unittest.mock import create_autospec\n+from tests.corobo_test_case import CoroboTestCase\n \n-def test(testbot):\n-    testbot.assertCommand('!pitchfork @meet', 'being pitchforked')\n-    testbot.assertCommand('!pitchfork @meet down to hell', 'being pitchforked')\n-    testbot.assertCommand('!pitchfork meet to hell', 'being pitchforked')\n-    testbot.assertCommand('!pitchfork', 'Usage')\n+\n+class TestPitchfork(CoroboTestCase):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2MTg1Mg==","createdAt":"2018-08-05T06:27:41Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-08-05T01:02:15Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:02:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyMzA3NQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r207723075","bodyText":"It shouldnt be necessary for all our plugins to have this duplicated activate code.\nAgain, creating a subclass or mixin for those plugins would be helpful.","diffHunk":"@@ -3,14 +3,20 @@\n import textwrap\n \n from errbot import BotPlugin, botcmd\n+from plugins.labhub import members_only\n \n \n class Pitchfork(BotPlugin):\n     \"\"\"\n     To pitchfork users down to ...\n     \"\"\"\n \n+    def activate(self):\n+        super().activate()\n+        self.team_mapping = self.get_plugin('LabHub').team_mapping","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:29:28Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:29:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNjU5Nw==","url":"https://github.com/coala/corobo/pull/599#discussion_r207726597","bodyText":"To make it workable with CoroboTestCase. According to errbot documentation plugin name and the class name should be same.\n\nThe key Name should be identical to the name you gave to the class in your plugin file, which in our case was HelloWorld. While these names can differ, doing so is not recommended.","diffHunk":"@@ -1,6 +1,7 @@\n [Core]\n-name = pitchfork\n+name = Pitchfork","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-05T06:27:35Z","lastEditedAt":"2018-08-05T06:39:32Z","updatedAt":"2018-08-05T06:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1ODQyOQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r209458429","bodyText":"not done\nand also this shouldnt be using labhub directly.\nlabhub should be providing a filter\n#599 (review)","diffHunk":"@@ -3,14 +3,20 @@\n import textwrap\n \n from errbot import BotPlugin, botcmd\n+from plugins.labhub import members_only\n \n \n class Pitchfork(BotPlugin):\n     \"\"\"\n     To pitchfork users down to ...\n     \"\"\"\n \n+    def activate(self):\n+        super().activate()\n+        self.team_mapping = self.get_plugin('LabHub').team_mapping","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T15:04:45Z","lastEditedAt":null,"updatedAt":"2018-08-12T15:04:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ1ODQ2OQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r209458469","bodyText":"we do not want to make everything dependant on labhub in order to prevent people from misusing all of the other commands.","diffHunk":"@@ -3,14 +3,20 @@\n import textwrap\n \n from errbot import BotPlugin, botcmd\n+from plugins.labhub import members_only","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-12T15:06:08Z","lastEditedAt":null,"updatedAt":"2018-08-12T15:06:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMDQxMw==","url":"https://github.com/coala/corobo/pull/599#discussion_r209500413","bodyText":"ideally this is configurable, but that can be done after gsoc.\nput it in constants for now.","diffHunk":"@@ -108,6 +89,21 @@ def team_mapping(self):\n             'maintainers': self.TEAMS[self.GH_ORG_NAME + ' maintainers'],\n         }\n \n+    @cmdfilter\n+    def members_only(self, msg, cmd, args, dry_run):\n+        user = msg.frm.nick\n+        commands = ['assign_cmd', 'create_issue_cmd', 'invite_cmd', 'mark_cmd',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:22:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:22:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMDQ0NA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209500444","bodyText":"yield is better than return.","diffHunk":"@@ -138,42 +133,40 @@ def invite_cmd(self, msg, match):\n \n         valid_teams = self.team_mapping()\n         if team not in valid_teams:\n-            yield 'Please select from one of the valid teams: ' + ', '.join(\n+            return 'Please select from one of the valid teams: ' + ', '.join(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:22:38Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:22:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMTE5NQ==","url":"https://github.com/coala/corobo/pull/599#discussion_r209501195","bodyText":"cant we also emit a message 'You need to be a member of this organization to use this command.' so that the tests dont change?\nperhaps change it to return None, 'echo', 'You need to be a member of this organization to use this command.' and add an echo command?","diffHunk":"@@ -108,6 +89,21 @@ def team_mapping(self):\n             'maintainers': self.TEAMS[self.GH_ORG_NAME + ' maintainers'],\n         }\n \n+    @cmdfilter\n+    def members_only(self, msg, cmd, args, dry_run):\n+        user = msg.frm.nick\n+        commands = ['assign_cmd', 'create_issue_cmd', 'invite_cmd', 'mark_cmd',\n+                    'pr_stats', 'unassign_cmd', 'pitchfork', 'the_rules', 'wa',\n+                    'answer', 'lmgtfy', 'ghetto', 'explain', 'nevermind']\n+\n+        if cmd in commands:\n+            for team in self.team_mapping().values():\n+                if team.is_member(user):\n+                    return msg, cmd, args\n+            return None, None, None","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:27:33Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:27:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMTMzNA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209501334","bodyText":"ideally this test doesnt change, but if it has to, change this to garbage so it is obvious it shouldnt work","diffHunk":"@@ -180,13 +183,14 @@ def test_create_issue_cmd(self):\n \n         # not a member of org\n         self.mock_team.is_member.return_value = False\n-        testbot_public.assertCommand(\n-            textwrap.dedent('''\\\n-                !new issue repository this is the title\n-                body\n-            '''),\n-            'You need to be a member of this organization to use this command.'\n-        )\n+        with self.assertRaises(queue.Empty):\n+            testbot_public.assertCommand(\n+                textwrap.dedent('''\\\n+                    !new issue repository this is the title\n+                    body\n+                '''),\n+                'Here you go'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:28:33Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:28:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUwMTQ5Mw==","url":"https://github.com/coala/corobo/pull/599#discussion_r209501493","bodyText":"something more crazy than :poop: ; that still feels like it might be a legitimate response from the command.","diffHunk":"@@ -106,10 +106,13 @@ def test_invite_cmd(self):\n         mock_team_newcomers.is_member.return_value = False\n         mock_team_developers.is_member.return_value = False\n         mock_team_maintainers.is_member.return_value = False\n+        self.mock_team.is_member.return_value = False\n+        self.labhub.TEAMS = self.teams\n \n-        testbot.assertCommand(\n-            '!invite meet to newcomers',\n-            'You need to be a member of this organization to use this command')\n+        with self.assertRaises(queue.Empty):\n+            testbot.assertCommand(\n+                '!invite meet to newcomers',\n+                ':poop:')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T06:29:38Z","lastEditedAt":null,"updatedAt":"2018-08-13T06:29:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTUyOTI1MA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209529250","bodyText":"Okay, I'll take care of this.","diffHunk":"@@ -108,6 +89,21 @@ def team_mapping(self):\n             'maintainers': self.TEAMS[self.GH_ORG_NAME + ' maintainers'],\n         }\n \n+    @cmdfilter\n+    def members_only(self, msg, cmd, args, dry_run):\n+        user = msg.frm.nick\n+        commands = ['assign_cmd', 'create_issue_cmd', 'invite_cmd', 'mark_cmd',\n+                    'pr_stats', 'unassign_cmd', 'pitchfork', 'the_rules', 'wa',\n+                    'answer', 'lmgtfy', 'ghetto', 'explain', 'nevermind']\n+\n+        if cmd in commands:\n+            for team in self.team_mapping().values():\n+                if team.is_member(user):\n+                    return msg, cmd, args\n+            return None, None, None","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-08-13T08:35:22Z","lastEditedAt":null,"updatedAt":"2018-08-13T08:35:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTU3MjkwNg==","url":"https://github.com/coala/corobo/pull/599#discussion_r209572906","bodyText":"why is this being changed?","diffHunk":"@@ -421,7 +422,7 @@ def test_mark_cmd(self):\n         # not a member of org\n         self.mock_team.is_member.return_value = False\n         testbot.assertCommand(\n-            cmd_github.format('pending review', 'coala', 'a', '23'),\n+            cmd_github.format('pending review', 'coala', 'test', '23'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T11:18:57Z","lastEditedAt":null,"updatedAt":"2018-08-13T11:18:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTU3MzAyMA==","url":"https://github.com/coala/corobo/pull/599#discussion_r209573020","bodyText":"Not done yet","diffHunk":"@@ -138,42 +133,40 @@ def invite_cmd(self, msg, match):\n \n         valid_teams = self.team_mapping()\n         if team not in valid_teams:\n-            yield 'Please select from one of the valid teams: ' + ', '.join(\n+            return 'Please select from one of the valid teams: ' + ', '.join(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T11:19:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T11:19:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ4ODY2OQ==","url":"https://github.com/coala/corobo/pull/599#issuecomment-410488669","bodyText":"All other plugins which should disabled: the_rules, wolfram_alpha, answer, lmgtfy, ghetto, explain, nevermind.\ni.e. everything except searchdocs .\nAlso this is blocked by #577 .\nIf LabHub is disabled, all of the corobo plugins (listed at https://github.com/errbotio/errbot/wiki ) should not become useless.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:27:20Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:27:20Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534137795000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/506","number":506,"title":"config.py : Add channel list","body":"Add all the channel to the default channel list.\nUpdated config.py.\n\"coala/\" prefix removed as mentioned.\ncloses #412\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":8,"createdAt":"2018-02-13T19:17:26Z","updatedAt":"2018-08-13T05:23:15Z","closedAt":"2018-08-13T05:23:15Z","state":"closed","user":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4"},"owner":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4"},"assignee":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4"},"labels":[{"name":"area/config","color":"60a1db"},{"name":"difficulty/low","color":"207de5"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/506","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM2NTg2NTIyNg==","url":"https://github.com/coala/corobo/pull/506#issuecomment-365865226","bodyText":"I need little help here.","diffHunk":null,"author":{"login":"sanket-mali","avatarUrl":"https://avatars0.githubusercontent.com/u/5902517?v=4","name":"Sanket Kumar Mali"},"createdAt":"2018-02-15T09:07:08Z","lastEditedAt":null,"updatedAt":"2018-02-15T09:07:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTg2NTU0Ng==","url":"https://github.com/coala/corobo/pull/506#issuecomment-385865546","bodyText":"Squash your commits.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-02T05:01:49Z","lastEditedAt":null,"updatedAt":"2018-05-02T05:01:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTY5Nzg0MA==","url":"https://github.com/coala/corobo/pull/506#issuecomment-409697840","bodyText":"That is not how you squash commits as requested at #506 (comment)\nAsk for help on https://coala.io/chat\nOtherwise this PR will be close and you will be unassigned from the task.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T19:44:02Z","lastEditedAt":null,"updatedAt":"2018-08-01T19:44:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQxMTM0OA==","url":"https://github.com/coala/corobo/pull/506#issuecomment-412411348","bodyText":"PR repository = \"unknown repository\"\nabandoned.  closing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:23:15Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:23:15Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534859991000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/517","number":517,"title":"filters.py: Filter required users","body":"If RESP_ONLY_REQ_USERS configuration is true,\nthen stop responding to users other than those\nin the REQUIRED_USERS list in config.\nCloses #515\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":12,"createdAt":"2018-03-30T07:18:07Z","updatedAt":"2018-08-21T13:59:51Z","closedAt":null,"state":"open","user":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"owner":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"e99695"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/517","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODI2NzI3NA==","url":"https://github.com/coala/corobo/pull/517#discussion_r178267274","bodyText":"this PR isnt about Zulip.  Please remove.  This isnt how we will do Zulip anyway; the patches for Zulip are public.","diffHunk":"@@ -23,7 +23,11 @@ def filters(self, msg, cmd, args, dry_run):\n         return msg, cmd, args\n \n     @cmdfilter\n-    def filter_ignored_users(self, msg, cmd, args, dry_run):\n-        if msg.frm.nick in self.bot_config.IGNORE_USERNAMES:\n+    def filter_users(self, msg, cmd, args, dry_run):\n+        name = msg.frm.fullname if BACKEND == 'Zulip' else msg.frm.nick","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-30T10:02:39Z","lastEditedAt":null,"updatedAt":"2018-03-30T10:02:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4NzkzOQ==","url":"https://github.com/coala/corobo/pull/517#discussion_r209487939","bodyText":"remove \\","diffHunk":"@@ -23,7 +23,10 @@ def filters(self, msg, cmd, args, dry_run):\n         return msg, cmd, args\n \n     @cmdfilter\n-    def filter_ignored_users(self, msg, cmd, args, dry_run):\n+    def filter_users(self, msg, cmd, args, dry_run):\n         if msg.frm.nick in self.bot_config.IGNORE_USERNAMES:\n             return None, None, None\n+        if msg.frm.nick not in self.bot_config.REQUIRED_USERS \\","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T04:09:36Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:09:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4Nzk3NQ==","url":"https://github.com/coala/corobo/pull/517#discussion_r209487975","bodyText":"this must be indented four more spaces to avoid confusion with the statements inside the if block","diffHunk":"@@ -23,7 +23,10 @@ def filters(self, msg, cmd, args, dry_run):\n         return msg, cmd, args\n \n     @cmdfilter\n-    def filter_ignored_users(self, msg, cmd, args, dry_run):\n+    def filter_users(self, msg, cmd, args, dry_run):\n         if msg.frm.nick in self.bot_config.IGNORE_USERNAMES:\n             return None, None, None\n+        if msg.frm.nick not in self.bot_config.REQUIRED_USERS \\\n+            and self.bot_config.RESP_ONLY_REQ_USER:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T04:10:09Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:10:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTU5MTExNQ==","url":"https://github.com/coala/corobo/pull/517#discussion_r211591115","bodyText":"@nvzard Am I doing anything wrong here?","diffHunk":"@@ -0,0 +1,16 @@\n+import queue\n+\n+from tests.isolated_testcase import IsolatedTestCase\n+\n+\n+class FiltersTest(IsolatedTestCase):\n+\n+    def test_filter_users(self):\n+        self.bot_config.RESP_ONLY_REQ_USERS = False","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-08-21T12:47:51Z","lastEditedAt":null,"updatedAt":"2018-08-21T12:47:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYxNDc0Mg==","url":"https://github.com/coala/corobo/pull/517#discussion_r211614742","bodyText":"@Vamshi99 IsolatedTestCase loads all the plugins present in plugins/ directory except LabHub, hence this filter is not loaded by the bot since it is in utils/ dir.","diffHunk":"@@ -0,0 +1,16 @@\n+import queue\n+\n+from tests.isolated_testcase import IsolatedTestCase\n+\n+\n+class FiltersTest(IsolatedTestCase):\n+\n+    def test_filter_users(self):\n+        self.bot_config.RESP_ONLY_REQ_USERS = False","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-08-21T13:56:30Z","lastEditedAt":"2018-08-21T13:59:51Z","updatedAt":"2018-08-21T13:59:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzUyMzcwNQ==","url":"https://github.com/coala/corobo/pull/517#issuecomment-377523705","bodyText":"@jayvdb Updated","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2018-03-30T13:26:23Z","lastEditedAt":null,"updatedAt":"2018-03-30T13:26:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzUxOTY1MQ==","url":"https://github.com/coala/corobo/pull/517#issuecomment-397519651","bodyText":"Up for grabs, or is anyone working on it @jayvdb.","diffHunk":null,"author":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4","name":"rishabh"},"createdAt":"2018-06-15T05:44:43Z","lastEditedAt":null,"updatedAt":"2018-06-15T05:44:43Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136906000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/521","number":521,"title":"labhub.py: add migrate_issue plugin","body":"Introduce migrate_issue plugin that adds ability\nto migrate an issue from a source repo to target\nrepo, both owned by the org.\nIssue title, issue  description and all comments\nare copied with a few additional details appended to\nthe the description and comments. Source issue is\nreferenced in the target issue and is closed after\nthe migration is complete.\nCloses #518\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":11,"createdAt":"2018-04-07T15:56:04Z","updatedAt":"2018-08-13T05:08:26Z","closedAt":null,"state":"open","user":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4"},"owner":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4"},"assignee":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4"},"labels":[{"name":"cool and awesome","color":"5319e7"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/521","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTY3Mg==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921672","bodyText":"Please make this workable for gitlab repos as well. The whole point of labhub is to provide a unified front for both GitHub and GitLab, and hence the name LabHub 😉","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:49:26Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:49:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTczMg==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921732","bodyText":"use, if not... so we can remove the reduntant if block and the contained pass statement","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:51:12Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:51:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTczOQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921739","bodyText":"Same as above","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:51:26Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:51:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTc2MA==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921760","bodyText":"RuntimeError in IGitt is not always 404s 😅","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:52:14Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:52:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTc4Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921787","bodyText":"else block is not needed, remove it","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:53:02Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:53:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTg1OA==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921858","bodyText":"maybe include the author as well? Migrate issue opened by @author from ... so the author the issue follows new issue as well","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:54:51Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:54:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTkzNQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r179921935","bodyText":"Just concatenate this above, concatenation in function args doesn't look good and is confusing","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(\n+            org, repo_name_orig, issue_number) + \\\n+            ' by @' + str(user)\n+\n+        new_issue = self.REPOS[repo_name_final].create_issue(\n+                    new_issue_title, new_issue_description+extra_msg)","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:55:48Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:55:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMjA0Mg==","url":"https://github.com/coala/corobo/pull/521#discussion_r179922042","bodyText":"use for comment in old_issue.comments and get rid of few lines of code here 😉","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(\n+            org, repo_name_orig, issue_number) + \\\n+            ' by @' + str(user)\n+\n+        new_issue = self.REPOS[repo_name_final].create_issue(\n+                    new_issue_title, new_issue_description+extra_msg)\n+        new_issue.labels = old_labels\n+\n+        old_comm = old_issue.comments\n+\n+        for i in range(len(old_comm)):","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-07T16:57:11Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:57:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyNTQyNA==","url":"https://github.com/coala/corobo/pull/521#discussion_r179925424","bodyText":"I was trying the same, but there seems to be some problem with the IGitt module I have installed on my system using pip, as it says author of the issue is not an attribute even though I find this method here: https://gitlab.com/gitmate/open-source/IGitt/blob/master/IGitt/GitHub/GitHubIssue.py and I am not particularly sure why but might be some problem with my system... 😅","diffHunk":"@@ -381,3 +381,100 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://github.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://github.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        org = match.group(1)\n+        repo_name_orig = match.group(2)\n+        issue_number = match.group(3)\n+        user = msg.frm.nick\n+        org2 = match.group(4)\n+        repo_name_final = match.group(5)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if (repo_name_orig in self.REPOS) and (repo_name_final in self.REPOS):\n+            pass\n+        else:\n+            yield 'Repository does not exist!'\n+            return\n+\n+        if self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            pass\n+        else:\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError:\n+            yield 'Issue does not exist!'\n+            return\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+        else:\n+            pass\n+\n+        url1 = 'https://github.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip()\n+        extra_msg = '\\n\\nMigrated issue from '+url1.format(","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-07T19:12:45Z","lastEditedAt":"2018-04-07T19:20:26Z","updatedAt":"2018-04-07T19:20:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTI5Ng==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581296","bodyText":"unrelated change.","diffHunk":"@@ -25,6 +25,7 @@ def setUp(self):\n \n         self.mock_org = create_autospec(github3.orgs.Organization)\n         self.mock_gh = create_autospec(github3.GitHub)\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:34:46Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:34:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTMwMg==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581302","bodyText":"indent only 4 spaces","diffHunk":"@@ -343,3 +344,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+                        'coala maintainers': mock_maint_team,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:35:04Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:35:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTMyMw==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581323","bodyText":"missing whitespace between args","diffHunk":"@@ -343,3 +344,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+                        'coala maintainers': mock_maint_team,\n+                        'coala developers': self.mock_team,\n+                        'coala newcomers': self.mock_team\n+        }\n+        cmd = '!migrate https://github.com/{}/{}/issues/{} https://github.com/{}/{}/'\n+\n+        # Not a maintainer\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'you are not a maintainer!')\n+        # Unknown first org\n+        testbot.assertCommand(cmd.format('coa', 'a', '23','coala','b'),\n+                              'First repository not owned by our org')\n+        # Unknown second org\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coa','b'),\n+                              'Second repository not owned by our org')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'c', '23','coala','b'),\n+                              'First repository does not exist')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coala','e'),\n+                              'Second repository does not exist')\n+        # No issue exists\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message',404))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:35:47Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:35:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU4MTM0OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181581349","bodyText":"use mock_issue instead of shorted name","diffHunk":"@@ -343,3 +344,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+                        'coala maintainers': mock_maint_team,\n+                        'coala developers': self.mock_team,\n+                        'coala newcomers': self.mock_team\n+        }\n+        cmd = '!migrate https://github.com/{}/{}/issues/{} https://github.com/{}/{}/'\n+\n+        # Not a maintainer\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'you are not a maintainer!')\n+        # Unknown first org\n+        testbot.assertCommand(cmd.format('coa', 'a', '23','coala','b'),\n+                              'First repository not owned by our org')\n+        # Unknown second org\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coa','b'),\n+                              'Second repository not owned by our org')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'c', '23','coala','b'),\n+                              'First repository does not exist')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'a', '23','coala','e'),\n+                              'Second repository does not exist')\n+        # No issue exists\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message',404))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'Issue does not exist!')\n+        # Runtime error\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message',403))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'Computer says')\n+        # Issue closed\n+        mock_maint_team.is_member.return_value = True\n+        mock_iss = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)\n+        self.mock_repo.get_issue = Mock(return_value=mock_iss)\n+        mock_iss.labels = PropertyMock()\n+        mock_iss.state = PropertyMock()\n+        mock_iss.state = 'closed'\n+        testbot.assertCommand(cmd.format('coala', 'a', '21','coala','b'),\n+                              'has been closed already')\n+        # Migrate issue\n+        mock_maint_team.is_member.return_value = True\n+        mock_iss = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T12:36:24Z","lastEditedAt":null,"updatedAt":"2018-04-15T12:36:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY0OTQxMQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181649411","bodyText":"why is one called mock_issue and the other issue2?  that is confusing.","diffHunk":"@@ -343,3 +343,110 @@ def test_invite_me(self):\n                               'Command \\\"hey\\\" / \\\"hey there\\\" not found.')\n         with self.assertRaises(queue.Empty):\n              testbot.pop_message()\n+\n+    def test_migrate_issue(self):\n+        plugins.labhub.GitHub = create_autospec(IGitt.GitHub.GitHub.GitHub)\n+        plugins.labhub.GitLab = create_autospec(IGitt.GitLab.GitLab.GitLab)\n+        labhub, testbot = plugin_testbot(plugins.labhub.LabHub, logging.ERROR)\n+        labhub.activate()\n+\n+        labhub.REPOS = {\n+            'a': self.mock_repo,\n+            'b': self.mock_repo\n+        }\n+\n+        mock_maint_team = create_autospec(github3.orgs.Team)\n+        mock_maint_team.is_member.return_value = False\n+\n+        labhub.TEAMS = {\n+            'coala maintainers': mock_maint_team,\n+            'coala developers': self.mock_team,\n+            'coala newcomers': self.mock_team\n+        }\n+        cmd = '!migrate https://github.com/{}/{}/issues/{} https://github.com/{}/{}/'\n+\n+        # Not a maintainer\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'you are not a maintainer!')\n+        # Unknown first org\n+        testbot.assertCommand(cmd.format('coa', 'a', '23', 'coala', 'b'),\n+                              'First repository not owned by our org')\n+        # Unknown second org\n+        testbot.assertCommand(cmd.format('coala', 'a', '23', 'coa', 'b'),\n+                              'Second repository not owned by our org')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'c', '23', 'coala', 'b'),\n+                              'First repository does not exist')\n+        # Repo does not exist\n+        testbot.assertCommand(cmd.format('coala', 'a', '23', 'coala', 'e'),\n+                              'Second repository does not exist')\n+        # No issue exists\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message', 404))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'Issue does not exist!')\n+        # Runtime error\n+        mock_maint_team.is_member.return_value = True\n+        self.mock_repo.get_issue = Mock(side_effect=RuntimeError('Error message', 403))\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'Computer says')\n+        # Issue closed\n+        mock_maint_team.is_member.return_value = True\n+        mock_issue = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)\n+        self.mock_repo.get_issue = Mock(return_value=mock_issue)\n+        mock_issue.labels = PropertyMock()\n+        mock_issue.state = PropertyMock()\n+        mock_issue.state = 'closed'\n+        testbot.assertCommand(cmd.format('coala', 'a', '21', 'coala', 'b'),\n+                              'has been closed already')\n+        # Migrate issue\n+        mock_maint_team.is_member.return_value = True\n+        mock_issue = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)\n+        issue2 = create_autospec(IGitt.GitHub.GitHub.GitHubIssue)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T07:58:01Z","lastEditedAt":null,"updatedAt":"2018-04-16T07:58:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY2OTcwMQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181669701","bodyText":"First & second -> source & target","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:17:17Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:17:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY2OTc4Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r181669787","bodyText":"replace try with if","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:17:37Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:17:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MDIyOQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181670229","bodyText":"this isnt a url .. it is a format string.\nconfusing because here url1 is a format string, but below url2 is a real complete url.","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if repo_name_orig not in self.REPOS:\n+            yield 'First repository does not exist!'\n+            return\n+\n+        if repo_name_final not in self.REPOS:\n+            yield 'Second repository does not exist!'\n+            return\n+\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                yield 'Issue does not exist!'\n+                return\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+\n+        url1 = 'https://{}.com/{}/{}/issues/{}'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:19:14Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:19:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MDM2Mg==","url":"https://github.com/coala/corobo/pull/521#discussion_r181670362","bodyText":"pls dont use line continuations (\\)","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if repo_name_orig not in self.REPOS:\n+            yield 'First repository does not exist!'\n+            return\n+\n+        if repo_name_final not in self.REPOS:\n+            yield 'Second repository does not exist!'\n+            return\n+\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                yield 'Issue does not exist!'\n+                return\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(old_issue.state) == 'closed':\n+            yield 'Issue cannot be migrated as it has been closed already.'\n+            return\n+\n+        url1 = 'https://{}.com/{}/{}/issues/{}'\n+        new_issue_title = old_issue.title\n+        new_issue_description = old_issue.description.rstrip() + '\\n\\n'\n+        issue_author = old_issue.author.username\n+        ext_msg = 'Migrated issue originally opened by @' + issue_author + \\","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:19:42Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:19:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MDc2OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181670769","bodyText":"it is safer to check that it is open.\nthen new states wont surprise everyone.","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'\n+            return\n+\n+        if repo_name_orig not in self.REPOS:\n+            yield 'First repository does not exist!'\n+            return\n+\n+        if repo_name_final not in self.REPOS:\n+            yield 'Second repository does not exist!'\n+            return\n+\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(user):\n+            yield tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=user,\n+            )\n+            return\n+\n+        try:\n+            old_issue = self.REPOS[repo_name_orig].get_issue(int(issue_number))\n+            old_labels = old_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                yield 'Issue does not exist!'\n+                return\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(old_issue.state) == 'closed':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:21:12Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:21:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY3MTM1OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r181671359","bodyText":"If there is only one message, you can use return 'foo' instead of yield & return","diffHunk":"@@ -381,3 +381,103 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-issue-URL-to-be-copied-from> <complete-repo-URL-to-be-copied-into>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from one repo\n+        to another repo of coala\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick\n+        final_host = match.group(5)\n+        org2 = match.group(6)\n+        repo_name_final = match.group(7)\n+\n+        try:\n+            assert org == self.GH_ORG_NAME or org == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'First repository not owned by our org.'\n+            return\n+\n+        try:\n+            assert org2 == self.GH_ORG_NAME or org2 == self.GL_ORG_NAME\n+        except AssertionError:\n+            yield 'Second repository not owned by our org.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T09:23:07Z","lastEditedAt":null,"updatedAt":"2018-04-16T09:23:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA0MTY4OA==","url":"https://github.com/coala/corobo/pull/521#discussion_r182041688","bodyText":"it is a bit strange seeing this variable mixed in amoung all the regex matches.\nplease read every line of your diff and ask yourself if it can be improved.","diffHunk":"@@ -381,3 +381,88 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        orig_host = match.group(1)\n+        org = match.group(2)\n+        repo_name_orig = match.group(3)\n+        issue_number = match.group(4)\n+        user = msg.frm.nick","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T11:39:41Z","lastEditedAt":null,"updatedAt":"2018-04-17T11:39:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDg3Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224877","bodyText":"the regex won't work for gitlab sub groups, see regex for other commands to see how its done","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:12:24Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:12:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDg4Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224887","bodyText":"Since this regex is most likely be duplicated in every command, make a new constant with the regex to match github/gitlab url, and then append it to your command. Do this as part of another issue after this is complete 😉","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:14:01Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:14:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDkwMw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224903","bodyText":"Why?","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:15:29Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:15:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDkzOA==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224938","bodyText":"Remove this and make the string multiline, something like\na = ('some long string which doesnt fit in 80 chars'\n     'Next part of the string. This both will be concantenated into one')","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:19:52Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:19:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDk1Mw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224953","bodyText":"Same as above","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:20:53Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:20:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDk2Nw==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224967","bodyText":"I don't think this is the case for gitlab comments, use IGitt API to get comment link, if it doesn't exist, make upstream contribution","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'\n+\n+        for comment in source_issue.comments:\n+            comm_url = source_url + '#issuecomment-' + str(comment.number)","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:22:00Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:22:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDk3OQ==","url":"https://github.com/coala/corobo/pull/521#discussion_r183224979","bodyText":"Are you sure the time returned has no UTC offset?","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'","author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-04-22T04:22:45Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:22:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODczODUxMw==","url":"https://github.com/coala/corobo/pull/521#discussion_r188738513","bodyText":"@meetmangukiya , I used the same regex as used in unassign_cmd and it uses the same regex. How should I go about this? 😕","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T19:04:20Z","lastEditedAt":null,"updatedAt":"2018-05-16T19:04:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODc0MjAyMA==","url":"https://github.com/coala/corobo/pull/521#discussion_r188742020","bodyText":"I tested it on it on my own forks and there was no UTC offset included there. However, I wasn't able to find documentation explicitly mentioning anything about offsets 😅","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T19:17:18Z","lastEditedAt":null,"updatedAt":"2018-05-16T19:17:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODc0MjQ0OA==","url":"https://github.com/coala/corobo/pull/521#discussion_r188742448","bodyText":"Will be excluding the comment URLs for the current PR and will make another PR when upstream contribution in IGitt is made.","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear\n+               # Ignore LineLengthBear, PyCodeStyleBear\n+               re_cmd_name_help='migrate <complete-source-issue-URL> <complete-target-repo-URL>',\n+               flags=re.IGNORECASE)\n+    def migrate_issue(self, msg, match):\n+        \"\"\"\n+        Migrate an issue from source repo\n+        to target repo owned by the org\n+        \"\"\"\n+        source_host = match.group(1)\n+        source_org = match.group(2)\n+        source_repo = match.group(3)\n+        issue_number = match.group(4)\n+        target_host = match.group(5)\n+        target_org = match.group(6)\n+        target_repo = match.group(7)\n+\n+        migrator = msg.frm.nick\n+\n+        if source_org != self.GH_ORG_NAME and source_org != self.GL_ORG_NAME:\n+            return 'Source repository not owned by our org.'\n+\n+        if target_org != self.GH_ORG_NAME and target_org != self.GL_ORG_NAME:\n+            return 'Target repository not owned by our org.'\n+\n+        if source_repo not in self.REPOS:\n+            return 'Source repository does not exist.'\n+\n+        if target_repo not in self.REPOS:\n+            return 'Target repository does not exist.'\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        if not self.TEAMS[self.GH_ORG_NAME + ' maintainers'].is_member(migrator):\n+            return tenv().get_template(\n+                'labhub/errors/not-maintainer.jinja2.md'\n+            ).render(\n+                action='migrate issues',\n+                target=migrator,\n+            )\n+\n+        try:\n+            source_issue = self.REPOS[source_repo].get_issue(int(issue_number))\n+            source_labels = source_issue.labels\n+\n+        except RuntimeError as err:\n+            sterr, errno = err.args\n+            if errno == 404:\n+                return 'Issue does not exist!'\n+            else:\n+                raise RuntimeError(sterr, errno)\n+\n+        if str(source_issue.state) != 'open':\n+            return 'Issue must be open in order to be migrated!'\n+\n+        source_url = 'https://{}.com/{}/{}/issues/{}'.format(\n+            source_host, source_org, source_repo, issue_number)\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        ext_msg = '\\n\\nThis is a migrated issue originally opened by @{} as {} and was migrated by @{}'\n+        target_issue_desc = source_issue.description.rstrip() + ext_msg.format(\n+            source_issue.author.username, source_url, str(migrator))\n+        target_issue = self.REPOS[target_repo].create_issue(\n+            source_issue.title, target_issue_desc)\n+        target_issue.labels = source_labels\n+\n+        # Ignore LineLengthBear, PyCodeStyleBear\n+        comment_ext = '\\n\\nOriginally commented by @{} on {} UTC and can be seen [here]({})'\n+\n+        for comment in source_issue.comments:\n+            comm_url = source_url + '#issuecomment-' + str(comment.number)","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T19:18:43Z","lastEditedAt":null,"updatedAt":"2018-05-16T19:18:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ5MjY1NA==","url":"https://github.com/coala/corobo/pull/521#discussion_r209492654","bodyText":"What about we only capture the URL here, without using regex to parse it, and then split it with a helper function that can be re-used in each command which takes a git hoster URL ?","diffHunk":"@@ -381,3 +381,90 @@ def pr_stats(self, msg, match):\n                     state=type(self).community_state(pr_count)\n                  )\n         yield reply\n+\n+    @re_botcmd(pattern=r'^migrate\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/+issues/(\\d+)\\s+https://(github|gitlab)\\.com/([^/]+)/([^/]+)/*$',  # Ignore LineLengthBear, PyCodeStyleBear","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:08:26Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:08:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MDQzNjI1Nw==","url":"https://github.com/coala/corobo/pull/521#issuecomment-380436257","bodyText":"Requested changes made, @meetmangukiya","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-11T12:36:56Z","lastEditedAt":null,"updatedAt":"2018-04-11T12:36:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTQyMDI2OA==","url":"https://github.com/coala/corobo/pull/521#issuecomment-381420268","bodyText":"Requested changes made, @jayvdb","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-15T16:43:50Z","lastEditedAt":null,"updatedAt":"2018-04-15T16:43:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTkzNjU4NA==","url":"https://github.com/coala/corobo/pull/521#issuecomment-381936584","bodyText":"Changes made @jayvdb","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-17T10:19:37Z","lastEditedAt":null,"updatedAt":"2018-04-17T10:19:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjA1NjUwNg==","url":"https://github.com/coala/corobo/pull/521#issuecomment-382056506","bodyText":"Made changes as requested, @jayvdb","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-17T16:29:08Z","lastEditedAt":"2018-04-17T16:29:17Z","updatedAt":"2018-04-17T16:29:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzY1MTg0NA==","url":"https://github.com/coala/corobo/pull/521#issuecomment-383651844","bodyText":"Will do @meetmangukiya","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-23T17:13:37Z","lastEditedAt":null,"updatedAt":"2018-04-23T17:13:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTI0NDM0Ng==","url":"https://github.com/coala/corobo/pull/521#issuecomment-389244346","bodyText":"@random-access7 can you please make the requested changes?","diffHunk":null,"author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"createdAt":"2018-05-15T17:15:07Z","lastEditedAt":null,"updatedAt":"2018-05-15T17:15:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTQwMzUwOQ==","url":"https://github.com/coala/corobo/pull/521#issuecomment-389403509","bodyText":"@nvzard, will do by tonight.","diffHunk":null,"author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-05-16T05:56:35Z","lastEditedAt":null,"updatedAt":"2018-05-16T05:56:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjYxMzQ2MQ==","url":"https://github.com/coala/corobo/pull/521#issuecomment-396613461","bodyText":"@random-access7 can you please resolve the merge conflicts? And we will make sure it merges before anything else so it doesn't lead to more conflicts","diffHunk":null,"author":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4","name":"Meet Mangukiya"},"createdAt":"2018-06-12T14:38:21Z","lastEditedAt":null,"updatedAt":"2018-06-12T14:38:21Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533953548000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/550","number":550,"title":"Fix indentation in labhub_test.py","body":"issue #543","comments":4,"createdAt":"2018-06-07T21:34:52Z","updatedAt":"2018-08-11T02:12:28Z","closedAt":"2018-08-11T02:12:28Z","state":"closed","user":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4"},"owner":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/550","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDAyMzgxMA==","url":"https://github.com/coala/corobo/pull/550#discussion_r194023810","bodyText":"Please keep the line length at most 80 characters.","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-06-08T11:03:26Z","lastEditedAt":null,"updatedAt":"2018-06-08T11:03:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDAyNDAzNQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r194024035","bodyText":"Line length 80 chars and just correct the indentation. Eg:\n testbot.assertCommand('!invite meetto newcomers',\n                       'Command \"invite\" / \"invite meetto\" not found.')","diffHunk":"@@ -48,23 +48,17 @@ def test_invite_cmd(self):\n \n         self.mock_team.is_member.return_value = True\n         plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'\n-        testbot.assertCommand('!invite meet to developers',\n-                                   '@meet, you are a part of developers')\n+        testbot.assertCommand('!invite meet to developers', '@meet, you are a part of developers')\n         self.assertEqual(labhub.TEAMS, teams)\n-        testbot.assertCommand('!invite meet to something',\n-                                   'select from one of the')\n+        testbot.assertCommand('!invite meet to something', 'select from one of the')\n \n         self.mock_team.is_member.return_value = False\n \n-        testbot.assertCommand('!invite meet to developers',\n-                                   ':poop:')\n+        testbot.assertCommand('!invite meet to developers', ':poop:')\n \n-        testbot.assertCommand('!invite meetto newcomers',\n-                                   'Command \"invite\" / \"invite meetto\" not found.')\n+        testbot.assertCommand('!invite meetto newcomers', 'Command \"invite\" / \"invite meetto\" not found.')","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-06-08T11:04:46Z","lastEditedAt":null,"updatedAt":"2018-06-08T11:04:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyMjcyNw==","url":"https://github.com/coala/corobo/pull/550#discussion_r194222727","bodyText":"Ok!","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4","name":"Kleberson Gomes"},"reactions":[],"createdAt":"2018-06-09T10:37:05Z","lastEditedAt":null,"updatedAt":"2018-06-09T10:37:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyMjcyOQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r194222729","bodyText":"Ok!","diffHunk":"@@ -48,23 +48,17 @@ def test_invite_cmd(self):\n \n         self.mock_team.is_member.return_value = True\n         plugins.labhub.os.environ['GH_TOKEN'] = 'patched?'\n-        testbot.assertCommand('!invite meet to developers',\n-                                   '@meet, you are a part of developers')\n+        testbot.assertCommand('!invite meet to developers', '@meet, you are a part of developers')\n         self.assertEqual(labhub.TEAMS, teams)\n-        testbot.assertCommand('!invite meet to something',\n-                                   'select from one of the')\n+        testbot.assertCommand('!invite meet to something', 'select from one of the')\n \n         self.mock_team.is_member.return_value = False\n \n-        testbot.assertCommand('!invite meet to developers',\n-                                   ':poop:')\n+        testbot.assertCommand('!invite meet to developers', ':poop:')\n \n-        testbot.assertCommand('!invite meetto newcomers',\n-                                   'Command \"invite\" / \"invite meetto\" not found.')\n+        testbot.assertCommand('!invite meetto newcomers', 'Command \"invite\" / \"invite meetto\" not found.')","author":{"login":"KlebGomes","avatarUrl":"https://avatars2.githubusercontent.com/u/14040125?v=4","name":"Kleberson Gomes"},"reactions":[],"createdAt":"2018-06-09T10:37:10Z","lastEditedAt":null,"updatedAt":"2018-06-09T10:37:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg5NDg5OQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r195894899","bodyText":"@nvzard , why didnt CI pick this up?  Please create an issue about that.","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE4MDAxMQ==","createdAt":"2018-06-16T07:34:06Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-06-16T05:31:34Z","lastEditedAt":"2018-06-16T05:32:13Z","updatedAt":"2018-06-16T05:32:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg5OTQ5NQ==","url":"https://github.com/coala/corobo/pull/550#discussion_r195899495","bodyText":"Done #565","diffHunk":"@@ -104,22 +98,15 @@ def test_create_issue_cmd(self):\n             plugins.labhub.LabHub, logging.ERROR, {'BACKEND': 'text'}\n         )\n         labhub.activate()\n-        labhub.REPOS = {'repository': self.mock_repo,\n-                        'repository.github.io': self.mock_repo}\n+        labhub.REPOS = {'repository': self.mock_repo,'repository.github.io': self.mock_repo}\n \n-        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository this is the title\\nbo\\ndy','Here you go')\n \n-        labhub.REPOS['repository'].create_issue.assert_called_once_with(\n-            'this is the title', 'bo\\ndy\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository'].create_issue.assert_called_once_with('this is the title', 'bo\\ndy\\nOpened by @None at [text]()')\n \n-        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body',\n-                              'Here you go')\n+        testbot_public.assertCommand('!new issue repository.github.io another title\\nand body', 'Here you go')\n \n-        labhub.REPOS['repository.github.io'].create_issue.assert_called_with(\n-            'another title', 'and body\\nOpened by @None at [text]()'\n-        )\n+        labhub.REPOS['repository.github.io'].create_issue.assert_called_with('another title', 'and body\\nOpened by @None at [text]()')","author":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4","name":"Nitanshu"},"reactions":[],"createdAt":"2018-06-16T09:57:27Z","lastEditedAt":null,"updatedAt":"2018-06-16T09:57:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzgxOTA3NQ==","url":"https://github.com/coala/corobo/pull/550#issuecomment-397819075","bodyText":"You have four commits in https://github.com/coala/corobo/pull/550/commits\nWe require one. It should be properly rebased. Using git command line. See http://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-16T15:18:51Z","lastEditedAt":null,"updatedAt":"2018-06-16T15:18:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0NDE1Mg==","url":"https://github.com/coala/corobo/pull/550#issuecomment-412244152","bodyText":"https://github.com/coala/corobo/pull/550/files now does something very different.\nAlso the issue is now stale due to other merged improvements.\nClosing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T02:12:28Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:12:28Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534363381000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/566","number":566,"title":".gitignore: Add .pytest_cache","body":"Closes #536\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":5,"createdAt":"2018-06-20T16:56:44Z","updatedAt":"2018-08-15T20:03:01Z","closedAt":"2018-06-20T23:47:48Z","state":"merged","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/566","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njg2NDI2NQ==","url":"https://github.com/coala/corobo/pull/566#discussion_r196864265","bodyText":"Drop this extra line.","diffHunk":"@@ -45,6 +45,8 @@ nosetests.xml\n coverage.xml\n *,cover\n .hypothesis/\n+.pytest_cache/\n+","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-06-20T17:02:51Z","lastEditedAt":null,"updatedAt":"2018-06-20T17:02:51Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136217000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/403","number":403,"title":"Re_botcmd_fullmatch: Add re_botcmd_fullmatch","body":"Closes #402\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2017-11-27T13:42:04Z","updatedAt":"2018-08-13T04:56:57Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"enhancement","color":"84b6eb"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"},{"name":"status/STALE","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/403","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ5MTc4Mg==","url":"https://github.com/coala/corobo/pull/403#discussion_r209491782","bodyText":"rather than a plugin, we should not use re_botcmd , and instead use a better decorator which does this check and then defers to re_botcmd","diffHunk":"@@ -0,0 +1,35 @@\n+import time\n+import threading\n+\n+from errbot import BotPlugin, botcmd\n+\n+\n+class Re_botcmd_fullmatch(BotPlugin):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T04:56:53Z","lastEditedAt":null,"updatedAt":"2018-08-13T04:56:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0NzMxOTMwMQ==","url":"https://github.com/coala/corobo/pull/403#issuecomment-347319301","bodyText":"test coverage ;)","diffHunk":null,"author":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4","name":"Grant Parajuli"},"createdAt":"2017-11-27T20:34:33Z","lastEditedAt":null,"updatedAt":"2017-11-27T20:34:33Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533429504000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/443","number":443,"title":"git_stats: Do not subclass LabHub","body":"Use proper plugin dependency system.\nFixes #441\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":4,"createdAt":"2017-12-02T03:16:59Z","updatedAt":"2018-08-05T00:38:24Z","closedAt":"2018-08-05T00:38:23Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"ddba61"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"},{"name":"status/STALE","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/443","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ4Njc0MA==","url":"https://github.com/coala/corobo/pull/443#issuecomment-410486740","bodyText":"Duplicate of #598","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T00:38:23Z","lastEditedAt":null,"updatedAt":"2018-08-05T00:38:23Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534154102000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/466","number":466,"title":".travis.yml: Install using pip once","body":"The default install: phase of Travis CI does\npip install -r requirements.txt, which was\nduplicated by the custom before_script: block.\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":30,"createdAt":"2017-12-03T19:42:57Z","updatedAt":"2018-08-13T09:55:02Z","closedAt":"2018-08-13T09:40:38Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/466","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Nzk0MjYzNw==","url":"https://github.com/coala/corobo/pull/466#discussion_r157942637","bodyText":"this regex creates a malformed dep since it just mushes it together. add a newline after the sub? https://travis-ci.org/Mixih/corobo/builds/319014020#L490","diffHunk":"@@ -14,10 +14,9 @@ addons:\n       - libssl-dev\n       - python3-dev\n \n-before_script:\n-  - pip install coala-bears\n-  - pip install -r requirements.txt\n-  - pip install -r test-requirements.txt\n+before_install:\n+  - sed -i '1s/^/coala-bears/' requirements.txt","author":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4","name":"mixih"},"createdAt":"2017-12-20T06:01:42Z","lastEditedAt":"2017-12-20T06:02:01Z","updatedAt":"2017-12-20T06:02:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Nzk0MzE0OQ==","url":"https://github.com/coala/corobo/pull/466#discussion_r157943149","bodyText":"oops ;-)","diffHunk":"@@ -14,10 +14,9 @@ addons:\n       - libssl-dev\n       - python3-dev\n \n-before_script:\n-  - pip install coala-bears\n-  - pip install -r requirements.txt\n-  - pip install -r test-requirements.txt\n+before_install:\n+  - sed -i '1s/^/coala-bears/' requirements.txt","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2017-12-20T06:07:14Z","lastEditedAt":null,"updatedAt":"2017-12-20T06:07:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk2NzU2OA==","url":"https://github.com/coala/corobo/pull/466#issuecomment-352967568","bodyText":"dependency conflict present with this current version https://travis-ci.org/Mixih/corobo/builds/319003240#L896. I suspect a pin is misplaced","diffHunk":null,"author":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4","name":"mixih"},"createdAt":"2017-12-20T05:20:11Z","lastEditedAt":"2017-12-20T05:20:42Z","updatedAt":"2017-12-20T05:20:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk3NDI2MA==","url":"https://github.com/coala/corobo/pull/466#issuecomment-352974260","bodyText":"still conflicting https://travis-ci.org/jayvdb/corobo/builds/319016053#L714","diffHunk":null,"author":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4","name":"mixih"},"createdAt":"2017-12-20T06:10:30Z","lastEditedAt":null,"updatedAt":"2017-12-20T06:10:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTgxMDA4NA==","url":"https://github.com/coala/corobo/pull/466#issuecomment-381810084","bodyText":"There is a travis breakage in the tests, which should get solved first","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T02:24:03Z","lastEditedAt":null,"updatedAt":"2018-04-17T02:24:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTkwODYxNw==","url":"https://github.com/coala/corobo/pull/466#issuecomment-385908617","bodyText":"This is blocked on a pre-release of coala","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-02T08:51:31Z","lastEditedAt":null,"updatedAt":"2018-05-02T08:51:31Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1534136627000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/467","number":467,"title":"Changes to the requirements to be a developer","body":"Closes #425\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.\n\nUpdated corobo message if a newcomer tries to assign an issue above 'difficulty/low' level.","comments":8,"createdAt":"2017-12-04T07:10:54Z","updatedAt":"2018-08-13T05:03:47Z","closedAt":"2018-08-13T05:03:47Z","state":"closed","user":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4"},"owner":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4"},"assignee":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"},{"name":"status/STALE","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/467","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg3ODUyMw==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348878523","bodyText":"Which issue does this PR resolve? You'll have to reference it to the issue link. For reviewers to review.\nPlease read the commit guidelines.","diffHunk":null,"author":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4","name":"Mridu Bhatnagar"},"createdAt":"2017-12-04T07:15:36Z","lastEditedAt":null,"updatedAt":"2017-12-04T07:15:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg4MDIyMg==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348880222","bodyText":"Oh yeah thanks!\nNow should I edit my last commit as explained in the guide, or is there another way to correct it?","diffHunk":null,"author":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4","name":"ALIND SHARMA"},"createdAt":"2017-12-04T07:24:54Z","lastEditedAt":null,"updatedAt":"2017-12-04T07:24:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg4MDYzNA==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348880634","bodyText":"You'll have to amend your commit message. Check Git Basics or Newcomers Docs for that. You'll have to amend your commit message and then do a force push. git commit --amend","diffHunk":null,"author":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4","name":"Mridu Bhatnagar"},"createdAt":"2017-12-04T07:27:08Z","lastEditedAt":"2017-12-04T07:27:23Z","updatedAt":"2017-12-04T07:27:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg4NjQxMw==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348886413","bodyText":"Is this one OK @mridubhatnagar ?","diffHunk":null,"author":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4","name":"ALIND SHARMA"},"createdAt":"2017-12-04T07:58:35Z","lastEditedAt":null,"updatedAt":"2017-12-04T07:58:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg5ODEyMQ==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348898121","bodyText":"Thanx for the specs @jayvdb !\nGlad to have got it reviewed.\nNow I suppose I'll make changes in the code, add it, amend my last commit, and then force push through this same request. The procedure mentioned in the guide to be taken after PR rejection.\nCorrect?","diffHunk":null,"author":{"login":"alindsharmasimply","avatarUrl":"https://avatars0.githubusercontent.com/u/19500809?v=4","name":"ALIND SHARMA"},"createdAt":"2017-12-04T08:54:28Z","lastEditedAt":null,"updatedAt":"2017-12-04T08:54:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM0ODg5ODgzMg==","url":"https://github.com/coala/corobo/pull/467#issuecomment-348898832","bodyText":"Yup; just reuse this PR ; continue as normal.  The only change is you now have a clearer issue to work on.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2017-12-04T08:57:25Z","lastEditedAt":null,"updatedAt":"2017-12-04T08:57:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjQwOTI4Ng==","url":"https://github.com/coala/corobo/pull/467#issuecomment-412409286","bodyText":"Abandoned PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-13T05:03:47Z","lastEditedAt":null,"updatedAt":"2018-08-13T05:03:47Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1533433386000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/483","number":483,"title":"pitchfork.py: Limit pitchfork to developers","body":"Limits the use of pitchfork command to developers\nCloses #358\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":17,"createdAt":"2017-12-15T22:02:23Z","updatedAt":"2018-08-05T01:43:06Z","closedAt":"2018-08-05T01:43:06Z","state":"closed","user":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"owner":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"assignee":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"labels":[{"name":"area/security","color":"fc6805"},{"name":"area/ui","color":"dd02cf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"b60205"},{"name":"size/XS","color":"ededed"},{"name":"status/blocked","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/483","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzI1MA==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337250","bodyText":"\"invier\" -> \"inviter\" ?","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")\n+        inviter = msg.frm.nick\n+\n+        if match and labhub_util.Teams[labhub_util.GH_ORG_NAME +\n+                                       ' developers'].is_member(invier):","author":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4","name":"Pranav Dixit"},"reactions":[],"createdAt":"2017-12-16T08:22:29Z","lastEditedAt":"2017-12-16T08:24:04Z","updatedAt":"2017-12-16T08:24:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzUxMw==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337513","bodyText":"No need to create a object here, just use dependency like explained here. Use what variables you want from Labhub","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-16T08:39:52Z","lastEditedAt":null,"updatedAt":"2017-12-16T08:39:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzU0MA==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337540","bodyText":"It should not be in a single if statement, it should be nested if-else statements. give some message if command user is not a developer.","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")\n+        inviter = msg.frm.nick\n+\n+        if match and labhub_util.Teams[labhub_util.GH_ORG_NAME +","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-16T08:42:17Z","lastEditedAt":null,"updatedAt":"2017-12-16T08:42:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzMzNzU4MA==","url":"https://github.com/coala/corobo/pull/483#discussion_r157337580","bodyText":"inviter is not a proper variable name here, give a suitable variable name for this command.","diffHunk":"@@ -17,7 +18,11 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n-        if match:\n+        labhub_util = LabHub(\"bot\")\n+        inviter = msg.frm.nick","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-16T08:45:09Z","lastEditedAt":null,"updatedAt":"2017-12-16T08:45:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTQyOTQ4MQ==","url":"https://github.com/coala/corobo/pull/483#discussion_r159429481","bodyText":"is this supposed to create 💩 emoji? I don't think you should be doing that 😦","diffHunk":"@@ -17,23 +17,31 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n+        GH_ORG_NAME = self.get_plugin('LabHub').GH_ORG_NAME\n+        teams = self.get_plugin('LabHub').TEAMS()\n+        issuer = msg.frm.nick\n         if match:\n-            user = match.group(1)\n-            place = match.group(2) if match.group(2) else 'offtopic'\n-            return textwrap.dedent((\n-                string.Template(\"\"\"\n-                    @$user, you are being pitchforked down to $place\n-                    ```\n-                                                          .+====----->\n-                                                           \\('\n-                    =====================================<%{%{%{>>+===---> $user\n-                                                           /(,\n-                                                          .+====----->\n-                    ```\n-                \"\"\").substitute(user=user,\n-                                place=('[offtopic]('\n-                                       'https://gitter.im/coala/coala/offtopic)'\n-                                       if place == 'offtopic' else place))\n-                ))\n+            if teams[GH_ORG_NAME + ' developers'].is_member(issuer):\n+                user = match.group(1)\n+                place = match.group(2) if match.group(2) else 'offtopic'\n+                return textwrap.dedent((\n+                    string.Template(\"\"\"\n+                        @$user, you are being pitchforked down to $place\n+                        ```\n+                                                              .+====----->\n+                                                               \\('\n+                        ================================<%{%{%{>>+===---> $user\n+                                                               /(,\n+                                                              .+====----->\n+                        ```\n+                    \"\"\").substitute(user=user,\n+                                    place=('[offtopic]('\n+                                           'https://gitter.im/coala/'\n+                                           'coala/offtopic)'\n+                                           if place == 'offtopic' else place))\n+                    ))\n+            else:\n+                return ('@{}, you are not a developer, only developers can'\n+                        ' invite other people. Nice try :poop:'.format(issuer))","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:55:01Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:55:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTQzMjMzOA==","url":"https://github.com/coala/corobo/pull/483#discussion_r159432338","bodyText":"Haha yeah this message i copied from the LabHub.py when the invite command is being issued by someone who is a newcomer and isn't authorized to do so :p","diffHunk":"@@ -17,23 +17,31 @@ def pitchfork(self, msg, arg):\n         \"\"\"\n         match = re.match(r'@?([\\w-]+)(?:\\s+(?:down\\s+)?to\\s+(.+))?$',\n                          arg)\n+        GH_ORG_NAME = self.get_plugin('LabHub').GH_ORG_NAME\n+        teams = self.get_plugin('LabHub').TEAMS()\n+        issuer = msg.frm.nick\n         if match:\n-            user = match.group(1)\n-            place = match.group(2) if match.group(2) else 'offtopic'\n-            return textwrap.dedent((\n-                string.Template(\"\"\"\n-                    @$user, you are being pitchforked down to $place\n-                    ```\n-                                                          .+====----->\n-                                                           \\('\n-                    =====================================<%{%{%{>>+===---> $user\n-                                                           /(,\n-                                                          .+====----->\n-                    ```\n-                \"\"\").substitute(user=user,\n-                                place=('[offtopic]('\n-                                       'https://gitter.im/coala/coala/offtopic)'\n-                                       if place == 'offtopic' else place))\n-                ))\n+            if teams[GH_ORG_NAME + ' developers'].is_member(issuer):\n+                user = match.group(1)\n+                place = match.group(2) if match.group(2) else 'offtopic'\n+                return textwrap.dedent((\n+                    string.Template(\"\"\"\n+                        @$user, you are being pitchforked down to $place\n+                        ```\n+                                                              .+====----->\n+                                                               \\('\n+                        ================================<%{%{%{>>+===---> $user\n+                                                               /(,\n+                                                              .+====----->\n+                        ```\n+                    \"\"\").substitute(user=user,\n+                                    place=('[offtopic]('\n+                                           'https://gitter.im/coala/'\n+                                           'coala/offtopic)'\n+                                           if place == 'offtopic' else place))\n+                    ))\n+            else:\n+                return ('@{}, you are not a developer, only developers can'\n+                        ' invite other people. Nice try :poop:'.format(issuer))","author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T14:09:53Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:09:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1MjIxMTczMg==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352211732","bodyText":"@Vamshi99  @prnvdixit  Do you guys have any idea why the seamaphoreci is failing ?? It's not showing any error in particular to the change I have made","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2017-12-16T21:04:59Z","lastEditedAt":null,"updatedAt":"2017-12-16T21:04:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1MjIzOTUwNA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352239504","bodyText":"@aashraybhandar1 No idea 😕","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[],"createdAt":"2017-12-17T08:16:31Z","lastEditedAt":null,"updatedAt":"2017-12-17T08:16:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk0NTcwNg==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352945706","bodyText":"@aashraybhandar1 , @Vamshi99 , Read the log.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2017-12-20T02:20:28Z","lastEditedAt":null,"updatedAt":"2017-12-20T02:20:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1Mjk3NTM4Mw==","url":"https://github.com/coala/corobo/pull/483#issuecomment-352975383","bodyText":"@jayvdb @Vamshi99  One of the errors it's showing is that it's not able to load the LabHub plugin due to error while it's trying to do init ... I imported the plugin according to   this , can you help me how to overcome it? It's currently not able to load GH_ORG_NAME","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2017-12-20T06:18:06Z","lastEditedAt":"2017-12-20T15:15:19Z","updatedAt":"2017-12-20T15:15:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NDE1NDM0MQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-354154341","bodyText":"@jayvdb any suggestions? I'm stuck","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2017-12-27T18:21:19Z","lastEditedAt":null,"updatedAt":"2017-12-27T18:21:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAwNjA0Nw==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355006047","bodyText":"@aashraybhandar1 your log says\n=================================== FAILURES ===================================\n_____________________________________ test _____________________________________\n\ntestbot = <errbot.backends.test.TestBot object at 0x7fa81cf86208>\n\n    def test(testbot):\n>       testbot.assertCommand('!pitchfork @meet', 'being pitchforked')\n\ntests/pitchfork_test.py:5: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <errbot.backends.test.TestBot object at 0x7fa81cf86208>\ncommand = '!pitchfork @meet', response = 'being pitchforked', timeout = 5\n\n    def assertCommand(self, command, response, timeout=5):\n        \"\"\"Assert the given command returns the given response\"\"\"\n        self.bot.push_message(command)\n        msg = self.bot.pop_message(timeout)\n>       assert response in msg, \"'{}' not in '{}'\".format(response, msg)\nE       AssertionError: 'being pitchforked' not in 'Command \"pitchfork\" / \"pitchfork @meet\" not found.'\n\n../.pyenv/3.6/lib/python3.6/site-packages/errbot/backends/test.py:457: AssertionError\n\nSo there is an Assertion error at pitchfork_test.py due to the changes you made. Check why its failing.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T12:58:13Z","lastEditedAt":null,"updatedAt":"2018-01-03T12:58:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMDA4Ng==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355010086","bodyText":"@ishanSrt  yes the error is occurring coz the LabHub plugin which is used to determine the group in which the issuer of the command belongs to . The initialization of the plugin is not successful do to some reason which I'm not able to figure out why. I imported the plugin according to link","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T13:20:37Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:20:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMTY5NA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355011694","bodyText":"@aashraybhandar1 won't you need to do something like\nfrom errbot import Labhub\n\nin pitchfork.py as mentioned in your link?\nnot sure though","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:29:25Z","lastEditedAt":"2018-01-03T13:31:31Z","updatedAt":"2018-01-03T13:31:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMjMzOQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355012339","bodyText":"and I think you need to make one more file like labhub.plug as mentioned in errbotio/errbot#1086","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:32:32Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:32:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMjg2OQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355012869","bodyText":"and I think you will need to import it in https://github.com/coala/corobo/blob/master/tests/pitchfork_test.py too\nAgain not sure on this","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:35:14Z","lastEditedAt":null,"updatedAt":"2018-01-03T13:35:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAxMzk3MA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355013970","bodyText":"Also the assertion error says:\nAssertionError: 'being pitchforked' not in 'Command \"pitchfork\" / \"pitchfork @meet\" not found.'\n\nHow did you conclude that the initialisation of plugin wasn't successful?\nAlso from the assertion error, try printing what all commands are there in pitchfork @meet before and after you made the changes, and then try to understand why does 'being pitchforked' goes away after you make changes","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T13:40:38Z","lastEditedAt":"2018-01-03T13:41:57Z","updatedAt":"2018-01-03T13:41:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyMDA1NA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355020054","bodyText":"2017-12-16 20:56:47,811 DEBUG errbot.plugin_manager pitchfork depends on LabHub and LabHub is not activated. Activating it ... 2017-12-16 20:56:47,815 ERROR errbot.plugin_manager Error loading pitchfork Traceback (most recent call last): File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 524, in activate_non_started_plugins self.activate_plugin_with_version_check(pluginInfo) File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 291, in activate_plugin_with_version_check depends_on = self._activate_plugin_dependencies(plugin_info, dep_track) File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 335, in _activate_plugin_dependencies self._activate_plugin(dep_name, dep_track) File \"/usr/local/lib/python3.6/site-packages/errbot/plugin_manager.py\", line 569, in _activate_plugin raise PluginActivationException(\"I don't know this %s plugin\" % name) errbot.plugin_manager.PluginActivationException: I don't know this LabHub plugin\nThis is the error in the logs which states that it's not able to activate the plugin LabHub and the error is being coz of that. There are two ways to use the plugin as mentioned in .Either by writing an activate function or by accessing variables using\nself.get_plugin('DependentPlugin').variable_name\nI used this later approach and there is no need to import the plugin labhub as if you see the sample code mentioned in the document no where is the dependent plugin being imported it's just being mentioned in the .plug file and then accessed using the methods mentioned above. I know there are error in the test files which need to be resolved but the first task of loading the plugin itself is not being successful :/","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T14:08:54Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:08:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyMjgyMA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355022820","bodyText":"I am no expert on errbot so I can only suggest you ways in which you can read and try to understand your problem more, since it says I don't know this LabHub plugin you should read on how to using it. Pretty sure corobo is not the only one using errbot. maybe you stumble upon a code where LabHub is being used correctly. or you can see this too #483 (comment)\nor try the other way as in:\n\nThere are two ways to use the plugin as mentioned in","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T14:20:47Z","lastEditedAt":"2018-01-03T14:22:18Z","updatedAt":"2018-01-03T14:22:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyMzk2Mw==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355023963","bodyText":"also don't leave the failed test, you may solve your problem while fixing that\n\nAlso from the assertion error, try printing what all commands are there in pitchfork @meet before and after you made the changes, and then try to understand why does 'being pitchforked' goes away after you make changes","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-01-03T14:25:36Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:25:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTAyNTkyNA==","url":"https://github.com/coala/corobo/pull/483#issuecomment-355025924","bodyText":"Sure I'll proceed in that direction and try to solve it . Thanks a lot @ishanSrt  😄  If you find out anything else relevant please ping here that would be really helpful.","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"reactions":[],"createdAt":"2018-01-03T14:33:35Z","lastEditedAt":null,"updatedAt":"2018-01-03T14:33:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzMwMzAyMg==","url":"https://github.com/coala/corobo/pull/483#issuecomment-383303022","bodyText":"Problem needs to be fixed in errbot","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzEzODM0MQ==","createdAt":"2018-05-03T10:06:26Z","content":"THUMBS_UP","user":{"login":"nvzard","name":"Nitanshu"}}],"createdAt":"2018-04-21T14:55:20Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:55:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ4OTMxNQ==","url":"https://github.com/coala/corobo/pull/483#issuecomment-410489315","bodyText":"This needs to be implemented as a filter to prevent access to any command based on configuration.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T01:43:06Z","lastEditedAt":null,"updatedAt":"2018-08-05T01:43:06Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533548663000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/170","number":170,"title":"Gitorg.py: Remove unused variable","body":"This removes an unused variable 'e' from the code.\nfixes #165","comments":12,"createdAt":"2018-07-27T18:08:14Z","updatedAt":"2018-08-06T09:44:23Z","closedAt":"2018-08-04T14:32:10Z","state":"merged","user":{"login":"cypher-naman","avatarUrl":"https://avatars1.githubusercontent.com/u/36116312?v=4"},"owner":{"login":"cypher-naman","avatarUrl":"https://avatars1.githubusercontent.com/u/36116312?v=4"},"assignee":{"login":"cypher-naman","avatarUrl":"https://avatars1.githubusercontent.com/u/36116312?v=4"},"labels":[{"name":"area/ci","color":"4c95ad"},{"name":"bug","color":"ee0701"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"enhancement","color":"84b6eb"},{"name":"process/approved","color":"ededed"},{"name":"size/XS","color":"ededed"},{"name":"type/style","color":"93f486"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/170","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzMTMyNw==","url":"https://github.com/coala/community/pull/170#discussion_r205931327","bodyText":"log the exception in the next line","diffHunk":"@@ -52,7 +52,7 @@ def get_issue(url):\n         return\n     try:\n         issue = repo.get_issue(int(issue_number))\n-    except Exception as e:\n+    except Exception:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T03:36:51Z","lastEditedAt":null,"updatedAt":"2018-07-28T03:36:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjE2Nzc0NA==","url":"https://github.com/coala/community/pull/170#discussion_r206167744","bodyText":"How and where should I log them?","diffHunk":"@@ -52,7 +52,7 @@ def get_issue(url):\n         return\n     try:\n         issue = repo.get_issue(int(issue_number))\n-    except Exception as e:\n+    except Exception:","author":{"login":"cypher-naman","avatarUrl":"https://avatars1.githubusercontent.com/u/36116312?v=4","name":"Naman Sharma"},"createdAt":"2018-07-30T14:49:22Z","lastEditedAt":null,"updatedAt":"2018-07-30T14:49:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjE3MjUyMw==","url":"https://github.com/coala/community/pull/170#discussion_r206172523","bodyText":"e holds the exception. Don't remove it, log it. logger.error in the next line does that.","diffHunk":"@@ -52,7 +52,7 @@ def get_issue(url):\n         return\n     try:\n         issue = repo.get_issue(int(issue_number))\n-    except Exception as e:\n+    except Exception:","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-30T14:54:54Z","lastEditedAt":null,"updatedAt":"2018-07-30T14:54:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODg3MzcyMQ==","url":"https://github.com/coala/community/pull/170#issuecomment-408873721","bodyText":"@cypher-naman please do the recommended changes.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-30T14:01:00Z","lastEditedAt":null,"updatedAt":"2018-07-30T14:01:00Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533569755000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/174","number":174,"title":"setup.cfg: Use template","body":"","comments":10,"createdAt":"2018-08-06T11:43:07Z","updatedAt":"2018-08-06T15:35:55Z","closedAt":"2018-08-06T15:35:48Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/174","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533829508000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/177","number":177,"title":"Get 100% test coverage for data app","body":"Closes #176","comments":6,"createdAt":"2018-08-08T13:47:01Z","updatedAt":"2018-08-09T15:45:08Z","closedAt":"2018-08-09T15:44:58Z","state":"merged","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"process/wip","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/177","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNDM0OA==","url":"https://github.com/coala/community/pull/177#discussion_r208804348","bodyText":"fetch_mrs should raise ValueError for values it can not correctly handle.","diffHunk":"@@ -0,0 +1,10 @@\n+from django.test import TestCase\n+\n+from data.merge_requests import fetch_mrs\n+\n+\n+class FetchMergeRequestTest(TestCase):\n+\n+    def test_fetch_mrs_with_test_hoster(self):\n+        mrs = fetch_mrs('test')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T04:38:58Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:38:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNDM5OA==","url":"https://github.com/coala/community/pull/177#discussion_r208804398","bodyText":"ValueError, not None","diffHunk":"@@ -0,0 +1,10 @@\n+from django.test import TestCase\n+\n+from data.contrib_data import get_contrib_data\n+\n+\n+class GetContributorsTest(TestCase):\n+\n+    def test_get_contrib_data_with_test_path(self):\n+        contributors = get_contrib_data('test')\n+        self.assertEqual(contributors, None)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T04:39:24Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:39:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNDQ5Mg==","url":"https://github.com/coala/community/pull/177#discussion_r208804492","bodyText":"do we really need path here?","diffHunk":"@@ -6,14 +6,14 @@\n from data.webservices import webservices_url\n \n \n-def get_contrib_data():\n+def get_contrib_data(path):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T04:40:18Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:40:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk2OTkwMA==","url":"https://github.com/coala/community/pull/177#discussion_r208969900","bodyText":"why 'GitHUb' ?","diffHunk":"@@ -0,0 +1,12 @@\n+import requests_mock\n+\n+from django.test import TestCase\n+\n+from data.merge_requests import fetch_mrs\n+\n+\n+class FetchMergeRequestTest(TestCase):\n+\n+    def test_fetch_mrs(self):\n+        with requests_mock.Mocker():\n+            fetch_mrs('GitHUb')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T15:15:18Z","lastEditedAt":null,"updatedAt":"2018-08-09T15:15:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk3MTY1MQ==","url":"https://github.com/coala/community/pull/177#discussion_r208971651","bodyText":"sorry.","diffHunk":"@@ -0,0 +1,12 @@\n+import requests_mock\n+\n+from django.test import TestCase\n+\n+from data.merge_requests import fetch_mrs\n+\n+\n+class FetchMergeRequestTest(TestCase):\n+\n+    def test_fetch_mrs(self):\n+        with requests_mock.Mocker():\n+            fetch_mrs('GitHUb')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"createdAt":"2018-08-09T15:19:56Z","lastEditedAt":null,"updatedAt":"2018-08-09T15:19:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk3NTcxMg==","url":"https://github.com/coala/community/pull/177#discussion_r208975712","bodyText":"this is wrong , isnt it?  the hoster should be github or gitlab ?\nthat is what is in https://github.com/sks444/webservices.coala.io/tree/master/mrs , and IIRC that is what the real webservices is looking for.\nIs this intentionally invalid?\nIf so, dont hide it with a legitimate looking string.\nPut an obviously incorrect string.  e.g. 'not_valid_hoster'","diffHunk":"@@ -0,0 +1,12 @@\n+import requests_mock\n+\n+from django.test import TestCase\n+\n+from data.merge_requests import fetch_mrs\n+\n+\n+class FetchMergeRequestTest(TestCase):\n+\n+    def test_fetch_mrs(self):\n+        with requests_mock.Mocker():\n+            fetch_mrs('GitHub')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T15:30:38Z","lastEditedAt":null,"updatedAt":"2018-08-09T15:30:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk4MDQ2Mw==","url":"https://github.com/coala/community/pull/177#discussion_r208980463","bodyText":"Im told it does .lower() ...","diffHunk":"@@ -0,0 +1,12 @@\n+import requests_mock\n+\n+from django.test import TestCase\n+\n+from data.merge_requests import fetch_mrs\n+\n+\n+class FetchMergeRequestTest(TestCase):\n+\n+    def test_fetch_mrs(self):\n+        with requests_mock.Mocker():\n+            fetch_mrs('GitHub')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T15:42:57Z","lastEditedAt":null,"updatedAt":"2018-08-09T15:42:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTYzMzg4NA==","url":"https://github.com/coala/community/pull/177#issuecomment-411633884","bodyText":"Depends on https://gitlab.com/coala/mobans/merge_requests/77","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T04:36:14Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:36:14Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533789904000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/178","number":178,"title":"test-requirements.txt: Sync","body":"","comments":4,"createdAt":"2018-08-09T03:37:03Z","updatedAt":"2018-08-09T04:45:04Z","closedAt":"2018-08-09T04:44:54Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/178","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533807149000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/179","number":179,"title":"setup.cfg: Use Django preferred test_*.py glob","body":"Related to #176","comments":6,"createdAt":"2018-08-09T08:18:15Z","updatedAt":"2018-08-09T09:32:29Z","closedAt":"2018-08-09T09:32:19Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/179","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533810084000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/180","number":180,"title":".travis.yml: Disable AUTH=true job for PRs","body":"The AUTH=true job was in fact the deploy job.\nPull Requests do not get auth tokens, so they can not\nrun that job.\nFixes #172","comments":7,"createdAt":"2018-08-09T09:28:35Z","updatedAt":"2018-08-09T10:21:24Z","closedAt":"2018-08-09T10:21:15Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"4c95ad"},{"name":"bug","color":"ee0701"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/180","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTY5Njk3MA==","url":"https://github.com/coala/community/pull/180#issuecomment-411696970","bodyText":"yay. on travis this PR only has two jobs.  compare with https://travis-ci.org/jayvdb/community/builds/413967857 which has all three jobs","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T09:29:39Z","lastEditedAt":null,"updatedAt":"2018-08-09T09:29:39Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534790815000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/183","number":183,"title":"Add support for Django 2.x","body":"Closes #182","comments":12,"createdAt":"2018-08-17T22:52:07Z","updatedAt":"2018-08-20T18:46:55Z","closedAt":null,"state":"open","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"area/ci","color":"4c95ad"},{"name":"process/pending review","color":"ededed"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/183","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAyNjQzNA==","url":"https://github.com/coala/community/pull/183#issuecomment-414026434","bodyText":"LGTM, One small suggestion: can you edit your pr description #183 (comment) and add issue link there? Benefits are: 1. reviewers are easier to find context. 2. On the issue page people can see the issue is referenced by this pr.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-18T02:28:13Z","lastEditedAt":null,"updatedAt":"2018-08-18T02:28:13Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1535807458000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/186","number":186,"title":".ci/build.sh: Make .ci/build.sh re-runnable","body":"This remove private,_site,public\nafter partial or complete build.\nCloses #184","comments":26,"createdAt":"2018-08-25T22:05:56Z","updatedAt":"2018-09-01T13:10:58Z","closedAt":"2018-09-01T13:07:35Z","state":"merged","user":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"owner":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"assignee":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"9cc6fc"},{"name":"process/pending review","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/186","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1Njk0MA==","url":"https://github.com/coala/community/pull/186#discussion_r213856940","bodyText":"add this to your rm -rf above.\nthis isnt isnt about removing artifacts after the build.\nwe want to keep these artifacts, so someone can debug the database if the built site looks strange.\nbut if they re-run the build, the database needs to be empty again.","diffHunk":"@@ -48,3 +50,5 @@ python manage.py dumpdata meta_review > _site/$META_REVIEW_DATA\n \n python manage.py collectstatic --noinput\n python manage.py distill-local public --force\n+\n+rm db.sqlite3","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T22:41:06Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:41:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjAzMTM3MQ==","url":"https://github.com/coala/community/pull/186#issuecomment-416031371","bodyText":"You mentioned on gitter that you tried to add rm -rf private _site public and rm db.sqlite3 on .ci/build.sh, which doesn't work. Can you elaborate on it? Where did you put and what was the error?","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-26T11:17:41Z","lastEditedAt":null,"updatedAt":"2018-08-26T11:17:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA2NzIwOQ==","url":"https://github.com/coala/community/pull/186#issuecomment-416067209","bodyText":"@li-boxuan if I simply clone the repo and add rm -rf private _site public, rm db.sqlite3 at the end of .ci/build.sh.\nand then run pytest then  I get the error :","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-26T20:08:45Z","lastEditedAt":null,"updatedAt":"2018-08-26T20:08:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA2NzM1Mg==","url":"https://github.com/coala/community/pull/186#issuecomment-416067352","bodyText":"Traceback (most recent call last):\n  File \"/home/prince/anaconda3/lib/python3.6/logging/config.py\", line 558, in configure\n    handler = self.configure_handler(handlers[name])\n  File \"/home/prince/anaconda3/lib/python3.6/logging/config.py\", line 731, in configure_handler\n    result = factory(**kwargs)\n  File \"/home/prince/anaconda3/lib/python3.6/logging/__init__.py\", line 1030, in __init__\n    StreamHandler.__init__(self, self._open())\n  File \"/home/prince/anaconda3/lib/python3.6/logging/__init__.py\", line 1059, in _open\n    return open(self.baseFilename, self.mode, encoding=self.encoding)\nFileNotFoundError: [Errno 2] No such file or directory: '/home/prince/code/coala/community/_site/community.log'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/bin/pytest\", line 11, in <module>\n    sys.exit(main())\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 55, in main\n    config = _prepareconfig(args, plugins)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 180, in _prepareconfig\n    pluginmanager=pluginmanager, args=args\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/callers.py\", line 196, in _multicall\n    gen.send(outcome)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/_pytest/helpconfig.py\", line 89, in pytest_cmdline_parse\n    config = outcome.get_result()\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 612, in pytest_cmdline_parse\n    self.parse(args)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 777, in parse\n    self._preparse(args, addopts=addopts)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 739, in _preparse\n    early_config=self, args=args, parser=self._parser\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/hooks.py\", line 258, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/callers.py\", line 201, in _multicall\n    return outcome.get_result()\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/callers.py\", line 76, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pluggy/callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pytest_django/plugin.py\", line 252, in pytest_load_initial_conftests\n    _setup_django()\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/pytest_django/plugin.py\", line 151, in _setup_django\n    django.setup()\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/django/__init__.py\", line 22, in setup\n    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/django/utils/log.py\", line 75, in configure_logging\n    logging_config_func(logging_settings)\n  File \"/home/prince/anaconda3/lib/python3.6/logging/config.py\", line 795, in dictConfig\n    dictConfigClass(config).configure()\n  File \"/home/prince/anaconda3/lib/python3.6/logging/config.py\", line 566, in configure\n    '%r: %s' % (name, e))\nValueError: Unable to configure handler 'communityHandler': [Errno 2] No such file or directory: '/home/prince/code/coala/community/_site/community.log'","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-26T20:10:16Z","lastEditedAt":null,"updatedAt":"2018-08-26T20:10:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA2NzQ0Nw==","url":"https://github.com/coala/community/pull/186#issuecomment-416067447","bodyText":"since there is no dir _site which is stated in the above error.\nbut if I execute bash .ci/build.sh(which creates the dir _site,private,public) and then execute pytest it works fine and gives coverage of 94.6%","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-26T20:11:11Z","lastEditedAt":null,"updatedAt":"2018-08-26T20:11:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA2NzQ5Mg==","url":"https://github.com/coala/community/pull/186#issuecomment-416067492","bodyText":"also while running .ci/build.sh I get the following error:\n+ mkdir private _site public\n+ META_REVIEW_DATA=meta_review.json\n+ EXPORTED_DATA='static/tasks.yaml static/instances.yaml static/meta_review.json'\n+ ISSUES_JSON=issues.json\n+ python manage.py fetch_deployed_data --allow-failure _site static/tasks.yaml static/instances.yaml static/meta_review.json\n+ [[ -n '' ]]\n+ python manage.py fetch_deployed_data _site issues.json --repo-name gh-board\nTraceback (most recent call last):\n  File \"/home/prince/code/coala/community/data/management/commands/fetch_deployed_data.py\", line 40, in handle\n    r.raise_for_status()\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/requests/models.py\", line 939, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://prince-sharma.github.io/gh-board/issues.json\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"manage.py\", line 24, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line\n    utility.execute()\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/django/core/management/__init__.py\", line 356, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/django/core/management/base.py\", line 283, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/django/core/management/base.py\", line 330, in execute\n    output = self.handle(*args, **options)\n  File \"/home/prince/code/coala/community/data/management/commands/fetch_deployed_data.py\", line 45, in handle\n    r.raise_for_status()\n  File \"/home/prince/.local/share/virtualenvs/coala-qMtnnkwi/lib/python3.6/site-packages/requests/models.py\", line 939, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http://community.coala.io/issues.json","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-26T20:11:44Z","lastEditedAt":null,"updatedAt":"2018-08-26T20:11:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA5MTM3NA==","url":"https://github.com/coala/community/pull/186#issuecomment-416091374","bodyText":"if I simply clone the repo and add rm -rf private _site public, rm db.sqlite3 at the end of .ci/build.sh. and then run pytest then I get the error\n\nWhy not put them at the beginning of .ci/build.sh?","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-27T01:42:08Z","lastEditedAt":null,"updatedAt":"2018-08-27T01:42:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjExNDQ2Nw==","url":"https://github.com/coala/community/pull/186#issuecomment-416114467","bodyText":"I tried putting the rm commands at the beginning of .ci/build.sh but it gives the same error as in putting them at the end.","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-27T04:58:29Z","lastEditedAt":null,"updatedAt":"2018-08-27T04:58:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjExNDc4OQ==","url":"https://github.com/coala/community/pull/186#issuecomment-416114789","bodyText":"Also when I did a fresh start i.e cloned the repo https://github.com/coala/community, installed coala-bears using pipenv install coala-bears, installed dependencies using pip3 install -r test-requirements.txt -r requirements.txt  and then executed pytest(no changes done in the code) then too it gave the same error as mentioned above.","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-27T05:00:52Z","lastEditedAt":null,"updatedAt":"2018-08-27T05:00:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjEyNzI3OQ==","url":"https://github.com/coala/community/pull/186#issuecomment-416127279","bodyText":"The error you are facing here: #186 (comment) is due to the issue #185\nIf you don't want to fork and configure gh-board, you might want to solve that issue first.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-27T06:27:44Z","lastEditedAt":null,"updatedAt":"2018-08-27T06:27:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjIyOTYwNw==","url":"https://github.com/coala/community/pull/186#issuecomment-416229607","bodyText":"@li-boxuan I got 100% branch coverage when ran locally,then why is CI giving error related to pytest.\nfollowing is the output of pytest\n================================================================ test session starts =================================================================\nplatform linux -- Python 3.6.5, pytest-3.6.4, py-1.5.4, pluggy-0.7.1\nDjango settings: community.settings (from ini file)\nrootdir: /home/prince/code/coala/community, inifile: setup.cfg\nplugins: requests-mock-1.5.2, xdist-1.22.5, travis-fold-1.3.0, timeout-1.3.1, reqs-0.0.7, reorder-0.1.1, profiling-1.3.0, mock-1.10.0, instafail-0.3.0, forked-0.2, error-for-skips-1.0.0, env-0.6.2, django-3.3.3, cov-2.5.1\ntimeout: 35.0s\ntimeout method: signal\ntimeout func_only: False\ncollected 58 items                                                                                                                                   \n\nrequirements.txt .                                                                                                                             [  1%]\ntest-requirements.txt .                                                                                                                        [  3%]\ndata/tests/test_contrib_data.py .                                                                                                              [  5%]\ndata/tests/test_issues.py .                                                                                                                    [  6%]\ndata/tests/test_management_commands.py ...                                                                                                     [ 11%]\ndata/tests/test_merge_requests.py .                                                                                                            [ 13%]\ndata/tests/test_models.py ...............                                                                                                      [ 38%]\ndata/tests/test_views.py ...                                                                                                                   [ 43%]\ngamification/tests/test_activity.py ...                                                                                                        [ 48%]\ngamification/tests/test_activity_points.py ...                                                                                                 [ 53%]\ngamification/tests/test_labels.py .                                                                                                            [ 55%]\ngamification/tests/test_management_commands.py ...                                                                                             [ 60%]\ngamification/tests/test_models.py ...................                                                                                          [ 91%]\ngamification/tests/test_points.py .                                                                                                            [ 93%]\ngamification/tests/test_views.py ...                                                                                                           [ 98%]\nmeta_review/handler.py .                                                                                                                       [100%]\nProfiling (from /home/prince/code/coala/community/prof/combined.prof):\nMon Aug 27 13:31:38 2018    /home/prince/code/coala/community/prof/combined.prof\n\n         536948 function calls (524235 primitive calls) in 2.736 seconds\n\n   Ordered by: cumulative time\n   List reduced from 1728 to 20 due to restriction <20>\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n       60    0.000    0.000    2.720    0.045 runner.py:105(pytest_runtest_call)\n    52/48    0.001    0.000    1.539    0.032 <frozen importlib._bootstrap>:966(_find_and_load)\n     10/6    0.000    0.000    1.537    0.256 <frozen importlib._bootstrap>:936(_find_and_load_unlocked)\n     12/9    0.000    0.000    1.531    0.170 <frozen importlib._bootstrap>:211(_call_with_frames_removed)\n        6    0.000    0.000    1.530    0.255 <frozen importlib._bootstrap>:651(_load_unlocked)\n        2    0.000    0.000    1.203    0.601 pytest_reqs.py:136(runtest)\n        2    0.000    0.000    1.195    0.597 pytest_reqs.py:119(get_requirements)\n        5    0.000    0.000    1.121    0.224 <frozen importlib._bootstrap_external>:672(exec_module)\n       57    0.000    0.000    1.101    0.019 unittest.py:182(runtest)\n       57    0.001    0.000    1.100    0.019 testcases.py:195(__call__)\n      984    0.001    0.000    1.075    0.001 <frozen importlib._bootstrap>:997(_handle_fromlist)\n        2    0.000    0.000    1.075    0.537 download.py:321(__init__)\n        2    0.001    0.000    1.072    0.536 download.py:63(user_agent)\n       57    0.000    0.000    1.071    0.019 case.py:652(__call__)\n        2    0.000    0.000    1.071    0.535 {built-in method builtins.__import__}\n       57    0.004    0.000    1.071    0.019 case.py:570(run)\n       12    0.001    0.000    1.061    0.088 {built-in method builtins.exec}\n        1    0.000    0.000    1.059    1.059 distro.py:29(<module>)\n        1    0.000    0.000    1.057    1.057 distro.py:530(__init__)\n        1    0.000    0.000    1.054    1.054 distro.py:908(_get_lsb_release_info)\n\n\n\n----------- coverage: platform linux, python 3.6.5-final-0 -----------\nName                                      Stmts   Miss Branch BrPart  Cover   Missing\n-------------------------------------------------------------------------------------\ncommunity/__init__.py                         0      0      0      0   100%\ncommunity/config.py                           3      0      0      0   100%\ncommunity/filters.py                          4      0      0      0   100%\ncommunity/settings.py                        23      0      0      0   100%\ncommunity/wsgi.py                             4      0      0      0   100%\ndata/__init__.py                              0      0      0      0   100%\ndata/apps.py                                  3      0      0      0   100%\ndata/contrib_data.py                         32      0      4      0   100%\ndata/issues.py                               50      0      8      0   100%\ndata/merge_requests.py                       57      0     10      0   100%\ndata/models.py                               56      0      2      0   100%\ndata/newcomers.py                            11      0      2      0   100%\ndata/urls.py                                  3      0      0      0   100%\ndata/webservices.py                           5      0      0      0   100%\ngamification/__init__.py                      0      0      0      0   100%\ngamification/data/config.py                  51      0      0      0   100%\ngamification/data/points.py                   3      0      0      0   100%\ngamification/labels.py                       17      0     19      0   100%\ngamification/models.py                       73      0     21      0   100%\ngamification/participants.py                  7      0      2      0   100%\ngamification/points.py                       12      0      6      0   100%\ngamification/process/__init__.py              0      0      0      0   100%\ngamification/process/activity.py              9      0      4      0   100%\ngamification/process/activity_points.py       8      0      0      0   100%\ngamification/process/update.py               55      0     13      0   100%\nmeta_review/__init__.py                       0      0      0      0   100%\nmeta_review/apps.py                           3      0      0      0   100%\nmeta_review/models.py                        38      0      0      0   100%\nmeta_review/urls.py                           3      0      0      0   100%\n-------------------------------------------------------------------------------------\nTOTAL                                       530      0     91      0   100%\n\nRequired test coverage of 100% reached. Total coverage: 100.00%\n\n============================================================= 60 passed in 71.59 seconds =============================================================","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-27T13:38:53Z","lastEditedAt":null,"updatedAt":"2018-08-27T13:38:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxMjcyMw==","url":"https://github.com/coala/community/pull/186#issuecomment-416412723","bodyText":"@Prince-sharma , please put Mohan sync changes in a separate commit, as they are not part of your changes","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T00:37:56Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:37:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQyMzcyNw==","url":"https://github.com/coala/community/pull/186#issuecomment-416423727","bodyText":"Please also update your PR title.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-28T01:47:12Z","lastEditedAt":null,"updatedAt":"2018-08-28T01:47:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzQyMDA1OQ==","url":"https://github.com/coala/community/pull/186#issuecomment-417420059","bodyText":"Done","diffHunk":null,"author":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4","name":"Prince Sharma"},"createdAt":"2018-08-30T18:24:51Z","lastEditedAt":null,"updatedAt":"2018-08-30T18:24:51Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1534335351000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/145","number":145,"title":"gitter: Messages, Analysis and Import","body":"This PR creates an app gitter, and anayise the\nmessages by the newcomers, which is being fetched from\nwebservices, and then import those messages into\ntwo models Question and Answer.\nCloses #84","comments":19,"createdAt":"2018-06-07T07:36:25Z","updatedAt":"2018-08-15T12:15:51Z","closedAt":null,"state":"open","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"ededed"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/145","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY2ODc4Nw==","url":"https://github.com/coala/community/pull/145#discussion_r193668787","bodyText":"It's unnecessary to load all files into memory together. Also, it's better to use context manager when reading from the file IMO.","diffHunk":"@@ -0,0 +1,66 @@\n+import yaml\n+\n+\n+class DictionaryTagger(object):\n+    def __init__(self, dictionary_paths):\n+        files = [open(path, 'r') for path in dictionary_paths]","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:41:17Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:41:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY2OTM5Ng==","url":"https://github.com/coala/community/pull/145#discussion_r193669396","bodyText":"postagged -> pos_tagged maybe?","diffHunk":"@@ -0,0 +1,66 @@\n+import yaml\n+\n+\n+class DictionaryTagger(object):\n+    def __init__(self, dictionary_paths):\n+        files = [open(path, 'r') for path in dictionary_paths]\n+        dictionaries = [yaml.load(dict_file) for dict_file in files]\n+        map(lambda x: x.close(), files)\n+        self.dictionary = {}\n+        self.max_key_size = 0\n+        for curr_dict in dictionaries:\n+            for key in curr_dict:\n+                if key in self.dictionary:\n+                    self.dictionary[key].extend(curr_dict[key])\n+                else:\n+                    self.dictionary[key] = curr_dict[key]\n+                    self.max_key_size = max(self.max_key_size, len(key))\n+\n+    def tag(self, postagged_sentences):","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjA4NjA2Ng==","createdAt":"2018-07-06T08:44:54Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-06-07T08:43:20Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:43:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY2OTgxOQ==","url":"https://github.com/coala/community/pull/145#discussion_r193669819","bodyText":"Either remove this line or remove #","diffHunk":"@@ -0,0 +1,66 @@\n+import yaml\n+\n+\n+class DictionaryTagger(object):\n+    def __init__(self, dictionary_paths):\n+        files = [open(path, 'r') for path in dictionary_paths]\n+        dictionaries = [yaml.load(dict_file) for dict_file in files]\n+        map(lambda x: x.close(), files)\n+        self.dictionary = {}\n+        self.max_key_size = 0\n+        for curr_dict in dictionaries:\n+            for key in curr_dict:\n+                if key in self.dictionary:\n+                    self.dictionary[key].extend(curr_dict[key])\n+                else:\n+                    self.dictionary[key] = curr_dict[key]\n+                    self.max_key_size = max(self.max_key_size, len(key))\n+\n+    def tag(self, postagged_sentences):\n+        return [self.tag_sentence(sentence) for sentence in postagged_sentences]\n+\n+    def tag_sentence(self, sentence, tag_with_lemmas=False):\n+        \"\"\"\n+        the result is only one tagging of all the possible ones.\n+        The resulting tagging is determined by these two priority rules:\n+            - longest matches have higher priority\n+            - search is made from left to right\n+        \"\"\"\n+        tag_sentence = []\n+        N = len(sentence)\n+        if self.max_key_size == 0:\n+            self.max_key_size = N\n+        i = 0\n+        while (i < N):\n+            j = min(i + self.max_key_size, N)  # avoid overflow\n+            tagged = False\n+            while (j > i):\n+                expression_form = ' '.join([word[0]\n+                    for word in sentence[i:j]]).lower()\n+                expression_lemma = ' '.join(\n+                    [word[1] for word in sentence[i:j]]).lower()\n+                if tag_with_lemmas:\n+                    literal = expression_lemma\n+                else:\n+                    literal = expression_form\n+                if literal in self.dictionary:\n+                    # self.logger.debug(\"found: %s\" % literal)","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:44:40Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:44:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3MDYzNQ==","url":"https://github.com/coala/community/pull/145#discussion_r193670635","bodyText":"Also thx ;)","diffHunk":"@@ -0,0 +1,5 @@\n+welcome: [ignore]\n+thank you: [ignore]\n+thanks: [ignore]","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:47:15Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:47:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3MTAxOQ==","url":"https://github.com/coala/community/pull/145#discussion_r193671019","bodyText":"Is there any library/external resource that contains similar words/phrases?","diffHunk":"@@ -0,0 +1,5 @@\n+welcome: [ignore]\n+thank you: [ignore]\n+thanks: [ignore]","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:48:39Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:48:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3MjI4Ng==","url":"https://github.com/coala/community/pull/145#discussion_r193672286","bodyText":"Missing space before on room","diffHunk":"@@ -0,0 +1,23 @@\n+from django.db import models\n+\n+\n+class Question(models.Model):\n+    identifier = models.CharField(max_length=500, primary_key=True)\n+    room = models.CharField(max_length=300)\n+    text = models.TextField()\n+    sent_at = models.DateTimeField()\n+    sent_by = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return ('sent_by: ' + self.sent_by + 'on room: ' + self.room)","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg0OTk1NA==","createdAt":"2018-06-09T05:47:04Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-06-07T08:53:14Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:53:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3MjMzMw==","url":"https://github.com/coala/community/pull/145#discussion_r193672333","bodyText":"See above","diffHunk":"@@ -0,0 +1,23 @@\n+from django.db import models\n+\n+\n+class Question(models.Model):\n+    identifier = models.CharField(max_length=500, primary_key=True)\n+    room = models.CharField(max_length=300)\n+    text = models.TextField()\n+    sent_at = models.DateTimeField()\n+    sent_by = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return ('sent_by: ' + self.sent_by + 'on room: ' + self.room)\n+\n+\n+class Answer(models.Model):\n+    identifier = models.CharField(max_length=500, primary_key=True)\n+    room = models.CharField(max_length=300)\n+    text = models.TextField()\n+    sent_at = models.DateTimeField()\n+    sent_by = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return ('sent_by: ' + self.sent_by + 'on room: ' + self.room)","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:53:24Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:53:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3MjUzMA==","url":"https://github.com/coala/community/pull/145#discussion_r193672530","bodyText":"Is this for test/demonstration only?","diffHunk":"@@ -0,0 +1,21 @@\n+import logging\n+\n+import requests\n+\n+\n+def get_newcomer_messages():\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = 'https://pastebin.com/raw/TR4YaaU8'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:54:03Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:54:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3MzE3MA==","url":"https://github.com/coala/community/pull/145#discussion_r193673170","bodyText":"Not quite understand why simply return here. Would the program do anything meaningful even if it doesn't get any message?","diffHunk":"@@ -0,0 +1,21 @@\n+import logging\n+\n+import requests\n+\n+\n+def get_newcomer_messages():\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = 'https://pastebin.com/raw/TR4YaaU8'\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:56:23Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:56:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3MzU4NA==","url":"https://github.com/coala/community/pull/145#discussion_r193673584","bodyText":"I'm not familiar with nltk, but I wonder what would happen if the text is not in English? Would it be an issue?","diffHunk":"@@ -0,0 +1,43 @@\n+import nltk\n+\n+\n+class Splitter(object):\n+    def __init__(self):\n+        self.nltk_splitter = nltk.data.load('tokenizers/punkt/english.pickle')\n+        self.nltk_tokenizer = nltk.tokenize.TreebankWordTokenizer()\n+\n+    def split(self, text):\n+        \"\"\"\n+        input format: a paragraph of text\n+        output format: a list of lists of words.\n+        e.g.: [['this', 'is', 'a', 'sentence'],\n+              ['this', 'is', 'another', 'one']]\n+        \"\"\"\n+        sentences = self.nltk_splitter.tokenize(text)","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:57:47Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:57:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3Mzg4NA==","url":"https://github.com/coala/community/pull/145#discussion_r193673884","bodyText":"and what, where?","diffHunk":"@@ -0,0 +1,4 @@\n+when: [question]\n+why: [question]\n+how: [question]","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T08:58:44Z","lastEditedAt":null,"updatedAt":"2018-06-07T08:58:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY3NDQyNw==","url":"https://github.com/coala/community/pull/145#discussion_r193674427","bodyText":"Better explain a bit how these values are determined, like why questions are given negative marks.","diffHunk":"@@ -0,0 +1,31 @@\n+from gitter.preprocessing import Splitter, POSTagger\n+from gitter.dicttagger import DictionaryTagger\n+\n+\n+def tagged_sentences(text):\n+    splitter = Splitter()\n+    postagger = POSTagger()\n+    splitted_sentences = splitter.split(text)\n+    pos_tagged_sentences = postagger.pos_tag(splitted_sentences)\n+    dicttagger = DictionaryTagger(['gitter/question.yml', 'gitter/ignore.yml'])\n+    dict_tagged_sentences = dicttagger.tag(pos_tagged_sentences)\n+    return dict_tagged_sentences\n+\n+\n+def value_of(sentiment):","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-07T09:00:32Z","lastEditedAt":null,"updatedAt":"2018-06-07T09:00:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY4NjQ5MA==","url":"https://github.com/coala/community/pull/145#discussion_r193686490","bodyText":"Yup, the messages data will come from webservices, after https://gitlab.com/coala/landing/merge_requests/45 is merged.\nThose are the output messages from that MR, when I run it locally.","diffHunk":"@@ -0,0 +1,21 @@\n+import logging\n+\n+import requests\n+\n+\n+def get_newcomer_messages():\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = 'https://pastebin.com/raw/TR4YaaU8'","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-06-07T09:41:15Z","lastEditedAt":null,"updatedAt":"2018-06-07T09:41:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzY4Njk3Mg==","url":"https://github.com/coala/community/pull/145#discussion_r193686972","bodyText":"Yes, I will add those for sure.\nI will add many more. Keep giving your suggestions. ;)","diffHunk":"@@ -0,0 +1,4 @@\n+when: [question]\n+why: [question]\n+how: [question]","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-06-07T09:42:55Z","lastEditedAt":null,"updatedAt":"2018-06-07T09:42:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MjA4Nw==","url":"https://github.com/coala/community/pull/145#discussion_r207692087","bodyText":"all nlp files should go in gitter/nlp/, and nlp training data files in gitter/nlp/training_data/","diffHunk":"@@ -0,0 +1,28 @@\n+import nltk\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NTM5MA==","createdAt":"2018-08-04T18:11:00Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-04T00:05:56Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:05:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MjI2NA==","url":"https://github.com/coala/community/pull/145#discussion_r207692264","bodyText":"We need one Splitter, one POSTagger and one DictionaryTagger.\nDo not recreate these objects every time you want to do some nlp on a fragment.\nCreate another class which creates and uses those objects internally, and instantiate only one instance of our class.","diffHunk":"@@ -0,0 +1,62 @@\n+from gitter.splitter import Splitter\n+from gitter.pos_tagger import POSTagger\n+from gitter.dict_tagger import DictionaryTagger\n+\n+\n+def tagged_sentences(text):\n+    \"\"\"\n+    Tag a message with dict_tagged_sentence.\n+\n+    This method takes a string parameter which is the message\n+    send by the newcomer and then it split it into list of lists\n+    of words using the Splitter class, and it uses POSTagger class\n+    to tag each word with pos. And then it uses the DictionaryTagger\n+    class and the two dict 'gitter/question.yml' and 'gitter/ignore.yml'\n+    and tag the pos tagged word with 'question' or 'ignore'.\n+\n+    :param text: a string representing the message.\n+                 e.g. 'How to solve this issue?'\n+    :return: a list of words tagged with DictTagger and POSTagger.\n+             e.g. [[('how', 'how', ['question', 'WRB']),\n+                    ('can', 'can', ['MD']),\n+                    ('I', 'I', ['PRP']),\n+                    ('solve', 'solve', ['VB']),\n+                    ('this', 'this', ['DT']),\n+                    ('issue', 'issue', ['NN']),\n+                    ('?', '?', ['question', '.'])]]\n+    \"\"\"\n+    splitter = Splitter()\n+    postagger = POSTagger()\n+    splitted_sentences = splitter.split(text)\n+    pos_tagged_sentences = postagger.pos_tag(splitted_sentences)\n+    dicttagger = DictionaryTagger(['gitter/question.yml', 'gitter/ignore.yml'])","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NTM4NA==","createdAt":"2018-08-04T18:10:42Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-04T00:08:24Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:08:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MjYwNw==","url":"https://github.com/coala/community/pull/145#discussion_r207692607","bodyText":"this system currently only knows about two sentiments, ignore and question (answer is missing).\nIt should raise a ValueError here if the sentiment is not known, as its score can not be determined.","diffHunk":"@@ -0,0 +1,62 @@\n+from gitter.splitter import Splitter\n+from gitter.pos_tagger import POSTagger\n+from gitter.dict_tagger import DictionaryTagger\n+\n+\n+def tagged_sentences(text):\n+    \"\"\"\n+    Tag a message with dict_tagged_sentence.\n+\n+    This method takes a string parameter which is the message\n+    send by the newcomer and then it split it into list of lists\n+    of words using the Splitter class, and it uses POSTagger class\n+    to tag each word with pos. And then it uses the DictionaryTagger\n+    class and the two dict 'gitter/question.yml' and 'gitter/ignore.yml'\n+    and tag the pos tagged word with 'question' or 'ignore'.\n+\n+    :param text: a string representing the message.\n+                 e.g. 'How to solve this issue?'\n+    :return: a list of words tagged with DictTagger and POSTagger.\n+             e.g. [[('how', 'how', ['question', 'WRB']),\n+                    ('can', 'can', ['MD']),\n+                    ('I', 'I', ['PRP']),\n+                    ('solve', 'solve', ['VB']),\n+                    ('this', 'this', ['DT']),\n+                    ('issue', 'issue', ['NN']),\n+                    ('?', '?', ['question', '.'])]]\n+    \"\"\"\n+    splitter = Splitter()\n+    postagger = POSTagger()\n+    splitted_sentences = splitter.split(text)\n+    pos_tagged_sentences = postagger.pos_tag(splitted_sentences)\n+    dicttagger = DictionaryTagger(['gitter/question.yml', 'gitter/ignore.yml'])\n+    dict_tagged_sentences = dicttagger.tag(pos_tagged_sentences)\n+    return dict_tagged_sentences\n+\n+\n+def value_of(sentiment):\n+    \"\"\"\n+    Get a value based on the sentiment.\n+\n+    :param sentiment: a string representing the sentiment of\n+                      a word. i.e. 'ignore' or 'question'.\n+    :return: an integer representing the value of the sentiment.\n+    \"\"\"\n+    if sentiment == 'ignore':\n+        return 1\n+    if sentiment == 'question':\n+        return -1\n+    return 0","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-04T00:13:23Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:13:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MjgwNA==","url":"https://github.com/coala/community/pull/145#discussion_r207692804","bodyText":"just return sentiment_score(text)","diffHunk":"@@ -0,0 +1,74 @@\n+import logging\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+from gitter.score import sentiment_score\n+from gitter.models import Question, Answer\n+\n+\n+def get_messages():\n+    \"\"\"\n+    Get all the messages send by newcomers on the gitter rooms.\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = webservices_url('messages')\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+\n+    data = response.json()\n+    return data\n+\n+\n+def message_score(message):\n+    \"\"\"\n+    Get the score for a message dict.\n+\n+    :param message: a message dict of type:\n+                    {\n+                       \"identifier\": \"5b588269c0fa8016e7379191\",\n+                       \"room\": \"offtopic\",\n+                       \"sent_at\": \"2018-07-25 14:00:09.456000+00:00\",\n+                       \"sent_by\": \"Naveenaidu\",\n+                        \"text\": \"How can I solve this issue?\"\n+                    },\n+    :return: an integer reperesenting score of the message text,\n+             if it's positive the message should be ignored, if it's\n+             negative the message should be saved into Question model,\n+             and if it's zero, the message should be saved into Answer model.\n+\n+    \"\"\"\n+    text = message['text']\n+    return (sentiment_score(text))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-04T00:16:27Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:16:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5Mjg0Nw==","url":"https://github.com/coala/community/pull/145#discussion_r207692847","bodyText":"is this import_messages or import_message ?","diffHunk":"@@ -0,0 +1,74 @@\n+import logging\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+from gitter.score import sentiment_score\n+from gitter.models import Question, Answer\n+\n+\n+def get_messages():\n+    \"\"\"\n+    Get all the messages send by newcomers on the gitter rooms.\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = webservices_url('messages')\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+\n+    data = response.json()\n+    return data\n+\n+\n+def message_score(message):\n+    \"\"\"\n+    Get the score for a message dict.\n+\n+    :param message: a message dict of type:\n+                    {\n+                       \"identifier\": \"5b588269c0fa8016e7379191\",\n+                       \"room\": \"offtopic\",\n+                       \"sent_at\": \"2018-07-25 14:00:09.456000+00:00\",\n+                       \"sent_by\": \"Naveenaidu\",\n+                        \"text\": \"How can I solve this issue?\"\n+                    },\n+    :return: an integer reperesenting score of the message text,\n+             if it's positive the message should be ignored, if it's\n+             negative the message should be saved into Question model,\n+             and if it's zero, the message should be saved into Answer model.\n+\n+    \"\"\"\n+    text = message['text']\n+    return (sentiment_score(text))\n+\n+\n+def import_messages(message):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-04T00:17:02Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:17:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MzE1MQ==","url":"https://github.com/coala/community/pull/145#discussion_r207693151","bodyText":"there is no message scoring in https://github.com/coala/cEPs/blob/master/cEP-0020.md#gitter , so this method name is not appropriate.\nYou can use score terminology in the gitter/nlp namespace, but in the main app code there is only 'question', 'answer', and 'not known'.","diffHunk":"@@ -0,0 +1,74 @@\n+import logging\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+from gitter.score import sentiment_score\n+from gitter.models import Question, Answer\n+\n+\n+def get_messages():\n+    \"\"\"\n+    Get all the messages send by newcomers on the gitter rooms.\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = webservices_url('messages')\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+\n+    data = response.json()\n+    return data\n+\n+\n+def message_score(message):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NTQyNA==","createdAt":"2018-08-04T18:13:14Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-04T00:21:20Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:21:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MzE1OQ==","url":"https://github.com/coala/community/pull/145#discussion_r207693159","bodyText":"bad indentation and missing trailing comma.","diffHunk":"@@ -0,0 +1,74 @@\n+import logging\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+from gitter.score import sentiment_score\n+from gitter.models import Question, Answer\n+\n+\n+def get_messages():\n+    \"\"\"\n+    Get all the messages send by newcomers on the gitter rooms.\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = webservices_url('messages')\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+\n+    data = response.json()\n+    return data\n+\n+\n+def message_score(message):\n+    \"\"\"\n+    Get the score for a message dict.\n+\n+    :param message: a message dict of type:\n+                    {\n+                       \"identifier\": \"5b588269c0fa8016e7379191\",\n+                       \"room\": \"offtopic\",\n+                       \"sent_at\": \"2018-07-25 14:00:09.456000+00:00\",\n+                       \"sent_by\": \"Naveenaidu\",\n+                        \"text\": \"How can I solve this issue?\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1NTM4MQ==","createdAt":"2018-08-04T18:10:22Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-04T00:21:27Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:21:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MzI3OQ==","url":"https://github.com/coala/community/pull/145#discussion_r207693279","bodyText":"no use of word 'score' anywhere in the main app logic.  The nlp layer should spit out a 'message classification'.\nmaybe create an enum MessageCategory / MessageType or something like that.","diffHunk":"@@ -0,0 +1,74 @@\n+import logging\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+from gitter.score import sentiment_score\n+from gitter.models import Question, Answer\n+\n+\n+def get_messages():\n+    \"\"\"\n+    Get all the messages send by newcomers on the gitter rooms.\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = webservices_url('messages')\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+\n+    data = response.json()\n+    return data\n+\n+\n+def message_score(message):\n+    \"\"\"\n+    Get the score for a message dict.\n+\n+    :param message: a message dict of type:\n+                    {\n+                       \"identifier\": \"5b588269c0fa8016e7379191\",\n+                       \"room\": \"offtopic\",\n+                       \"sent_at\": \"2018-07-25 14:00:09.456000+00:00\",\n+                       \"sent_by\": \"Naveenaidu\",\n+                        \"text\": \"How can I solve this issue?\"\n+                    },\n+    :return: an integer reperesenting score of the message text,\n+             if it's positive the message should be ignored, if it's\n+             negative the message should be saved into Question model,\n+             and if it's zero, the message should be saved into Answer model.\n+\n+    \"\"\"\n+    text = message['text']\n+    return (sentiment_score(text))\n+\n+\n+def import_messages(message):\n+    logger = logging.getLogger(__name__)\n+    sent_by = message.get('sent_by')\n+    score = message_score(message)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1Njc3Mg==","createdAt":"2018-08-04T20:05:54Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-04T00:23:19Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:23:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY5MzMyMg==","url":"https://github.com/coala/community/pull/145#discussion_r207693322","bodyText":"the identifier and text are more useful\nalso add __repr__ to be more helpful thant __str__ for debugging","diffHunk":"@@ -0,0 +1,23 @@\n+from django.db import models\n+\n+\n+class Question(models.Model):\n+    identifier = models.CharField(max_length=500, primary_key=True)\n+    room = models.CharField(max_length=300)\n+    text = models.TextField()\n+    sent_at = models.DateTimeField()\n+    sent_by = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return ('sent_by: ' + self.sent_by + ' on room: ' + self.room)\n+\n+\n+class Answer(models.Model):\n+    identifier = models.CharField(max_length=500, primary_key=True)\n+    room = models.CharField(max_length=300)\n+    text = models.TextField()\n+    sent_at = models.DateTimeField()\n+    sent_by = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return ('sent_by: ' + self.sent_by + ' on room: ' + self.room)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1Njc3NQ==","createdAt":"2018-08-04T20:05:59Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-04T00:24:07Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:24:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcxNTQ0OA==","url":"https://github.com/coala/community/pull/145#discussion_r207715448","bodyText":"@jayvdb, actually the strategy I am using here is a message which don't include the ignore and question words should be categorized into answer. That's why I am returing 0 here, so that when we get the sentiment_score=0, we can say that this message is a answer.","diffHunk":"@@ -0,0 +1,62 @@\n+from gitter.splitter import Splitter\n+from gitter.pos_tagger import POSTagger\n+from gitter.dict_tagger import DictionaryTagger\n+\n+\n+def tagged_sentences(text):\n+    \"\"\"\n+    Tag a message with dict_tagged_sentence.\n+\n+    This method takes a string parameter which is the message\n+    send by the newcomer and then it split it into list of lists\n+    of words using the Splitter class, and it uses POSTagger class\n+    to tag each word with pos. And then it uses the DictionaryTagger\n+    class and the two dict 'gitter/question.yml' and 'gitter/ignore.yml'\n+    and tag the pos tagged word with 'question' or 'ignore'.\n+\n+    :param text: a string representing the message.\n+                 e.g. 'How to solve this issue?'\n+    :return: a list of words tagged with DictTagger and POSTagger.\n+             e.g. [[('how', 'how', ['question', 'WRB']),\n+                    ('can', 'can', ['MD']),\n+                    ('I', 'I', ['PRP']),\n+                    ('solve', 'solve', ['VB']),\n+                    ('this', 'this', ['DT']),\n+                    ('issue', 'issue', ['NN']),\n+                    ('?', '?', ['question', '.'])]]\n+    \"\"\"\n+    splitter = Splitter()\n+    postagger = POSTagger()\n+    splitted_sentences = splitter.split(text)\n+    pos_tagged_sentences = postagger.pos_tag(splitted_sentences)\n+    dicttagger = DictionaryTagger(['gitter/question.yml', 'gitter/ignore.yml'])\n+    dict_tagged_sentences = dicttagger.tag(pos_tagged_sentences)\n+    return dict_tagged_sentences\n+\n+\n+def value_of(sentiment):\n+    \"\"\"\n+    Get a value based on the sentiment.\n+\n+    :param sentiment: a string representing the sentiment of\n+                      a word. i.e. 'ignore' or 'question'.\n+    :return: an integer representing the value of the sentiment.\n+    \"\"\"\n+    if sentiment == 'ignore':\n+        return 1\n+    if sentiment == 'question':\n+        return -1\n+    return 0","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-04T18:10:08Z","lastEditedAt":null,"updatedAt":"2018-08-04T18:10:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg1OTQ2Mg==","url":"https://github.com/coala/community/pull/145#discussion_r207859462","bodyText":"more tests coming soon..","diffHunk":"@@ -0,0 +1,230 @@\n+from django.test import TestCase\n+\n+from gitter.messages import message_type\n+\n+\n+class MessgeTypeTest(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        pass\n+\n+    def test_ignore_message(self):\n+        \"\"\"\n+        This method is responsible for testing the positive\n+        sentiment score. It means that the message should be ignored.\n+        \"\"\"\n+        message1s = {'text': 'Please assign me this issue'}\n+        m_type1 = message_type(message1s)\n+        self.assertEqual(m_type1, 'ignore')\n+\n+        message2s = {'text': 'Thank you.'}\n+        m_type2 = message_type(message2s)\n+        self.assertEqual(m_type2, 'ignore')\n+\n+        message3s = {'text': 'Okay thank you so much :)'}\n+        m_type3 = message_type(message3s)\n+        self.assertEqual(m_type3, 'ignore')\n+\n+        message4s = {'text': 'I have replied to your comment'}\n+        m_type4 = message_type(message4s)\n+        self.assertEqual(m_type4, 'ignore')\n+\n+        message5s = {'text': 'OK thanks i got it'}\n+        m_type5 = message_type(message5s)\n+        self.assertEqual(m_type5, 'ignore')\n+\n+        message6s = {'text': 'ok Cool'}\n+        m_type6 = message_type(message6s)\n+        self.assertEqual(m_type6, 'ignore')\n+\n+        message7s = {'text': 'I have made the PR'}\n+        m_type7 = message_type(message7s)\n+        self.assertEqual(m_type7, 'ignore')\n+\n+        message8s = {'text': 'Yes, pushing the commit.'}\n+        m_type8 = message_type(message8s)\n+        self.assertEqual(m_type8, 'ignore')\n+\n+        message9s = {'text': 'Thanks a lot! Its working now :D'}\n+        m_type9 = message_type(message9s)\n+        self.assertEqual(m_type9, 'ignore')\n+\n+        message10s = {'text': 'I\\'ll check them again.'}\n+        m_type10 = message_type(message10s)\n+        self.assertEqual(m_type10, 'ignore')\n+\n+        message11s = {'text': 'I tried it locally and it works'}\n+        m_type11 = message_type(message11s)\n+        self.assertEqual(m_type11, 'ignore')\n+\n+        message12s = {'text': 'I\\'ll try never to repeat these mistakes again.'}\n+        m_type12 = message_type(message12s)\n+        self.assertEqual(m_type12, 'ignore')\n+\n+        message13s = {'text': 'It still doesnt open up the pr'}\n+        m_type13 = message_type(message13s)\n+        self.assertEqual(m_type13, 'ignore')\n+\n+        message14s = {'text': 'Cool ill do that'}\n+        m_type14 = message_type(message14s)\n+        self.assertEqual(m_type14, 'ignore')\n+\n+        message15s = {'text': 'Okay .....then I will wait.Anyways thank you'}\n+        m_type15 = message_type(message15s)\n+        self.assertEqual(m_type15, 'ignore')\n+\n+        message16s = {'text': 'Ok thank you, sorry for the multipost'}\n+        m_type16 = message_type(message16s)\n+        self.assertEqual(m_type16, 'ignore')\n+\n+        message17s = {'text': 'Okay thanks! And I saw it, will fix it quick.'}\n+        m_type17 = message_type(message17s)\n+        self.assertEqual(m_type17, 'ignore')\n+\n+        message18s = {\n+            'text': 'Thanks. I read first I have to run on a project.'}\n+        m_type18 = message_type(message18s)\n+        self.assertEqual(m_type18, 'ignore')\n+\n+        message22s = {\n+            'text': 'Please @jayvdb can help me with solving this issue.'}\n+        m_type22 = message_type(message22s)\n+        self.assertEqual(m_type22, 'ignore')\n+\n+    def test_question_message(self):\n+        \"\"\"\n+        This method is responsible for testing the positive\n+        sentiment score. It means that the message should be ignored.\n+        \"\"\"\n+        message1s = {'text': 'I\\'ve got a question can i use the corobo '\n+                             'commands in any channel or is there a '\n+                             'special channel?'}\n+        m_type1 = message_type(message1s)\n+        self.assertEqual(m_type1, 'question')\n+\n+        message2s = {'text': 'Can someone tell me if this pr is okay '\n+                     'or it needs more changes? '}\n+        m_type2 = message_type(message2s)\n+        self.assertEqual(m_type2, 'question')\n+\n+        message3s = {'text': 'Can I work on this?'}\n+        m_type3 = message_type(message3s)\n+        self.assertEqual(m_type3, 'question')\n+\n+        message4s = {'text': 'Can someone assign to me?'}\n+        m_type4 = message_type(message4s)\n+        self.assertEqual(m_type4, 'question')\n+\n+        message5s = {'text': 'How did you put a tickmark on a commit ?'}\n+        m_type5 = message_type(message5s)\n+        self.assertEqual(m_type5, 'question')\n+\n+        message6s = {'text': 'what to do after rebase?'}\n+        m_type6 = message_type(message6s)\n+        self.assertEqual(m_type6, 'question')\n+\n+        message7s = {'text': 'how to Use github interface for review?'}\n+        m_type7 = message_type(message7s)\n+        self.assertEqual(m_type7, 'question')\n+\n+        message8s = {'text': 'But dont i have to wait for my previous '\n+                     'PR to get merged?'}\n+        m_type8 = message_type(message8s)\n+        self.assertEqual(m_type8, 'question')\n+\n+        message9s = {'text': 'is there a separate bears room?'}\n+        m_type9 = message_type(message9s)\n+        self.assertEqual(m_type9, 'question')\n+\n+        message10s = {\n+            'text': 'What does invoking with a single option mean?'}\n+        m_type10 = message_type(message10s)\n+        self.assertEqual(m_type10, 'question')\n+\n+        message11s = {'text': 'Any hint in which file should i add this test?'}\n+        m_type11 = message_type(message11s)\n+        self.assertEqual(m_type11, 'question')\n+\n+        message12s = {'text': 'Should i click on the create pull request?'}\n+        m_type12 = message_type(message12s)\n+        self.assertEqual(m_type12, 'question')\n+\n+        message13s = {'text': 'is the bot down?'}\n+        m_type13 = message_type(message13s)\n+        self.assertEqual(m_type13, 'question')\n+\n+        message14s = {'text': 'can someone tell me which is the docstring '\n+                      'file in -utils'}\n+        m_type14 = message_type(message14s)\n+        self.assertEqual(m_type14, 'question')\n+\n+        message15s = {'text': 'I have done a newcomer issue, and also '\n+                      'reviewed a newcomer issue, What furthere '\n+                      'steps for becoming a developer?'}\n+        m_type15 = message_type(message15s)\n+        self.assertEqual(m_type15, 'question')\n+\n+        message16s = {\n+            'text': 'ok, can you give me some more time to work on this?'}\n+        m_type16 = message_type(message16s)\n+        self.assertEqual(m_type16, 'question')\n+\n+        message17s = {'text': 'I had a question why is corobo down?'}\n+        m_type17 = message_type(message17s)\n+        self.assertEqual(m_type17, 'question')\n+\n+        message18s = {'text': 'ok, so what should I do now?'}\n+        m_type18 = message_type(message18s)\n+        self.assertEqual(m_type18, 'question')\n+\n+        message19s = {'text': 'Okay I will stick to it but why will '\n+                              'he won\\'t approve it?'}\n+        m_type19 = message_type(message19s)\n+        self.assertEqual(m_type19, 'question')\n+\n+        message20s = {'text': 'How do you squash a commit? I\\'m '\n+                              'sorry I\\'m new to this.'}\n+        m_type20 = message_type(message20s)\n+        self.assertEqual(m_type20, 'question')\n+\n+        message21s = {\n+            'text': 'I actually used that guide, did I do something wrong?'}\n+        m_type21 = message_type(message21s)\n+        self.assertEqual(m_type21, 'question')\n+\n+        message23s = {'text': 'Do i need to wait for it to be merged?'}\n+        m_type23 = message_type(message23s)\n+        self.assertEqual(m_type23, 'question')\n+\n+        message24s = {'text': 'Hi, may i know why the bot check for '\n+                      'failed for continuous-integration?'}\n+        m_type24 = message_type(message24s)\n+        self.assertEqual(m_type24, 'question')\n+\n+        message25s = {'text': 'Should i add the file , commit and push?'}\n+        m_type25 = message_type(message25s)\n+        self.assertEqual(m_type25, 'question')\n+\n+        message26s = {'text': 'so how to go about it?'}\n+        m_type26 = message_type(message26s)\n+        self.assertEqual(m_type26, 'question')\n+\n+        message18s = {'text': 'does bear support python 3.7?'}\n+        m_type18 = message_type(message18s)\n+        self.assertEqual(m_type17, 'question')\n+\n+    def test_answer_message(self):\n+        \"\"\"\n+        This method is responsible for testing the positive\n+        sentiment score. It means that the message should be ignored.\n+        \"\"\"\n+        message1s = {'text': 'The commit looks good to me .You can '\n+                     'wait for it to get merged.'}\n+        m_type1 = message_type(message1s)\n+        self.assertEqual(m_type1, 'answer')\n+\n+        message2s = {'text': 'No create a pull request.The Travis CI '\n+                     'build will continue its checking.'}\n+        m_type2 = message_type(message2s)\n+        self.assertEqual(m_type2, 'answer')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY2OTE1MQ==","createdAt":"2018-08-09T05:01:06Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T11:31:29Z","lastEditedAt":null,"updatedAt":"2018-08-06T11:31:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg2Nzg3NA==","url":"https://github.com/coala/community/pull/145#discussion_r207867874","bodyText":"I pushed this file by mistake. Will remove it in the next push.","diffHunk":"@@ -0,0 +1,4 @@\n+import nltk","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-06T12:07:53Z","lastEditedAt":null,"updatedAt":"2018-08-06T12:07:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzg2ODU4Nw==","url":"https://github.com/coala/community/pull/145#discussion_r207868587","bodyText":"@jayvdb, Is there any other way to download this and nltk.download('averaged_perceptron_tagger') ? As of now its running every time we analyze a message.","diffHunk":"@@ -0,0 +1,23 @@\n+import nltk\n+\n+\n+class Splitter(object):\n+\n+    def __init__(self):\n+        nltk.download('punkt')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-06T12:11:05Z","lastEditedAt":null,"updatedAt":"2018-08-06T12:11:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA2MTA3Mg==","url":"https://github.com/coala/community/pull/145#discussion_r208061072","bodyText":"yes, do it in the module scope, or better create a single django command to download them all","diffHunk":"@@ -0,0 +1,23 @@\n+import nltk\n+\n+\n+class Splitter(object):\n+\n+    def __init__(self):\n+        nltk.download('punkt')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T23:47:46Z","lastEditedAt":null,"updatedAt":"2018-08-06T23:47:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA2MTM5Nw==","url":"https://github.com/coala/community/pull/145#discussion_r208061397","bodyText":"what is this uppercase crap","diffHunk":"@@ -0,0 +1,12 @@\n+from django.core.management.base import BaseCommand\n+\n+from gitter.messages import get_messages, import_messages\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import Newcomer Messages'\n+\n+    def handle(self, *args, **options):\n+        MESSAGES = get_messages()","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T23:50:21Z","lastEditedAt":null,"updatedAt":"2018-08-06T23:50:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA2MTQyMQ==","url":"https://github.com/coala/community/pull/145#discussion_r208061421","bodyText":"more uppercase","diffHunk":"@@ -0,0 +1,66 @@\n+import logging\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+from gitter.nlp.score import sentiment_score\n+from gitter.models import Message\n+\n+\n+def get_messages():\n+    \"\"\"\n+    Get all the messages send by newcomers on the gitter rooms.\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    IMPORT_URL = webservices_url('messages')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T23:50:34Z","lastEditedAt":null,"updatedAt":"2018-08-06T23:50:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA2MTc0Ng==","url":"https://github.com/coala/community/pull/145#discussion_r208061746","bodyText":"create your own assertion method  assertIsQuestion('ok, so what should I do now?')","diffHunk":"@@ -0,0 +1,230 @@\n+from django.test import TestCase\n+\n+from gitter.messages import message_type\n+\n+\n+class MessgeTypeTest(TestCase):\n+\n+    @classmethod\n+    def setUpTestData(cls):\n+        pass\n+\n+    def test_ignore_message(self):\n+        \"\"\"\n+        This method is responsible for testing the positive\n+        sentiment score. It means that the message should be ignored.\n+        \"\"\"\n+        message1s = {'text': 'Please assign me this issue'}\n+        m_type1 = message_type(message1s)\n+        self.assertEqual(m_type1, 'ignore')\n+\n+        message2s = {'text': 'Thank you.'}\n+        m_type2 = message_type(message2s)\n+        self.assertEqual(m_type2, 'ignore')\n+\n+        message3s = {'text': 'Okay thank you so much :)'}\n+        m_type3 = message_type(message3s)\n+        self.assertEqual(m_type3, 'ignore')\n+\n+        message4s = {'text': 'I have replied to your comment'}\n+        m_type4 = message_type(message4s)\n+        self.assertEqual(m_type4, 'ignore')\n+\n+        message5s = {'text': 'OK thanks i got it'}\n+        m_type5 = message_type(message5s)\n+        self.assertEqual(m_type5, 'ignore')\n+\n+        message6s = {'text': 'ok Cool'}\n+        m_type6 = message_type(message6s)\n+        self.assertEqual(m_type6, 'ignore')\n+\n+        message7s = {'text': 'I have made the PR'}\n+        m_type7 = message_type(message7s)\n+        self.assertEqual(m_type7, 'ignore')\n+\n+        message8s = {'text': 'Yes, pushing the commit.'}\n+        m_type8 = message_type(message8s)\n+        self.assertEqual(m_type8, 'ignore')\n+\n+        message9s = {'text': 'Thanks a lot! Its working now :D'}\n+        m_type9 = message_type(message9s)\n+        self.assertEqual(m_type9, 'ignore')\n+\n+        message10s = {'text': 'I\\'ll check them again.'}\n+        m_type10 = message_type(message10s)\n+        self.assertEqual(m_type10, 'ignore')\n+\n+        message11s = {'text': 'I tried it locally and it works'}\n+        m_type11 = message_type(message11s)\n+        self.assertEqual(m_type11, 'ignore')\n+\n+        message12s = {'text': 'I\\'ll try never to repeat these mistakes again.'}\n+        m_type12 = message_type(message12s)\n+        self.assertEqual(m_type12, 'ignore')\n+\n+        message13s = {'text': 'It still doesnt open up the pr'}\n+        m_type13 = message_type(message13s)\n+        self.assertEqual(m_type13, 'ignore')\n+\n+        message14s = {'text': 'Cool ill do that'}\n+        m_type14 = message_type(message14s)\n+        self.assertEqual(m_type14, 'ignore')\n+\n+        message15s = {'text': 'Okay .....then I will wait.Anyways thank you'}\n+        m_type15 = message_type(message15s)\n+        self.assertEqual(m_type15, 'ignore')\n+\n+        message16s = {'text': 'Ok thank you, sorry for the multipost'}\n+        m_type16 = message_type(message16s)\n+        self.assertEqual(m_type16, 'ignore')\n+\n+        message17s = {'text': 'Okay thanks! And I saw it, will fix it quick.'}\n+        m_type17 = message_type(message17s)\n+        self.assertEqual(m_type17, 'ignore')\n+\n+        message18s = {\n+            'text': 'Thanks. I read first I have to run on a project.'}\n+        m_type18 = message_type(message18s)\n+        self.assertEqual(m_type18, 'ignore')\n+\n+        message22s = {\n+            'text': 'Please @jayvdb can help me with solving this issue.'}\n+        m_type22 = message_type(message22s)\n+        self.assertEqual(m_type22, 'ignore')\n+\n+    def test_question_message(self):\n+        \"\"\"\n+        This method is responsible for testing the positive\n+        sentiment score. It means that the message should be ignored.\n+        \"\"\"\n+        message1s = {'text': 'I\\'ve got a question can i use the corobo '\n+                             'commands in any channel or is there a '\n+                             'special channel?'}\n+        m_type1 = message_type(message1s)\n+        self.assertEqual(m_type1, 'question')\n+\n+        message2s = {'text': 'Can someone tell me if this pr is okay '\n+                     'or it needs more changes? '}\n+        m_type2 = message_type(message2s)\n+        self.assertEqual(m_type2, 'question')\n+\n+        message3s = {'text': 'Can I work on this?'}\n+        m_type3 = message_type(message3s)\n+        self.assertEqual(m_type3, 'question')\n+\n+        message4s = {'text': 'Can someone assign to me?'}\n+        m_type4 = message_type(message4s)\n+        self.assertEqual(m_type4, 'question')\n+\n+        message5s = {'text': 'How did you put a tickmark on a commit ?'}\n+        m_type5 = message_type(message5s)\n+        self.assertEqual(m_type5, 'question')\n+\n+        message6s = {'text': 'what to do after rebase?'}\n+        m_type6 = message_type(message6s)\n+        self.assertEqual(m_type6, 'question')\n+\n+        message7s = {'text': 'how to Use github interface for review?'}\n+        m_type7 = message_type(message7s)\n+        self.assertEqual(m_type7, 'question')\n+\n+        message8s = {'text': 'But dont i have to wait for my previous '\n+                     'PR to get merged?'}\n+        m_type8 = message_type(message8s)\n+        self.assertEqual(m_type8, 'question')\n+\n+        message9s = {'text': 'is there a separate bears room?'}\n+        m_type9 = message_type(message9s)\n+        self.assertEqual(m_type9, 'question')\n+\n+        message10s = {\n+            'text': 'What does invoking with a single option mean?'}\n+        m_type10 = message_type(message10s)\n+        self.assertEqual(m_type10, 'question')\n+\n+        message11s = {'text': 'Any hint in which file should i add this test?'}\n+        m_type11 = message_type(message11s)\n+        self.assertEqual(m_type11, 'question')\n+\n+        message12s = {'text': 'Should i click on the create pull request?'}\n+        m_type12 = message_type(message12s)\n+        self.assertEqual(m_type12, 'question')\n+\n+        message13s = {'text': 'is the bot down?'}\n+        m_type13 = message_type(message13s)\n+        self.assertEqual(m_type13, 'question')\n+\n+        message14s = {'text': 'can someone tell me which is the docstring '\n+                      'file in -utils'}\n+        m_type14 = message_type(message14s)\n+        self.assertEqual(m_type14, 'question')\n+\n+        message15s = {'text': 'I have done a newcomer issue, and also '\n+                      'reviewed a newcomer issue, What furthere '\n+                      'steps for becoming a developer?'}\n+        m_type15 = message_type(message15s)\n+        self.assertEqual(m_type15, 'question')\n+\n+        message16s = {\n+            'text': 'ok, can you give me some more time to work on this?'}\n+        m_type16 = message_type(message16s)\n+        self.assertEqual(m_type16, 'question')\n+\n+        message17s = {'text': 'I had a question why is corobo down?'}\n+        m_type17 = message_type(message17s)\n+        self.assertEqual(m_type17, 'question')\n+\n+        message18s = {'text': 'ok, so what should I do now?'}\n+        m_type18 = message_type(message18s)\n+        self.assertEqual(m_type18, 'question')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T23:53:08Z","lastEditedAt":null,"updatedAt":"2018-08-06T23:53:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MzM0NA==","url":"https://github.com/coala/community/pull/145#discussion_r209483344","bodyText":"use a doctest for the example","diffHunk":"@@ -0,0 +1,66 @@\n+import logging\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+from gitter.nlp.score import sentiment_score\n+from gitter.models import Message\n+\n+\n+def get_messages():\n+    \"\"\"\n+    Get all the messages send by newcomers on the gitter rooms.\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    import_url = webservices_url('messages')\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=import_url,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+\n+    data = response.json()\n+    return data\n+\n+\n+def message_type(message):\n+    \"\"\"\n+    Get the type of a message from a message_dict.\n+\n+    :param message: a message dict of type:\n+                    {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:07:36Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:07:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MzQxOA==","url":"https://github.com/coala/community/pull/145#discussion_r209483418","bodyText":"use doctest for examples","diffHunk":"@@ -0,0 +1,25 @@\n+import nltk\n+\n+\n+class POSTagger(object):\n+\n+    def pos_tag(self, sentences):\n+        \"\"\"\n+        input format: list of lists of words\n+            e.g.: [['this', 'is', 'a', 'sentence'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:08:27Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:08:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MzQ1OQ==","url":"https://github.com/coala/community/pull/145#discussion_r209483459","bodyText":"use doctest for examples","diffHunk":"@@ -0,0 +1,34 @@\n+from gitter.nlp.tagger import MessageTagger\n+\n+\n+def value_of(sentiment):\n+    \"\"\"\n+    Get a value based on the sentiment.\n+\n+    :param sentiment: a string representing the sentiment of\n+                      a word. i.e. 'ignore' or 'question'.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:08:50Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:08:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MzQ3Mw==","url":"https://github.com/coala/community/pull/145#discussion_r209483473","bodyText":"use doctest for examples","diffHunk":"@@ -0,0 +1,34 @@\n+from gitter.nlp.tagger import MessageTagger\n+\n+\n+def value_of(sentiment):\n+    \"\"\"\n+    Get a value based on the sentiment.\n+\n+    :param sentiment: a string representing the sentiment of\n+                      a word. i.e. 'ignore' or 'question'.\n+    :return: an integer representing the value of the sentiment.\n+    \"\"\"\n+    if sentiment == 'ignore':\n+        return 1\n+    if sentiment == 'question':\n+        return -1\n+    return 0\n+\n+\n+def sentiment_score(text):\n+    \"\"\"\n+    Get the score of a message.\n+\n+    :param text: a string representing the text of a message.\n+                 e.g. 'How to solve this issue?'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:09:04Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:09:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4MzUyOQ==","url":"https://github.com/coala/community/pull/145#discussion_r209483529","bodyText":"use doctest for examples","diffHunk":"@@ -0,0 +1,42 @@\n+from gitter.nlp.splitter import Splitter\n+from gitter.nlp.pos_tagger import POSTagger\n+from gitter.nlp.dict_tagger import DictionaryTagger\n+\n+\n+class MessageTagger:\n+\n+    def __init__(self, files):\n+        self.splitter = Splitter()\n+        self.postagger = POSTagger()\n+        self.dicttagger = DictionaryTagger(files)\n+\n+    def tagged_message(self, text):\n+        \"\"\"\n+        Process a message with NLP classes.\n+\n+        Step-1: Use Splitter class to split the text message\n+                into list of lists of word.\n+\n+        Step-2: Use POSTagger class to tag the splitted message\n+                with pos.\n+\n+        Step-3: Use DictionaryTagger to tag the message based on\n+                provided dictionaries. i.e. 'training_data/question.yml'\n+                and 'training_data/answers.yml'.\n+\n+        :param text: a string representing the message.\n+                     e.g. 'How to solve this issue?'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:09:58Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:09:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQ4Mzc3Mg==","url":"https://github.com/coala/community/pull/145#discussion_r209483772","bodyText":"use def tag_sentence in the regex section, if that is the problem.\nbut you must get full coverage of __init__","diffHunk":"@@ -8,6 +8,7 @@ nocover_file_globs:\n   - community/git.py\n   - gci/*.py\n   - gsoc/*.py\n+  - gitter/nlp/dict_tagger.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-13T03:12:55Z","lastEditedAt":null,"updatedAt":"2018-08-13T03:12:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTM2MTIyMQ==","url":"https://github.com/coala/community/pull/145#issuecomment-395361221","bodyText":"@li-boxuan, This is a wip PR, I created for showing the demo of how the process will go on...\nThis is a part of my second coding phase. I will improve this day by day in the meantime.\nThanks for the review ;)","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-06-07T09:47:56Z","lastEditedAt":"2018-06-07T09:49:04Z","updatedAt":"2018-06-07T09:49:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTM2MTcwOQ==","url":"https://github.com/coala/community/pull/145#issuecomment-395361709","bodyText":"Okay, I thought it was ready for review 😅","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDc0Njk2OA==","createdAt":"2018-06-07T09:51:38Z","content":"LAUGH","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-06-07T09:49:40Z","lastEditedAt":null,"updatedAt":"2018-06-07T09:49:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ0OTI1OQ==","url":"https://github.com/coala/community/pull/145#issuecomment-410449259","bodyText":"I have written a blog about the work done in this pr. https://sks444.github.io/gsoc/pinned/2018/07/25/GSoC'18-CodingPhase3-Part-I.html","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1MjQ2MA==","createdAt":"2018-08-04T14:17:17Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-04T13:23:59Z","lastEditedAt":null,"updatedAt":"2018-08-04T13:23:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzE4MDE0MQ==","url":"https://github.com/coala/community/pull/145#issuecomment-413180141","bodyText":"an alternative is to create a django app for this.\n\nGoing for creating a django app :)","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-08-15T12:15:51Z","lastEditedAt":null,"updatedAt":"2018-08-15T12:15:51Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533980080000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/160","number":160,"title":"Add gamification app","body":"WIP\ncommit 1, 2 and 3 is from other prs and will be removed when all the work is done\nDeploy Preview https://deploy-preview-160--coala-community.netlify.com/gamification/\nAssumptions and Todo:\n\n\nUsing pastebin links to import the data as webservices is not up yet.\n\n\nPoints, levels, and badges are not finalized yet, I have assigned random points, just to test if all the methods are working properly.","comments":97,"createdAt":"2018-06-28T18:23:54Z","updatedAt":"2018-08-11T09:34:40Z","closedAt":"2018-08-10T00:22:23Z","state":"merged","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"size/XXL","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/160","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM4NzA5NA==","url":"https://github.com/coala/community/pull/160#discussion_r199387094","bodyText":"This will be removed when we will have issues data coming from the webservices.","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from gamification.issues import get_issues, import_data\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import issues opened by newcomers'\n+\n+    ISSUES = staticmethod(get_issues)\n+    IMPORT_DATA = staticmethod(import_data)\n+\n+    def handle(self, *args, **options):\n+        # for issue in self.ISSUES('github'):\n+        #    self.IMPORT_DATA('github', issue)\n+        # for issue in self.ISSUES('gitlab'):\n+        #    self.IMPORT_DATA('gitlab', issue)\n+        for issue in self.ISSUES('test'):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-02T05:20:09Z","lastEditedAt":null,"updatedAt":"2018-07-02T05:20:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM4NzEzMg==","url":"https://github.com/coala/community/pull/160#discussion_r199387132","bodyText":"This will be removed when we will have mrs data coming from the webservices.","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from gamification.mrs import get_mrs, import_data\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import mrs opened by newcomers'\n+\n+    MRS = staticmethod(get_mrs)\n+    IMPORT_DATA = staticmethod(import_data)\n+\n+    def handle(self, *args, **options):\n+        # for mr in self.MRS('github'):\n+        #    self.IMPORT_DATA('github', mr)\n+        # for mr in self.MRS('gitlab'):\n+        #    self.IMPORT_DATA('gitlab', mr)\n+        for mr in self.MRS('test'):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-02T05:20:32Z","lastEditedAt":null,"updatedAt":"2018-07-02T05:20:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM4NzQxMg==","url":"https://github.com/coala/community/pull/160#discussion_r199387412","bodyText":"This part needs enhancement. The problem is it filter outs a badge if any of its activity matches with the activities list.\nBut what we want is filter out the badge when all of its activities matches in the list.","diffHunk":"@@ -0,0 +1,202 @@\n+from django.db import models\n+\n+from data.models import Contributor\n+\n+\n+class Label(models.Model):\n+    name = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Issue(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='issue_author')\n+    state = models.CharField(max_length=100)\n+    repo = models.CharField(max_length=200)\n+    labels = models.ManyToManyField(Label, blank=True)\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='issue_assignees',\n+                                       blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return str(self.title)\n+\n+\n+class IssueNumber(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+\n+    def __str__(self):\n+        return str(self.number)\n+\n+\n+class MergeRequest(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    repo = models.CharField(max_length=200)\n+    closes_issues = models.ManyToManyField(IssueNumber, blank=True)\n+    state = models.CharField(max_length=100)\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='mr_author')\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='mr_assignees',\n+                                       blank=True)\n+    ci_status = models.BooleanField()\n+    labels = models.ManyToManyField(Label, blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return self.title\n+\n+\n+class Activity(models.Model):\n+    name = models.TextField()\n+    points = models.IntegerField()\n+\n+    # Number of times this activity has been performed by the\n+    # same newcomer\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Level(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    min_score = models.BigIntegerField()\n+    max_score = models.BigIntegerField()\n+    name = models.TextField()\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class BadgeActivity(models.Model):\n+    name = models.TextField()\n+\n+    # Number of times a newcomer have to perform this activity\n+    # to get this badge.\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Badge(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    name = models.CharField(max_length=200)\n+    details = models.TextField(null=True)\n+\n+    # Activities a newcomer have to perform to get this badge\n+    b_activities = models.ManyToManyField(BadgeActivity)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Newcomer(models.Model):\n+    username = models.CharField(max_length=100, primary_key=True)\n+\n+    # Total points earned by the newcomer\n+    score = models.IntegerField(default=0, null=True)\n+\n+    # Current level\n+    level = models.ForeignKey(Level, on_delete=models.CASCADE,\n+        default=1, null=True)  # Ignore PycodestyleBear (E128)\n+\n+    # All the activities performed\n+    activities = models.ManyToManyField(Activity)\n+    badges = models.ManyToManyField(Badge)\n+\n+    def __str__(self):\n+        return self.username\n+\n+    class Meta:\n+        ordering = ['-score']\n+\n+    def add_points(self, points, activity_string):\n+        \"\"\"\n+        Update score, level and add activities peformed.\n+\n+        :param points: an integer value representing the\n+                       points earned by the newcomer\n+                       for performing an activity\n+        :param activity_string: represents the activity\n+                                performed by the newcomer\n+        \"\"\"\n+        self.update_score_and_level(points)\n+        self.add_activity(points, activity_string)\n+\n+    def deduct_points(self, points_to_deduct, activity_string):\n+        \"\"\"\n+        Deduct points for performing some specific activities.\n+        \"\"\"\n+        self.add_points(-points_to_deduct, activity_string)\n+\n+    def find_level_for_score(self, score):\n+        \"\"\"\n+        Find suitable level based on the total score earned.\n+        \"\"\"\n+        level = Level.objects.get(min_score__lte=score, max_score__gt=score)\n+        return level\n+\n+    def update_score_and_level(self, points):\n+        \"\"\"\n+        Update score and level based on points.\n+        \"\"\"\n+        if points < 0 and self.score < abs(points):\n+            new_score = self.score = 0\n+        else:\n+            self.score += points\n+            new_score = self.score\n+\n+        new_level = self.find_level_for_score(new_score)\n+        if new_level.number > self.level.number:\n+            self.level = new_level\n+\n+    def add_activity(self, points, activity_string):\n+        \"\"\"\n+        Add activity to the newcomer.\n+\n+        This methof checks if the current activity is\n+        already peformed by the user, if yes, then it\n+        increase the 'number_of_times' field with one.\n+        If not then it adds a new activity to the newcomer.\n+        \"\"\"\n+        activity, created = Activity.objects.get_or_create(\n+            name=activity_string, points=points)\n+        if created:\n+            activity.save()\n+            self.activities.add(activity)\n+        else:\n+            activity.number_of_times += 1\n+            activity.save()\n+\n+    def find_badges_for_activity(self, activities):\n+        \"\"\"\n+        Find the badge based on the activities peformed by the newcomer.\n+\n+        :param activities: a QuerySet dict containing the 'name'\n+                           as key and 'name of the activity' as value\n+        :return: a badge object\n+        \"\"\"\n+        activities = [activity['name'] for activity in activities]\n+        badge = Badge.objects.filter(\n+            b_activities__name__in=activities).distinct()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-02T05:24:14Z","lastEditedAt":null,"updatedAt":"2018-07-02T05:24:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTUyMzIwOQ==","url":"https://github.com/coala/community/pull/160#discussion_r199523209","bodyText":"I wonder if we could do it in one query, something like:\n badge = Badge.objects.filter(\n            b_activities__all__name__in=activities).distinct()\n\nOtherwise I am getting a long way:\n    def find_badges_for_activity(self, activities):\n        activities = [activity['name'] for activity in activities]\n        badge_objects_list = []\n        badges = Badge.objects.all()\n        for badge in badges:\n            b_activities = badge.b_activities.values('name')\n            b_activities = [b_activity['name'] for b_activity in b_activities]\n            match_activity_list = []\n            for b_activity in b_activities:\n                if b_activity in activities:\n                    match_activity_list.append(1)\n            if b_activities.count() == len(match_activity_list):\n                badge_objects_list.append(badge)\n       return badge_objects_list","diffHunk":"@@ -0,0 +1,202 @@\n+from django.db import models\n+\n+from data.models import Contributor\n+\n+\n+class Label(models.Model):\n+    name = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Issue(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='issue_author')\n+    state = models.CharField(max_length=100)\n+    repo = models.CharField(max_length=200)\n+    labels = models.ManyToManyField(Label, blank=True)\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='issue_assignees',\n+                                       blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return str(self.title)\n+\n+\n+class IssueNumber(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+\n+    def __str__(self):\n+        return str(self.number)\n+\n+\n+class MergeRequest(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    repo = models.CharField(max_length=200)\n+    closes_issues = models.ManyToManyField(IssueNumber, blank=True)\n+    state = models.CharField(max_length=100)\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='mr_author')\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='mr_assignees',\n+                                       blank=True)\n+    ci_status = models.BooleanField()\n+    labels = models.ManyToManyField(Label, blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return self.title\n+\n+\n+class Activity(models.Model):\n+    name = models.TextField()\n+    points = models.IntegerField()\n+\n+    # Number of times this activity has been performed by the\n+    # same newcomer\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Level(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    min_score = models.BigIntegerField()\n+    max_score = models.BigIntegerField()\n+    name = models.TextField()\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class BadgeActivity(models.Model):\n+    name = models.TextField()\n+\n+    # Number of times a newcomer have to perform this activity\n+    # to get this badge.\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Badge(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    name = models.CharField(max_length=200)\n+    details = models.TextField(null=True)\n+\n+    # Activities a newcomer have to perform to get this badge\n+    b_activities = models.ManyToManyField(BadgeActivity)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Newcomer(models.Model):\n+    username = models.CharField(max_length=100, primary_key=True)\n+\n+    # Total points earned by the newcomer\n+    score = models.IntegerField(default=0, null=True)\n+\n+    # Current level\n+    level = models.ForeignKey(Level, on_delete=models.CASCADE,\n+        default=1, null=True)  # Ignore PycodestyleBear (E128)\n+\n+    # All the activities performed\n+    activities = models.ManyToManyField(Activity)\n+    badges = models.ManyToManyField(Badge)\n+\n+    def __str__(self):\n+        return self.username\n+\n+    class Meta:\n+        ordering = ['-score']\n+\n+    def add_points(self, points, activity_string):\n+        \"\"\"\n+        Update score, level and add activities peformed.\n+\n+        :param points: an integer value representing the\n+                       points earned by the newcomer\n+                       for performing an activity\n+        :param activity_string: represents the activity\n+                                performed by the newcomer\n+        \"\"\"\n+        self.update_score_and_level(points)\n+        self.add_activity(points, activity_string)\n+\n+    def deduct_points(self, points_to_deduct, activity_string):\n+        \"\"\"\n+        Deduct points for performing some specific activities.\n+        \"\"\"\n+        self.add_points(-points_to_deduct, activity_string)\n+\n+    def find_level_for_score(self, score):\n+        \"\"\"\n+        Find suitable level based on the total score earned.\n+        \"\"\"\n+        level = Level.objects.get(min_score__lte=score, max_score__gt=score)\n+        return level\n+\n+    def update_score_and_level(self, points):\n+        \"\"\"\n+        Update score and level based on points.\n+        \"\"\"\n+        if points < 0 and self.score < abs(points):\n+            new_score = self.score = 0\n+        else:\n+            self.score += points\n+            new_score = self.score\n+\n+        new_level = self.find_level_for_score(new_score)\n+        if new_level.number > self.level.number:\n+            self.level = new_level\n+\n+    def add_activity(self, points, activity_string):\n+        \"\"\"\n+        Add activity to the newcomer.\n+\n+        This methof checks if the current activity is\n+        already peformed by the user, if yes, then it\n+        increase the 'number_of_times' field with one.\n+        If not then it adds a new activity to the newcomer.\n+        \"\"\"\n+        activity, created = Activity.objects.get_or_create(\n+            name=activity_string, points=points)\n+        if created:\n+            activity.save()\n+            self.activities.add(activity)\n+        else:\n+            activity.number_of_times += 1\n+            activity.save()\n+\n+    def find_badges_for_activity(self, activities):\n+        \"\"\"\n+        Find the badge based on the activities peformed by the newcomer.\n+\n+        :param activities: a QuerySet dict containing the 'name'\n+                           as key and 'name of the activity' as value\n+        :return: a badge object\n+        \"\"\"\n+        activities = [activity['name'] for activity in activities]\n+        badge = Badge.objects.filter(\n+            b_activities__name__in=activities).distinct()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-02T14:50:11Z","lastEditedAt":null,"updatedAt":"2018-07-02T14:50:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTY5MTkwMg==","url":"https://github.com/coala/community/pull/160#discussion_r199691902","bodyText":"methof --> method","diffHunk":"@@ -0,0 +1,202 @@\n+from django.db import models\n+\n+from data.models import Contributor\n+\n+\n+class Label(models.Model):\n+    name = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Issue(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='issue_author')\n+    state = models.CharField(max_length=100)\n+    repo = models.CharField(max_length=200)\n+    labels = models.ManyToManyField(Label, blank=True)\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='issue_assignees',\n+                                       blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return str(self.title)\n+\n+\n+class IssueNumber(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+\n+    def __str__(self):\n+        return str(self.number)\n+\n+\n+class MergeRequest(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    repo = models.CharField(max_length=200)\n+    closes_issues = models.ManyToManyField(IssueNumber, blank=True)\n+    state = models.CharField(max_length=100)\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='mr_author')\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='mr_assignees',\n+                                       blank=True)\n+    ci_status = models.BooleanField()\n+    labels = models.ManyToManyField(Label, blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return self.title\n+\n+\n+class Activity(models.Model):\n+    name = models.TextField()\n+    points = models.IntegerField()\n+\n+    # Number of times this activity has been performed by the\n+    # same newcomer\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Level(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    min_score = models.BigIntegerField()\n+    max_score = models.BigIntegerField()\n+    name = models.TextField()\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class BadgeActivity(models.Model):\n+    name = models.TextField()\n+\n+    # Number of times a newcomer have to perform this activity\n+    # to get this badge.\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Badge(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    name = models.CharField(max_length=200)\n+    details = models.TextField(null=True)\n+\n+    # Activities a newcomer have to perform to get this badge\n+    b_activities = models.ManyToManyField(BadgeActivity)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Newcomer(models.Model):\n+    username = models.CharField(max_length=100, primary_key=True)\n+\n+    # Total points earned by the newcomer\n+    score = models.IntegerField(default=0, null=True)\n+\n+    # Current level\n+    level = models.ForeignKey(Level, on_delete=models.CASCADE,\n+        default=1, null=True)  # Ignore PycodestyleBear (E128)\n+\n+    # All the activities performed\n+    activities = models.ManyToManyField(Activity)\n+    badges = models.ManyToManyField(Badge)\n+\n+    def __str__(self):\n+        return self.username\n+\n+    class Meta:\n+        ordering = ['-score']\n+\n+    def add_points(self, points, activity_string):\n+        \"\"\"\n+        Update score, level and add activities peformed.\n+\n+        :param points: an integer value representing the\n+                       points earned by the newcomer\n+                       for performing an activity\n+        :param activity_string: represents the activity\n+                                performed by the newcomer\n+        \"\"\"\n+        self.update_score_and_level(points)\n+        self.add_activity(points, activity_string)\n+\n+    def deduct_points(self, points_to_deduct, activity_string):\n+        \"\"\"\n+        Deduct points for performing some specific activities.\n+        \"\"\"\n+        self.add_points(-points_to_deduct, activity_string)\n+\n+    def find_level_for_score(self, score):\n+        \"\"\"\n+        Find suitable level based on the total score earned.\n+        \"\"\"\n+        level = Level.objects.get(min_score__lte=score, max_score__gt=score)\n+        return level\n+\n+    def update_score_and_level(self, points):\n+        \"\"\"\n+        Update score and level based on points.\n+        \"\"\"\n+        if points < 0 and self.score < abs(points):\n+            new_score = self.score = 0\n+        else:\n+            self.score += points\n+            new_score = self.score\n+\n+        new_level = self.find_level_for_score(new_score)\n+        if new_level.number > self.level.number:\n+            self.level = new_level\n+\n+    def add_activity(self, points, activity_string):\n+        \"\"\"\n+        Add activity to the newcomer.\n+\n+        This methof checks if the current activity is","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-03T06:05:52Z","lastEditedAt":null,"updatedAt":"2018-07-03T06:05:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5MjgxMw==","url":"https://github.com/coala/community/pull/160#discussion_r199992813","bodyText":"lets rename it The All-Rounder so it doesnt violate our 'dont mention coala' rule and so this is re-usable by other orgs, and give a details which isnt explicitly mentioning coala.","diffHunk":"@@ -0,0 +1,301 @@\n+from gamification.models import (\n+    Level,\n+    Newcomer,\n+    Badge,\n+    BadgeActivity,\n+    )\n+from gamification.newcomers import get_newcomers\n+\n+\n+def create_levels():\n+    \"\"\"\n+    Create levels which will be used in the gamification system.\n+    \"\"\"\n+    level_objects_list = [\n+        Level(number=1, min_score=0, max_score=5, name='newbie'),\n+        Level(number=2, min_score=5, max_score=10, name='beginner'),\n+        Level(number=3, min_score=10, max_score=15, name='learner'),\n+        Level(number=4, min_score=15, max_score=20, name='intermediate'),\n+        Level(number=5, min_score=20, max_score=25, name='cool'),\n+        Level(number=6, min_score=25, max_score=30, name='awesome'),\n+        Level(number=7, min_score=30, max_score=35, name='master'),\n+        Level(number=8, min_score=35, max_score=40, name='legend'),\n+        Level(number=9, min_score=40, max_score=45, name='expert'),\n+    ]\n+    Level.objects.bulk_create(level_objects_list)\n+\n+\n+def create_newcomers():\n+    \"\"\"\n+    Create newcomer which will be used in the gamification system.\n+    \"\"\"\n+    newcomer_objects_list = []\n+    for newcomer in get_newcomers():  # Ignore PyFlakesBear\n+        newcomer_objects_list.append(\n+            Newcomer(username=newcomer))\n+    Newcomer.objects.bulk_create(newcomer_objects_list)\n+\n+\n+def create_badge_activity():\n+    b_activity__object_list = [\n+        BadgeActivity(\n+            name='Created a newcomer bug'),\n+        BadgeActivity(\n+            name='Created a difficulty low bug'),\n+        BadgeActivity(\n+            name='Created a difficulty medium bug'),\n+        BadgeActivity(\n+            name='Created a difficulty high bug'),\n+        BadgeActivity(\n+            name='Created a low importance newcomer issue'),\n+        BadgeActivity(\n+            name='Created a low importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Created a low importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Created a low importance, high difficulty issue'),\n+        BadgeActivity(\n+            name='Created a medium importance newcomer issue'),\n+        BadgeActivity(\n+            name='Created a medium importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Created a medium importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Created a medium importance, high difficulty issue'),\n+        BadgeActivity(\n+            name='Created a high importance newcomer issue'),\n+        BadgeActivity(\n+            name='Created a high importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Created a high importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Created a high importance, high difficulty issue'),\n+        BadgeActivity(name='Created a critical importance newcomer issue'),\n+        BadgeActivity(\n+            name='Created a critical importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Created a critical importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Created a critical importance, high difficulty issue'),\n+        BadgeActivity(\n+            name='Created a newcomer documentation issue'),\n+        BadgeActivity(\n+            name='Created a low difficulty documentation issue'),\n+        BadgeActivity(\n+            name='Created a medium difficulty documentation issue'),\n+        BadgeActivity(\n+            name='Created a newcomer feature issue'),\n+        BadgeActivity(\n+            name='Created a low difficulty feature issue'),\n+        BadgeActivity(\n+            name='Created a medium difficulty feature issue'),\n+        BadgeActivity(\n+            name='Created a high difficulty feature issue'),\n+        BadgeActivity(\n+            name='Created a linter bear proposal issue'),\n+        BadgeActivity(\n+            name='Created a generic bear proposal issue'),\n+        BadgeActivity(\n+            name='Created a native bear proposal issue'),\n+        BadgeActivity(\n+            name='Created a newcomer issue'),\n+        BadgeActivity(\n+            name='Created a low difficulty issue'),\n+        BadgeActivity(\n+            name='Created a medium difficulty issue'),\n+        BadgeActivity(\n+            name='Created a high difficulty issue'),\n+        BadgeActivity(\n+            name='Created a duplicate issue'),\n+        BadgeActivity(\n+            name='Created a invalid issue'),\n+        BadgeActivity(\n+            name='Solved a newcomer bug'),\n+        BadgeActivity(\n+            name='Solved a difficulty low bug'),\n+        BadgeActivity(\n+            name='Solved a difficulty medium bug'),\n+        BadgeActivity(\n+            name='Solved a difficulty high bug'),\n+        BadgeActivity(\n+            name='Solved a low importance newcomer issue'),\n+        BadgeActivity(\n+            name='Solved a low importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a low importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a low importance, high difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a medium importance newcomer issue'),\n+        BadgeActivity(\n+            name='Solved a medium importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a medium importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a medium importance, high difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a high importance newcomer issue'),\n+        BadgeActivity(\n+            name='Solved a high importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a high importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a high importance, high difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a critical importance newcomer issue'),\n+        BadgeActivity(\n+            name='Solved a critical importance, low difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a critical importance, medium difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a critical importance, high difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a newcomer documentation issue'),\n+        BadgeActivity(\n+            name='Solved a low difficulty documentation issue'),\n+        BadgeActivity(\n+            name='Solved a medium difficulty documentation issue'),\n+        BadgeActivity(\n+            name='Solved a low difficulty feature issue'),\n+        BadgeActivity(\n+            name='Solved a medium difficulty feature issue'),\n+        BadgeActivity(\n+            name='Solved a difficulty feature issue'),\n+        BadgeActivity(\n+            name='Solved a linter bear proposal issue'),\n+        BadgeActivity(\n+            name='Solved a generic bear proposal issue'),\n+        BadgeActivity(\n+            name='Solved a native bear proposal issue'),\n+        BadgeActivity(\n+            name='Solved a newcomer issue'),\n+        BadgeActivity(\n+            name='Solved a low difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a medium difficulty issue'),\n+        BadgeActivity(\n+            name='Solved a high difficulty issue'),\n+        BadgeActivity(\n+            name='Closed a merge_request without merge'),\n+    ]\n+    BadgeActivity.objects.bulk_create(b_activity__object_list)\n+\n+\n+def create_badges():\n+    badge_objects_list = [\n+        Badge(\n+            number=1,\n+            name='The Bug Finder',\n+            details='The one who find bugs in the existing codebase',\n+        ),\n+        Badge(\n+            number=2,\n+            name='The Bear Hunter',\n+            details='The one who create issues about new bears',\n+        ),\n+        Badge(\n+            number=3,\n+            name='The Bear Writer',\n+            details='The one who write new bears',\n+        ),\n+        Badge(\n+            number=4,\n+            name='The Bug Solver',\n+            details='The one who find bugs in the existing codebase',\n+        ),\n+        Badge(\n+            number=5,\n+            name='The Helper',\n+            details='The one who help other newcomers',\n+        ),\n+        Badge(\n+            number=6,\n+            name='The Reviewer',\n+            details='The one who review others pull requests',\n+        ),\n+        Badge(\n+            number=7,\n+            name='The Super Reviewer',\n+            details='The one who is the legend of reviewing',\n+        ),\n+        Badge(\n+            number=8,\n+            name='The coala All-Rounder',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:10:25Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:10:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5Mjg3Mg==","url":"https://github.com/coala/community/pull/160#discussion_r199992872","bodyText":"nice workaround ;-)","diffHunk":"@@ -2,13 +2,13 @@\n \n import requests\n \n-from community.git import get_org_name\n-from data.models import Contributor\n+# from community.git import get_org_name\n+from data.models import Contributor, Team\n \n \n def get_contrib_data():\n     logger = logging.getLogger(__name__)\n-    IMPORT_URL = 'https://webservices.' + get_org_name() + '.io/contrib/'\n+    IMPORT_URL = 'https://pastebin.com/raw/6P6W3ziV'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:11:06Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:11:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5MzE4MQ==","url":"https://github.com/coala/community/pull/160#discussion_r199993181","bodyText":"why Ignore PyFlakesBear ?","diffHunk":"@@ -0,0 +1,301 @@\n+from gamification.models import (\n+    Level,\n+    Newcomer,\n+    Badge,\n+    BadgeActivity,\n+    )\n+from gamification.newcomers import get_newcomers\n+\n+\n+def create_levels():\n+    \"\"\"\n+    Create levels which will be used in the gamification system.\n+    \"\"\"\n+    level_objects_list = [\n+        Level(number=1, min_score=0, max_score=5, name='newbie'),\n+        Level(number=2, min_score=5, max_score=10, name='beginner'),\n+        Level(number=3, min_score=10, max_score=15, name='learner'),\n+        Level(number=4, min_score=15, max_score=20, name='intermediate'),\n+        Level(number=5, min_score=20, max_score=25, name='cool'),\n+        Level(number=6, min_score=25, max_score=30, name='awesome'),\n+        Level(number=7, min_score=30, max_score=35, name='master'),\n+        Level(number=8, min_score=35, max_score=40, name='legend'),\n+        Level(number=9, min_score=40, max_score=45, name='expert'),\n+    ]\n+    Level.objects.bulk_create(level_objects_list)\n+\n+\n+def create_newcomers():\n+    \"\"\"\n+    Create newcomer which will be used in the gamification system.\n+    \"\"\"\n+    newcomer_objects_list = []\n+    for newcomer in get_newcomers():  # Ignore PyFlakesBear","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:14:19Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:14:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5MzM3NA==","url":"https://github.com/coala/community/pull/160#discussion_r199993374","bodyText":"move this to a different file.\nWe should have one file which is only the gamification configuration, and no other stuff.","diffHunk":"@@ -0,0 +1,301 @@\n+from gamification.models import (\n+    Level,\n+    Newcomer,\n+    Badge,\n+    BadgeActivity,\n+    )\n+from gamification.newcomers import get_newcomers\n+\n+\n+def create_levels():\n+    \"\"\"\n+    Create levels which will be used in the gamification system.\n+    \"\"\"\n+    level_objects_list = [\n+        Level(number=1, min_score=0, max_score=5, name='newbie'),\n+        Level(number=2, min_score=5, max_score=10, name='beginner'),\n+        Level(number=3, min_score=10, max_score=15, name='learner'),\n+        Level(number=4, min_score=15, max_score=20, name='intermediate'),\n+        Level(number=5, min_score=20, max_score=25, name='cool'),\n+        Level(number=6, min_score=25, max_score=30, name='awesome'),\n+        Level(number=7, min_score=30, max_score=35, name='master'),\n+        Level(number=8, min_score=35, max_score=40, name='legend'),\n+        Level(number=9, min_score=40, max_score=45, name='expert'),\n+    ]\n+    Level.objects.bulk_create(level_objects_list)\n+\n+\n+def create_newcomers():","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk4NTE3MQ==","createdAt":"2018-07-04T09:34:39Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-04T02:16:20Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:16:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5MzUzNw==","url":"https://github.com/coala/community/pull/160#discussion_r199993537","bodyText":"create a function in a more global place which provides 'https://webservices.' + get_org_name() + '.io'","diffHunk":"@@ -0,0 +1,90 @@\n+import logging\n+\n+import requests\n+\n+from gamification.models import (\n+    Issue,\n+    Label,\n+    )\n+from gamification.newcomers import get_newcomers\n+from data.models import Contributor\n+from community.git import get_org_name\n+\n+\n+def get_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    if hoster == 'github':\n+        IMPORT_URL = ('https://webservices.' + get_org_name() +\n+                      '.io/issues/github/all')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk4NTE4MQ==","createdAt":"2018-07-04T09:35:00Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-04T02:17:59Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:17:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5MzU5MA==","url":"https://github.com/coala/community/pull/160#discussion_r199993590","bodyText":"-> import_issue","diffHunk":"@@ -0,0 +1,90 @@\n+import logging\n+\n+import requests\n+\n+from gamification.models import (\n+    Issue,\n+    Label,\n+    )\n+from gamification.newcomers import get_newcomers\n+from data.models import Contributor\n+from community.git import get_org_name\n+\n+\n+def get_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    if hoster == 'github':\n+        IMPORT_URL = ('https://webservices.' + get_org_name() +\n+                      '.io/issues/github/all')\n+    elif hoster == 'gitlab':\n+        IMPORT_URL = ('https://webservices.' + get_org_name() +\n+                      '.io/issues/gitlab/all')\n+    else:\n+        IMPORT_URL = 'https://pastebin.com/raw/miEFc8TB'\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+    issues = response.json()\n+\n+    # Removing issues which are not opened by newcomers\n+    for issue in issues[:]:\n+        if issue['author'] not in get_newcomers():\n+            issues.remove(issue)\n+    return issues\n+\n+\n+def import_data(hoster, issue):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:18:34Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:18:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5MzYwNA==","url":"https://github.com/coala/community/pull/160#discussion_r199993604","bodyText":"get->fetch","diffHunk":"@@ -0,0 +1,90 @@\n+import logging\n+\n+import requests\n+\n+from gamification.models import (\n+    Issue,\n+    Label,\n+    )\n+from gamification.newcomers import get_newcomers\n+from data.models import Contributor\n+from community.git import get_org_name\n+\n+\n+def get_issues(hoster):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:18:49Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:18:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5MzcxNA==","url":"https://github.com/coala/community/pull/160#discussion_r199993714","bodyText":"there isnt any need for this.\nThe reason to use those static methods was only because there were many commands which had very similar implementation.\nThat isnt the case here.","diffHunk":"@@ -0,0 +1,26 @@\n+from django.core.management.base import BaseCommand\n+\n+from gamification.create import (\n+    create_levels,\n+    create_newcomers,\n+    create_badge_activity,\n+    create_badges,\n+    add_activity_to_badge,\n+    )\n+\n+\n+class Command(BaseCommand):\n+    help = 'Create Gamification data'\n+\n+    CREATE_LEVELS = staticmethod(create_levels)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:20:13Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:20:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5Mzg0Mg==","url":"https://github.com/coala/community/pull/160#discussion_r199993842","bodyText":"you cant call this ISSUES and then the next one MRS.\nThey must all have the same name, then the handle can be re-used.","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from gamification.issues import get_issues, import_data\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import issues opened by newcomers'\n+\n+    ISSUES = staticmethod(get_issues)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:21:42Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:21:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5Mzk3MA==","url":"https://github.com/coala/community/pull/160#discussion_r199993970","bodyText":"Git repo data should be in a different app.\nI think you already have a PR for that.","diffHunk":"@@ -0,0 +1,202 @@\n+from django.db import models\n+\n+from data.models import Contributor\n+\n+\n+class Label(models.Model):\n+    name = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Issue(models.Model):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk4NTI4MQ==","createdAt":"2018-07-04T09:36:52Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-04T02:23:20Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:23:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5NDExNw==","url":"https://github.com/coala/community/pull/160#discussion_r199994117","bodyText":"Newcomer -> Participant\nYou are only building this for newcomers, but we will be expanding this to be used for Developers and other cohorts.","diffHunk":"@@ -0,0 +1,202 @@\n+from django.db import models\n+\n+from data.models import Contributor\n+\n+\n+class Label(models.Model):\n+    name = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Issue(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='issue_author')\n+    state = models.CharField(max_length=100)\n+    repo = models.CharField(max_length=200)\n+    labels = models.ManyToManyField(Label, blank=True)\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='issue_assignees',\n+                                       blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return str(self.title)\n+\n+\n+class IssueNumber(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+\n+    def __str__(self):\n+        return str(self.number)\n+\n+\n+class MergeRequest(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    repo = models.CharField(max_length=200)\n+    closes_issues = models.ManyToManyField(IssueNumber, blank=True)\n+    state = models.CharField(max_length=100)\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='mr_author')\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='mr_assignees',\n+                                       blank=True)\n+    ci_status = models.BooleanField()\n+    labels = models.ManyToManyField(Label, blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return self.title\n+\n+\n+class Activity(models.Model):\n+    name = models.TextField()\n+    points = models.IntegerField()\n+\n+    # Number of times this activity has been performed by the\n+    # same newcomer\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Level(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    min_score = models.BigIntegerField()\n+    max_score = models.BigIntegerField()\n+    name = models.TextField()\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class BadgeActivity(models.Model):\n+    name = models.TextField()\n+\n+    # Number of times a newcomer have to perform this activity\n+    # to get this badge.\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Badge(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    name = models.CharField(max_length=200)\n+    details = models.TextField(null=True)\n+\n+    # Activities a newcomer have to perform to get this badge\n+    b_activities = models.ManyToManyField(BadgeActivity)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Newcomer(models.Model):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:24:40Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:24:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5NDMwOQ==","url":"https://github.com/coala/community/pull/160#discussion_r199994309","bodyText":"dont mention newcomers anywhere except where the component can only be possibly applicable to a newcomer.","diffHunk":"@@ -0,0 +1,202 @@\n+from django.db import models\n+\n+from data.models import Contributor\n+\n+\n+class Label(models.Model):\n+    name = models.CharField(max_length=300)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Issue(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='issue_author')\n+    state = models.CharField(max_length=100)\n+    repo = models.CharField(max_length=200)\n+    labels = models.ManyToManyField(Label, blank=True)\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='issue_assignees',\n+                                       blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return str(self.title)\n+\n+\n+class IssueNumber(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+\n+    def __str__(self):\n+        return str(self.number)\n+\n+\n+class MergeRequest(models.Model):\n+    number = models.IntegerField()\n+    title = models.TextField()\n+    repo = models.CharField(max_length=200)\n+    closes_issues = models.ManyToManyField(IssueNumber, blank=True)\n+    state = models.CharField(max_length=100)\n+    author = models.ForeignKey(Contributor,\n+                               on_delete=models.CASCADE,\n+                               related_name='mr_author')\n+    assignees = models.ManyToManyField(Contributor,\n+                                       related_name='mr_assignees',\n+                                       blank=True)\n+    ci_status = models.BooleanField()\n+    labels = models.ManyToManyField(Label, blank=True)\n+    hoster = models.CharField(max_length=100)\n+\n+    def __str__(self):\n+        return self.title\n+\n+\n+class Activity(models.Model):\n+    name = models.TextField()\n+    points = models.IntegerField()\n+\n+    # Number of times this activity has been performed by the\n+    # same newcomer\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Level(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    min_score = models.BigIntegerField()\n+    max_score = models.BigIntegerField()\n+    name = models.TextField()\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class BadgeActivity(models.Model):\n+    name = models.TextField()\n+\n+    # Number of times a newcomer have to perform this activity\n+    # to get this badge.\n+    number_of_times = models.IntegerField(default=1, null=True)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Badge(models.Model):\n+    number = models.IntegerField(primary_key=True)\n+    name = models.CharField(max_length=200)\n+    details = models.TextField(null=True)\n+\n+    # Activities a newcomer have to perform to get this badge\n+    b_activities = models.ManyToManyField(BadgeActivity)\n+\n+    def __str__(self):\n+        return self.name\n+\n+\n+class Newcomer(models.Model):\n+    username = models.CharField(max_length=100, primary_key=True)\n+\n+    # Total points earned by the newcomer\n+    score = models.IntegerField(default=0, null=True)\n+\n+    # Current level\n+    level = models.ForeignKey(Level, on_delete=models.CASCADE,\n+        default=1, null=True)  # Ignore PycodestyleBear (E128)\n+\n+    # All the activities performed\n+    activities = models.ManyToManyField(Activity)\n+    badges = models.ManyToManyField(Badge)\n+\n+    def __str__(self):\n+        return self.username\n+\n+    class Meta:\n+        ordering = ['-score']\n+\n+    def add_points(self, points, activity_string):\n+        \"\"\"\n+        Update score, level and add activities peformed.\n+\n+        :param points: an integer value representing the\n+                       points earned by the newcomer\n+                       for performing an activity\n+        :param activity_string: represents the activity\n+                                performed by the newcomer\n+        \"\"\"\n+        self.update_score_and_level(points)\n+        self.add_activity(points, activity_string)\n+\n+    def deduct_points(self, points_to_deduct, activity_string):\n+        \"\"\"\n+        Deduct points for performing some specific activities.\n+        \"\"\"\n+        self.add_points(-points_to_deduct, activity_string)\n+\n+    def find_level_for_score(self, score):\n+        \"\"\"\n+        Find suitable level based on the total score earned.\n+        \"\"\"\n+        level = Level.objects.get(min_score__lte=score, max_score__gt=score)\n+        return level\n+\n+    def update_score_and_level(self, points):\n+        \"\"\"\n+        Update score and level based on points.\n+        \"\"\"\n+        if points < 0 and self.score < abs(points):\n+            new_score = self.score = 0\n+        else:\n+            self.score += points\n+            new_score = self.score\n+\n+        new_level = self.find_level_for_score(new_score)\n+        if new_level.number > self.level.number:\n+            self.level = new_level\n+\n+    def add_activity(self, points, activity_string):\n+        \"\"\"\n+        Add activity to the newcomer.\n+\n+        This methof checks if the current activity is\n+        already peformed by the user, if yes, then it\n+        increase the 'number_of_times' field with one.\n+        If not then it adds a new activity to the newcomer.\n+        \"\"\"\n+        activity, created = Activity.objects.get_or_create(\n+            name=activity_string, points=points)\n+        if created:\n+            activity.save()\n+            self.activities.add(activity)\n+        else:\n+            activity.number_of_times += 1\n+            activity.save()\n+\n+    def find_badges_for_activity(self, activities):\n+        \"\"\"\n+        Find the badge based on the activities peformed by the newcomer.\n+\n+        :param activities: a QuerySet dict containing the 'name'\n+                           as key and 'name of the activity' as value\n+        :return: a badge object\n+        \"\"\"\n+        activities = [activity['name'] for activity in activities]\n+        badge = Badge.objects.filter(\n+            b_activities__name__in=activities).distinct()\n+        return badge\n+\n+    def add_badge(self, activities):\n+        \"\"\"\n+        Add badge to newcomer based on the activities performed.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjgwMjcwMA==","createdAt":"2018-07-22T17:36:08Z","content":"THUMBS_UP","user":{"login":"prnvdixit","name":"Pranav Dixit"}}],"createdAt":"2018-07-04T02:25:27Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:25:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk5NDQwMQ==","url":"https://github.com/coala/community/pull/160#discussion_r199994401","bodyText":"this is unused ?","diffHunk":"@@ -0,0 +1,73 @@\n+\"\"\"\n+This module contains the points assigned to the activity\n+variables, which will be used throughout the gamification\n+system.\n+\"\"\"\n+\n+# Assigning points to the issues' activities\n+NEWCOMER_DIFFICULTY_BUG_ISSUE = 5\n+NEWCOMER_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_BUG_ISSUE = 5\n+NEWCOMER_DIFFICULTY_DOCUMENTATION_ISSUE = 5\n+NEWCOMER_DIFFICULTY_FEATURE_ISSUE = 5\n+LOW_DIFFICULTY_BUG_ISSUE = 5\n+LOW_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_FEATURE_ISSUE = 5\n+LOW_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_DOCUMENTATION_ISSUE = 5\n+LOW_DIFFICULTY_BUG_ISSUE = 5\n+MEDIUM_DIFFICULTY_BUG_ISSUE = 5\n+MEDIUM_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_DOCUMENTATION_ISSUE = 5\n+MEDIUM_DIFFICULTY_FEATURE_ISSUE = 5\n+HIGH_DIFFICULTY_BUG_ISSUE = 5\n+HIGH_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_FEATURE_ISSUE = 5\n+NATIVE_BEAR_ISSUE = 5\n+LINTER_BEAR_ISSUE = 5\n+GENERIC_BEAR_ISSUE = 5\n+DUPLICATE_ISSUE = 5\n+INVALID_ISSUE = 5\n+\n+# Assigning points to the prs' activities\n+NEWCOMER_DIFFICULTY_BUG_MR = 5\n+NEWCOMER_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_DOCUMENTATION_MR = 5\n+NEWCOMER_DIFFICULTY_FEATURE_MR = 5\n+LOW_DIFFICULTY_FEATURE_MR = 5\n+LOW_DIFFICULTY_BUG_MR = 5\n+LOW_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+LOW_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+LOW_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+LOW_DIFFICULTY_DOCUMENTATION_MR = 5\n+LOW_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_BUG_MR = 5\n+MEDIUM_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_DOCUMENTATION_MR = 5\n+MEDIUM_DIFFICULTY_FEATURE_MR = 5\n+MEDIUM_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-04T02:26:14Z","lastEditedAt":null,"updatedAt":"2018-07-04T02:26:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDAzMDY4Mw==","url":"https://github.com/coala/community/pull/160#discussion_r200030683","bodyText":"I have used it in gamification/activity.py","diffHunk":"@@ -0,0 +1,73 @@\n+\"\"\"\n+This module contains the points assigned to the activity\n+variables, which will be used throughout the gamification\n+system.\n+\"\"\"\n+\n+# Assigning points to the issues' activities\n+NEWCOMER_DIFFICULTY_BUG_ISSUE = 5\n+NEWCOMER_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+NEWCOMER_DIFFICULTY_BUG_ISSUE = 5\n+NEWCOMER_DIFFICULTY_DOCUMENTATION_ISSUE = 5\n+NEWCOMER_DIFFICULTY_FEATURE_ISSUE = 5\n+LOW_DIFFICULTY_BUG_ISSUE = 5\n+LOW_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_FEATURE_ISSUE = 5\n+LOW_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+LOW_DIFFICULTY_DOCUMENTATION_ISSUE = 5\n+LOW_DIFFICULTY_BUG_ISSUE = 5\n+MEDIUM_DIFFICULTY_BUG_ISSUE = 5\n+MEDIUM_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+MEDIUM_DIFFICULTY_DOCUMENTATION_ISSUE = 5\n+MEDIUM_DIFFICULTY_FEATURE_ISSUE = 5\n+HIGH_DIFFICULTY_BUG_ISSUE = 5\n+HIGH_DIFFICULTY_LOW_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_MEDIUM_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_HIGH_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_CRITICAL_IMPORTANCE_ISSUE = 5\n+HIGH_DIFFICULTY_FEATURE_ISSUE = 5\n+NATIVE_BEAR_ISSUE = 5\n+LINTER_BEAR_ISSUE = 5\n+GENERIC_BEAR_ISSUE = 5\n+DUPLICATE_ISSUE = 5\n+INVALID_ISSUE = 5\n+\n+# Assigning points to the prs' activities\n+NEWCOMER_DIFFICULTY_BUG_MR = 5\n+NEWCOMER_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5\n+NEWCOMER_DIFFICULTY_DOCUMENTATION_MR = 5\n+NEWCOMER_DIFFICULTY_FEATURE_MR = 5\n+LOW_DIFFICULTY_FEATURE_MR = 5\n+LOW_DIFFICULTY_BUG_MR = 5\n+LOW_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+LOW_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+LOW_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+LOW_DIFFICULTY_DOCUMENTATION_MR = 5\n+LOW_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_BUG_MR = 5\n+MEDIUM_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+MEDIUM_DIFFICULTY_DOCUMENTATION_MR = 5\n+MEDIUM_DIFFICULTY_FEATURE_MR = 5\n+MEDIUM_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_LOW_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_MEDIUM_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_HIGH_IMPORTANCE_MR = 5\n+HIGH_DIFFICULTY_CRITICAL_IMPORTANCE_MR = 5","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-04T07:27:57Z","lastEditedAt":null,"updatedAt":"2018-07-04T07:27:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTc3OTA0NA==","url":"https://github.com/coala/community/pull/160#issuecomment-401779044","bodyText":"I think we I should make classes for the files create.py and update.py with the names CreateGamificationData and UpdateGamificationData  respectively with their own handler method, So that I don't have to call each of the methods of those files in the management commands explicitly.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-02T11:50:16Z","lastEditedAt":null,"updatedAt":"2018-07-02T11:50:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTkyMzExMA==","url":"https://github.com/coala/community/pull/160#issuecomment-401923110","bodyText":"Wrote a blog about this PR https://sks444.github.io/gsoc/pinned/2018/06/03/GSoC'18-CodingPhase2-Part-I.html","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-02T20:24:15Z","lastEditedAt":null,"updatedAt":"2018-07-02T20:24:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjk0NzE4OQ==","url":"https://github.com/coala/community/pull/160#issuecomment-406947189","bodyText":"@prnvdixit, not as of now.\n\nissue being closed without a MR getting merged for it\n\nThe reason is we don't have the data of those mrs who are not opened by newcomers.\nYes, if we can identify the closer of the issue, we can deduct points for the newcomers who closes their own issues, as it clearly indicates that the mrs for those issues aren't merged. But IGitt doesn't provide the details of the issue or mr closer yet.\nBut another way of doing it is to check the labels on the issues, and in case the labels are invalid or duplicate then deduct points of the newcomer who opened the issue.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjgxODM0Mg==","createdAt":"2018-07-23T08:03:02Z","content":"THUMBS_UP","user":{"login":"prnvdixit","name":"Pranav Dixit"}}],"createdAt":"2018-07-23T05:55:06Z","lastEditedAt":null,"updatedAt":"2018-07-23T05:55:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYyMDM0NQ==","url":"https://github.com/coala/community/pull/160#issuecomment-408620345","bodyText":"Netlify is failing because of the time limit.\nimport commands is taking so much time as there is lots of issues and mrs opened, closed or merged by current newcomers team.\nI have more than 1500 mrs opened, merged and closed by newcomers and more than 200 issues opened and closed by newcomers.\nupdate_gamification_data is also taking some more time as it is iterating through all the issues and mrs.\nneed to create a workaround for the time limit failure otherwise the pr is ready for review. And it runs fine locally. Here is the output https://gist.githubusercontent.com/sks444/50f55fb15eee7a8d9a9626805826d1a6/raw/4aad87bfcf4a2f573355a9bcd3a36c880f1aa262/gistfile1.txt","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-28T16:46:08Z","lastEditedAt":null,"updatedAt":"2018-07-28T16:46:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQwODczOQ==","url":"https://github.com/coala/community/pull/160#issuecomment-410408739","bodyText":"Remove gitter stuff . That is a separate PR and it is not nearly ready.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-04T00:41:22Z","lastEditedAt":null,"updatedAt":"2018-08-04T00:41:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUyMjE2MA==","url":"https://github.com/coala/community/pull/160#issuecomment-410522160","bodyText":"Not reviewing until after test coverage rules have been added.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T14:00:34Z","lastEditedAt":null,"updatedAt":"2018-08-05T14:00:34Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533989635000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/81","number":81,"title":"Import getorg data","body":"Closes #18","comments":8,"createdAt":"2018-02-19T10:30:25Z","updatedAt":"2018-08-11T12:13:55Z","closedAt":null,"state":"open","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"ededed"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/81","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM2NjY1NDU0NQ==","url":"https://github.com/coala/community/pull/81#issuecomment-366654545","bodyText":"@jayvdb , A PR for storing participant geolocation to data model. :)\nAnd I am sorry, I have done some terrible mistakes. That's why I will be having two closed PR in closed PR section. I tried to correct the mistakes but it got more worse, I am sorry for that, It will not happen again.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-02-19T10:54:24Z","lastEditedAt":"2018-02-19T10:54:47Z","updatedAt":"2018-02-19T10:54:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2NjY5Nzk5MQ==","url":"https://github.com/coala/community/pull/81#issuecomment-366697991","bodyText":"This PR uses django-geoposition for storing geolocations and getorg for fetching geolocation of participants for a organisation.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-02-19T13:48:57Z","lastEditedAt":null,"updatedAt":"2018-02-19T13:48:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MjAwMDI0MA==","url":"https://github.com/coala/community/pull/81#issuecomment-372000240","bodyText":"nice strategy.  IMO we need a getorg data model, as it has lots of lovely data.\nAnd then we need the geolocation data model to link to the data in the getorg data model.\nWorth considering, ... the OpenHub data model will also give us similar user information, so that will also need to be integrated, and we now have the 'coala.io API' user data.\nEventually ... we need a single 'person' , with links to various datasets that we import about that person.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-03-10T03:52:21Z","lastEditedAt":null,"updatedAt":"2018-03-10T03:52:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MjAwMjI2Mg==","url":"https://github.com/coala/community/pull/81#issuecomment-372002262","bodyText":"IMO we need a getorg data model, as it has lots of lovely data.\n\nAlright, I will try get some more data from their 👍","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-03-10T04:40:14Z","lastEditedAt":null,"updatedAt":"2018-03-10T04:40:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MjAwMjM2Ng==","url":"https://github.com/coala/community/pull/81#issuecomment-372002366","bodyText":"Eventually ... we need a single 'person' , with links to various datasets that we import about that person.\n\nYeah, I was thinking of it too, we will work on that 👍","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-03-10T04:42:27Z","lastEditedAt":null,"updatedAt":"2018-03-10T04:42:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI3MTM3Mg==","url":"https://github.com/coala/community/pull/81#issuecomment-412271372","bodyText":"Maybe this should be new repo , django-getorg ?\nIf you can create it, I can talk to the getorg ppls and ask them to transfer it to their org.\nI am sure they will be happy with that.  I know the main guy from @wikimedia .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODEwMzgxMQ==","createdAt":"2018-08-17T23:01:26Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-11T12:13:54Z","lastEditedAt":null,"updatedAt":"2018-08-11T12:13:54Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1533375650000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/100","number":100,"title":"Import IGitt Data","body":"Closes #83\nfirst two commits is from #138","comments":49,"createdAt":"2018-03-13T20:58:05Z","updatedAt":"2018-08-04T09:40:50Z","closedAt":"2018-08-02T04:58:35Z","state":"merged","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"enhancement","color":"84b6eb"},{"name":"process/approved","color":"ededed"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/100","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTk4MzM2OA==","url":"https://github.com/coala/community/pull/100#discussion_r175983368","bodyText":"As I already explained at #102 (comment) , 'org' != git.  It also doesnt equal IGitt.\nFor more about 'org', see new issue #113","diffHunk":"@@ -36,6 +36,7 @@\n     'gci',\n     'gsoc',\n     'data',\n+    'org',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-03-21T04:35:49Z","lastEditedAt":null,"updatedAt":"2018-03-21T04:35:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzc2MjI0Ng==","url":"https://github.com/coala/community/pull/100#discussion_r203762246","bodyText":"what is this dataset?  'test'?  if so, the else: should be elif hoster == 'test':\nand add a comment about this","diffHunk":"@@ -0,0 +1,89 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    Issue,\n+    Label,\n+    )\n+from data.newcomers import get_newcomers\n+from data.models import Contributor\n+from data.web import web_url\n+from community.git import get_org_name\n+\n+\n+def fetch_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    if hoster == 'github':\n+        IMPORT_URL = web_url + 'issues/github/all'\n+    elif hoster == 'gitlab':\n+        IMPORT_URL = web_url + 'issues/github/all'\n+    else:\n+        IMPORT_URL = 'https://pastebin.com/raw/X9a6D5ym'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-19T15:03:11Z","lastEditedAt":null,"updatedAt":"2018-07-19T15:03:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzc2MjgzOQ==","url":"https://github.com/coala/community/pull/100#discussion_r203762839","bodyText":"just checking .. these are commented because they dont work?","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from data.issues import fetch_issues, import_issue\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import issues opened by newcomers'\n+\n+    COLLECTIONS = staticmethod(fetch_issues)\n+    IMPORT_DATA = staticmethod(import_issue)\n+\n+    def handle(self, *args, **options):\n+        # for data in self.COLLECTIONS('github'):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjcyNzU2OQ==","createdAt":"2018-07-20T02:46:42Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}},{"id":"MDg6UmVhY3Rpb24yNjgwMjg2OA==","createdAt":"2018-07-22T17:48:52Z","content":"THUMBS_UP","user":{"login":"prnvdixit","name":"Pranav Dixit"}}],"createdAt":"2018-07-19T15:04:43Z","lastEditedAt":null,"updatedAt":"2018-07-19T15:04:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzc2MzI3NQ==","url":"https://github.com/coala/community/pull/100#discussion_r203763275","bodyText":"this is not \"web\".  it is \"webservices\"\nand refer to the get_upstream_remote_url discussion on li-boxuan 's patch","diffHunk":"@@ -0,0 +1,6 @@\n+from community.git import get_org_name\n+\n+\n+def web_url():","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjcyNzYwNg==","createdAt":"2018-07-20T02:48:03Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-19T15:06:03Z","lastEditedAt":null,"updatedAt":"2018-07-19T15:06:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzc2NDU2Mg==","url":"https://github.com/coala/community/pull/100#discussion_r203764562","bodyText":"also comments at https://github.com/coala/community/pull/160/files#r200812800","diffHunk":"@@ -0,0 +1,89 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    Issue,\n+    Label,\n+    )\n+from data.newcomers import get_newcomers\n+from data.models import Contributor\n+from data.web import web_url\n+from community.git import get_org_name\n+\n+\n+def fetch_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    if hoster == 'github':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-19T15:09:25Z","lastEditedAt":null,"updatedAt":"2018-07-19T15:09:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkyNTg3Nw==","url":"https://github.com/coala/community/pull/100#discussion_r203925877","bodyText":"yes!","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from data.issues import fetch_issues, import_issue\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import issues opened by newcomers'\n+\n+    COLLECTIONS = staticmethod(fetch_issues)\n+    IMPORT_DATA = staticmethod(import_issue)\n+\n+    def handle(self, *args, **options):\n+        # for data in self.COLLECTIONS('github'):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-20T02:47:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T02:47:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI0ODM1MA==","url":"https://github.com/coala/community/pull/100#discussion_r204248350","bodyText":"I had a similar doubt - Wouldn't these already be empty? (hence code being functional even  if this is not commented) 😅","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from data.mrs import fetch_mrs, import_mr\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import mrs opened by newcomers'\n+\n+    COLLECTIONS = staticmethod(fetch_mrs)\n+    IMPORT_DATA = staticmethod(import_mr)\n+\n+    def handle(self, *args, **options):\n+        # for data in self.COLLECTIONS('github'):","author":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4","name":"Pranav Dixit"},"reactions":[],"createdAt":"2018-07-22T17:50:46Z","lastEditedAt":"2018-07-22T17:52:03Z","updatedAt":"2018-07-22T17:52:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3ODc0OA==","url":"https://github.com/coala/community/pull/100#discussion_r204278748","bodyText":"Yes, I would have to add an if condition for it to work on the empty data.\nOtherwise, we would get the error:\nTypeError: 'NoneType' object is not iterable","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from data.mrs import fetch_mrs, import_mr\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import mrs opened by newcomers'\n+\n+    COLLECTIONS = staticmethod(fetch_mrs)\n+    IMPORT_DATA = staticmethod(import_mr)\n+\n+    def handle(self, *args, **options):\n+        # for data in self.COLLECTIONS('github'):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjgxODMwNA==","createdAt":"2018-07-23T08:02:23Z","content":"THUMBS_UP","user":{"login":"prnvdixit","name":"Pranav Dixit"}}],"createdAt":"2018-07-23T04:18:26Z","lastEditedAt":null,"updatedAt":"2018-07-23T04:18:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI4MDAyMg==","url":"https://github.com/coala/community/pull/100#discussion_r204280022","bodyText":"But I think it would be good to left it commented because the data at https://webservices.coala.io/mrs/gitlab/all is not empty, when we go to that url, it just keeps loading, which lead to our import command hanging for a while.\nI will un-comment these when we get some data from the webservices.","diffHunk":"@@ -0,0 +1,18 @@\n+from django.core.management.base import BaseCommand\n+\n+from data.mrs import fetch_mrs, import_mr\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import mrs opened by newcomers'\n+\n+    COLLECTIONS = staticmethod(fetch_mrs)\n+    IMPORT_DATA = staticmethod(import_mr)\n+\n+    def handle(self, *args, **options):\n+        # for data in self.COLLECTIONS('github'):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjgxODMwMA==","createdAt":"2018-07-23T08:02:21Z","content":"THUMBS_UP","user":{"login":"prnvdixit","name":"Pranav Dixit"}}],"createdAt":"2018-07-23T04:34:09Z","lastEditedAt":null,"updatedAt":"2018-07-23T04:34:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTMyNzAxOQ==","url":"https://github.com/coala/community/pull/100#discussion_r205327019","bodyText":"Dump these files into a github repo which looks like the webservices API , and use rawgit as discussed in meeting.","diffHunk":"@@ -0,0 +1,89 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    Issue,\n+    Label,\n+    )\n+from data.newcomers import get_newcomers\n+from data.models import Contributor\n+from data.webservices import webservices_url\n+# from community.git import get_org_name\n+\n+\n+def fetch_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    hoster = hoster.lower()\n+    if hoster == 'github':\n+        IMPORT_URL = webservices_url() + 'issues/github/all'\n+    elif hoster == 'gitlab':\n+        IMPORT_URL = webservices_url() + 'issues/gitlab/all'\n+\n+    # Only a test hoster for testing, it will be removed when we\n+    # will get data from the other hosters\n+    elif hoster == 'test':\n+        IMPORT_URL = 'https://pastebin.com/raw/GDMvzGjc'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjk5OTE5Mw==","createdAt":"2018-07-26T04:20:43Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-26T04:12:35Z","lastEditedAt":null,"updatedAt":"2018-07-26T04:12:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkzMTY2Nw==","url":"https://github.com/coala/community/pull/100#discussion_r205931667","bodyText":"very silly.  this doesnt even return a URL.\nSee other review where you did the same thing.","diffHunk":"@@ -0,0 +1,6 @@\n+from community.git import get_org_name\n+\n+\n+def webservices_url():","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T03:54:11Z","lastEditedAt":null,"updatedAt":"2018-07-28T03:54:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3NjI0Nw==","url":"https://github.com/coala/community/pull/100#discussion_r205976247","bodyText":"Damn, this is a mistake, I will repush. If everything else is ok.","diffHunk":"@@ -125,7 +125,6 @@\n \n USE_TZ = True\n \n-","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-29T14:33:11Z","lastEditedAt":"2018-07-29T14:33:52Z","updatedAt":"2018-07-29T14:33:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3NjQwNw==","url":"https://github.com/coala/community/pull/100#discussion_r205976407","bodyText":"and if hoster isnt either of these ... ?\nuse:\nIMPORT_URL = webservices_url('issues/%s/all' % hoster)\nthen an unexpected value will cause a failure.","diffHunk":"@@ -0,0 +1,87 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    Issue,\n+    Label,\n+    )\n+from data.newcomers import active_newcomers\n+from data.models import Contributor\n+from data.webservices import webservices_url\n+from data.convert import convert\n+\n+\n+def fetch_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    hoster = hoster.lower()\n+    if hoster == 'github':\n+        IMPORT_URL = webservices_url('issues/github/all')\n+    elif hoster == 'gitlab':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMzg3Mw==","createdAt":"2018-07-29T16:27:23Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-29T14:38:27Z","lastEditedAt":null,"updatedAt":"2018-07-29T14:38:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3NjQ5Ng==","url":"https://github.com/coala/community/pull/100#discussion_r205976496","bodyText":"this doesnt make sense in this context.\nIt was only appropriate for OpenHub app commands, where there were many commands which were all identical.  And it would only have made sense if you had used inheritence, which you didnt.\nIt makes no sense at all when the handle() are not exactly the same. (which is where inheritance could be used, but you are not doing that).","diffHunk":"@@ -0,0 +1,20 @@\n+from django.core.management.base import BaseCommand\n+\n+from data.issues import fetch_issues, import_issue\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import issues opened by newcomers'\n+\n+    COLLECTIONS = staticmethod(fetch_issues)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMzg4NA==","createdAt":"2018-07-29T16:27:41Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-29T14:40:14Z","lastEditedAt":null,"updatedAt":"2018-07-29T14:40:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3Njc3MQ==","url":"https://github.com/coala/community/pull/100#discussion_r205976771","bodyText":"there is no benefit in putting ** style args on this line, as nothing can be added after this line.  Put it all on one line.","diffHunk":"@@ -0,0 +1,99 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    MergeRequest,\n+    Label,\n+    IssueNumber,\n+    )\n+from data.newcomers import active_newcomers\n+from data.models import Contributor\n+from data.webservices import webservices_url\n+from data.convert import convert\n+\n+\n+def fetch_mrs(hoster):\n+    \"\"\"\n+    Get mrs opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of mrs data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    if hoster == 'github':\n+        IMPORT_URL = webservices_url('mrs/github/all')\n+    elif hoster == 'gitlab':\n+        IMPORT_URL = webservices_url('mrs/gitlab/all')\n+\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+    mrs = response.json()\n+\n+    # Removing mrs which are not opened by newcomers\n+    _mrs = []\n+    for mr in mrs:\n+        if mr['author'] in active_newcomers():\n+            _mrs.append(mr)\n+    return _mrs\n+\n+\n+def import_mr(hoster, mr):\n+    \"\"\"\n+    Import mr data to database\n+\n+    :param hoster: a string representing hoster\n+    :param mr: a dict containing mr's data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    number = mr.get('number')\n+    assignees = mr.pop('assignees')\n+    labels = mr.pop('labels')\n+    author = mr.pop('author')\n+    repo_id = mr['repo_id']\n+    closes_issues = mr.pop('closes_issues')\n+    mr['created_at'] = convert(mr['created_at'])\n+    mr['updated_at'] = convert(mr['updated_at'])\n+    try:\n+        c = Contributor.objects.get(login=author)\n+        mr['author'] = c\n+        mr['hoster'] = hoster\n+        m, created = MergeRequest.objects.get_or_create(\n+            **mr","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMzkwNA==","createdAt":"2018-07-29T16:29:19Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-29T14:47:52Z","lastEditedAt":null,"updatedAt":"2018-07-29T14:47:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3NjkxMA==","url":"https://github.com/coala/community/pull/100#discussion_r205976910","bodyText":"_ prefix denotes private.\na local variable is already private, so do not use _ prefixes for local variables.\ncreate a proper variable name which distinguishes this from issues above.","diffHunk":"@@ -0,0 +1,87 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    Issue,\n+    Label,\n+    )\n+from data.newcomers import active_newcomers\n+from data.models import Contributor\n+from data.webservices import webservices_url\n+from data.convert import convert\n+\n+\n+def fetch_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    hoster = hoster.lower()\n+    if hoster == 'github':\n+        IMPORT_URL = webservices_url('issues/github/all')\n+    elif hoster == 'gitlab':\n+        IMPORT_URL = webservices_url('issues/gitlab/all')\n+\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+    issues = response.json()\n+\n+    # Removing issues which are not opened by newcomers\n+    _issues = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMzkxNw==","createdAt":"2018-07-29T16:30:36Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-29T14:51:38Z","lastEditedAt":null,"updatedAt":"2018-07-29T14:51:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk3NzAxNQ==","url":"https://github.com/coala/community/pull/100#discussion_r205977015","bodyText":"this end point should be called active_newcomers or newcomers/active","diffHunk":"@@ -0,0 +1,21 @@\n+from functools import lru_cache\n+\n+import requests\n+\n+from data.webservices import webservices_url\n+\n+\n+@lru_cache(maxsize=32)\n+def active_newcomers():\n+    \"\"\"\n+    Get the list of newcomers active in the last three months\n+\n+    :return: the list of newcomer usernames\n+    \"\"\"\n+    NEWCOMERS_URL = webservices_url('newcomers')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMzkzNQ==","createdAt":"2018-07-29T16:32:15Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-29T14:55:14Z","lastEditedAt":null,"updatedAt":"2018-07-29T14:55:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjc0MjgwMA==","url":"https://github.com/coala/community/pull/100#discussion_r206742800","bodyText":"upper case is for constants only.","diffHunk":"@@ -0,0 +1,17 @@\n+from django.core.management.base import BaseCommand\n+\n+from data.issues import fetch_issues, import_issue\n+\n+\n+class Command(BaseCommand):\n+    help = 'Import issues opened by newcomers'\n+\n+    def handle(self, *args, **options):\n+        GITHUB_DATA = fetch_issues('GitHub')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI2OTg1Nw==","createdAt":"2018-08-01T04:34:37Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-01T02:58:53Z","lastEditedAt":null,"updatedAt":"2018-08-01T02:58:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjc5NDA2MA==","url":"https://github.com/coala/community/pull/100#discussion_r206794060","bodyText":"Another improper uppercasing","diffHunk":"@@ -0,0 +1,82 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    Issue,\n+    Label,\n+    )\n+from data.newcomers import active_newcomers\n+from data.models import Contributor\n+from data.webservices import webservices_url\n+from data.convert import convert\n+\n+\n+def fetch_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    hoster = hoster.lower()\n+    IMPORT_URL = webservices_url('issues/%s/all' % hoster)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI4NTI0Mw==","createdAt":"2018-08-01T10:55:08Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-01T08:27:05Z","lastEditedAt":null,"updatedAt":"2018-08-01T08:27:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjc5NDQxNA==","url":"https://github.com/coala/community/pull/100#discussion_r206794414","bodyText":"What is i. Meaningful names pls.","diffHunk":"@@ -0,0 +1,82 @@\n+import logging\n+\n+import requests\n+\n+from data.models import (\n+    Issue,\n+    Label,\n+    )\n+from data.newcomers import active_newcomers\n+from data.models import Contributor\n+from data.webservices import webservices_url\n+from data.convert import convert\n+\n+\n+def fetch_issues(hoster):\n+    \"\"\"\n+    Get issues opened by newcomers\n+\n+    :param hoster: a string representing hoster, e.g. 'github'\n+    :return: a json of issues data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    hoster = hoster.lower()\n+    IMPORT_URL = webservices_url('issues/%s/all' % hoster)\n+\n+    headers = {'Content-Type': 'application/json'}\n+    try:\n+        response = requests.get(\n+            url=IMPORT_URL,\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+    except Exception as e:\n+        logger.error(e)\n+        return\n+    issues = response.json()\n+\n+    # Removing issues which are not opened by newcomers\n+    issues_list = []\n+    for issue in issues:\n+        if issue['author'] in active_newcomers():\n+            issues_list.append(issue)\n+    return issues_list\n+\n+\n+def import_issue(hoster, issue):\n+    \"\"\"\n+    Import issue data to database\n+\n+    :param hoster: a string representing hoster\n+    :param issue: a dict containing issue's data\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    number = issue.get('number')\n+    assignees = issue.pop('assignees')\n+    labels = issue.pop('labels')\n+    author = issue.pop('author')\n+    issue['created_at'] = convert(issue['created_at'])\n+    issue['updated_at'] = convert(issue['updated_at'])\n+    try:\n+        c = Contributor.objects.get(login=author)\n+        issue['author'] = c\n+        issue['hoster'] = hoster\n+        i, created = Issue.objects.get_or_create(**issue)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI4NTQ1MQ==","createdAt":"2018-08-01T10:59:17Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-01T08:28:18Z","lastEditedAt":null,"updatedAt":"2018-08-01T08:28:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjc5NDcyOA==","url":"https://github.com/coala/community/pull/100#discussion_r206794728","bodyText":"Use a meaningful module name","diffHunk":"@@ -0,0 +1,95 @@\n+import logging","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI4NTYyOQ==","createdAt":"2018-08-01T11:03:34Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-08-01T08:29:21Z","lastEditedAt":null,"updatedAt":"2018-08-01T08:29:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MzcxNzkwMQ==","url":"https://github.com/coala/community/pull/100#issuecomment-373717901","bodyText":"No, this needs to model IGitt, not GitHub.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-03-16T13:47:21Z","lastEditedAt":null,"updatedAt":"2018-03-16T13:47:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzg5NDAxNQ==","url":"https://github.com/coala/community/pull/100#issuecomment-373894015","bodyText":"You need to be looking at what data you need from GitHub which isnt modelled in IGitt yet.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-03-17T04:41:23Z","lastEditedAt":null,"updatedAt":"2018-03-17T04:41:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzIzNDM2Mw==","url":"https://github.com/coala/community/pull/100#issuecomment-403234363","bodyText":"@sks444 commit messages are not clear.Go through the down mentioned link to learn how to write a good commit.\nhttps://api.coala.io/en/latest/Developers/Writing_Good_Commits.html","diffHunk":null,"author":{"login":"sarthakchakerverty","avatarUrl":"https://avatars3.githubusercontent.com/u/31766358?v=4","name":"Sarthak Chakerverty"},"reactions":[],"createdAt":"2018-07-07T18:22:40Z","lastEditedAt":null,"updatedAt":"2018-07-07T18:22:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYxMzY1NQ==","url":"https://github.com/coala/community/pull/100#issuecomment-408613655","bodyText":"Netlify is Failing because it exceeds the time limit.\nimport_mrs_data command is taking so much time as there are more than 1500 mrs opened by current newcomers.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-28T15:01:32Z","lastEditedAt":"2018-07-28T16:26:17Z","updatedAt":"2018-07-28T16:26:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYxODQ1OA==","url":"https://github.com/coala/community/pull/100#issuecomment-408618458","bodyText":"There are only 430\nhttps://github.com/search?q=user%3Acoala+state%3Aopen+is%3Apr&type=Issues","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T16:16:17Z","lastEditedAt":null,"updatedAt":"2018-07-28T16:16:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYxOTI5OQ==","url":"https://github.com/coala/community/pull/100#issuecomment-408619299","bodyText":"...opened by current newcomers.\n\nOpened, Closed and Merged by current newcomers.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-07-28T16:29:41Z","lastEditedAt":null,"updatedAt":"2018-07-28T16:29:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYyNjk5Nw==","url":"https://github.com/coala/community/pull/100#issuecomment-408626997","bodyText":"we need to refine the list of newcomers to only those who should be in our newcomers system. there are too many people in newcomers who are doing nothing, going nowhere, not worth tracking.\nCreating the filtered list of newcomers can be done weekly or nightly as a separate process, hosted on webservices (or your fake version atm), and produces a much smaller list of people. Then community repo gets that list, and only fetches data about them\n\"newcomers active in the last three months\" could be a simple algorithm to start with\nThe hard part is defining 'active' -- MRs updated could be a bot, but the newcomer has long disappeared, so we should exclude those bot actions. I'm not sure if we have a better way of identifying activity... ?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEzMjQyMA==","createdAt":"2018-07-29T14:39:37Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-07-28T18:35:43Z","lastEditedAt":null,"updatedAt":"2018-07-28T18:35:43Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1535535579000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/67","number":67,"title":"[WIP] Add generic GSoC 2017 import app","body":"currently work in progress.\nProject rendering not implemented but rendering organization data implemented for reference and same can be done with projects once i get some reviews.\nIf YAML files are needed for reference i can add them here.\n\nPlease review and let me know changes it needs.\nRelated issue: #59","comments":9,"createdAt":"2017-12-22T07:01:30Z","updatedAt":"2018-08-29T09:39:39Z","closedAt":"2018-08-29T09:39:34Z","state":"closed","user":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4"},"owner":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4"},"labels":[{"name":"initiatives/gsoc","color":"ed95c1"},{"name":"process/wip","color":"ededed"},{"name":"size/M","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/67","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTI3Mg==","url":"https://github.com/coala/community/pull/67#discussion_r159351272","bodyText":"we cant use admin in a django-distill system","diffHunk":"@@ -0,0 +1,3 @@\n+from django.contrib import admin","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:43:37Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:43:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTMyMQ==","url":"https://github.com/coala/community/pull/67#discussion_r159351321","bodyText":"EOL at EOF","diffHunk":"@@ -0,0 +1,11 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(\n+    os.path.dirname(__file__), '..',\n+    '_site'\n+)\n+\n+def load_cache(filename):\n+    with open(os.path.join(DATA_DIR, filename), 'r') as f:\n+        return ruamel.yaml.load(f, Loader=ruamel.yaml.Loader)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:44:20Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:44:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTM0NA==","url":"https://github.com/coala/community/pull/67#discussion_r159351344","bodyText":"I think there is a global setting for this.","diffHunk":"@@ -0,0 +1,11 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:44:35Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:44:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTM4Mw==","url":"https://github.com/coala/community/pull/67#discussion_r159351383","bodyText":"delete this file until there are tests","diffHunk":"@@ -0,0 +1,3 @@\n+from django.test import TestCase","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:45:09Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:45:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTY5Nw==","url":"https://github.com/coala/community/pull/67#discussion_r159351697","bodyText":"after the scraper is moved into django commands, the error log will appear at /log created in #63 , so you dont need to do error presentation here.","diffHunk":"@@ -0,0 +1,32 @@\n+<html>\n+\n+    <head>\n+        <title> GSoC 2017 Data </title>\n+    </head>\n+\n+    <body>\n+\n+        {% if error %}\n+            <h3> {{error}} </h3>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:50:28Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:50:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTczNw==","url":"https://github.com/coala/community/pull/67#discussion_r159351737","bodyText":"try to make this a django command, like python manage.py fetch_gci_task_data below.\nit should be simple to call scrapy from inside a django command, (not using subprocess), so that logging and other django features work.\nif it isnt easy, no worries ... we can come back to this later.\nwe can also try to use https://github.com/scrapy-plugins/scrapy-djangoitem or https://github.com/holgerd77/django-dynamic-scraper or similar to try to get scrapy and django working nicely together.","diffHunk":"@@ -4,6 +4,7 @@ set -e -x\n \n mkdir private _site public\n \n+scrapy crawl gsoc","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:51:01Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:51:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTk2Mg==","url":"https://github.com/coala/community/pull/67#discussion_r159351962","bodyText":"the cache files from this app need to be called gsoc_...yaml","diffHunk":"@@ -0,0 +1,13 @@\n+from .config import load_cache\n+\n+\n+_org = {}\n+\n+def get_org_data():\n+    global _org\n+    if not _org:\n+        _org = load_cache('org_info.yaml')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:53:59Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:53:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MTk4MQ==","url":"https://github.com/coala/community/pull/67#discussion_r159351981","bodyText":"looks good ... can we see the rest of this function?? :P ;-)","diffHunk":"@@ -0,0 +1,13 @@\n+from .config import load_cache\n+\n+\n+_org = {}\n+\n+def get_org_data():\n+    global _org\n+    if not _org:\n+        _org = load_cache('org_info.yaml')\n+\n+    return _org\n+\n+#def get_project_data():","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:54:16Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:54:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1MjAyOA==","url":"https://github.com/coala/community/pull/67#discussion_r159352028","bodyText":"is this necessary?  if not, remove, as it causes conflicts with #64","diffHunk":"@@ -0,0 +1,3 @@\n+from django.db import models\n+\n+# Create your models here.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T01:54:55Z","lastEditedAt":null,"updatedAt":"2018-01-03T01:54:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NDk4Nw==","url":"https://github.com/coala/community/pull/67#discussion_r159354987","bodyText":"remove all unused stuff from this file.","diffHunk":"@@ -0,0 +1,90 @@\n+# -*- coding: utf-8 -*-\n+\n+# Scrapy settings for gsocscrape project\n+#\n+# For simplicity, this file contains only settings considered important or","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:41:41Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:41:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NTA1NA==","url":"https://github.com/coala/community/pull/67#discussion_r159355054","bodyText":"if there is no gsoc data, dont create the gsoc data file.","diffHunk":"@@ -0,0 +1,125 @@\n+import scrapy\n+import string\n+import json\n+from ruamel.yaml import YAML\n+import os.path\n+from collections import OrderedDict\n+from community.git import get_owner\n+\n+\n+org_name = get_owner()\n+yaml = YAML()\n+\n+class GsocSpider(scrapy.Spider):\n+    name = \"gsoc\"\n+    start_urls = [\n+        'https://summerofcode.withgoogle.com/archive/2017/organizations',\n+    ]\n+\n+    def parse(self, response):\n+        home_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"\n+        selector = \"//li[contains(.,'{org_name}')]/a/@href\".format(org_name = org_name)\n+        organization_link = response.xpath(selector)\n+        \n+        if(organization_link):\n+            organization_link = organization_link[0].extract().split(\"/\")[4]\n+        else:\n+            error = \"No GSoC data for organization '{org_name}'\".format(org_name = org_name)\n+            item =  {\n+                        'name': error\n+                    }\n+            error_data = {}\n+            error_data[0] = item\n+            error_data = OrderedDict(sorted(error_data.items(), key=lambda t: t[0]))\n+            with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:43:02Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:43:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NTEzMg==","url":"https://github.com/coala/community/pull/67#discussion_r159355132","bodyText":"wild indentation here","diffHunk":"@@ -0,0 +1,125 @@\n+import scrapy\n+import string\n+import json\n+from ruamel.yaml import YAML\n+import os.path\n+from collections import OrderedDict\n+from community.git import get_owner\n+\n+\n+org_name = get_owner()\n+yaml = YAML()\n+\n+class GsocSpider(scrapy.Spider):\n+    name = \"gsoc\"\n+    start_urls = [\n+        'https://summerofcode.withgoogle.com/archive/2017/organizations',\n+    ]\n+\n+    def parse(self, response):\n+        home_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"\n+        selector = \"//li[contains(.,'{org_name}')]/a/@href\".format(org_name = org_name)\n+        organization_link = response.xpath(selector)\n+        \n+        if(organization_link):\n+            organization_link = organization_link[0].extract().split(\"/\")[4]\n+        else:\n+            error = \"No GSoC data for organization '{org_name}'\".format(org_name = org_name)\n+            item =  {\n+                        'name': error\n+                    }\n+            error_data = {}\n+            error_data[0] = item\n+            error_data = OrderedDict(sorted(error_data.items(), key=lambda t: t[0]))\n+            with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:\n+                yaml.dump(error_data, f)\n+            return\n+\n+        follow_link = home_url + organization_link\n+        yield response.follow(follow_link, self.parse_org)\n+\n+    def parse_org(self, response):        \n+        project_url = \"https://summerofcode.withgoogle.com/archive/2017/projects/\"\n+        technology = {}\n+\n+        id = response.url.split(\"/\")[-2]\n+        org_name = response.css(\"h3.banner__title::text\")[0].extract()\n+        org_tagline = response.css(\"h4.org__tagline::text\")[0].extract()\n+        org_long_description = response.xpath(\"//div[@class='org__long-description']\")[0].extract()\n+        org_technologies = response.xpath(\".//div[@class='org__meta']/div[contains(.,\"\n+                            \"'Technologies')]/ul/li/text()\").extract()\n+         \n+        count = 0\n+        for tech in org_technologies:\n+            technology['%s'% str(count)] = tech\n+            count = count + 1\n+        \n+        item =  {\n+                    'id': id,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:43:42Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:43:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NTE0Mg==","url":"https://github.com/coala/community/pull/67#discussion_r159355142","bodyText":"double space.","diffHunk":"@@ -0,0 +1,125 @@\n+import scrapy\n+import string\n+import json\n+from ruamel.yaml import YAML\n+import os.path\n+from collections import OrderedDict\n+from community.git import get_owner\n+\n+\n+org_name = get_owner()\n+yaml = YAML()\n+\n+class GsocSpider(scrapy.Spider):\n+    name = \"gsoc\"\n+    start_urls = [\n+        'https://summerofcode.withgoogle.com/archive/2017/organizations',\n+    ]\n+\n+    def parse(self, response):\n+        home_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"\n+        selector = \"//li[contains(.,'{org_name}')]/a/@href\".format(org_name = org_name)\n+        organization_link = response.xpath(selector)\n+        \n+        if(organization_link):\n+            organization_link = organization_link[0].extract().split(\"/\")[4]\n+        else:\n+            error = \"No GSoC data for organization '{org_name}'\".format(org_name = org_name)\n+            item =  {\n+                        'name': error\n+                    }\n+            error_data = {}\n+            error_data[0] = item\n+            error_data = OrderedDict(sorted(error_data.items(), key=lambda t: t[0]))\n+            with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:\n+                yaml.dump(error_data, f)\n+            return\n+\n+        follow_link = home_url + organization_link\n+        yield response.follow(follow_link, self.parse_org)\n+\n+    def parse_org(self, response):        \n+        project_url = \"https://summerofcode.withgoogle.com/archive/2017/projects/\"\n+        technology = {}\n+\n+        id = response.url.split(\"/\")[-2]\n+        org_name = response.css(\"h3.banner__title::text\")[0].extract()\n+        org_tagline = response.css(\"h4.org__tagline::text\")[0].extract()\n+        org_long_description = response.xpath(\"//div[@class='org__long-description']\")[0].extract()\n+        org_technologies = response.xpath(\".//div[@class='org__meta']/div[contains(.,\"\n+                            \"'Technologies')]/ul/li/text()\").extract()\n+         \n+        count = 0\n+        for tech in org_technologies:\n+            technology['%s'% str(count)] = tech\n+            count = count + 1\n+        \n+        item =  {","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:43:55Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:43:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NTIzNA==","url":"https://github.com/coala/community/pull/67#discussion_r159355234","bodyText":"prefix fix with gsoc","diffHunk":"@@ -0,0 +1,125 @@\n+import scrapy\n+import string\n+import json\n+from ruamel.yaml import YAML\n+import os.path\n+from collections import OrderedDict\n+from community.git import get_owner\n+\n+\n+org_name = get_owner()\n+yaml = YAML()\n+\n+class GsocSpider(scrapy.Spider):\n+    name = \"gsoc\"\n+    start_urls = [\n+        'https://summerofcode.withgoogle.com/archive/2017/organizations',\n+    ]\n+\n+    def parse(self, response):\n+        home_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"\n+        selector = \"//li[contains(.,'{org_name}')]/a/@href\".format(org_name = org_name)\n+        organization_link = response.xpath(selector)\n+        \n+        if(organization_link):\n+            organization_link = organization_link[0].extract().split(\"/\")[4]\n+        else:\n+            error = \"No GSoC data for organization '{org_name}'\".format(org_name = org_name)\n+            item =  {\n+                        'name': error\n+                    }\n+            error_data = {}\n+            error_data[0] = item\n+            error_data = OrderedDict(sorted(error_data.items(), key=lambda t: t[0]))\n+            with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:\n+                yaml.dump(error_data, f)\n+            return\n+\n+        follow_link = home_url + organization_link\n+        yield response.follow(follow_link, self.parse_org)\n+\n+    def parse_org(self, response):        \n+        project_url = \"https://summerofcode.withgoogle.com/archive/2017/projects/\"\n+        technology = {}\n+\n+        id = response.url.split(\"/\")[-2]\n+        org_name = response.css(\"h3.banner__title::text\")[0].extract()\n+        org_tagline = response.css(\"h4.org__tagline::text\")[0].extract()\n+        org_long_description = response.xpath(\"//div[@class='org__long-description']\")[0].extract()\n+        org_technologies = response.xpath(\".//div[@class='org__meta']/div[contains(.,\"\n+                            \"'Technologies')]/ul/li/text()\").extract()\n+         \n+        count = 0\n+        for tech in org_technologies:\n+            technology['%s'% str(count)] = tech\n+            count = count + 1\n+        \n+        item =  {\n+                    'id': id,\n+                    'name': org_name,\n+                    'tagline': org_tagline,\n+                    'description': org_long_description,\n+                    'technologies': technology\n+                }\n+        org_data = {}\n+        org_data[int(item['id'])] = item\n+        org_data = OrderedDict(sorted(org_data.items(), key=lambda t: t[0]))\n+        \n+        with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:\n+            yaml.dump(org_data, f)\n+        \n+        empty_data = {}\n+        # Overwrite any previous data with empty dataset\n+        with open(os.path.join('_site', 'project_info.yaml'), 'w') as f:\n+            yaml.dump(empty_data, f)\n+\n+        for res in response.css(\"a.archive-project-card__link\"):\n+            link = res.xpath(\"@href\").extract()[0]\n+            link = link.split(\"/\")[4]\n+            url_project = project_url + link\n+            yield response.follow(url_project, self.parse_project)\n+\n+    def parse_project(self, response):\n+        mentors = []\n+        org_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"\n+        page = response.url.split(\"/\")[-2]\n+        \n+        project_id = page\n+        project_title = response.css(\"h3.banner__title::text\")[0].extract()\n+        project_summary = response.xpath(\"//div[@class='org__long-description']\")[0].extract()\n+        project_organization_code = response.css(\"md-card.org__info-card \"\n+                                    \"a::attr(href)\")[0].extract().split(\"/\")[4]\n+        project_link = response.url\n+        project_organization_url = org_url + project_organization_code\n+        project_organization_name = response.css(\"md-card.org__info-card \"\n+                                        \"a::text\")[3].extract()\n+        project_code = response.css(\"md-card.org__info-card \"\n+                            \"a::attr(href)\")[1].extract()\n+        project_student = response.xpath(\".//div[@class='org__meta']/div[contains(.,\"\n+                            \"'Student')]/div/text()\")[0].extract()\n+        project_mentors = response.xpath(\".//div[@class='org__meta']/div[contains(.,\"\n+                            \"'Mentors')]/ul/li/text()\").extract()\n+        ment = {}\n+        count = 0\n+        for mentor in project_mentors:\n+            ment['%s'% str(count)] = mentor\n+            count = count + 1\n+        \n+        item =  {\n+                    'id': project_id,\n+                    'title': project_title,\n+                    'summary': project_summary,\n+                    'student': project_student,\n+                    'mentors': ment,\n+                    'organization_name': project_organization_name,\n+                    'organization_code': project_organization_code,\n+                    'organization_url': project_organization_url,\n+                    'project_link': project_link,\n+                    'project_code': project_code\n+                }\n+        project_data = {}\n+        project_data[int(item['id'])] = item\n+        project_data = OrderedDict(sorted(project_data.items(), key=lambda t: t[0]))\n+        \n+        with open(os.path.join('_site', 'project_info.yaml'), 'a') as f:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:45:14Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:45:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NTI4NQ==","url":"https://github.com/coala/community/pull/67#discussion_r159355285","bodyText":"year should be a parameter, as we'll also want to import other years, and other orgs will have many years of data to import.","diffHunk":"@@ -0,0 +1,125 @@\n+import scrapy\n+import string\n+import json\n+from ruamel.yaml import YAML\n+import os.path\n+from collections import OrderedDict\n+from community.git import get_owner\n+\n+\n+org_name = get_owner()\n+yaml = YAML()\n+\n+class GsocSpider(scrapy.Spider):\n+    name = \"gsoc\"\n+    start_urls = [\n+        'https://summerofcode.withgoogle.com/archive/2017/organizations',\n+    ]\n+\n+    def parse(self, response):\n+        home_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"\n+        selector = \"//li[contains(.,'{org_name}')]/a/@href\".format(org_name = org_name)\n+        organization_link = response.xpath(selector)\n+        \n+        if(organization_link):\n+            organization_link = organization_link[0].extract().split(\"/\")[4]\n+        else:\n+            error = \"No GSoC data for organization '{org_name}'\".format(org_name = org_name)\n+            item =  {\n+                        'name': error\n+                    }\n+            error_data = {}\n+            error_data[0] = item\n+            error_data = OrderedDict(sorted(error_data.items(), key=lambda t: t[0]))\n+            with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:\n+                yaml.dump(error_data, f)\n+            return\n+\n+        follow_link = home_url + organization_link\n+        yield response.follow(follow_link, self.parse_org)\n+\n+    def parse_org(self, response):        \n+        project_url = \"https://summerofcode.withgoogle.com/archive/2017/projects/\"\n+        technology = {}\n+\n+        id = response.url.split(\"/\")[-2]\n+        org_name = response.css(\"h3.banner__title::text\")[0].extract()\n+        org_tagline = response.css(\"h4.org__tagline::text\")[0].extract()\n+        org_long_description = response.xpath(\"//div[@class='org__long-description']\")[0].extract()\n+        org_technologies = response.xpath(\".//div[@class='org__meta']/div[contains(.,\"\n+                            \"'Technologies')]/ul/li/text()\").extract()\n+         \n+        count = 0\n+        for tech in org_technologies:\n+            technology['%s'% str(count)] = tech\n+            count = count + 1\n+        \n+        item =  {\n+                    'id': id,\n+                    'name': org_name,\n+                    'tagline': org_tagline,\n+                    'description': org_long_description,\n+                    'technologies': technology\n+                }\n+        org_data = {}\n+        org_data[int(item['id'])] = item\n+        org_data = OrderedDict(sorted(org_data.items(), key=lambda t: t[0]))\n+        \n+        with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:\n+            yaml.dump(org_data, f)\n+        \n+        empty_data = {}\n+        # Overwrite any previous data with empty dataset\n+        with open(os.path.join('_site', 'project_info.yaml'), 'w') as f:\n+            yaml.dump(empty_data, f)\n+\n+        for res in response.css(\"a.archive-project-card__link\"):\n+            link = res.xpath(\"@href\").extract()[0]\n+            link = link.split(\"/\")[4]\n+            url_project = project_url + link\n+            yield response.follow(url_project, self.parse_project)\n+\n+    def parse_project(self, response):\n+        mentors = []\n+        org_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:46:07Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:46:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NTMyNw==","url":"https://github.com/coala/community/pull/67#discussion_r159355327","bodyText":"year ; see below","diffHunk":"@@ -0,0 +1,125 @@\n+import scrapy\n+import string\n+import json\n+from ruamel.yaml import YAML\n+import os.path\n+from collections import OrderedDict\n+from community.git import get_owner\n+\n+\n+org_name = get_owner()\n+yaml = YAML()\n+\n+class GsocSpider(scrapy.Spider):\n+    name = \"gsoc\"\n+    start_urls = [\n+        'https://summerofcode.withgoogle.com/archive/2017/organizations',\n+    ]\n+\n+    def parse(self, response):\n+        home_url = \"https://summerofcode.withgoogle.com/archive/2017/organizations/\"\n+        selector = \"//li[contains(.,'{org_name}')]/a/@href\".format(org_name = org_name)\n+        organization_link = response.xpath(selector)\n+        \n+        if(organization_link):\n+            organization_link = organization_link[0].extract().split(\"/\")[4]\n+        else:\n+            error = \"No GSoC data for organization '{org_name}'\".format(org_name = org_name)\n+            item =  {\n+                        'name': error\n+                    }\n+            error_data = {}\n+            error_data[0] = item\n+            error_data = OrderedDict(sorted(error_data.items(), key=lambda t: t[0]))\n+            with open(os.path.join('_site', 'org_info.yaml'), 'w') as f:\n+                yaml.dump(error_data, f)\n+            return\n+\n+        follow_link = home_url + organization_link\n+        yield response.follow(follow_link, self.parse_org)\n+\n+    def parse_org(self, response):        \n+        project_url = \"https://summerofcode.withgoogle.com/archive/2017/projects/\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:46:37Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:46:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTM1NTQ2OQ==","url":"https://github.com/coala/community/pull/67#discussion_r159355469","bodyText":"why index of 1?  that is a bit odd.  the yaml should only have one org in it.","diffHunk":"@@ -0,0 +1,31 @@\n+from django.shortcuts import render\n+\n+from .data import get_org_data\n+\n+\n+# Org info view\n+def index(request):\n+    # We will always get a file here \n+    # (because we also save the fact there is no data for a org)\n+    org = get_org_data()\n+    for organisation in org.items():\n+        if (organisation[0] == 0):\n+            # No Data Found\n+            name = organisation[1].get('name')\n+            return render(request, 'gsoc.html', {'error': name})\n+\n+        id = organisation[1].get('id')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-03T02:49:20Z","lastEditedAt":null,"updatedAt":"2018-01-03T02:49:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDAyOTY4Ng==","url":"https://github.com/coala/community/pull/67#discussion_r160029686","bodyText":"I was thinking of keeping it like this for now and trying to make it a django command once this PR reaches to merge state.","diffHunk":"@@ -4,6 +4,7 @@ set -e -x\n \n mkdir private _site public\n \n+scrapy crawl gsoc","author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-06T16:42:19Z","lastEditedAt":null,"updatedAt":"2018-01-06T16:42:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDAyOTY5NA==","url":"https://github.com/coala/community/pull/67#discussion_r160029694","bodyText":"I didn't get this. I need more help here.","diffHunk":"@@ -0,0 +1,11 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(","author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-06T16:42:41Z","lastEditedAt":null,"updatedAt":"2018-01-06T16:42:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDAyOTcyNw==","url":"https://github.com/coala/community/pull/67#discussion_r160029727","bodyText":"I got this running this way only. I think that's how it inteprets yaml. Although i will reconsider it and try it via key, value type object. Or it would be good if i get some suggestions :).","diffHunk":"@@ -0,0 +1,31 @@\n+from django.shortcuts import render\n+\n+from .data import get_org_data\n+\n+\n+# Org info view\n+def index(request):\n+    # We will always get a file here \n+    # (because we also save the fact there is no data for a org)\n+    org = get_org_data()\n+    for organisation in org.items():\n+        if (organisation[0] == 0):\n+            # No Data Found\n+            name = organisation[1].get('name')\n+            return render(request, 'gsoc.html', {'error': name})\n+\n+        id = organisation[1].get('id')","author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-06T16:44:15Z","lastEditedAt":"2018-01-06T16:44:31Z","updatedAt":"2018-01-06T16:44:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDAyOTc3Mg==","url":"https://github.com/coala/community/pull/67#discussion_r160029772","bodyText":"This is not actually error log. It appears in case when there are no data for a org. I am caching \"no data present\" also because it was stated in issue that we need to cache the fact that there is not data present for a org. Probably i should rename it? :).","diffHunk":"@@ -0,0 +1,32 @@\n+<html>\n+\n+    <head>\n+        <title> GSoC 2017 Data </title>\n+    </head>\n+\n+    <body>\n+\n+        {% if error %}\n+            <h3> {{error}} </h3>","author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-06T16:46:02Z","lastEditedAt":null,"updatedAt":"2018-01-06T16:46:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA0OTk0Mg==","url":"https://github.com/coala/community/pull/67#discussion_r160049942","bodyText":"you dont need an array for one org.  the Google json data structure that you fetch should not be the same as the coala org yaml data structure that you write to disk.","diffHunk":"@@ -0,0 +1,31 @@\n+from django.shortcuts import render\n+\n+from .data import get_org_data\n+\n+\n+# Org info view\n+def index(request):\n+    # We will always get a file here \n+    # (because we also save the fact there is no data for a org)\n+    org = get_org_data()\n+    for organisation in org.items():\n+        if (organisation[0] == 0):\n+            # No Data Found\n+            name = organisation[1].get('name')\n+            return render(request, 'gsoc.html', {'error': name})\n+\n+        id = organisation[1].get('id')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-07T13:45:48Z","lastEditedAt":null,"updatedAt":"2018-01-07T13:45:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA0OTk0OQ==","url":"https://github.com/coala/community/pull/67#discussion_r160049949","bodyText":"It appears in case when there are no data for a org.\n\nThat is an error.  It means the GSOC app needs to be disabled.","diffHunk":"@@ -0,0 +1,32 @@\n+<html>\n+\n+    <head>\n+        <title> GSoC 2017 Data </title>\n+    </head>\n+\n+    <body>\n+\n+        {% if error %}\n+            <h3> {{error}} </h3>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-07T13:46:04Z","lastEditedAt":"2018-01-07T13:46:38Z","updatedAt":"2018-01-07T13:46:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA0OTk3Ng==","url":"https://github.com/coala/community/pull/67#discussion_r160049976","bodyText":"git grep _site","diffHunk":"@@ -0,0 +1,11 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-07T13:47:33Z","lastEditedAt":null,"updatedAt":"2018-01-07T13:47:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA1MDAxOQ==","url":"https://github.com/coala/community/pull/67#discussion_r160050019","bodyText":"EOL at EOF.\nbut more importantly, returning 2017 here is inherently wrong.  the year is now 2018.  The GSoC 2018 program has now started.\nAnd you want 2018 - 1","diffHunk":"@@ -0,0 +1,14 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(\n+    os.path.dirname(__file__), '..',\n+    '_site'\n+)\n+\n+def load_cache(filename):\n+    with open(os.path.join(DATA_DIR, filename), 'r') as f:\n+        return ruamel.yaml.load(f, Loader=ruamel.yaml.Loader)\n+\n+def get_year():\n+    return \"2017\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-07T13:49:51Z","lastEditedAt":null,"updatedAt":"2018-01-07T13:49:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA1MDA0NA==","url":"https://github.com/coala/community/pull/67#discussion_r160050044","bodyText":"this is junk added by the generator to guide someone writing their code.  It doesnt need to be in our repository","diffHunk":"@@ -0,0 +1,14 @@\n+# -*- coding: utf-8 -*-\n+\n+# Define here the models for your scraped items","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-07T13:50:51Z","lastEditedAt":null,"updatedAt":"2018-01-07T13:50:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA1MDA2OA==","url":"https://github.com/coala/community/pull/67#discussion_r160050068","bodyText":"use pycodestyle on your code","diffHunk":"@@ -0,0 +1,123 @@\n+import scrapy\n+import string\n+import json\n+from ruamel.yaml import YAML\n+import os.path\n+from collections import OrderedDict\n+from community.git import get_owner\n+from gsoc.config import get_year\n+\n+\n+org_name = get_owner()\n+year = get_year()\n+yaml = YAML()\n+\n+class GsocSpider(scrapy.Spider):\n+    name = \"gsoc\"\n+    start_urls = [\n+        \"https://summerofcode.withgoogle.com/archive/{year}/organizations\".format(year = year),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-07T13:51:50Z","lastEditedAt":null,"updatedAt":"2018-01-07T13:51:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA2MDkyMQ==","url":"https://github.com/coala/community/pull/67#discussion_r160060921","bodyText":"I have fixed this part. If related yaml file is not found then we show error. (file is not created if data is not found)\n\nThat is an error. It means the GSOC app needs to be disabled.\n\nI do not delete existing yaml files on new query. Should i delete existing yaml files so that if query is made for another year(for which there is no data) so it does not render data from existing files. If there is no data no file gets created.","diffHunk":"@@ -0,0 +1,32 @@\n+<html>\n+\n+    <head>\n+        <title> GSoC 2017 Data </title>\n+    </head>\n+\n+    <body>\n+\n+        {% if error %}\n+            <h3> {{error}} </h3>","author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-07T21:26:04Z","lastEditedAt":"2018-01-07T21:27:32Z","updatedAt":"2018-01-07T21:27:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA2MTAwNw==","url":"https://github.com/coala/community/pull/67#discussion_r160061007","bodyText":"I searched but could not find any related setting other than STATIC_ROOT mentioned in community.settings as _site. I actually found this snippet of from gci app.","diffHunk":"@@ -0,0 +1,11 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(","author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-07T21:29:09Z","lastEditedAt":"2018-01-07T21:31:57Z","updatedAt":"2018-01-07T21:31:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDYxNzE2OQ==","url":"https://github.com/coala/community/pull/67#discussion_r160617169","bodyText":"yes, that is it.","diffHunk":"@@ -0,0 +1,11 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-10T08:45:10Z","lastEditedAt":null,"updatedAt":"2018-01-10T08:45:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDYxNzE5Mg==","url":"https://github.com/coala/community/pull/67#discussion_r160617192","bodyText":"Please use STATIC_ROOT here. (also create a newcomer issue to fix this in gci app)","diffHunk":"@@ -0,0 +1,16 @@\n+import ruamel.yaml\n+import os\n+\n+DATA_DIR = os.path.join(\n+    os.path.dirname(__file__), '..',\n+    '_site'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-10T08:45:18Z","lastEditedAt":null,"updatedAt":"2018-01-10T08:45:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDYxNzQxOA==","url":"https://github.com/coala/community/pull/67#discussion_r160617418","bodyText":"move the substitution parameters to the next line","diffHunk":"@@ -0,0 +1,66 @@\n+from django.shortcuts import render\n+import logging\n+\n+from .data import get_org_data\n+from .data import get_projects_data\n+from community.git import get_owner\n+from gsoc.config import get_year\n+\n+logger = logging.getLogger(__name__ + '.index')\n+org_name = get_owner()\n+year = get_year()\n+\n+\n+def index(request):\n+    try:\n+        org = get_org_data()\n+    except FileNotFoundError:\n+        logger.info('GSoC data not available')\n+        error = 'No GSoC data available for {name} year {year}'.format(\n+            name=org_name, year=year)\n+        return render(request, 'gsoc.html', {'error': error})\n+    else:\n+        for key in org.keys():\n+            id = org.get(key).get('id')\n+            name = org.get(key).get('name')\n+            tagline = org.get(key).get('tagline')\n+            description = org.get(key).get('description')\n+            tech = []\n+            for technology in org.get(key).get('technologies').values():\n+                tech.append(technology)\n+\n+            return render(request, 'gsoc.html', {'id': id, 'name': name,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-10T08:46:39Z","lastEditedAt":null,"updatedAt":"2018-01-10T08:46:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDYxNzU0NA==","url":"https://github.com/coala/community/pull/67#discussion_r160617544","bodyText":"no, stop rendering an error.  use logging to record the error.  and then re-raise the exception here.","diffHunk":"@@ -0,0 +1,66 @@\n+from django.shortcuts import render\n+import logging\n+\n+from .data import get_org_data\n+from .data import get_projects_data\n+from community.git import get_owner\n+from gsoc.config import get_year\n+\n+logger = logging.getLogger(__name__ + '.index')\n+org_name = get_owner()\n+year = get_year()\n+\n+\n+def index(request):\n+    try:\n+        org = get_org_data()\n+    except FileNotFoundError:\n+        logger.info('GSoC data not available')\n+        error = 'No GSoC data available for {name} year {year}'.format(\n+            name=org_name, year=year)\n+        return render(request, 'gsoc.html', {'error': error})\n+    else:\n+        for key in org.keys():\n+            id = org.get(key).get('id')\n+            name = org.get(key).get('name')\n+            tagline = org.get(key).get('tagline')\n+            description = org.get(key).get('description')\n+            tech = []\n+            for technology in org.get(key).get('technologies').values():\n+                tech.append(technology)\n+\n+            return render(request, 'gsoc.html', {'id': id, 'name': name,\n+                                                 'tagline': tagline,\n+                                                 'description': description,\n+                                                 'tech': tech})\n+\n+\n+def projects(request):\n+    try:\n+        org = get_org_data()\n+    except FileNotFoundError:\n+        logger.info('GSoC data not available')\n+        error = 'No GSoC data available for {name} year {year}'.format(\n+            name=org_name, year=year)\n+        return render(request, 'gsoc.html', {'error': error})","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-10T08:47:24Z","lastEditedAt":null,"updatedAt":"2018-01-10T08:47:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDYxNzY3MA==","url":"https://github.com/coala/community/pull/67#discussion_r160617670","bodyText":"lay out the these substitution variables so that you can add another one without modifying the existing lines.","diffHunk":"@@ -0,0 +1,66 @@\n+from django.shortcuts import render\n+import logging\n+\n+from .data import get_org_data\n+from .data import get_projects_data\n+from community.git import get_owner\n+from gsoc.config import get_year\n+\n+logger = logging.getLogger(__name__ + '.index')\n+org_name = get_owner()\n+year = get_year()\n+\n+\n+def index(request):\n+    try:\n+        org = get_org_data()\n+    except FileNotFoundError:\n+        logger.info('GSoC data not available')\n+        error = 'No GSoC data available for {name} year {year}'.format(\n+            name=org_name, year=year)\n+        return render(request, 'gsoc.html', {'error': error})\n+    else:\n+        for key in org.keys():\n+            id = org.get(key).get('id')\n+            name = org.get(key).get('name')\n+            tagline = org.get(key).get('tagline')\n+            description = org.get(key).get('description')\n+            tech = []\n+            for technology in org.get(key).get('technologies').values():\n+                tech.append(technology)\n+\n+            return render(request, 'gsoc.html', {'id': id, 'name': name,\n+                                                 'tagline': tagline,\n+                                                 'description': description,\n+                                                 'tech': tech})\n+\n+\n+def projects(request):\n+    try:\n+        org = get_org_data()\n+    except FileNotFoundError:\n+        logger.info('GSoC data not available')\n+        error = 'No GSoC data available for {name} year {year}'.format(\n+            name=org_name, year=year)\n+        return render(request, 'gsoc.html', {'error': error})\n+    else:\n+        for key in org.keys():\n+            name = org.get(key).get('name')\n+        projects = get_projects_data()\n+        projects_list = []\n+        for key in projects.keys():\n+            mentors = []\n+            for mentor in projects.get(key).get('mentors').values():\n+                mentors.append(mentor)\n+            item = {\n+                'id': projects.get(key).get('id'),\n+                'summary': projects.get(key).get('summary'),\n+                'title': projects.get(key).get('title'),\n+                'student': projects.get(key).get('student'),\n+                'code': projects.get(key).get('project_code'),\n+                'link': projects.get(key).get('project_link'),\n+                'mentors': mentors\n+            }\n+            projects_list.append(item)\n+        return render(request, 'gsoc_projects.html',\n+                      {'project_list': projects_list, 'org_name': name})","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-10T08:48:12Z","lastEditedAt":null,"updatedAt":"2018-01-10T08:48:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDYxODE4Nw==","url":"https://github.com/coala/community/pull/67#discussion_r160618187","bodyText":"Remove this!  Do not render errors here.  This app should not exist if there was no gsoc data.  it isnt a gsoc org. no app. no yaml. no page.  using logging to record the gsoc app was disabled. no other visible trace.","diffHunk":"@@ -0,0 +1,32 @@\n+<html>\n+\n+    <head>\n+        <title> GSoC 2017 Data </title>\n+    </head>\n+\n+    <body>\n+\n+        {% if error %}\n+            <h3> {{error}} </h3>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-10T08:51:10Z","lastEditedAt":null,"updatedAt":"2018-01-10T08:51:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1MzUzNzQ5Mw==","url":"https://github.com/coala/community/pull/67#issuecomment-353537493","bodyText":"Preview of what is extracted (org info)\nhttps://deploy-preview-67--coala-community.netlify.com/gsoc/","diffHunk":null,"author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2017-12-22T07:15:30Z","lastEditedAt":"2017-12-22T07:32:13Z","updatedAt":"2017-12-22T07:32:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NTc1OTUzMA==","url":"https://github.com/coala/community/pull/67#issuecomment-355759530","bodyText":"Preview Links:\nhttps://deploy-preview-67--coala-community.netlify.com/gsoc/projects\nhttps://deploy-preview-67--coala-community.netlify.com/gsoc/","diffHunk":null,"author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-06T16:51:50Z","lastEditedAt":null,"updatedAt":"2018-01-06T16:51:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM1NzUyNTMxMw==","url":"https://github.com/coala/community/pull/67#issuecomment-357525313","bodyText":"No file gets created if there is no data. I raised 404 exception as i didn't get any way to disable an app. Is there any way to disable the app for a condition.","diffHunk":null,"author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-01-14T16:56:20Z","lastEditedAt":"2018-01-14T16:56:49Z","updatedAt":"2018-01-14T16:56:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MTAyOTI0MQ==","url":"https://github.com/coala/community/pull/67#issuecomment-361029241","bodyText":"raising 404 is good enough.\nNote that there is no problem with the GCI app.  master builds on cron work every night.  see https://travis-ci.org/coala/community/builds .  Something is wrong in your changes.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-01-28T00:59:36Z","lastEditedAt":null,"updatedAt":"2018-01-28T00:59:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MjUwMjE5NQ==","url":"https://github.com/coala/community/pull/67#issuecomment-362502195","bodyText":"@jayvdb I will update it. Thanks.","diffHunk":null,"author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-02-02T06:52:14Z","lastEditedAt":null,"updatedAt":"2018-02-02T06:52:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MzAyMTk1NQ==","url":"https://github.com/coala/community/pull/67#issuecomment-363021955","bodyText":"https://deploy-preview-67--coala-community.netlify.com/gsoc/projects\nhttps://deploy-preview-67--coala-community.netlify.com/gsoc","diffHunk":null,"author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-02-05T09:06:08Z","lastEditedAt":null,"updatedAt":"2018-02-05T09:06:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTg1MTU5OQ==","url":"https://github.com/coala/community/pull/67#issuecomment-415851599","bodyText":"@pradeepgangwar  @jayvdb I tried to clone the forked repo and tried to run the .ci scripts so that I can see the data locally but an error occurred\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://pradeepgangwar.github.io/community/static/tasks.yaml\nPlease help me in setting up.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-24T18:57:28Z","lastEditedAt":null,"updatedAt":"2018-08-24T18:57:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTg1MTgyNg==","url":"https://github.com/coala/community/pull/67#issuecomment-415851826","bodyText":"Please tell me if I am missing some step","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-24T18:58:20Z","lastEditedAt":null,"updatedAt":"2018-08-24T18:58:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjg5MTM0Nw==","url":"https://github.com/coala/community/pull/67#issuecomment-416891347","bodyText":"Closing this due to inactivity. I am not able to take it to completion.","diffHunk":null,"author":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4","name":"Pradeep Gangwar"},"createdAt":"2018-08-29T09:39:34Z","lastEditedAt":null,"updatedAt":"2018-08-29T09:39:34Z"}]}}},{"repoOwner":"coala","repoName":"gci-leaders","updatedAtMs":1535411664000,"issue":{"htmlUrl":"https://github.com/coala/gci-leaders/pull/142","number":142,"title":"Main.css: Fix broken social link Fixes https://github.com/coala/gci-leaders/issues/73","body":"Fixes #73 using @wisn suggestion.","comments":12,"createdAt":"2018-02-03T03:47:52Z","updatedAt":"2018-08-27T23:14:24Z","closedAt":"2018-02-06T12:20:18Z","state":"merged","user":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4"},"owner":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4"},"labels":[{"name":"area/ui","color":"442cf7"},{"name":"bug","color":"ee0701"},{"name":"difficulty/newcomer","color":"ffcce2"},{"name":"initiatives/gci","color":"98e9f9"},{"name":"process/approved","color":"0e8a16"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/gci-leaders/pull/142","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM2MjgyNTU3OQ==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362825579","bodyText":"@newbazz What would be the appropriate changes to the commit? This is my first PR, I apologise any mistake on common guidelines.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-03T15:56:41Z","lastEditedAt":null,"updatedAt":"2018-02-03T15:56:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MjgyNjU2Ng==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362826566","bodyText":"You forgot to put Fixes https://github.com/coala/gci-leaders/issues/73 on your commit body","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[],"createdAt":"2018-02-03T16:04:12Z","lastEditedAt":null,"updatedAt":"2018-02-03T16:04:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MjgzMTc1Nw==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362831757","bodyText":"@newbazz Not sure if it's done right now or if it should be just #73 to reference the issue on commit message.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-03T16:43:51Z","lastEditedAt":null,"updatedAt":"2018-02-03T16:43:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2Mjg0NzM1Ng==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362847356","bodyText":"in two different line","diffHunk":null,"author":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4","name":null},"reactions":[],"createdAt":"2018-02-03T19:29:44Z","lastEditedAt":null,"updatedAt":"2018-02-03T19:29:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2Mjg0OTM2Nw==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362849367","bodyText":"@newbazz Thanks! Please check if it's correct now, apparently I mistook the PR title with the commit message.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-03T19:56:10Z","lastEditedAt":null,"updatedAt":"2018-02-03T19:56:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MjkxMjI1Ng==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-362912256","bodyText":"coala says:\n|    | [NORMAL] GitCommitBear:\n|    | No newline found between shortlog and body at HEAD commit. Please add one.\n\nYour commit needs to be like this\nMain.css: Fix broken social link\n\nFixes https://github.com/coala/gci-leaders/issues/73\n\n1 newline between shortlog and body.","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24xOTE0NDcyNw==","createdAt":"2018-02-05T05:40:04Z","content":"THUMBS_UP","user":{"login":"mvinoba","name":"Vinícius Figueiredo"}}],"createdAt":"2018-02-04T14:53:15Z","lastEditedAt":null,"updatedAt":"2018-02-04T14:53:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MzE5NTM3Mw==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-363195373","bodyText":"@newbazz It should be ok now, GitCommitBear ran without warnings.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[],"createdAt":"2018-02-05T19:31:53Z","lastEditedAt":null,"updatedAt":"2018-02-05T19:31:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM2MzMyNzQ3OA==","url":"https://github.com/coala/gci-leaders/pull/142#issuecomment-363327478","bodyText":"I implemented wisn's suggestion, the one that made the issue a newcomer one, but perhaps there are better ways to solve this issue.","diffHunk":null,"author":{"login":"mvinoba","avatarUrl":"https://avatars0.githubusercontent.com/u/19884360?v=4","name":"Vinícius Figueiredo"},"reactions":[{"id":"MDg6UmVhY3Rpb24xOTE5OTYwMw==","createdAt":"2018-02-06T06:52:29Z","content":"THUMBS_UP","user":{"login":"newbazz","name":null}}],"createdAt":"2018-02-06T06:49:20Z","lastEditedAt":null,"updatedAt":"2018-02-06T06:49:20Z"}]}}},{"repoOwner":"coala","repoName":"coala-html","updatedAtMs":1535624193000,"issue":{"htmlUrl":"https://github.com/coala/coala-html/pull/147","number":147,"title":".travis.yml: Enable travis-buddy","body":"Related to coala/meta#114","comments":4,"createdAt":"2018-05-02T19:14:03Z","updatedAt":"2018-08-30T10:16:33Z","closedAt":"2018-05-03T00:31:14Z","state":"merged","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-html/pull/147","comments":[]}}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535628694000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/284","number":284,"title":"coalaonline.html: Change \"Add Bear\" button font to Roboto","body":"This changes the font of the \"Add Bear\" button on Coala Online\nfrom Times New Roman to Roboto.\nCloses #270\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2018-08-15T12:28:25Z","updatedAt":"2018-08-30T11:31:34Z","closedAt":"2018-08-28T00:58:00Z","state":"merged","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/approved","color":"ededed"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/284","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI1MjI0Ng==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210252246","bodyText":"Line contains following spacing inconsistencies:\n\nTrailing whitespaces.\n\nOrigin: SpaceConsistencyBear, Section: spacing.\nThe issue can be fixed by applying the following patch:\n--- a/tmp/tmp01opxl72/partials/tabs/coalaonline.html\n+++ b/tmp/tmp01opxl72/partials/tabs/coalaonline.html\n@@ -146,7 +146,7 @@\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> \n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n                 &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>\n               </i>\n             </a>","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> ","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-15T12:30:08Z","lastEditedAt":null,"updatedAt":"2018-08-15T12:30:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI1MjI0OQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210252249","bodyText":"Trailing Whitespace: Trailing white spaces are unnecessary and can complicate diffs: Remove the ' ' at the end of the line.\nOrigin: HTMLLintBear, Section: html.","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> ","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-15T12:30:09Z","lastEditedAt":null,"updatedAt":"2018-08-15T12:30:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI5MDMyNQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210290325","bodyText":"Great.  You've found the button and changed it.\nHowever, we avoid inline styles.\nwhere is the times new roman coming from?\nnote that bears-icon-small and similar are defined in http://github.com/coala/coalaCSS\nProbably the fix needs to occur there.\nAnd probably the solution is not adding Roboto to bears-icon-small, but requires finding why Times New Roman is being inherited and globally disabling it at the root of the problem.","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n+                &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-15T14:38:20Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:38:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDM0NTY4OQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210345689","bodyText":"The root of the problem here is the .fa class of the font awesome icon. Since the \"ADD BEAR\" text has been written within the  tag, the style \"font-family: FontAwesome\" automatically gets applied to the text.\nAt present only the:\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\nfont-family: Roboto;\n}\nstyle is the best option from the http://github.com/coala/coalaCSS file to apply the Roboto font-family to the text. But this causes the styles of the materialize.css file heading tags to be applied automatically too.\n\nWe can define in a new class in the CoalaCSS file to attend to this particular issue. What do you suggest?","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n+                &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-15T17:32:34Z","lastEditedAt":null,"updatedAt":"2018-08-15T17:32:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDcyMjU0NA==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r210722544","bodyText":"Yeah, new class in coalaCSS sounds good!","diffHunk":"@@ -146,7 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\">\n+                &nbsp;<span style=\"font-family:'Roboto';\">ADD BEAR</span>","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-08-16T19:56:29Z","lastEditedAt":null,"updatedAt":"2018-08-16T19:56:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA3OTQ1Ng==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211079456","bodyText":"&nbsp; not required, the icon has enough padding.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i>\n+              &nbsp;ADD BEAR","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T15:49:54Z","lastEditedAt":null,"updatedAt":"2018-08-18T15:49:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA3OTk2MA==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211079960","bodyText":"I am very sorry I dragged this issue so long because of my small mistakes.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i>\n+              &nbsp;ADD BEAR","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-18T16:09:07Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:09:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDA1MQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080051","bodyText":"Last request for change, doesn't require this change, you can keep this in a separate line.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T16:13:11Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:13:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDA2Ng==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080066","bodyText":"Clarification: I mean </i> can be left in a new line.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T16:13:58Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:13:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDA4Mw==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080083","bodyText":"Don't worry, this shows how insistent you are on learning.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>\n+              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i>\n+              &nbsp;ADD BEAR","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODExNDgxMw==","createdAt":"2018-08-18T16:18:55Z","content":"LAUGH","user":{"login":"Akhelesh","name":null}}],"createdAt":"2018-08-18T16:14:38Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:14:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDExNQ==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080115","bodyText":"I didn't catch that, means icon tags do not have to be on the same line. Am I right?","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-18T16:16:34Z","lastEditedAt":"2018-08-18T16:17:18Z","updatedAt":"2018-08-18T16:17:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA4MDE5Mw==","url":"https://github.com/coala/landing-frontend/pull/284#discussion_r211080193","bodyText":"Yeah.","diffHunk":"@@ -146,8 +146,8 @@ <h4>Optional Settings</h4>\n         <div class=\"row blue-grey darken-4 white-text z-depth-1 no-margin\">\n           <span>\n             <a class=\"waves-effect grey-text text-lighten-2\">\n-              <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"> &nbsp;ADD BEAR\n-              </i>","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T16:20:23Z","lastEditedAt":null,"updatedAt":"2018-08-18T16:20:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzU4Mzg5Mw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413583893","bodyText":"What about if we changed the order of the CSS files, like moving FA https://github.com/coala/landing-frontend/blob/master/index.html#L35 before coalaCSS ?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-16T15:22:26Z","lastEditedAt":null,"updatedAt":"2018-08-16T15:22:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzc3NDg0Ng==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413774846","bodyText":"What about moving the text outside of the icon? that's usually the way its done.","diffHunk":null,"author":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4","name":"Surya Widi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODA2NDU0MA==","createdAt":"2018-08-17T08:39:15Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}},{"id":"MDg6UmVhY3Rpb24yODA2NDgwNA==","createdAt":"2018-08-17T08:44:13Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-17T06:52:18Z","lastEditedAt":"2018-08-17T06:52:28Z","updatedAt":"2018-08-17T06:52:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzc5NzUyMg==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413797522","bodyText":"Adding a new class to CoalaCSS and moving the text outside the <i></i> tag does the job. For the time being I added a new class to local copy of CoalaCSS to get the results here:\n\nIf this approach is okay how can I add the new class to CoalaCSS hosted on Github? Also what should I name it?","diffHunk":null,"author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-17T08:36:07Z","lastEditedAt":"2018-08-17T09:02:13Z","updatedAt":"2018-08-17T09:02:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzc5OTI1NA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-413799254","bodyText":"I agree with @blazeu, you should try moving the button text out of the i tag. Fontawesome does not expect for the button label to be inside icon's tag.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-17T08:43:27Z","lastEditedAt":null,"updatedAt":"2018-08-17T08:43:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0MTc2Nw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-414041767","bodyText":"Here, I moved the label text into parent anchor tag from the tag supposed to be used for icon and the results are satisfactory:\n\n<a class=\"waves-effect grey-text text-lighten-2\">\n  <i ng-click=\"add_bears(section)\" class=\"fa fa-plus-circle bears-icon-small\" aria-hidden=\"true\"></i> ADD BEAR\n</a>\nIf you want to have bold label then add a new class called bold to coalaCSS and apply it to the parent anchor tag here.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:31:29Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:31:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0NDc4Nw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-414044787","bodyText":"@ksdme yes it works. Sorry I couldn't get to this solution quick. What should I do to my PR for coalaCSS now? Should I delete it and create a new one?","diffHunk":null,"author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[],"createdAt":"2018-08-18T09:24:31Z","lastEditedAt":null,"updatedAt":"2018-08-18T09:24:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0NjYwOA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-414046608","bodyText":"You can let it be open for now, when this PR gets merged without any changes being required in coalaCSS we can have that closed. Please keep it open for now.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T09:59:45Z","lastEditedAt":null,"updatedAt":"2018-08-18T09:59:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk0ODM5NA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-415948394","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-25T07:25:12Z","lastEditedAt":null,"updatedAt":"2018-08-25T07:25:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk3MTU3NA==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-415971574","bodyText":"@jayvdb Looks like the ff did not go through.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-25T14:05:51Z","lastEditedAt":null,"updatedAt":"2018-08-25T14:05:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNTczMQ==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-416415731","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-28T00:57:06Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:57:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNTkyMw==","url":"https://github.com/coala/landing-frontend/pull/284#issuecomment-416415923","bodyText":"Automated fastforward with GitMate.io was successful! 🎉","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-28T00:58:15Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:58:15Z"}]}}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1534168571000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/283","number":283,"title":"update ISSUE_TEMPLATE.md","body":"(I tried to follow what was written i did understand it overall but not perfectly)\nISSUE_TEMPLATE.md written instead of a link\nbasically i just copied what was written on the other side of the link because if someone have a crappy connection he/she won't have to wait for another tab/page to appear (sorry if this pr is useless)\nhave a nice day.","comments":0,"createdAt":"2018-08-03T03:28:59Z","updatedAt":"2018-08-13T13:56:11Z","closedAt":null,"state":"open","user":{"login":"slapash","avatarUrl":"https://avatars0.githubusercontent.com/u/22305318?v=4"},"owner":{"login":"slapash","avatarUrl":"https://avatars0.githubusercontent.com/u/22305318?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/283","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzUzNjIyNQ==","url":"https://github.com/coala/landing-frontend/pull/283#discussion_r207536225","bodyText":"Thanks for your enhancement :), you can use ``` here in replacement of :: in `.rst` file, the current layout is little bit ugly :P","diffHunk":"@@ -1,5 +1,22 @@\n-<!-- Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template. If you need any help regarding usage of coala, check out the documentation or hit us up on chat. You can ignore or delete this text, it is commented and won't appear when the issue is submitted or previewed.\n+Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template.\n+\n+### Overview Description\n+\n+# Steps to Reproduce\n+\n+1.\n+2.\n+3.\n+\n+# Actual Results\n+\n+# Expected Results\n+\n+# Reproducibility\n+\n+# Additional Information:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-03T12:59:15Z","lastEditedAt":null,"updatedAt":"2018-08-03T12:59:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzUzNzAzOA==","url":"https://github.com/coala/landing-frontend/pull/283#discussion_r207537038","bodyText":"Can you reframe the above line?\n-->If you need any help regarding usage of coala, check out the documentation or hit us up on chat. You can ignore or delete this text, it is commented and won't appear when the issue is submitted or previewed.\nIMO your PR is just like enhancement for issue template","diffHunk":"@@ -1,5 +1,22 @@\n-<!-- Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template. If you need any help regarding usage of coala, check out the documentation or hit us up on chat. You can ignore or delete this text, it is commented and won't appear when the issue is submitted or previewed.\n+Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template.","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-08-03T13:02:31Z","lastEditedAt":null,"updatedAt":"2018-08-03T13:02:31Z"}]}}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1535023849000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/280","number":280,"title":"Use gitignore moban","body":"Related to https://gitlab.com/coala/mobans/issues/31\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-06-05T15:03:59Z","updatedAt":"2018-08-23T11:30:49Z","closedAt":"2018-06-17T13:36:41Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"ededed"},{"name":"size/L","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/landing-frontend/pull/280","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3Njc5MA==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397876790","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T12:49:13Z","lastEditedAt":null,"updatedAt":"2018-06-17T12:49:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3Njg3Mw==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397876873","bodyText":"Automated fastforward failed! Please fastforward your pull request manually via the command line.\nReason:\nCommand: git merge --ff-only head/moban\n\nExit Code: 128\n\nCause:\n\nfatal: Not possible to fast-forward, aborting.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T12:50:30Z","lastEditedAt":null,"updatedAt":"2018-06-17T12:50:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3OTUzOQ==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397879539","bodyText":"Hey! I'm GitMate.io! This pull request is being fastforwarded automatically. Please DO NOT push while fastforward is in progress or your changes would be lost permanently ⚠️","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T13:35:50Z","lastEditedAt":null,"updatedAt":"2018-06-17T13:35:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg3OTYyNQ==","url":"https://github.com/coala/landing-frontend/pull/280#issuecomment-397879625","bodyText":"Automated fastforward with GitMate.io was successful! 🎉","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T13:37:16Z","lastEditedAt":null,"updatedAt":"2018-06-17T13:37:16Z"}]}}},{"repoOwner":"coala","repoName":"coalaCSS","updatedAtMs":1535806929000,"issue":{"htmlUrl":"https://github.com/coala/coalaCSS/pull/34","number":34,"title":"coala.css: Add class for coala-online \"Add Bear\" text","body":"Add new class \"add-bear\" which styles the \"Add Bear\"\ntext on coalaOnline to Roboto font and bolds it.","comments":3,"createdAt":"2018-08-18T07:07:58Z","updatedAt":"2018-09-01T13:02:09Z","closedAt":"2018-09-01T13:01:51Z","state":"closed","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"invalid","color":"e6e6e6"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coalaCSS/pull/34","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2OTA1NQ==","url":"https://github.com/coala/coalaCSS/pull/34#discussion_r211069055","bodyText":"I think having a rule just for a single type of button is unnecessary. Please consider a more general way to solve this problem.","diffHunk":"@@ -776,6 +776,11 @@ a.chip i {\n   cursor: pointer;\n }\n \n+.coala-online .add-bear {","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:33:39Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:33:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2OTQ4Nw==","url":"https://github.com/coala/coalaCSS/pull/34#discussion_r211069487","bodyText":"coala/landing-frontend#284 (comment); seemed to work instantly for me.","diffHunk":"@@ -776,6 +776,11 @@ a.chip i {\n   cursor: pointer;\n }\n \n+.coala-online .add-bear {","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:58:55Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:58:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA3MDEwMA==","url":"https://github.com/coala/coalaCSS/pull/34#discussion_r211070100","bodyText":"Yup it works. Thanks :)","diffHunk":"@@ -776,6 +776,11 @@ a.chip i {\n   cursor: pointer;\n }\n \n+.coala-online .add-bear {","author":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4","name":null},"reactions":[{"id":"MDg6UmVhY3Rpb24yODExMDE5Mg==","createdAt":"2018-08-18T10:00:34Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-18T09:25:13Z","lastEditedAt":null,"updatedAt":"2018-08-18T09:25:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDA0MTc4Nw==","url":"https://github.com/coala/coalaCSS/pull/34#issuecomment-414041787","bodyText":"coala/landing-frontend#284 (comment)","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-18T08:31:53Z","lastEditedAt":null,"updatedAt":"2018-08-18T08:31:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEzMTU1NA==","url":"https://github.com/coala/coalaCSS/pull/34#issuecomment-417131554","bodyText":"We dont need this any more ?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-29T22:46:51Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:46:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzE4MTc4Mw==","url":"https://github.com/coala/coalaCSS/pull/34#issuecomment-417181783","bodyText":"No, the related issue was merged without requiring this change. Please close this.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-30T03:54:14Z","lastEditedAt":null,"updatedAt":"2018-08-30T03:54:14Z"}]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false}]},{"repoOwner":"coala","repoName":"coala-bears","labels":[{"id":"MDU6TGFiZWwzMjcwNDg3MDQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MDU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjA=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjE=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjI=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjM=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMjczNjcxMTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2Mjg=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Mjg=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Nzg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwzMjg1NDk4MDg=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNjA=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNzU=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjk2MDc1MDg=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDg1MjY=","name":"type/test","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MDg5MTQ=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDkwMDM=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODU=","name":"importance/low","color":"70e870","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODY=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkzNDM=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4MjA=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4Nzk=","name":"type/codestyle","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMjk2MTE5MTA=","name":"status/needs design","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MTI5MjU=","name":"status/needs info","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0MzI=","name":"status/wontfix/accepting patches","color":"555555","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0OTA=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjk2MTkwMDc=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzNDg2NTk2MzE=","name":"area/lintbears","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzNDg2NjY2Mzk=","name":"area/documentation","color":"c5def5","default":false},{"id":"MDU6TGFiZWwzNzM3ODc1MzY=","name":"type/dependencies","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MTMxOTIzMjY=","name":"bear proposal","color":"ADFF2F","default":false},{"id":"MDU6TGFiZWw0MzQ3MDk3MDU=","name":"long-term-project","color":"c5def5","default":false},{"id":"MDU6TGFiZWw0MzYzMTQwNDQ=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM4MDEzOTY=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTI0NDE0NjI=","name":"hacktoberfest","color":"b60205","default":false},{"id":"MDU6TGFiZWw0ODM0OTI0NTY=","name":"area/newsettings","color":"006b75","default":false},{"id":"MDU6TGFiZWw0ODM1MDQ5MzQ=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw1MDkwMjY0MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1MjgxMjIzMjY=","name":"area/genericbears","color":"D01975","default":false},{"id":"MDU6TGFiZWw1NjYwNzE5MDc=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODUzMzI3NDM=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw1OTQ2NzgyMDM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw1OTQ2Nzg1MzM=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWw1OTQ3MzEwMDQ=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjAxNjU4NzE=","name":"area/ci","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjcxMTYzNTY=","name":"type/performance","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2ODA4NDE3NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDE2NzkwNjI=","name":"area/tests","color":"c5def5","default":false},{"id":"MDU6TGFiZWw3NDE2NzYzNDI=","name":"language/ruby","color":"dd27c8","default":false},{"id":"MDU6TGFiZWw3NDY4NzgxOTQ=","name":"status/needs discussion","color":"ead40e","default":false},{"id":"MDU6TGFiZWw4Njc1NzI1Mjk=","name":"area/install","color":"0b14bc","default":false},{"id":"MDU6TGFiZWw4NzU1ODUyMzk=","name":"status/non-free","color":"8f0dbf","default":false},{"id":"MDU6TGFiZWw5MDY3ODUyNjk=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5ODMyMTYyMDQ=","name":"needs rebase","color":"f4cd69","default":false},{"id":"MDU6TGFiZWw5OTg4NjE3NjI=","name":"type/style","color":"168fe0","default":false},{"id":"MDU6TGFiZWwxMDAwNDgxMzgw","name":"type/spelling","color":"50b5f4","default":false}]},{"repoOwner":"coala","repoName":"documentation","labels":[{"id":"MDU6TGFiZWwzNDcxNjk0NTI=","name":"bug","color":"fc2929","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTM=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTQ=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTU=","name":"help wanted","color":"159818","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTc=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw0Mjc0OTIzNjA=","name":"area/documentation","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjE=","name":"cool and awesome","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjI=","name":"difficulty/medium","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzc=","name":"difficulty/newcomer","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzg=","name":"importance/low","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0Mjc0OTY0NjQ=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDE2Nzc=","name":"status/needs design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDIyNjA=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDE=","name":"area/usability","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDI=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc1MDMzOTg=","name":"importance/high","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0Mjc1MTA5MTA=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MzEwMDExMDM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0MzEwMDExODE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0MzE0MzQ5NzY=","name":"size/S","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0MzE0MzgxNjg=","name":"size/XS","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzE0NTI5ODI=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzIwNTAyMDE=","name":"size/M","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM1Njc4Mzk=","name":"size/L","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw0NDQzODgyODI=","name":"size/XL","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTI0NDIxNDQ=","name":"hacktoberfest","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTYxMTgwNzE=","name":"review carefully!","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTg1NDUwOTI=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MTAyNTE0Nzk=","name":"initiatives/gci","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDQxODE=","name":"status/stale","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NjE4MjQ3MDA=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw4MTg0NDUyNjI=","name":"status/needs info","color":"9bf2cf","default":false},{"id":"MDU6TGFiZWw4MzI2ODAwMzk=","name":"status/needs discussion","color":"f4ab8b","default":false},{"id":"MDU6TGFiZWw4NDcxMDQ2MDk=","name":"area/ci","color":"f49093","default":false}]},{"repoOwner":"coala","repoName":"projects","labels":[{"id":"MDU6TGFiZWw1MjAwNDU5MzU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5MzY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDE=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4MTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4Mzg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMTI2NDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMzA5ODU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MjAxMzgzMjY=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjAxNDgxNzc=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxNzM1OTQ=","name":"design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw1MjAxOTc5MjE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAyMDYyNTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA0MTEwMTk=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3MTI=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3NjI=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MjE5NDE2MTI=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjQzODgxMzc=","name":"community_team","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTM4ODMyNzI=","name":"Project Proposal","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDM5NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzAzNzE5NDQ=","name":"initiatives/gci","color":"fc7d0f","default":false},{"id":"MDU6TGFiZWw3MzgxODI0MzY=","name":"upstream","color":"ffb5bd","default":false},{"id":"MDU6TGFiZWw3NTE3NjE0NTk=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw4MzYzNjUxNjE=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw4MzcxMjA3OTA=","name":"importance/low","color":"2fe055","default":false},{"id":"MDU6TGFiZWw4MzcxNjY3NTk=","name":"difficulty/medium","color":"9dea67","default":false},{"id":"MDU6TGFiZWw4MzcxNzIzOTI=","name":"importance/medium","color":"f2db30","default":false},{"id":"MDU6TGFiZWw4NjIyMDU3MjQ=","name":"status/needs info","color":"71fcb7","default":false},{"id":"MDU6TGFiZWw4NzgxODM1OTc=","name":"status/blocked","color":"e56994","default":false},{"id":"MDU6TGFiZWw5MTIxODM1MTc=","name":"status/needs design","color":"f9a7df","default":false}]},{"repoOwner":"coala","repoName":"devops","labels":[{"id":"MDU6TGFiZWw2MDkyNjQ4MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjQyMjkyMzE=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWw2MjU3NzY1MzM=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWw2MjgxNTMwNjk=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxNTM3MTA=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTM4NzI=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWw2MjgxNTQwODM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjgxNTQzMjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxNTQ4OTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTUwODE=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWw2MjgxNTU0NjE=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWw2MjgxOTMwNTQ=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjgxOTMxNTM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTM4OTE=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTQwMjk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQxMDI=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTQyMDI=","name":"status/invalid","color":"668866","default":false},{"id":"MDU6TGFiZWw2MjgxOTQzMzA=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ1MDg=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ2NTI=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ3NTk=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ5MDg=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTUwMjk=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTUyMjA=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTUzOTA=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjgxOTU3OTU=","name":"area/security","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxOTYwMzQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MjgxOTY5Nzg=","name":"scope/internal","color":"D01975","default":false},{"id":"MDU6TGFiZWw2MjgxOTczNjQ=","name":"area/ops","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjgxOTg4Nzc=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NDk5ODc=","name":"service/venus","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAwNDQ=","name":"service/nginx","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxNTg=","name":"service/cobot","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxODc=","name":"service/cherry-pick-bot","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAzMzU=","name":"type/new service","color":"006b75","default":false},{"id":"MDU6TGFiZWw2Mjg0NTA0NzA=","name":"area/web development","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTE2MDI=","name":"area/communication","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTY3ODQ=","name":"service/landing","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyMjI=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyOTQ=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0MTQ=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0Nzg=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1Mjk=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1NjU=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MzI5MTU0MTY=","name":"service/corobo","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTcyOTQ=","name":"area/CD","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTkwNjM=","name":"service/ikari","color":"ab78ff","default":false},{"id":"MDU6TGFiZWw2MzI5MTkzMzI=","name":"area/monitoring","color":"aaff88","default":false},{"id":"MDU6TGFiZWw2MzI5MTk4MjE=","name":"cool and awesome","color":"aaffdd","default":false},{"id":"MDU6TGFiZWw2ODA4NDM4MTA=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2ODU2MDMyOTc=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw3MzI4OTUxMTk=","name":"initiatives/gci","color":"936ed3","default":false},{"id":"MDU6TGFiZWw5MjY3OTg3OTc=","name":"process/pending_review","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"corobo","labels":[{"id":"MDU6TGFiZWw2MDExMDE3NTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjE=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDEzNTc0Mjk=","name":"importance/low","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2MDEzNTc0ODc=","name":"importance/high","color":"e99695","default":false},{"id":"MDU6TGFiZWw2MDEzNTc1OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MDEzNTc2NzE=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MDEzNTc3NDk=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWw2MDEzOTE3OTY=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MDEzOTMxOTY=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDE0MDQ2Mjc=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MDM2ODcwMTM=","name":"stretch goal","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3Mjk=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3NjU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MTQ2OTYxMzE=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MTUyODM2MTU=","name":"ready","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUyODUyMzI=","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUzNjgxODU=","name":"documentation","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTcwNzUyNDA=","name":"pr available","color":"cccccc","default":false},{"id":"MDU6TGFiZWw2MTg0MTI1ODU=","name":"cool and awesome","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTg0MTMzNTk=","name":"plugin proposal","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2MTg5NjE5MDA=","name":"poll","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTk4NTMxNzU=","name":"design","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjI2MjMyMzE=","name":"decided","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjI3MTg0NTE=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw2MjI3MTg1MDE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjM0MDU1NTE=","name":"difficulty/newcomer","color":"65c8ff","default":false},{"id":"MDU6TGFiZWw2MjQyMzcwMjQ=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjQ3NzY3ODg=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjY3NDQ0MzY=","name":"deployment","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjY4NTIxOTM=","name":"non-existent","color":"ededed","default":false},{"id":"MDU6TGFiZWw2Mjc5NjE1Mjc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjkyODg1NDY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzA0NTUwODk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzIxMzg2ODg=","name":"upstream","color":"b60205","default":false},{"id":"MDU6TGFiZWw2NTc1NjY5MTY=","name":"gsoc2017/phase3","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2ODA4NDM3ODg=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MjY4ODMyMzQ=","name":"initiatives/gci","color":"f79e9f","default":false},{"id":"MDU6TGFiZWw3Mzk0NDIzNzA=","name":"status/cannot reproduce","color":"000000","default":false},{"id":"MDU6TGFiZWw3NDI4NzcxODA=","name":"importance/medium","color":"ddba61","default":false},{"id":"MDU6TGFiZWw3NTg3MDM2MzA=","name":"area/ui","color":"dd02cf","default":false},{"id":"MDU6TGFiZWw3NTg3MDQzNDU=","name":"area/labhub","color":"63ccf9","default":false},{"id":"MDU6TGFiZWw3NTg3MDUyNDY=","name":"area/security","color":"fc6805","default":false},{"id":"MDU6TGFiZWw3NjE3NTA5NTc=","name":"type/markdown","color":"2a0582","default":false},{"id":"MDU6TGFiZWw3NjE3OTU1NzE=","name":"type/regex","color":"d453e2","default":false},{"id":"MDU6TGFiZWw3NjE5NDI5ODM=","name":"area/errbot","color":"ed3d9b","default":false},{"id":"MDU6TGFiZWw3NjE5NDMzNTQ=","name":"backend/gitter","color":"7cf9c1","default":false},{"id":"MDU6TGFiZWw3NjE5NDQwMDg=","name":"backend/zulip","color":"0a546b","default":false},{"id":"MDU6TGFiZWw3NjE5NjI2ODg=","name":"backend/telegram","color":"e26858","default":false},{"id":"MDU6TGFiZWw3NjIwMTE4MTI=","name":"area/config","color":"60a1db","default":false},{"id":"MDU6TGFiZWw3NjIwMTIyNTM=","name":"area/tests","color":"5facd8","default":false},{"id":"MDU6TGFiZWw3NjIwMjkyMTI=","name":"status/needs info","color":"8e081e","default":false},{"id":"MDU6TGFiZWw3NjI0MTgyNzI=","name":"area/documentation","color":"969bdd","default":false},{"id":"MDU6TGFiZWw3NjY2Mzc1ODM=","name":"area/ci","color":"ab04e8","default":false},{"id":"MDU6TGFiZWw5OTg4NjM0Nzc=","name":"type/style","color":"567c09","default":false}]},{"repoOwner":"coala","repoName":"community","labels":[{"id":"MDU6TGFiZWw3NjYwMTk2MDQ=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDU=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDY=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDc=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDg=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDk=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTE=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NjYyMTU3OTg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw3NjYyMTU4NzE=","name":"initiatives/gci","color":"ff9549","default":false},{"id":"MDU6TGFiZWw3NjYyMTY0Njc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NjYyMzg3OTg=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3NjYzMjMwMjc=","name":"needs design","color":"db81c7","default":false},{"id":"MDU6TGFiZWw3Njc0MjMzMDE=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njg2NDc1NDg=","name":"upstream","color":"fcc4c5","default":false},{"id":"MDU6TGFiZWw3Njg3NTEyNzk=","name":"importance/low","color":"9cc6fc","default":false},{"id":"MDU6TGFiZWw3Njg3NTE3Nzc=","name":"importance/high","color":"e0401d","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyMTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyNDg=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4Njc2NDE=","name":"status/blocked","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzAxOTkwODc=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw3NzAzMDQ4MTY=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzA0MTk0MTA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzI2MTI0MzU=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzM5NDU4NjU=","name":"importance/medium","color":"ccf945","default":false},{"id":"MDU6TGFiZWw3Nzg1OTkxODY=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Nzg3Mzk5MjY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE1NTY4MzY=","name":"initiatives/gsoc","color":"ed95c1","default":false},{"id":"MDU6TGFiZWw3ODIxMTU0NDM=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODI1Njg2MjA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjI0MDg1NzI=","name":"area/ci","color":"4c95ad","default":false},{"id":"MDU6TGFiZWw5OTg4NjI4MTU=","name":"type/style","color":"93f486","default":false},{"id":"MDU6TGFiZWwxMDA1MjQ0Mjgx","name":"area/tests","color":"7b68dd","default":false}]},{"repoOwner":"coala","repoName":"gci-leaders","labels":[{"id":"MDU6TGFiZWw3NjkyMjg1NTg=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NTk=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjA=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjE=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjI=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjM=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjQ=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjU=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw3Njk1ODQ5MjM=","name":"difficulty/low","color":"59db91","default":false},{"id":"MDU6TGFiZWw3Njk1ODQ5OTY=","name":"initiatives/gci","color":"98e9f9","default":false},{"id":"MDU6TGFiZWw3Njk1ODY4NTA=","name":"difficulty/newcomer","color":"ffcce2","default":false},{"id":"MDU6TGFiZWw3Njk1OTg5ODY=","name":"difficulty/medium","color":"ff91cd","default":false},{"id":"MDU6TGFiZWw3Njk2NDAyNjg=","name":"difficulty/high","color":"a667f7","default":false},{"id":"MDU6TGFiZWw3Njk2NDExNDk=","name":"status/blocked","color":"cc4158","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzMjE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzNjI=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk3MDg3Mjg=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw3Njk5MzE3MTA=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzAxMDE1MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw3NzA3MzgyMDU=","name":"area/ui","color":"442cf7","default":false},{"id":"MDU6TGFiZWw3NzA4MTQwMjk=","name":"type/bug","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzA5NDg4ODk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzEwOTQ3Njg=","name":"area/i18n","color":"ffccee","default":false},{"id":"MDU6TGFiZWw3NzQ3MTc4OTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzQ4ODI2ODM=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzYyNjk4NzM=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE0NTgxMTg=","name":"importance/low","color":"fcf1a6","default":false},{"id":"MDU6TGFiZWw3ODQxMDY0NDM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5NDc0NjU=","name":"importance/high","color":"dd007d","default":false}]},{"repoOwner":"coala","repoName":"gh-board","labels":[{"id":"MDU6TGFiZWw3NTM5MzE2OTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTg=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTk=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDA=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDE=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDI=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NTU4MTU1MzQ=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NzQyNDUxNDA=","name":"difficulty/low","color":"07eded","default":false},{"id":"MDU6TGFiZWw3NzQyNDU1NDI=","name":"initiatives/gci","color":"e5ce95","default":false},{"id":"MDU6TGFiZWw3ODU0MzEyMDI=","name":"difficulty/medium","color":"d30a8d","default":false},{"id":"MDU6TGFiZWw4NDA0NzA4Njk=","name":"process/wip","color":"ead483","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2MTg=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2OTE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NjI0NjY2NTA=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAwMjc1NTE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAxOTA1NTk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAyMzc5NDc=","name":"difficulty/high","color":"e88e53","default":false},{"id":"MDU6TGFiZWw5MjIzNjc2Nzg=","name":"importance/medium","color":"65f23e","default":false},{"id":"MDU6TGFiZWw5MjM2MTYxMTQ=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5ODk3ODk=","name":"upstream","color":"6ded77","default":false},{"id":"MDU6TGFiZWw5MzA1Mzc3NzI=","name":"importance/low","color":"1394a0","default":false},{"id":"MDU6TGFiZWw5MzgzMTQ4MjE=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTg5MTUwMDI=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk1OTUyODA=","name":"difficulty/newcomer","color":"33a7bf","default":false},{"id":"MDU6TGFiZWwxMDExNjQ0Mjg5","name":"area/dependencies","color":"ef88a2","default":false}]},{"repoOwner":"coala","repoName":"coala-html","labels":[{"id":"MDU6TGFiZWwzMjY1MzQ5Nzg=","name":"type/bug","color":"fc2929","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5Nzk=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODE=","name":"status/wontfix/accepting patches","color":"777777","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODI=","name":"status/invalid","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODM=","name":"status/need-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODQ=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NTU=","name":"difficulty/newcomer","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NjQ=","name":"difficulty/low","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3OTU=","name":"difficulty/medium","color":"fef2c0","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4MzE=","name":"difficulty/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4NzU=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzM=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzQ=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzODI=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTA=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTE=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTk=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMzI5NTk1MTI=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWwzMzMxMzU3NDk=","name":"status/blocked","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzMyNDI0NDU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMzMzNDE1OTY=","name":"status/needs design","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYyMDYxOTQ=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYzMTg0NTQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2ODA4NDQzNjM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzEwMjg5NTk=","name":"initiatives/gci","color":"f78589","default":false}]},{"repoOwner":"coala","repoName":"landing-frontend","labels":[{"id":"MDU6TGFiZWw1MjE2NDU4MTA=","name":"type/bug","color":"ee0701","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTE=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTQ=","name":"status/wontfix/not happening","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTU=","name":"needs-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTY=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjE3MDE0OTc=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjE3MDE1MzY=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MzE1MzAwNjE=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MzE1OTEwMDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE2MTQzODU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE3NDgxNzc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE4MzA2ODg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzIxNzM0NTY=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1NTk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1OTE=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjM0NzM5Mjg=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2NjkxNjAwOTA=","name":"status/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjkxNjEwODA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODc1ODI1ODg=","name":"area/documentation","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDU3ODgwNzM=","name":"needs-discussion","color":"aa52aa","default":false},{"id":"MDU6TGFiZWw3MzAzNTE0NDc=","name":"initiatives/gci","color":"f2d5a4","default":false},{"id":"MDU6TGFiZWw3NDgzMDE3MzE=","name":"difficulty/high","color":"f762d7","default":false},{"id":"MDU6TGFiZWw3ODQ4Mzc1NjQ=","name":"difficulty/medium","color":"dbc255","default":false},{"id":"MDU6TGFiZWw3ODYxOTA3MzM=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4Njc1Nzc2MzI=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw4ODM0MDIxNDI=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4OTU1MjU0NDM=","name":"enhancement","color":"097287","default":true}]},{"repoOwner":"coala","repoName":"coalaCSS","labels":[{"id":"MDU6TGFiZWw2MDk0OTkxNzc=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzg=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzk=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODA=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODE=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODI=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODM=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw2MzAzNTEzNDg=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzAzNTE1MjU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgyNTE=","name":"area/landing-frontend","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgzMzY=","name":"area/projects","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MzQ3OTg0ODU=","name":"design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MzQ3OTkzMjk=","name":"importance/critical","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mzk0NDkwNTc=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODEwMjUyMzA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzMwNDk1MjU=","name":"initiatives/gci","color":"ee79f7","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE0Nzc=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE2MDY=","name":"importance/low","color":"99c1dd","default":false},{"id":"MDU6TGFiZWw3Mzk1MDA1OTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NTEzMzIxMzA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDkxMjMwMjk=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw4NDkxMjM4OTY=","name":"difficulty/medium","color":"0052cc","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2018-09-02T21:03:45Z"},{"repoOwner":"coala","repoName":"coala-bears","isPrivate":false,"lastSeenAt":"2018-09-02T21:22:09Z"},{"repoOwner":"coala","repoName":"documentation","isPrivate":false,"lastSeenAt":"2018-08-13T13:54:00Z"},{"repoOwner":"coala","repoName":"projects","isPrivate":false,"lastSeenAt":"2018-09-02T18:47:40Z"},{"repoOwner":"coala","repoName":"devops","isPrivate":false,"lastSeenAt":"2018-08-18T10:36:44Z"},{"repoOwner":"coala","repoName":"corobo","isPrivate":false,"lastSeenAt":"2018-09-03T05:23:41Z"},{"repoOwner":"coala","repoName":"community","isPrivate":false,"lastSeenAt":"2018-09-02T15:39:37Z"},{"repoOwner":"coala","repoName":"gci-leaders","isPrivate":false,"lastSeenAt":"2018-08-28T17:04:18Z"},{"repoOwner":"coala","repoName":"gh-board","isPrivate":false,"lastSeenAt":"2018-09-02T11:01:10Z"},{"repoOwner":"coala","repoName":"coala-html","isPrivate":false,"lastSeenAt":"2018-08-30T10:16:33Z"},{"repoOwner":"coala","repoName":"landing-frontend","isPrivate":false,"lastSeenAt":"2018-09-01T14:15:26Z"},{"repoOwner":"coala","repoName":"coalaCSS","isPrivate":false,"lastSeenAt":"2018-09-01T13:02:09Z"}]}