{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566406051000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6065","number":6065,"title":"macOS brew pip install results in Permission denied: '/usr/local/man'","body":"$ brew install pkg-config libxml2\nUpdating Homebrew...\n\n==> Homebrew is run entirely by unpaid volunteers. Please consider donating:\n\n  https://github.com/Homebrew/brew#donations\n\n==> Auto-updated Homebrew!\n\nUpdated 2 taps (homebrew/cask and homebrew/core).\n\n==> New Formulae\n\nahoy                                     libsixel\naliyun-cli                               libspng\nallureofthestars                         libvirt-glib\namtk                                     libvmaf\nanime-downloader                         libvncserver\nantibody                                 libzt\nanycable-go                              lizard\nanyenv                                   llvm@6\naom                                      llvm@7\nappstream-glib                           lsd\naravis                                   lsusb\nastrometry-net                           luarocks\nasyncplusplus                            luit\natlantis                                 mage\natomist-cli                              mallet\naws-google-auth                          man-db\naws-iam-authenticator                    mariadb@10.3\naws-okta                                 maven@3.5\nazure-storage-cpp                        mdbook\nbadtouch                                 mesa\nbazelisk                                 micronaut\nbenthos                                  minica\nbitwise                                  miniserve\nblack                                    mkcert\nbloaty                                   moarvm\nbluetoothconnector                       molten-vk\nborgmatic                                mongodb@3.6\nboringtun                                needle\nbreezy                                   netlify-cli\nbuildkit                                 newman\nbumpversion                              nlohmann-json\nbundletool                               nng\nc-blosc                                  node@10\ncafeobj                                  nqp\ncarla                                    nu-smv\ncash-cli                                 nwchem\ncassandra-reaper                         objfw\ncatch2                                   oclgrind\nccls                                     opa\ncfn-lint                                 opencv@3\ncgit                                     openkim-models\nchafa                                    opensubdiv\ncjson                                    opentracing-cpp\nclojure-lsp                              operator-sdk\nclzip                                    ospray\ncmdshelf                                 osqp\ncmix                                     osx-cpu-temp\ncmusfm                                   otf2\ncontentful-cli                           oxipng\ncpl                                      pagmo\ncpp-gsl                                  pass-otp\ncql                                      pcapplusplus\ncreate-dmg                               perltidy\ncryptominisat                            peru\ncsound                                   petsc-complex\ncstore_fdw                               phpmd\ncsvq                                     phpstan\ncubelib                                  picat\ncurl-openssl                             pict\ncwlogs                                   pijul\ncxxopts                                  pipx\ncypher-shell                             postgresql@10\ndav1d                                    pprint\ndbmate                                   prettier\ndeno                                     procs\ndevspace                                 proper\ndhall                                    proteinortho\ndhall-bash                               protobuf@3.6\ndiceware                                 protoc-gen-go\ndiskus                                   prototool\ndive                                     pulp\ndmg2img                                  pulumi\ndnscontrol                               pyinstaller\ndocker-credential-helper-ecr             pyside\ndocker-machine-driver-hyperkit           python-yq\ndocker-machine-driver-vmware             qalculate-gtk\ndockerize                                quickjs\ndrone-cli                                rakudo\ndust                                     range-v3\neasyengine                               rargs\neg-examples                              rbspy\nembree                                   re-flex\nentityx                                  react-native-cli\nerlang@21                                redis@4.0\neslint                                   reprepro\nesptool                                  riff\nfasttext                                 rke\nfaudio                                   ruby@2.4\nfauna-shell                              ruby@2.5\nfff                                      s2geometry\nffsend                                   s3ql\nfluxctl                                  scala@2.12\nfrpc                                     scdoc\nfrps                                     schema-evolution-manager\nfx                                       scws\ngambit                                   sd\ngambit-scheme                            serve\ngatsby-cli                               serverless\ngcc@8                                    sfst\ngeant4                                   sha3sum\ngel                                      shadowenv\ngeogram                                  shellz\ngerbil-scheme                            ship\nghr                                      signal-cli\ngit-absorb                               simple-scan\ngitleaks                                 sk\ngitmoji                                  skopeo\ngnunet                                   sloc\ngo@1.10                                  smimesign\ngo@1.11                                  sn0int\ngolang-migrate                           sng\ngoreman                                  solr@7.7\ngptfdisk                                 sonarqube-lts\ngradio                                   sonobuoy\ngrpc-swift                               sourcedocs\ngrpcurl                                  spice-gtk\ngtranslator                              spice-protocol\nh3                                       spirv-cross\nhealpix                                  spirv-tools\nheatshrink                               squashfuse\nhelmfile                                 stanford-corenlp\nhelmsman                                 starship\nhexyl                                    step\nhey                                      stolon\nhomeassistant-cli                        swagger-codegen@2\nhyperkit                                 swagger2markup-cli\ni2pd                                     swig@3\ni386-elf-binutils                        switch-lan-play\ni386-elf-gcc                             tass64\ni386-elf-gdb                             tdlib\ni386-elf-grub                            tealdeer\ninadyn                                   termshark\ninclude-what-you-use                     termtosvg\ninfrakit                                 terraform@0.11\ninlets                                   terraformer\ninteractive-rebase-tool                  terrahub\nipopt                                    tesseract-lang\nistioctl                                 tflint\nitk                                      thors-serializer\njanet                                    tmx\njinja2-cli                               topgrade\njmxterm                                  triangle\njp                                       ucloud\njson11                                   um\nk3d                                      ungit\nk6                                       up\nkahip                                    usbredir\nkcov                                     v2ray-plugin\nkim-api                                  vapoursynth-imwri\nktlint                                   vapoursynth-ocr\nkubeaudit                                vapoursynth-sub\nkubeprod                                 vfuse\nkubernetes-service-catalog-client        virgil\nkubeseal                                 volt\nkubespy                                  vulkan-headers\nkustomize                                wcslib\nlazydocker                               weaver\nlazygit                                  websocat\nleela-zero                               whalebrew\nlerna                                    wiremock-standalone\nlf                                       wsk\nlibcerf                                  wskdeploy\nlibevhtp                                 wtfutil\nlibgr                                    xcodegen\nlibgusb                                  xsimd\nlibkeccak                                yapf\nlibnova                                  yarn-completion\nlibopenmpt                               zabbix-cli\nlibpsl                                   zlog\nlibpulsar                                zrepl\nlibsignal-protocol-c                     zydis\n\n==> Updated Formulae\n\nautomake ✔                               libglademm\nboost ✔                                  libgnomecanvas\ncarthage ✔                               libgnomecanvasmm\ncgal ✔                                   libgosu\ncmake ✔                                  libgphoto2\ncoreutils ✔                              libgsf\nfreexl ✔                                 libgtop\ngdal ✔                                   libgweather\ngdbm ✔                                   libgxps\ngeos ✔                                   libhdhomerun\ngettext ✔                                libheif\ngiflib ✔                                 libhttpserver\ngit ✔                                    libhttpseverywhere\ngnupg ✔                                  libical\ngnutls ✔                                 libiconv\ngo ✔                                     libidl\nicu4c ✔                                  libimagequant\nlibassuan ✔                              libimobiledevice\nlibevent ✔                               libinfinity\nlibgcrypt ✔                              libiptcdata\nlibgeotiff ✔                             libiscsi\nlibgpg-error ✔                           libjson-rpc-cpp\nlibidn2 ✔                                libjwt\nlibpng ✔                                 liblas\nlibpq ✔                                  liblcf\nlibspatialite ✔                          liblinear\nlibssh ✔                                 liblo\nlibtasn1 ✔                               liblqr\nlibtiff ✔                                libltc\nlibxml2 ✔                                liblunar\nlibyaml ✔                                liblwgeom\nmaven ✔                                  libmaa\nmercurial ✔                              libmagic\nmpfr ✔                                   libmatio\nmsgpack ✔                                libmatroska\nnettle ✔                                 libmicrohttpd\nnode ✔                                   libmodbus\nnpth ✔                                   libmp3splt\nnumpy ✔                                  libmpd\nopenssl ✔                                libmpdclient\nopenssl@1.1 ✔                            libmspub\np11-kit ✔                                libmtp\npcre ✔                                   libmwaw\npostgis ✔                                libmxml\npostgresql ✔                             libmypaint\nproj ✔                                   libnfs\npyenv ✔                                  libnice\npython ✔                                 libnids\npython@2 ✔                               libnotify\nreadline ✔                               libntlm\nsfcgal ✔                                 libodfgen\nsqlite ✔                                 libofx\nswiftlint ✔                              libomp\nmate ✔                                  libopendkim\nwget ✔                                   libopkele\nxctool ✔                                 libopusenc\nabcde                                    libosinfo\nabcm2ps                                  libosip\nabcmidi                                  libosmium\nabook                                    libpcap\nabyss                                    libpeas\nace                                      libphonenumber\nack                                      libplctag\nacpica                                   libplist\nactivemq                                 libpointing\nactivemq-cpp                             libpqxx\nadr-tools                                libprotoident\nadvancecomp                              libproxy\nadvancemame                              libpst\nadwaita-icon-theme                       libqalculate\naescrypt-packetizer                      libquicktime\nafflib                                   librasterlite\nafio                                     libraw\nagda                                     librdkafka\n....\nlibglade\n\n==> Renamed Formulae\n\nark -> velero                            hh -> hstr\ncdiff -> ydiff                           mat -> mat2\nconfluent-oss -> confluent-platform      php72 -> php@7.2\ncrystal-lang -> crystal                  rebar@3 -> rebar3\ngloo-ctl -> glooctl                      resin-cli -> balena-cli\ngnatsd -> nats-server                    saltstack -> salt\ngtksourceview@4 -> gtksourceview4        todolist -> ultralist\ngutenberg -> zola                        transmission -> transmission-cli\n\n==> Deleted Formulae\n\namber                      hachoir-metadata           pldebugger\napple-gcc42                heroku                     protobuf@2.5\naptly-completion           hyper                      protobuf@2.6\nartifactory-cli-go         ib                         pxz\nasciinema2gif              js-test-driver             pyexiv2\nat-spi2-atk                juju-quickstart            qt@5.5\n...\ngv                         plan9port\n\nWarning: pkg-config 0.29.2 is already installed and up-to-date\n\nTo reinstall 0.29.2, run `brew reinstall pkg-config`\n\nError: libxml2 2.9.7 is already installed\n\nTo upgrade to 2.9.9, run `brew upgrade libxml2`\n$ curl -fsSL -o coala.zip $COALA_ZIP_URL/master\n...\n    byte-compiling /usr/local/lib/python3.6/site-packages/coalib/settings/SectionFilling.py to SectionFilling.cpython-36.pyc\n    byte-compiling /usr/local/lib/python3.6/site-packages/coalib/settings/Setting.py to Setting.cpython-36.pyc\n    byte-compiling /usr/local/lib/python3.6/site-packages/coalib/testing/__init__.py to __init__.cpython-36.pyc\n    byte-compiling /usr/local/lib/python3.6/site-packages/coalib/testing/BaseTestHelper.py to BaseTestHelper.cpython-36.pyc\n    byte-compiling /usr/local/lib/python3.6/site-packages/coalib/testing/BearTestHelper.py to BearTestHelper.cpython-36.pyc\n    byte-compiling /usr/local/lib/python3.6/site-packages/coalib/testing/LocalBearTestHelper.py to LocalBearTestHelper.cpython-36.pyc\n    running install_data\n\n    creating /usr/local/man\n\n    error: could not create '/usr/local/man': Permission denied\n\n    ----------------------------------------\n\nCommand \"/usr/local/opt/python/bin/python3.6 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/nz/vv4_9tw56nv9k3tkvyszvwg80000gn/T/pip-0kxa3e3k-build/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /var/folders/nz/vv4_9tw56nv9k3tkvyszvwg80000gn/T/pip-c2a7dw1a-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/nz/vv4_9tw56nv9k3tkvyszvwg80000gn/T/pip-0kxa3e3k-build/\n\nYou are using pip version 9.0.1, however version 19.2.2 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n\nThe command \"pip install coala.zip\" exited with 1.","comments":0,"createdAt":"2019-08-21T16:47:31Z","updatedAt":"2019-08-21T16:47:31Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566400033000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6056","number":6056,"title":"ConsoleInteractionTest.py: `test_ask_for_actions_and_apply` defined twice","body":"Change the name of one of the function to something more appropriate.\ndifficulty/newcomer","comments":5,"createdAt":"2019-08-05T14:31:59Z","updatedAt":"2019-08-21T15:07:13Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"assignee":{"login":"charfole","avatarUrl":"https://avatars1.githubusercontent.com/u/45024736?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566284414000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6061","number":6061,"title":"Newcomers_Guide.rst: Mention about the new forms available on the coala Community website for the contributors","body":"","comments":0,"createdAt":"2019-08-20T07:00:14Z","updatedAt":"2019-08-20T07:00:14Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566124609000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6050","number":6050,"title":"Setting.py: Include the memory location in all __repr__","body":"The default __repr__ on CPython emits the memory location of the object.  This should also be done for the coala overrides of __repr__ in Settings.","comments":1,"createdAt":"2019-08-03T13:58:12Z","updatedAt":"2019-08-18T10:36:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565581607000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6051","number":6051,"title":"Linter.py: Include the memory location in all __repr__","body":"The default __repr__ on CPython emits the memory location of the object. This should also be done for the coala overrides of __repr__ in Linter.","comments":3,"createdAt":"2019-08-03T13:59:39Z","updatedAt":"2019-08-12T03:46:47Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"avirlrma","avatarUrl":"https://avatars1.githubusercontent.com/u/22575238?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564842559000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6052","number":6052,"title":"Linter class objects are not consistent across multi-processing environment","body":"The Linter class instance is different on multi-processing environments, and some Linter hooks are not being run on every instance.\nThis is most evident on Windows, which doesnt use fork.\nIt is the cause of\ncoala/coala-bears#2937 (comment)\nThat usage dates back to v0.7.0 (May 2016) coala/coala-bears@3c23210","comments":0,"createdAt":"2019-08-03T14:12:00Z","updatedAt":"2019-08-03T14:29:19Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"},{"name":"importance/high","color":"eb6420"},{"name":"platform/windows","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565161010000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6053","number":6053,"title":"pytest fails to run: TypeError: attrib() got an unexpected keyword argument 'converter'","body":"https://travis-ci.org/coala/coala/jobs/567291364\n$ py.test\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.6.3/bin/py.test\", line 7, in <module>\n    from pytest import main\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pytest.py\", line 10, in <module>\n    from _pytest.fixtures import fixture, yield_fixture\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/fixtures.py\", line 15, in <module>\n    from _pytest import nodes\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/nodes.py\", line 11, in <module>\n    from _pytest.mark.structures import NodeKeywords, MarkInfo\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/mark/__init__.py\", line 4, in <module>\n    from .structures import (\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/mark/structures.py\", line 306, in <module>\n    class MarkInfo(object):\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/mark/structures.py\", line 309, in MarkInfo\n    _marks = attr.ib(converter=list)\nTypeError: attrib() got an unexpected keyword argument 'converter'","comments":4,"createdAt":"2019-08-04T01:17:20Z","updatedAt":"2019-08-07T06:56:50Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/dependencies","color":"96f7bf"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565015577000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6034","number":6034,"title":"ConsoleInteraction.py: `color_letter` function is buggy","body":"color_letter function in ConsoleInteraction module does not work as expected when there is an upper case letter after the upper case letter in parenthesis.\ne.g. If input line is Edit (C)ommit Message then output is Edit (M)ommit Message","comments":3,"createdAt":"2019-06-22T12:45:11Z","updatedAt":"2019-08-05T14:32:57Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"assignee":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565922829000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6045","number":6045,"title":"Coala's AGPL coverage ","body":"Hi Coala maintainers,\nCan you help clarify AGPL coverage in Coala's case? Specifically, are the modifications made by Coala, which would get put into the input source code, covered by AGPL?\nYour clarification will help evaluate the technology selection. I'd be helpful If you could clarify your interpretation in the Q&A page.\nThanks,\nBrian","comments":2,"createdAt":"2019-07-22T16:13:20Z","updatedAt":"2019-08-16T02:33:49Z","closedAt":null,"state":"open","user":{"login":"briankhsieh","avatarUrl":"https://avatars2.githubusercontent.com/u/1657283?v=4"},"owner":{"login":"briankhsieh","avatarUrl":"https://avatars2.githubusercontent.com/u/1657283?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1563894092000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6047","number":6047,"title":"No support for Ignore Comment in C(gcc)","body":"","comments":0,"createdAt":"2019-07-23T15:00:34Z","updatedAt":"2019-07-23T15:01:32Z","closedAt":null,"state":"open","user":{"login":"hv7214","avatarUrl":"https://avatars3.githubusercontent.com/u/42354803?v=4"},"owner":{"login":"hv7214","avatarUrl":"https://avatars3.githubusercontent.com/u/42354803?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564881098000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5985","number":5985,"title":"Appveyor build fails","body":"Appveyor build is failing due to the recent changes in coalib\\misc\\Asyncio.py in the commit 58b9f41 . It is due QuotesBear.\nThe build report is here\nThe snippet of error:\nExecuting section python...\n**** QuotesBear [Section <empty> | Severity NORMAL] ****\n!    ! You do not use the preferred quotation marks. Preferred mark: '\n[----] c:\\projects\\coala\\coalib\\misc\\Asyncio.py\n[++++] c:\\projects\\coala\\coalib\\misc\\Asyncio.py\n[   1] \"\"\"Asyncio backports for Python 3.4.3 compatibility.\"\"\"\n[   1] '\"\"Asyncio backports for Python 3.4.3 compatibility.\"\"'\n\narea/ci difficulty/newcomer","comments":13,"createdAt":"2019-02-10T15:51:08Z","updatedAt":"2019-08-04T01:11:38Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566393251000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5991","number":5991,"title":"coalaTest.py: Random timeouts on AppVeyor","body":"coalaTest.py occassionaly times out on AppVeyor. The below log is for this PR while the same test passed here on my branch.\ntests\\coalaTest.py ......\n+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++\n~~~~~~~~~~~~~~~~~~~~~~ Stack of QueueFeederThread (1336) ~~~~~~~~~~~~~~~~~~~~~~~\n  File \"c:\\python34\\lib\\threading.py\", line 879, in _bootstrap\n    self._bootstrap_inner()\n  File \"c:\\python34\\lib\\threading.py\", line 911, in _bootstrap_inner\n    self.run()\n  File \"c:\\python34\\lib\\threading.py\", line 859, in run\n    self._target(*self._args, **self._kwargs)\n  File \"c:\\python34\\lib\\multiprocessing\\queues.py\", line 249, in _feed\n    send_bytes(obj)\n  File \"c:\\python34\\lib\\multiprocessing\\connection.py\", line 200, in send_bytes\n    self._send_bytes(m[offset:offset + size])\n  File \"c:\\python34\\lib\\multiprocessing\\connection.py\", line 284, in _send_bytes\n    [ov.event], False, INFINITE)\n~~~~~~~~~~~~~~~~~~~~~~~~~~ Stack of MainThread (1664) ~~~~~~~~~~~~~~~~~~~~~~~~~~\n  File \"c:\\python34\\lib\\runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"c:\\python34\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Python34\\Scripts\\py.test.exe\\__main__.py\", line 9, in <module>\n    sys.exit(main())\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 64, in main\n    return config.hook.pytest_cmdline_main(config=config)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\hooks.py\", line 258, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 67, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 61, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 208, in pytest_cmdline_main\n    return wrap_session(config, _main)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 178, in wrap_session\n    session.exitstatus = doit(config, session) or 0\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 215, in _main\n    config.hook.pytest_runtestloop(session=session)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\hooks.py\", line 258, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 67, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 61, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 236, in pytest_runtestloop\n    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\hooks.py\", line 258, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 67, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 61, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 64, in pytest_runtest_protocol\n    runtestprotocol(item, nextitem=nextitem)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 79, in runtestprotocol\n    reports.append(call_and_report(item, \"call\", log))\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 159, in call_and_report\n    call = call_runtest_hook(item, when, **kwds)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 183, in call_runtest_hook\n    treat_keyboard_interrupt_as_exception=item.config.getvalue(\"usepdb\"),\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 199, in __init__\n    self.result = func()\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 181, in <lambda>\n    lambda: ihook(item=item, **kwds),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\hooks.py\", line 258, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 67, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\manager.py\", line 61, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 109, in pytest_runtest_call\n    item.runtest()\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\unittest.py\", line 184, in runtest\n    self._testcase(result=self)\n  File \"c:\\python34\\lib\\unittest\\case.py\", line 628, in __call__\n    return self.run(*args, **kwds)\n  File \"c:\\python34\\lib\\unittest\\case.py\", line 580, in run\n    testMethod()\n  File \"C:\\projects\\coala\\tests\\coalaTest.py\", line 351, in test_coala_no_unexpected_warnings\n    coala.main, 'coala')\n  File \"C:\\projects\\coala\\tests\\TestUtilities.py\", line 122, in execute_coala\n    retval = func(debug=debug)\n  File \"C:\\projects\\coala\\coalib\\coala.py\", line 121, in main\n    return mode_normal(console_printer, None, args, debug=debug)\n  File \"C:\\projects\\coala\\coalib\\coala_modes.py\", line 29, in mode_normal\n    debug=debug)\n  File \"C:\\projects\\coala\\coalib\\coala_main.py\", line 198, in run_coala\n    False))\n  File \"C:\\projects\\coala\\coalib\\processes\\Processing.py\", line 808, in execute_section\n    runner.start()\n  File \"c:\\python34\\lib\\multiprocessing\\process.py\", line 105, in start\n    self._popen = self._Popen(self)\n  File \"c:\\python34\\lib\\multiprocessing\\context.py\", line 212, in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n  File \"c:\\python34\\lib\\multiprocessing\\context.py\", line 313, in _Popen\n    return Popen(process_obj)\n  File \"c:\\python34\\lib\\multiprocessing\\popen_spawn_win32.py\", line 66, in __init__\n    reduction.dump(process_obj, to_child)\n  File \"c:\\python34\\lib\\multiprocessing\\reduction.py\", line 59, in dump\n    ForkingPickler(file, protocol).dump(obj)\n+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++\nCommand exited with code 1","comments":4,"createdAt":"2019-02-14T09:16:11Z","updatedAt":"2019-08-21T13:14:11Z","closedAt":null,"state":"open","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"platform/windows","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564103923000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5983","number":5983,"title":"Setting.py: Change property name","body":"The line_number property for Setting class should be changed to start_line_number as it is the starting line number of a setting.\ndifficulty/newcomer","comments":8,"createdAt":"2019-02-10T06:04:00Z","updatedAt":"2019-07-26T01:18:43Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566392989000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5674","number":5674,"title":"TestUtilities.execute_coala should check for timeouts","body":"If there was a timeout during a test using execute_coala, pytest-timeout will emit Failed: Timeout >35.0s (number may change) and the timeout failure will be lost inside execute_coala/bear_test_module.\nThe test module will continue with the assertions, and cause various errors, as these coala output will be in a strange incomplete state.\nThis is one of the problems affecting #5571 and #5390\nA quick workaround is to detect Failed: Timeout is stderr inside execute_coala and re-raise the problem with the complete stderr and stdout for debugging purposes.","comments":4,"createdAt":"2018-07-28T02:19:42Z","updatedAt":"2019-08-21T13:09:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564881144000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5722","number":5722,"title":"LocalBearTestHelper.check_results allow regex as message text","body":"Sometimes the message text varies based on linter version, as we see at coala/coala-bears#2678,  or is incredibly long and not helpful to match the entire text.\nIt should be possible to specify only a regex to match the message text.","comments":4,"createdAt":"2018-08-17T13:48:14Z","updatedAt":"2019-08-04T01:12:24Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565173620000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4863","number":4863,"title":"ConsoleInteraction.ask_for_actions_and_apply: No check for invalid apply_single","body":"If apply_single refers to some non-existent action, just nothing happens. The function just returns with True:\n\n  \n    \n      coala/coalib/output/ConsoleInteraction.py\n    \n    \n        Lines 747 to 827\n      in\n      8da058e\n    \n    \n    \n    \n\n        \n          \n           def ask_for_action_and_apply(console_printer, \n        \n\n        \n          \n                                        section, \n        \n\n        \n          \n                                        metadata_list, \n        \n\n        \n          \n                                        action_dict, \n        \n\n        \n          \n                                        failed_actions, \n        \n\n        \n          \n                                        result, \n        \n\n        \n          \n                                        file_diff_dict, \n        \n\n        \n          \n                                        file_dict, \n        \n\n        \n          \n                                        applied_actions, \n        \n\n        \n          \n                                        apply_single=False): \n        \n\n        \n          \n               \"\"\" \n        \n\n        \n          \n               Asks the user for an action and applies it. \n        \n\n        \n          \n            \n        \n\n        \n          \n               :param console_printer: Object to print messages on the console. \n        \n\n        \n          \n               :param section:         Currently active section. \n        \n\n        \n          \n               :param metadata_list:   Contains metadata for all the actions. \n        \n\n        \n          \n               :param action_dict:     Contains the action names as keys and their \n        \n\n        \n          \n                                       references as values. \n        \n\n        \n          \n               :param failed_actions:  A set of all actions that have failed. A failed \n        \n\n        \n          \n                                       action remains in the list until it is successfully \n        \n\n        \n          \n                                       executed. \n        \n\n        \n          \n               :param result:          Result corresponding to the actions. \n        \n\n        \n          \n               :param file_diff_dict:  If it is an action which applies a patch, this \n        \n\n        \n          \n                                       contains the diff of the patch to be applied to \n        \n\n        \n          \n                                       the file with filename as keys. \n        \n\n        \n          \n               :param file_dict:       Dictionary with filename as keys and its contents \n        \n\n        \n          \n                                       as values. \n        \n\n        \n          \n               :param apply_single:    The action that should be applied for all results. \n        \n\n        \n          \n                                       If it's not selected, has a value of False. \n        \n\n        \n          \n               :param applied_actions: A dictionary that contains the result, file_dict, \n        \n\n        \n          \n                                       file_diff_dict and the section for an action. \n        \n\n        \n          \n               :return:                Returns a boolean value. True will be returned, if \n        \n\n        \n          \n                                       it makes sense that the user may choose to execute \n        \n\n        \n          \n                                       another action, False otherwise. \n        \n\n        \n          \n               \"\"\" \n        \n\n        \n          \n               actions_desc, actions_name = choose_action(console_printer, metadata_list, \n        \n\n        \n          \n                                                          apply_single) \n        \n\n        \n          \n            \n        \n\n        \n          \n               if apply_single: \n        \n\n        \n          \n                   if apply_single == 'Do (N)othing': \n        \n\n        \n          \n                       return False \n        \n\n        \n          \n                   for index, action_details in enumerate(metadata_list, 1): \n        \n\n        \n          \n                       if apply_single == action_details.desc: \n        \n\n        \n          \n                           action_name, section = get_action_info( \n        \n\n        \n          \n                               section, metadata_list[index - 1], failed_actions) \n        \n\n        \n          \n                           chosen_action = action_dict[action_details.name] \n        \n\n        \n          \n                           try_to_apply_action(action_name, \n        \n\n        \n          \n                                               chosen_action, \n        \n\n        \n          \n                                               console_printer, \n        \n\n        \n          \n                                               section, \n        \n\n        \n          \n                                               metadata_list, \n        \n\n        \n          \n                                               action_dict, \n        \n\n        \n          \n                                               failed_actions, \n        \n\n        \n          \n                                               result, \n        \n\n        \n          \n                                               file_diff_dict, \n        \n\n        \n          \n                                               file_dict, \n        \n\n        \n          \n                                               applied_actions) \n        \n\n        \n          \n               else: \n        \n\n        \n          \n                   for action_choice, action_choice_name in zip(actions_desc, \n        \n\n        \n          \n                                                                actions_name): \n        \n\n        \n          \n                       if action_choice == 'Do (N)othing': \n        \n\n        \n          \n                           return False \n        \n\n        \n          \n                       chosen_action = action_dict[action_choice_name] \n        \n\n        \n          \n                       action_choice_made = action_choice \n        \n\n        \n          \n                       for index, action_details in enumerate(metadata_list, 1): \n        \n\n        \n          \n                           if action_choice_made in action_details.desc: \n        \n\n        \n          \n                               action_name, section = get_action_info( \n        \n\n        \n          \n                                   section, metadata_list[index-1], failed_actions) \n        \n\n        \n          \n                               try_to_apply_action(action_name, \n        \n\n        \n          \n                                                   chosen_action, \n        \n\n        \n          \n                                                   console_printer, \n        \n\n        \n          \n                                                   section, \n        \n\n        \n          \n                                                   metadata_list, \n        \n\n        \n          \n                                                   action_dict, \n        \n\n        \n          \n                                                   failed_actions, \n        \n\n        \n          \n                                                   result, \n        \n\n        \n          \n                                                   file_diff_dict, \n        \n\n        \n          \n                                                   file_dict, \n        \n\n        \n          \n                                                   applied_actions) \n        \n\n        \n          \n            \n        \n\n        \n          \n               return True \n        \n    \n  \n\n\nThis allowed hacks like setting apply_single=True in the 2nd variant of ConsoleInteractionTest.test_acquire_actions_and_apply (which is getting properly renamed by #4860 BTW), which then causes further problems in PRs like #4179 (comment)\nThe above test needs anyway some redesign according to #4862 whereby apply_single=True should just not be used\nask_for_actions_and_apply needs to raise some exception on invalid apply_single values\ncc @mrtes @Nosferatul @Adrianzatreanu @yukiisbored","comments":6,"createdAt":"2017-11-12T16:56:27Z","updatedAt":"2019-08-07T10:27:00Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565967372000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4542","number":4542,"title":"Implement Error reporting mechanism for DocumentationAPI","body":"we have to go around implementing a error reporting mechanism for the doc linting apis .\nOpened by @damngamerz at gitter//damngamerz","comments":0,"createdAt":"2017-07-23T14:17:52Z","updatedAt":"2019-08-16T14:56:12Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566393685000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4208","number":4208,"title":"Unknown exception","body":"Hey Coalas,\nBrand new bug here:\nhttps://travis-ci.org/travis-ci/docs-travis-ci-com/jobs/230418873\n$ coala --non-interactive Language\n[ERROR][16:38:59] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][16:38:59] Exception was:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2801, in _dep_map\n    return self.__dep_map\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2658, in __getattr__\n    raise AttributeError(attr)\nAttributeError: _DistInfoDistribution__dep_map\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/coala_main.py\", line 80, in run_coala\n    arg_list=arg_list)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/settings/ConfigurationGathering.py\", line 363, in gather_configuration\n    log_printer)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/settings/SectionFilling.py\", line 31, in fill_settings\n    bear_dirs = section.bear_dirs()\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/settings/Section.py\", line 74, in bear_dirs\n    for bear_dir in collect_registered_bears_dirs('coalabears')]\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/collecting/Collectors.py\", line 303, in collect_registered_bears_dirs\n    registered_package = ep.load()\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2354, in load\n    self.require(*args, **kwargs)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2371, in require\n    items = working_set.resolve(reqs, env, installer)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 847, in resolve\n    new_requirements = dist.requires(req.extras)[::-1]\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2602, in requires\n    dm = self._dep_map\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2803, in _dep_map\n    self.__dep_map = self._compute_dependencies()\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2836, in _compute_dependencies\n    common = frozenset(reqs_for_extra(None))\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2833, in reqs_for_extra\n    if req.marker_fn(override={'extra':extra}):\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/_markerlib/markers.py\", line 113, in marker_fn\n    return eval(compiled_marker, environment)\n  File \"<environment marker>\", line 1, in <module>\nNameError: name 'platform_system' is not defined","comments":9,"createdAt":"2017-05-09T16:43:07Z","updatedAt":"2019-08-21T13:21:25Z","closedAt":null,"state":"open","user":{"login":"plaindocs","avatarUrl":"https://avatars2.githubusercontent.com/u/95874?v=4"},"owner":{"login":"plaindocs","avatarUrl":"https://avatars2.githubusercontent.com/u/95874?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566541397000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2954","number":2954,"title":"HgCommitBearTest: BitBucket hosting of hg repos ends June 1 2020","body":"https://bitbucket.org/blog/sunsetting-mercurial-support-in-bitbucket\nIf another mercurial host can be used for tests, that is an option, otherwise we can disable the tests and lower the required coverage to 0% (.ci/generate_coverage_thresholds.py), or....\nKill the bear!\nlabel: un-bear-proposal","comments":1,"createdAt":"2019-08-22T14:47:33Z","updatedAt":"2019-08-23T06:23:17Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/bears","color":"ededed"},{"name":"area/genericbears","color":"D01975"},{"name":"area/tests","color":"c5def5"},{"name":"upstream","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566461189000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2950","number":2950,"title":"LineCountBear fails for symbolic links","body":"In projects repo\ndata/locale/en/projects/README.md\n\n**** LineCountBear [Section: linecount | Severity: NORMAL] ****\n\n!    ! This file has 0 lines, while 1 lines are required.\n\n[WARNING][03:28:48] LineCountBear: This result has no patch attached.\n\n_projects/README.md\n\n**** LineCountBear [Section: linecount | Severity: NORMAL] ****\n\n!    ! This file has 0 lines, while 1 lines are required.","comments":1,"createdAt":"2019-08-22T04:01:30Z","updatedAt":"2019-08-22T08:06:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"type/bug","color":"e11d21"},{"name":"upstream","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566451555000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2952","number":2952,"title":"InvalidLinkBear: Support markup for ignored broken urls","body":"Sometimes links are permanently broken, but they need to be preserved.\nIn markdown this could be achieved by requiring that they are rendered as code, i.e. surrounded in backticks","comments":0,"createdAt":"2019-08-22T05:25:55Z","updatedAt":"2019-08-22T05:25:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/genericbears","color":"D01975"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564893312000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2943","number":2943,"title":"phpmd error message change breaking CI","body":"https://ci.appveyor.com/project/jayvdb/coala-bears/builds/26448422/job/rlaneuwxk1i4lfwc#L1526\ntests\\php\\PHPMessDetectorBearTest.py F\n______________ PHPMessDetectorBearTest.test_cleancode_violation _______________\nself = <tests.php.PHPMessDetectorBearTest.PHPMessDetectorBearTest testMethod=test_cleancode_violation>\n    def test_cleancode_violation(self):\n        file_contents = load_testfile('cleancode_violation.php')\n        self.section.append(Setting('phpmd_rulesets', 'cleancode'))\n        self.check_results(\n            self.uut,\n            file_contents,\n            [Result.from_values('PHPMessDetectorBear',\n                                'The method bar uses an else expression. Else '\n                                'is never necessary and you can simplify the '\n                                'code to work without else.',\n                                file=get_testfile_path(\n                                    'cleancode_violation.php'),\n                                line=8)],\n>           filename=get_testfile_path('cleancode_violation.php'))\ntests\\php\\PHPMessDetectorBearTest.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\python\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:285: in check_results\n    sorted(bear_output), sorted(results))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nself = <tests.php.PHPMessDetectorBearTest.PHPMessDetectorBearTest testMethod=test_cleancode_violation>\nobserved_result = [<Result object(id=0x62f2812100024261a4e04b36c73fa491, origin='PHPMessDetectorBear', affected_code=(<SourceRange objec...ly not necessary and you can simplify the code by not using them.', aspect=NoneType, applied_actions={}) at 0x61ebf30>]\nexpected_result = [<Result object(id=0xa9f4fd3617d04807bdad336485fd7a6a, origin='PHPMessDetectorBear', affected_code=(<SourceRange objec...ver necessary and you can simplify the code to work without else.', aspect=NoneType, applied_actions={}) at 0x60e2510>]\n    def assertComparableObjectsEqual(self, observed_result, expected_result):\n        if len(observed_result) == len(expected_result):\n            messages = ''\n            for observed, expected in zip(observed_result, expected_result):\n                if (isinstance(observed, Comparable)\n                    and isinstance(expected, Comparable)) and (\n                            type(observed) is type(expected)):\n                    for attribute in type(observed).__compare_fields__:\n                        try:\n                            self.assertEqual(\n                                getattr(observed, attribute),\n                                getattr(expected, attribute),\n                                msg='{} mismatch.'.format(attribute))\n                        except AssertionError as ex:\n                            messages += (str(ex) + '\\n\\n')\n                else:\n                    self.assertEqual(observed_result, expected_result)\n            if messages:\n>               raise AssertionError(messages)\nE               AssertionError: 'The [36 chars]Else clauses are basically not necessary and y[39 chars]hem.' != 'The [36 chars]Else is never necessary and you can simplify t[25 chars]lse.'\nE               - The method bar uses an else expression. Else clauses are basically not necessary and you can simplify the code by not using them.\nE               ?                                              ^^^^  ^^^ ---------------                                         ^^^^ ^^^^ ---   ^\nE               + The method bar uses an else expression. Else is never necessary and you can simplify the code to work without else.\nE               ?                                              ^ ++ ^^                                          ^ ^^^^^^^   ++++ ^^^\nE                : message_base mismatch.\nc:\\python\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:136: AssertionError\n---------------------------- Captured stderr call -----------------------------\nWARNING:root:PHPMessDetectorBear: Exit code 2\nWe had an issue in coala core to allow regex in our tests, to allow more flexibility for cases like that.\nProbably worth doing that now, if not already nearly done, rather than trying to version check phpmd and expect different strings for different versions.","comments":3,"createdAt":"2019-08-03T16:34:19Z","updatedAt":"2019-08-04T04:35:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"area/tests","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565068461000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2944","number":2944,"title":"XMLBearDTDUrlTest.test_valid_files consistently fails on Travis Windows","body":"tests\\xml2\\XMLBearTest.py .........F\n_____________________ XMLBearDTDUrlTest.test_valid_files ______________________\nself = <coalib.testing.LocalBearTestHelper.verify_local_bear.<locals>.LocalBearTest testMethod=test_valid_files>\n    def test_valid_files(self):\n        self.assertIsInstance(valid_files, (list, tuple))\n        for file in valid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=True,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\nc:\\python36\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:401: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\python36\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:174: in check_validity\n    aspects=aspects,\nc:\\python36\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:287: in check_results\n    self.assertComparableObjectsEqual(bear_output, results)\nc:\\python36\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n    self.assertEqual(observed_result, expected_result)\nE   AssertionError: Lists differ: [<Result object(id=0xff5cce720b7a45db983bd[1142 chars]c88>] != []\nE   \nE   First list contains 2 additional elements.\nE   First extra element 0:\nE   <Result object(id=0xff5cce720b7a45db983bd5642ae630e8, origin='XMLBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\travis\\\\AppData\\\\Local\\\\Temp\\\\tmp0f0cd5do.xml', line=134, column=None) at 0x1cd419d1080>, end=<SourcePosition object(file='C:\\\\Users\\\\travis\\\\AppData\\\\Local\\\\Temp\\\\tmp0f0cd5do.xml', line=134, column=None) at 0x1cd41978f60>) at 0x1cd419d14e0>,), severity=NORMAL, confidence=100, message='failed to load external entity \"http://docs.oasis-open.org/dita/v1.0.1/dtd/highlightDomain.mod\"', aspect=NoneType, applied_actions={}) at 0x1cd419781d0>\nE   \nE   Diff is 1200 characters long. Set self.maxDiff to None to see it.\ntests\\xml2\\XMLBearTest.py ..                                             [100%]\nhttps://travis-ci.org/coala/coala-bears/jobs/567956795\nOther times in fails with a timeout.  The timeout was increased to 120 for the above log result.\nhttps://travis-ci.org/jayvdb/coala-bears/jobs/567916630\nhttps://travis-ci.org/jayvdb/coala-bears/jobs/567839932","comments":2,"createdAt":"2019-08-06T00:22:31Z","updatedAt":"2019-08-06T05:14:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565185197000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2945","number":2945,"title":"DuplicateFileBear.py: Applying IgnoreResultAction gives error","body":"Applying IgnoreResultAction on results originating from DuplicateFileBear gives the following error\n**** DuplicateFileBear [Section: duplicate | Severity: INFO] ****\n!    ! File /home/akshat/coala-repos/coala-tutorial/src/add.py is identical to File /home/akshat/coala-repos/coala-tutorial/src/dup_add.py\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 2\n[ERROR][19:02:50] Failed to execute the action IgnoreResultAction with error: '/home/akshat/coala-repos/coala-tutorial/src/add.py'.\n\nIgnoreResultAction should not even be applicable in this since DuplicateFileBear is a GlobalBear. It is applicable because of the file argument passed when it is yielded. Removing it should fix it.","comments":0,"createdAt":"2019-08-07T13:38:00Z","updatedAt":"2019-08-07T13:39:57Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566452983000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2949","number":2949,"title":"HTMLLintBear use_spaces added without a default","body":"#2073 breaks existing use of the bear by adding a setting without a default.\nBefore that PR, the tool was checking for spaces, so that should have been the default.\nThis broke projects repo.","comments":0,"createdAt":"2019-08-22T01:28:43Z","updatedAt":"2019-08-22T05:49:43Z","closedAt":"2019-08-22T05:49:43Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564842999000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2933","number":2933,"title":"JavaPMDBear wrong execution command on Windows","body":"[DEBUG][17:09:36] Running 'bash C:\\Users\\amolg\\pmd-bin-6.16.0\\bin\\pmd.BAT pmd -R java-basic,java-braces,java-clone,java-codesize,java-imports,java-naming,java-unnecessary,java-unusedcode -d c:\\users\\amolg\\documents\\github\\coala-jetbrains\\src\\main\\java\\io\\coala\\jetbrains\\utils\\CodeAnalysisIssue.java'\nWARNING:root:JavaPMDBear: Discarded stderr: /bin/bash: C:Usersamolgpmd-bin-6.16.0binpmd.BAT: No such file or directory\n\nWARNING:root:JavaPMDBear: Exit code 127\n\nJavaPMDBear is generating\nbash C:\\Users\\amolg\\pmd-bin-6.16.0\\bin\\pmd.BAT pmd -R java-basic,java-braces,java-clone,java-codesize,java-imports,java-naming,java-unnecessary,java-unusedcode -d c:\\users\\amolg\\documents\\github\\coala-jetbrains\\src\\main\\java\\io\\coala\\jetbrains\\utils\\CodeAnalysisIssue.java\n\ncommand on windows.\nThe actual generated (and working) command should be (minus the bash prefix and pmd argument)\nC:\\Users\\amolg\\pmd-bin-6.16.0\\bin\\pmd.BAT -R java-basic,java-braces,java-clone,java-codesize,java-imports,java-naming,java-unnecessary,java-unusedcode -d c:\\users\\amolg\\documents\\github\\coala-jetbrains\\src\\main\\java\\io\\coala\\jetbrains\\utils\\CodeAnalysisIssue.java\n\nWindows 10 build 18362.207","comments":1,"createdAt":"2019-07-08T11:44:04Z","updatedAt":"2019-08-03T14:36:39Z","closedAt":"2019-08-03T14:36:38Z","state":"closed","user":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"owner":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563934924000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2936","number":2936,"title":".ci/generate_bear_metadata.py: incorrect \"overrides\" value","body":"Running moban as .ci/generate_bear_metadata.py throws\nWarning: Both package-manager-requirements.yaml and /home/areebbeigh/.cache/moban/repos/mobans/package-manager-requirements.yaml does not exist\n\nThis is because running ci/generate_bear_metadata.py sets overrides: package-manager-requirements.yaml whereas it should be overrides: pm-requirements.yaml.\nRequires a simple change in:\n\n  \n    \n      coala-bears/.ci/generate_bear_metadata.py\n    \n    \n         Line 461\n      in\n      afb068b\n    \n    \n    \n    \n\n        \n          \n           requirements['overrides'] = 'package-manager-requirements.yaml'","comments":0,"createdAt":"2019-07-22T14:05:45Z","updatedAt":"2019-07-24T02:22:04Z","closedAt":"2019-07-24T02:22:04Z","state":"closed","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"assignee":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565163469000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2937","number":2937,"title":"CPDBear failing on Windows, both AppVeyor and Travis Windows","body":"Builds are consistently failing with four errors like\n____________________ CPDBearTest.test_unsupported_language ____________________\nForbidden skipped test - Skipped: PMD is missing. Make sure to install it from <https://pmd.github.io/>.\n\nhttps://ci.appveyor.com/project/coala/coala-bears/build/job/tqv9oos3f43wspkt and https://travis-ci.org/coala/coala-bears/jobs/562576591\nAlmost certainly an error in the final phase of #2910 , when I was culling unneeded stuff, which was masked by the caching.","comments":4,"createdAt":"2019-07-24T02:15:07Z","updatedAt":"2019-08-07T07:37:49Z","closedAt":"2019-08-07T07:37:49Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/bug","color":"e11d21"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564363685000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2938","number":2938,"title":"Bear Proposal: pgsanity","body":"https://github.com/markdrago/pgsanity","comments":0,"createdAt":"2019-07-29T01:28:05Z","updatedAt":"2019-07-29T01:28:05Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565163469000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2940","number":2940,"title":"lxml 4.4.0 dropped support for Python 3.4","body":"Need to cap below 4.4.0.","comments":9,"createdAt":"2019-07-30T03:00:29Z","updatedAt":"2019-08-07T07:37:49Z","closedAt":"2019-08-07T07:37:49Z","state":"closed","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"assignee":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564471805000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2941","number":2941,"title":"Dependency [guess_language-spirit] incorrect in bear-requirements.txt on PyPi [0.11.1]","body":"Hi,\nI am having issues installing coala-bears on my Ubuntu 16.04 LTS host. Essentially complaining about one specific dependency namely:\n\"ERROR: Could not find a version that satisfies the requirement guess-language-spirit~=0.5.2 (from coala-bears) (from versions: none)\nERROR: No matching distribution found for guess-language-spirit~=0.5.2 (from coala-bears)\"\nMy environment details:\nPython 3.7.3\npip 19.2.1 from /usr/local/lib/python3.7/site-packages/pip (python 3.7)\nCommand to install \"pip3 install coala-bears\".\nFYI: wWhen looking at the source on PyPi for coala-bears, I noticed in the \"bears-requirements.txt\" file \"guess-language-spirit~=0.5.2\" does not look correct. I believe it should be:\n\"guess_language-spirit\"\n-> Reference: https://pypi.org/project/guess_language-spirit/","comments":1,"createdAt":"2019-07-30T05:11:05Z","updatedAt":"2019-07-30T07:30:05Z","closedAt":"2019-07-30T07:30:05Z","state":"closed","user":{"login":"ryanleonbutler","avatarUrl":"https://avatars3.githubusercontent.com/u/32143470?v=4"},"owner":{"login":"ryanleonbutler","avatarUrl":"https://avatars3.githubusercontent.com/u/32143470?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563934924000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2873","number":2873,"title":"YapfBearTest.test_allow_multiline_lambdas fails with yapf 0.24","body":"[  452s] =================================== FAILURES ===================================\n[  452s] __________________ YapfBearTest.test_allow_multiline_lambdas ___________________\n[  452s] \n[  452s] self = <tests.python.YapfBearTest.YapfBearTest testMethod=test_allow_multiline_lambdas>\n[  452s] \n[  452s]     def test_allow_multiline_lambdas(self):\n[  452s]         self.section.append(Setting('allow_multiline_lambdas', True))\n[  452s]         self.check_validity(self.uut,\n[  452s]                             ['func(a, lambda xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n[  452s] >                            'xxxxxxxxxxxxxxxxxx:\\n', '     xxxxxxxxxxxxxxxxxx'\n[  452s]                              'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx + 222222222)\\n'\n[  452s]                              ])\n[  452s] \n[  452s] tests/python/YapfBearTest.py:74: \n[  452s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[  452s] /usr/lib/python3.7/site-packages/coalib/testing/LocalBearTestHelper.py:174: in check_validity\n[  452s]     aspects=aspects,\n[  452s] /usr/lib/python3.7/site-packages/coalib/testing/LocalBearTestHelper.py:287: in check_results\n[  452s]     self.assertComparableObjectsEqual(bear_output, results)\n[  452s] /usr/lib/python3.7/site-packages/coalib/testing/LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n[  452s]     self.assertEqual(observed_result, expected_result)\n[  452s] E   AssertionError: Lists differ: [<Result object(id=0x603c7610717443dabfe29[424 chars]b70>] != []\n[  452s] E   \n[  452s] E   First list contains 1 additional elements.\n[  452s] E   First extra element 0:\n[  452s] E   <Result object(id=0x603c7610717443dabfe29d338608073, origin='YapfBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=1, column=None) at 0x7fbdd8593f98>, end=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=2, column=None) at 0x7fbdd862cac8>) at 0x7fbdd862c710>,), severity=NORMAL, confidence=100, message='The code does not comply with the settings provided.', aspect=NoneType, applied_actions={}) at 0x7fbdd862cb70>\n[  452s] E   \n[  452s] E   - [<Result object(id=0x603c7610717443dabfe29d338608073, origin='YapfBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=1, column=None) at 0x7fbdd8593f98>, end=<SourcePosition object(file='/tmp/tmpi0bcqkax', line=2, column=None) at 0x7fbdd862cac8>) at 0x7fbdd862c710>,), severity=NORMAL, confidence=100, message='The code does not comply with the settings provided.', aspect=NoneType, applied_actions={}) at 0x7fbdd862cb70>]\n[  452s] E   + []\n\nWe should include support for 0.24, and the latest 0.26","comments":3,"createdAt":"2019-02-13T02:46:39Z","updatedAt":"2019-07-24T02:22:04Z","closedAt":"2019-07-24T02:22:04Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565163469000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2908","number":2908,"title":"choco installed pmd doesnt work","body":"choco creates .exe shims to .bat files, and the pmd and cpd bears use bash which cant load .bat files.\nchoco install --ignore-dependencies --yes pmd\nChocolatey v0.10.11\nInstalling the following packages:\npmd\nBy installing you accept licenses for the packages.\nProgress: Downloading pmd 6.12.0... 100%\npmd v6.12.0 [Approved]\npmd package files install completed. Performing other installation steps.\nDownloading pmd \n  from 'https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.12.0/pmd-bin-6.12.0.zip'\nProgress: 100% - Completed download of C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\chocolatey\\pmd\\6.12.0\\pmd-bin-6.12.0.zip (43.95 MB).\nDownload of pmd-bin-6.12.0.zip (43.95 MB) completed.\nHashes match.\nExtracting C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\chocolatey\\pmd\\6.12.0\\pmd-bin-6.12.0.zip to C:\\ProgramData\\chocolatey\\lib\\pmd...\nC:\\ProgramData\\chocolatey\\lib\\pmd\nAdded C:\\ProgramData\\chocolatey\\bin\\pmd.exe shim pointed to '..\\lib\\pmd\\pmd-bin-6.12.0\\bin\\pmd.bat'.\nAdded C:\\ProgramData\\chocolatey\\bin\\cpd.exe shim pointed to '..\\lib\\pmd\\pmd-bin-6.12.0\\bin\\cpd.bat'.","comments":0,"createdAt":"2019-05-25T16:25:52Z","updatedAt":"2019-08-07T07:37:49Z","closedAt":"2019-08-07T07:37:49Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565016685000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1776","number":1776,"title":"deps.sh: Don't download dart-sdk if it exists (again)","body":"This is really a continuation of #157\n#166 didnt work.\nThe Circle CI logs for that PR ... downloads the SDK.\n-v isnt a valid command line argument.","comments":2,"createdAt":"2017-05-26T06:27:40Z","updatedAt":"2019-08-05T14:51:25Z","closedAt":"2019-08-05T14:51:24Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565016442000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1671","number":1671,"title":"Error if circle containers is !=2","body":"After coala/coala#4137, copy the circle container check.\nOpened via gitter by @jayvdb","comments":4,"createdAt":"2017-04-26T04:24:20Z","updatedAt":"2019-08-05T14:47:22Z","closedAt":"2019-08-05T14:47:22Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"rupav","avatarUrl":"https://avatars0.githubusercontent.com/u/20624380?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564924001000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1476","number":1476,"title":"Blacklist bears from CI","body":"With many bears in one repo, we regularly have CI breakages that effectively put a halt to all other development.  At least nothing can get merged, and then other breakages occur and are not easily spotted.\nThe tree needs to stay green.\nA particularly difficult open case is #1472 (gotype deleted).\nBut in the last week we've also had a four day red period due to #1461 (checkstyle jar corruption) , and while that was broken #1470 (ramllint breakage) also occurred but wasnt noticed and fixed promptly.\nTo avoid these prolonged red tree periods easily, we need to disable broken bears from all CI if they are not able to be fixed immediately.\nIdeally this flagged status appears in the Bear code itself, so that the brokenness can also be reported to users.  In most cases, if a bear is broken on our CI, it is very likely users will also be seeing the same problems.  The only time this isnt true is if it is a Linux problem with our trusty CI workers that doesnt occur on more recent Ubuntu or other distros.","comments":10,"createdAt":"2017-03-04T05:21:08Z","updatedAt":"2019-08-04T13:06:41Z","closedAt":"2019-08-04T13:06:41Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1565111417000,"issue":{"htmlUrl":"https://github.com/coala/documentation/issues/597","number":597,"title":"Add documentation on how to write configuration in TOML","body":"","comments":0,"createdAt":"2019-06-15T19:24:41Z","updatedAt":"2019-08-06T17:10:17Z","closedAt":"2019-08-06T17:10:17Z","state":"closed","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566492563000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/740","number":740,"title":"Replace \"tab slider\" to a \"navbar\"","body":"","comments":0,"createdAt":"2019-08-22T16:49:23Z","updatedAt":"2019-08-22T16:49:23Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566128508000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/734","number":734,"title":"Add a tab displaying GSoC Students ","body":"","comments":0,"createdAt":"2019-08-13T11:55:58Z","updatedAt":"2019-08-18T11:41:48Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566464116000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/738","number":738,"title":"gitmate.io and other check failures","body":"Summary of check failures\n\nhttps://gitmate.io is no longer operational - it is referred to in reports, so it can not be simply removed.  Ignoring it is a temporary solution.  A future solution may be coala/coala-bears#2952\nAn asciinema in the reports has been taken offline - as above, it needs to be ignored\ncoala/coala-bears#2949 - regression in bears, easily fixed.\ncoala/coala-bears#2950 - Indirectly caused by coala/coala-bears#1477 - not really a regression","comments":1,"createdAt":"2019-08-22T05:26:39Z","updatedAt":"2019-08-22T08:55:16Z","closedAt":"2019-08-22T08:55:16Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566450446000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/723","number":723,"title":"\"use_spaces\" setting missing in html section","body":"Running coala over this repository raises a prompt error asking for \"use_spaces\" setting which shouldn't happen!","comments":4,"createdAt":"2019-03-21T17:31:16Z","updatedAt":"2019-08-22T05:07:26Z","closedAt":"2019-08-22T05:07:26Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1565353791000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/728","number":728,"title":"Fetch mentors from Webservices","body":"Created a merge request in webservices, that creates a new table for mentors. The records will added via a check which validates whether the contributor is valid to become a mentor or not. After all checks get green, the contrib is added. So, also fetch those mentors from webservices and show them under the mentors tab","comments":0,"createdAt":"2019-08-09T12:29:51Z","updatedAt":"2019-08-09T12:29:51Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566461099000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/713","number":713,"title":"Travis CI also failing due to Spacing Inconsistencies","body":"The issue is in reference to PR#700\nTravis build failure error log - #700 (comment)\nA difficult/newcomer issue","comments":3,"createdAt":"2019-02-17T13:19:10Z","updatedAt":"2019-08-22T08:04:59Z","closedAt":"2019-08-22T08:04:44Z","state":"closed","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1565173289000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/589","number":589,"title":"Rule based ignores","body":"Currently coala can ignore rules based on in-source comments.\nThat can get very messy when particular rules sgould always be ignored in common but well defined scenarios.\nIn those case it is better to define a rule about the relevant lines.\nSee flake8-putty, which uses regex to describe scenarios.\nThe solution for this project should be more generic that flake8-putty, possibly using bears to define ranges when custom actions which ignore results.","comments":2,"createdAt":"2018-06-03T15:24:13Z","updatedAt":"2019-08-07T10:21:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566450798000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/546","number":546,"title":"Complete Windows support project","body":"dependency management using Windows tools like Chocolatey\na few annoying and rather complex bugs in coala/coala on Windows\nAlmost all bears installed into Appveyor and passing the tests.","comments":10,"createdAt":"2018-04-07T02:09:26Z","updatedAt":"2019-08-22T05:13:18Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1565518524000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/559","number":559,"title":"Add filters for searching projects","body":"Add filters to filter projects by collaborating projects, initiative, mentors, status, difficulty level, tags, etc . Also, have a separate tab for completed projects(maybe also for WIP projects).\nlabel: difficulty/medium","comments":6,"createdAt":"2018-04-23T18:46:09Z","updatedAt":"2019-08-11T10:15:24Z","closedAt":null,"state":"open","user":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"owner":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"labels":[{"name":"difficulty/medium","color":"9dea67"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1565536829000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/560","number":560,"title":"Add posts / calendar app to projects website","body":"Basic gsoc timeline, with milestones events.\nNeeds ability for project members to publish periods of extended unavailability, if they want to, before and during gsoc.\nAlso can be used to record significant project related events / posts, such as software releases, survey result announcements, cEP merges which affect everyone (e.g. gsoc responsibilities changes, or CoC updates).\ngci timeline would also be nice.  It could only roughly cover events that happened in GCI 2017 retrospectively, as GCI 2018 is a long way off. Maybe this should be left for a follow up issue.\nIdeally we use standard jekyll features , and plugins.","comments":1,"createdAt":"2018-04-24T09:22:10Z","updatedAt":"2019-08-11T15:20:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"9dea67"},{"name":"importance/medium","color":"f2db30"},{"name":"status/needs design","color":"f9a7df"}]}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1565540146000,"issue":{"htmlUrl":"https://github.com/coala/projects/issues/298","number":298,"title":"Differentiate color-wise for closed, merged and open issues on project description popup","body":"The popups for projects shows issues on the left side, but does not differentiate them as merged, closed or open. It'd be better if we had a real-time differentiation for the issues.\nUsing gitlab and github api to find details about issues would solve the issue.","comments":2,"createdAt":"2017-05-23T18:45:58Z","updatedAt":"2019-08-11T16:15:46Z","closedAt":null,"state":"open","user":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4"},"owner":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4"},"labels":[{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1564128474000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/662","number":662,"title":"labhub.py: Incorrect implementation for `is_room_member`","body":"The gitter backend returns a list of GitterRoomOccupant, but in the function we consider it to be a list of strings.\nhttps://github.com/coala/corobo/blob/master/plugins/labhub.py#L113\ntype/bug difficulty/newcomer","comments":0,"createdAt":"2019-07-26T08:07:54Z","updatedAt":"2019-07-26T08:07:54Z","closedAt":null,"state":"open","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564747801000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/289","number":289,"title":"Add a webpage for unassigned issues","body":"","comments":0,"createdAt":"2019-08-02T12:10:01Z","updatedAt":"2019-08-02T12:10:01Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564741987000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/287","number":287,"title":"Add a webpage about org teams","body":"Will only be visible to authenticated users","comments":0,"createdAt":"2019-08-02T10:33:07Z","updatedAt":"2019-08-02T10:33:07Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564747331000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/288","number":288,"title":"Create a new webpage for inactive issues","body":"","comments":0,"createdAt":"2019-08-02T12:02:11Z","updatedAt":"2019-08-02T12:02:11Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516337000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/275","number":275,"title":" Update Readme.md of coala-community repository","body":"","comments":0,"createdAt":"2019-07-30T19:52:17Z","updatedAt":"2019-07-30T19:52:17Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564594486000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/280","number":280,"title":"Add  form to assign issues to users","body":"","comments":0,"createdAt":"2019-07-31T17:34:46Z","updatedAt":"2019-07-31T17:34:46Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564594506000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/281","number":281,"title":"Add a contributor promotion form","body":"","comments":0,"createdAt":"2019-07-31T17:35:06Z","updatedAt":"2019-07-31T17:35:06Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564658148000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/285","number":285,"title":"Install and Use openhub_django pypi package","body":"","comments":0,"createdAt":"2019-08-01T11:15:48Z","updatedAt":"2019-08-01T11:15:48Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564515901000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/265","number":265,"title":"Add form for adding a new Google form","body":"","comments":0,"createdAt":"2019-07-18T06:25:01Z","updatedAt":"2019-07-30T19:45:01Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564503671000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/268","number":268,"title":"Display contributor statistics","body":"","comments":0,"createdAt":"2019-07-30T16:21:11Z","updatedAt":"2019-07-30T16:21:11Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564515927000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/270","number":270,"title":"Add form for adding/updating a calendar event","body":"","comments":0,"createdAt":"2019-07-30T19:45:27Z","updatedAt":"2019-07-30T19:45:27Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516107000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/271","number":271,"title":"Add a web-page for mentors","body":"","comments":0,"createdAt":"2019-07-30T19:48:19Z","updatedAt":"2019-07-30T19:48:27Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516288000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/272","number":272,"title":"Add form for applying as a mentor in GSoC","body":"","comments":0,"createdAt":"2019-07-30T19:51:28Z","updatedAt":"2019-07-30T19:51:28Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516303000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/273","number":273,"title":" Add form for adding yourself a GSoC participant","body":"","comments":0,"createdAt":"2019-07-30T19:51:43Z","updatedAt":"2019-07-30T19:51:43Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564516322000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/274","number":274,"title":" Create a feedback form","body":"","comments":0,"createdAt":"2019-07-30T19:52:02Z","updatedAt":"2019-07-30T19:52:02Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564515428000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/247","number":247,"title":"pytest v4.4.0 is causing build failures","body":"Build failure log - https://travis-ci.org/coala/community/jobs/532912493","comments":2,"createdAt":"2019-05-16T10:43:15Z","updatedAt":"2019-07-30T19:37:08Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"gh-board","updatedAtMs":1566120183000,"issue":{"htmlUrl":"https://github.com/coala/gh-board/issues/137","number":137,"title":"router.jsx  'replace' is defined but never used ","body":"/home/travis/build/coala/gh-board/src/router.jsx\n30:22  warning  'replace' is defined but never used  no-unused-vars","comments":16,"createdAt":"2018-07-29T14:27:17Z","updatedAt":"2019-08-18T09:23:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"33a7bf"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1565723445000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/282","number":282,"title":"Coala Online is broken due to CORS","body":"https://coala.io/#/coalaonline does not work due to the SOP security restrictions in browsers. This is bad for Coala marketing and therefore adoption!\n# Chrome console:\nFailed to load https://api.gitmate.io/coala_online/: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'https://coala.io' is therefore not allowed access. The response had HTTP status code 504.\n\n# Firefox console:\nCross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://api.gitmate.io/coala_online/. (Reason: CORS header 'Access-Control-Allow-Origin' missing).\n\nWe can use CORS to get past these restrictions. (MDN, Wikipedia)\nTo do that, we must add some HTTP headers to the response provided from api.gitmate.io\nWhere is the code for that API server? (Is it here?)","comments":6,"createdAt":"2018-07-07T07:37:59Z","updatedAt":"2019-08-13T19:10:45Z","closedAt":null,"state":"open","user":{"login":"joeytwiddle","avatarUrl":"https://avatars3.githubusercontent.com/u/911799?v=4"},"owner":{"login":"joeytwiddle","avatarUrl":"https://avatars3.githubusercontent.com/u/911799?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"type/bug","color":"ee0701"}]}},{"repoOwner":"coala","repoName":"landing-frontend","updatedAtMs":1566112707000,"issue":{"htmlUrl":"https://github.com/coala/landing-frontend/issues/132","number":132,"title":"Identify contributor's rank in Get Involved Page","body":"Been thinking about this other issue:\ncoala/teams#29\nCurrently in the Get Involved page, it lists every contributors to coala, with the ones who has done the most reviews on top.\nPerhaps we can group the contributors based on rank. eg the maintainers' group, Developers' group, and Newcomers group.\nAlternatively, in each of the contributor's card, there could be an additional flag/badge that indicates their rank (eg maintainer, developer, newcomer)\nThoughts?","comments":2,"createdAt":"2017-02-06T03:03:16Z","updatedAt":"2019-08-18T07:18:27Z","closedAt":null,"state":"open","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"needs-design","color":"cc317c"},{"name":"status/STALE","color":"ededed"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566539850000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6066","number":6066,"title":"Add Handle Nested Language Support","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-08-22T16:48:02Z","updatedAt":"2019-08-23T05:57:30Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6066","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMzk4NjY1NQ==","url":"https://github.com/coala/coala/pull/6066#issuecomment-523986655","bodyText":"A preview of the working https://asciinema.org/a/263844\nWe  have a test coverage of 100% 🎉\nBut Travis fails in  coala --non-interactive since it's not able to find the modules such as coalib.nested that has been added in this PR","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2019-08-22T16:50:00Z","lastEditedAt":"2019-08-23T05:57:30Z","updatedAt":"2019-08-23T05:57:30Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566345246000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6063","number":6063,"title":"ConsoleInteraction.py: Add parents to syntax tree ","body":"Add function definition to diffs which makes them easier to understand by\ngiving information regarding what function/class the code resides in.\nThe new type of context when run on a sample file\nis shown below\n\n\n\n\n\n\n\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-08-20T23:40:23Z","updatedAt":"2019-08-20T23:54:06Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6063","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566386973000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6064","number":6064,"title":"Provide support for non utf-8 encodings","body":"coala currently only supports utf-8 encodings. Before merging this\nwe need to add support for non utf-8 encodings to coala-utils.\nSome bears like SpellCheckBear have external linters which only\nsupport utf-8 encodings. To solve this the bears should describe\nthe encoding it can handle followed by coala creating a temporary\nfile in the linter's accepted encoding (Converting utf-16 to utf-8)\nSome encodings have glyphs which are not in unicode and can't be\ntranscoded to utf16/32. We should write test to catch such\nexceptions.\nCloses #3862\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-08-21T11:00:55Z","updatedAt":"2019-08-21T11:29:33Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6064","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMzQxNTk2Mw==","url":"https://github.com/coala/coala/pull/6064#issuecomment-523415963","bodyText":"There is a problem with detect_encoding in decoding utf-32 files which is causing tests for handling utf-32 encoded files to fail.\nThese should get fixed when https://gitlab.com/coala/coala-utils/merge_requests/99 gets merged","diffHunk":null,"author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2019-08-21T11:28:43Z","lastEditedAt":"2019-08-21T11:29:33Z","updatedAt":"2019-08-21T11:29:33Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566112191000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6058","number":6058,"title":"Linter.py: added memory location in Linter meta class __repr__","body":"was having trouble running coala locally, making a PR to test out.\ncloses #6051","comments":0,"createdAt":"2019-08-18T07:08:03Z","updatedAt":"2019-08-18T07:09:51Z","closedAt":null,"state":"open","user":{"login":"avirlrma","avatarUrl":"https://avatars1.githubusercontent.com/u/22575238?v=4"},"owner":{"login":"avirlrma","avatarUrl":"https://avatars1.githubusercontent.com/u/22575238?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6058","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566123448000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6059","number":6059,"title":"fix Dive into Python 3 Website is down #926","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-08-18T10:16:28Z","updatedAt":"2019-08-18T10:17:28Z","closedAt":null,"state":"open","user":{"login":"xiaoguizi87","avatarUrl":"https://avatars0.githubusercontent.com/u/529239?v=4"},"owner":{"login":"xiaoguizi87","avatarUrl":"https://avatars0.githubusercontent.com/u/529239?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6059","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566229999000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6060","number":6060,"title":"Writing_Native_Bears.rst: Explain how bears can suggest multiple patches","body":"This updates Writing_Native_Bears.rst to briefly explain how bears can suggest multiple patches.","comments":1,"createdAt":"2019-08-19T14:44:24Z","updatedAt":"2019-08-19T15:53:19Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6060","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMjYzODk2NA==","url":"https://github.com/coala/coala/pull/6060#issuecomment-522638964","bodyText":"Not much is written about Diff and how to suggest some changes in the current tutorial that's why I just briefly mentioned how to suggest multiple patches.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-08-19T15:52:57Z","lastEditedAt":"2019-08-19T15:53:19Z","updatedAt":"2019-08-19T15:53:19Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566284477000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6062","number":6062,"title":"Newcomers_Guide.rst: Mention about available forms","body":"This commit mentions about the new forms available\non the coala Community website for the contributors.\nCloses #6061","comments":0,"createdAt":"2019-08-20T07:01:17Z","updatedAt":"2019-08-20T07:01:17Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6062","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566236605000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6043","number":6043,"title":"TomlConfWriter.py, ConfigConverter.py: Support TOML ","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2019-07-17T15:30:04Z","updatedAt":"2019-08-19T17:43:25Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6043","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyOTU0NA==","url":"https://github.com/coala/coala/pull/6043#discussion_r305629544","bodyText":"change not necessary.","diffHunk":"@@ -97,5 +97,35 @@ def mode_format(args, debug=False):\n     from coalib.output.ConsoleInteraction import print_results_formatted\n \n     _, exitcode, _ = run_coala(\n-            print_results=print_results_formatted, args=args, debug=debug)\n+        print_results=print_results_formatted, args=args, debug=debug)","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-21T18:06:52Z","lastEditedAt":null,"updatedAt":"2019-07-21T18:06:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyOTY5Ng==","url":"https://github.com/coala/coala/pull/6043#discussion_r305629696","bodyText":"this can't be simplified? it is possible for the user to ask from toml to toml or from coala to coala?","diffHunk":"@@ -97,5 +97,35 @@ def mode_format(args, debug=False):\n     from coalib.output.ConsoleInteraction import print_results_formatted\n \n     _, exitcode, _ = run_coala(\n-            print_results=print_results_formatted, args=args, debug=debug)\n+        print_results=print_results_formatted, args=args, debug=debug)\n     return exitcode\n+\n+\n+def mode_converter(args):\n+    \"\"\"\n+    Converts a TOML document into a coafile document\n+    and vice versa\n+\n+    :param args: Alternative pre-parsed CLI arguments.\n+    \"\"\"\n+    import os\n+    from coalib.output.ConfigConverter import ConfigConverter\n+    from coalib.settings.ConfigurationGathering import (load_config_file,\n+                                                        load_toml_config_file)\n+\n+    input_file = args.config_converter[0]\n+    output_file = args.config_converter[1]\n+    _, in_ext = os.path.splitext(input_file)\n+    _, out_ext = os.path.splitext(output_file)\n+\n+    if in_ext == '.toml':","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-21T18:11:38Z","lastEditedAt":"2019-07-21T19:20:23Z","updatedAt":"2019-07-21T19:20:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYzMTQ0Mg==","url":"https://github.com/coala/coala/pull/6043#discussion_r305631442","bodyText":"lets wrap this into an internal function, you are using this check for delete below too.","diffHunk":"@@ -0,0 +1,162 @@\n+import re\n+\n+from coalib.output.ConfWriter import ConfWriter\n+from tomlkit import dumps\n+from tomlkit import table, key, document\n+from tomlkit.items import Key, KeyType\n+from coalib.output.TomlConfWriter import TomlConfWriter\n+\n+\n+class ConfigConverter:\n+\n+    def __init__(self, file):\n+        self.__key_delimiter = ','\n+        self.file = file\n+        self.document = document()\n+        self.unsavable_keys = ['save', 'toml_config']\n+\n+    def coafile_to_toml(self, sections):\n+        \"\"\"\n+        Creates a toml document from coafile\n+        sections\n+\n+        :param sections: sections obtained from coafile\n+        \"\"\"\n+        comment_regex = re.compile(r'comment[\\d]+')\n+\n+        if 'default' in sections.keys():\n+            if not sections['default'].contents == {}:","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-21T19:04:29Z","lastEditedAt":null,"updatedAt":"2019-07-21T19:04:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYzMTUzNA==","url":"https://github.com/coala/coala/pull/6043#discussion_r305631534","bodyText":"i think you forgot to delete those","diffHunk":"@@ -0,0 +1,162 @@\n+import re\n+\n+from coalib.output.ConfWriter import ConfWriter\n+from tomlkit import dumps\n+from tomlkit import table, key, document\n+from tomlkit.items import Key, KeyType\n+from coalib.output.TomlConfWriter import TomlConfWriter\n+\n+\n+class ConfigConverter:\n+\n+    def __init__(self, file):\n+        self.__key_delimiter = ','\n+        self.file = file\n+        self.document = document()\n+        self.unsavable_keys = ['save', 'toml_config']\n+\n+    def coafile_to_toml(self, sections):\n+        \"\"\"\n+        Creates a toml document from coafile\n+        sections\n+\n+        :param sections: sections obtained from coafile\n+        \"\"\"\n+        comment_regex = re.compile(r'comment[\\d]+')\n+\n+        if 'default' in sections.keys():\n+            if not sections['default'].contents == {}:\n+                sections['default'].name = 'cli'\n+                sections['cli'] = sections['default']\n+            del sections['default']\n+\n+        for item in sections:\n+            section = sections[item]\n+            section.set_default_section(sections)\n+            table_name, inherits = self.get_section_name(section.name)\n+\n+            if table_name in self.document:\n+                existing_table = self.document[table_name]\n+                existing_table.get('inherits', []).append(inherits)\n+                existing_table.add(Key('appends.{}'.format(inherits),\n+                                       t=KeyType.Bare,\n+                                       dotted=True),\n+                                   self.get_appended_keys(section))\n+                continue\n+\n+            appends = []\n+            table_contents = table()\n+            defaults = section.defaults\n+            for _, setting in section.contents.items():\n+                setting_key = TomlConfWriter.get_setting_key(setting)\n+\n+                if comment_regex.search(setting_key.as_string()):\n+                    continue\n+\n+                if (defaults and\n+                    (setting.key in defaults and\n+                     str(section.get(setting.key)).startswith(\n+                         str(defaults[setting.key]) + ','))):\n+\n+                    appends.append(setting.key)\n+                    value = TomlConfWriter.get_original_value(\n+                        self.__get_append_val(str(section.get(setting.key)),\n+                                              str(defaults[setting.key])))\n+                # if setting.to_append:","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-21T19:07:07Z","lastEditedAt":null,"updatedAt":"2019-07-21T19:07:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTY3ODIyNA==","url":"https://github.com/coala/coala/pull/6043#discussion_r305678224","bodyText":"coafile format  does not specify the extension. This made detecting if a file is in coafile format  or not ambiguous. Hence I have chosen .coafile as an extension to recognise the file as a coafile format. This should remove the possibilities of toml to toml or coala to coala","diffHunk":"@@ -97,5 +97,35 @@ def mode_format(args, debug=False):\n     from coalib.output.ConsoleInteraction import print_results_formatted\n \n     _, exitcode, _ = run_coala(\n-            print_results=print_results_formatted, args=args, debug=debug)\n+        print_results=print_results_formatted, args=args, debug=debug)\n     return exitcode\n+\n+\n+def mode_converter(args):\n+    \"\"\"\n+    Converts a TOML document into a coafile document\n+    and vice versa\n+\n+    :param args: Alternative pre-parsed CLI arguments.\n+    \"\"\"\n+    import os\n+    from coalib.output.ConfigConverter import ConfigConverter\n+    from coalib.settings.ConfigurationGathering import (load_config_file,\n+                                                        load_toml_config_file)\n+\n+    input_file = args.config_converter[0]\n+    output_file = args.config_converter[1]\n+    _, in_ext = os.path.splitext(input_file)\n+    _, out_ext = os.path.splitext(output_file)\n+\n+    if in_ext == '.toml':","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzQxNjMwMw==","createdAt":"2019-07-25T18:38:50Z","content":"THUMBS_UP","user":{"login":"Nosferatul","name":"Alexandru-Sorin Maxim"}}],"createdAt":"2019-07-22T05:30:42Z","lastEditedAt":"2019-07-22T05:49:43Z","updatedAt":"2019-07-22T05:49:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ0NjM1Ng==","url":"https://github.com/coala/coala/pull/6043#discussion_r307446356","bodyText":"I'm not sure what's this","diffHunk":"@@ -0,0 +1,166 @@\n+import re\n+\n+from coalib.output.ConfWriter import ConfWriter\n+from tomlkit import dumps\n+from tomlkit import table, key, document\n+from tomlkit.items import Key, KeyType\n+from coalib.output.TomlConfWriter import TomlConfWriter\n+\n+\n+class ConfigConverter:\n+\n+    \"\"\"\n+    Class that contains functions for generating\n+    coafile from toml sections and toml file from\n+    coala sections\n+    \"\"\"\n+\n+    def __init__(self, file):\n+        self.__key_delimiter = ','\n+        self.file = file\n+        self.document = document()\n+        self.unsavable_keys = ['save', 'toml_config']","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-25T18:43:21Z","lastEditedAt":null,"updatedAt":"2019-07-25T18:43:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ0OTkwOQ==","url":"https://github.com/coala/coala/pull/6043#discussion_r307449909","bodyText":"I don't like that this returns different types, are you sure this will return the expected type everytime?","diffHunk":"@@ -0,0 +1,177 @@\n+import os\n+\n+from coala_utils.string_processing import unescape\n+from coalib.parsing.TomlConfParser import TomlSetting\n+\n+from tomlkit import document, table, dumps, array, string, key, integer\n+from tomlkit.items import (Array, String, Bool, Integer, Comment, Key,\n+                           KeyType, Trivia)\n+\n+\n+class TomlConfWriter:\n+\n+    \"\"\"\n+    Class that contains functions for\n+    converting toml sections to toml\n+    file\n+    \"\"\"\n+\n+    def __init__(self, file):\n+        self.file = file\n+        if os.path.isdir(self.file):\n+            self.file = os.path.join(self.file, '.coafile.toml')\n+        self.unsavable_keys = ['save', 'toml_config']\n+        self.document = document()\n+\n+    def write(self, sections):\n+        \"\"\"\n+        Converts the given sections into a TOML\n+        document and writes the document into\n+        the specified file\n+\n+        :param sections: The sections that have to be\n+                         written into the file\n+        \"\"\"\n+\n+        if sections.get('cli', None):\n+            self.remove_unsavable_settings(sections)\n+\n+        for item in sections:\n+            section = sections[item]\n+            table_name = self.get_table_name(section)\n+            if table_name in self.document:\n+                continue\n+            table_contents = table()\n+            for _, setting in section.contents.items():\n+\n+                setting_key = self.get_setting_key(setting)\n+\n+                if isinstance(setting, TomlSetting):\n+                    value = setting.original_value\n+                else:\n+                    value = self.get_original_value(setting.value)\n+\n+                if isinstance(value, Array):\n+                    table_contents.add(setting_key, array(value.as_string()))\n+                    if value.trivia.comment:\n+                        table_contents[setting_key].comment(value.trivia\n+                                                            .comment)\n+                elif isinstance(value, String):\n+                    table_contents.add(setting_key, string(value))\n+                    if value.trivia.comment:\n+                        table_contents[setting_key].comment(value.trivia\n+                                                            .comment)\n+                elif isinstance(value, Bool):\n+                    table_contents.add(setting_key, value)\n+                elif isinstance(value, Integer):\n+                    table_contents.add(setting_key, integer(value.as_string()))\n+                    if value.trivia.comment:\n+                        table_contents[setting_key].comment(value.trivia\n+                                                            .comment)\n+                elif isinstance(value, Comment):\n+                    table_contents.add(Comment(\n+                        Trivia(comment_ws='  ', comment=str(value))\n+                    ))\n+                else:\n+                    table_contents.add(setting_key, value)\n+\n+            self.document.add(table_name, table_contents)\n+        self.write_to_file()\n+\n+    def write_to_file(self):\n+        \"\"\"\n+        Write the TOML document in the specified file\n+        \"\"\"\n+        with open(self.file, 'w') as f:\n+            f.write(dumps(self.document))\n+\n+    def remove_unsavable_settings(self, sections):\n+        \"\"\"\n+        Removes the un-savable keys from the sections\n+        before they are written into a file\n+\n+        :param sections: The sections that have to be\n+                         written into the file\n+        \"\"\"\n+\n+        cli_section_contents = sections['cli'].contents\n+        for unsavable_key in self.unsavable_keys:\n+            if unsavable_key in cli_section_contents:\n+                del cli_section_contents[unsavable_key]\n+\n+    @staticmethod\n+    def get_original_value(value):\n+        \"\"\"\n+        Converts a string into its original value\n+\n+        :param value: The value as a string\n+        :return: The original value deduced from the string","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-25T18:51:48Z","lastEditedAt":null,"updatedAt":"2019-07-25T18:51:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ1MTc3OQ==","url":"https://github.com/coala/coala/pull/6043#discussion_r307451779","bodyText":"I saw that some class variables are almost the same, do you think it would be a good idea to add a parent class to inherit some variables/methods?","diffHunk":"@@ -0,0 +1,166 @@\n+import re\n+\n+from coalib.output.ConfWriter import ConfWriter\n+from tomlkit import dumps\n+from tomlkit import table, key, document\n+from tomlkit.items import Key, KeyType\n+from coalib.output.TomlConfWriter import TomlConfWriter\n+\n+\n+class ConfigConverter:","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-25T18:56:18Z","lastEditedAt":null,"updatedAt":"2019-07-25T18:56:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ1Mjc0MQ==","url":"https://github.com/coala/coala/pull/6043#discussion_r307452741","bodyText":"it's not possible to get the original value from the setting value everytime?","diffHunk":"@@ -0,0 +1,177 @@\n+import os\n+\n+from coala_utils.string_processing import unescape\n+from coalib.parsing.TomlConfParser import TomlSetting\n+\n+from tomlkit import document, table, dumps, array, string, key, integer\n+from tomlkit.items import (Array, String, Bool, Integer, Comment, Key,\n+                           KeyType, Trivia)\n+\n+\n+class TomlConfWriter:\n+\n+    \"\"\"\n+    Class that contains functions for\n+    converting toml sections to toml\n+    file\n+    \"\"\"\n+\n+    def __init__(self, file):\n+        self.file = file\n+        if os.path.isdir(self.file):\n+            self.file = os.path.join(self.file, '.coafile.toml')\n+        self.unsavable_keys = ['save', 'toml_config']\n+        self.document = document()\n+\n+    def write(self, sections):\n+        \"\"\"\n+        Converts the given sections into a TOML\n+        document and writes the document into\n+        the specified file\n+\n+        :param sections: The sections that have to be\n+                         written into the file\n+        \"\"\"\n+\n+        if sections.get('cli', None):\n+            self.remove_unsavable_settings(sections)\n+\n+        for item in sections:\n+            section = sections[item]\n+            table_name = self.get_table_name(section)\n+            if table_name in self.document:\n+                continue\n+            table_contents = table()\n+            for _, setting in section.contents.items():\n+\n+                setting_key = self.get_setting_key(setting)\n+\n+                if isinstance(setting, TomlSetting):\n+                    value = setting.original_value\n+                else:\n+                    value = self.get_original_value(setting.value)","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-25T18:58:30Z","lastEditedAt":null,"updatedAt":"2019-07-25T18:58:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ2NDcwOQ==","url":"https://github.com/coala/coala/pull/6043#discussion_r307464709","bodyText":"When we run coala -s, it adds the setting save = true to the configuration file.\nThis has to be removed because it will cause saving functionality to be invoked every time coala is run. Hence these are unsavable keys. Similarly coala -T will add toml_config=True.\nHence TomlConfWriter also has this.\nI have added it here in ConfigConverter as well in case someone adds these settings under the cli-section.","diffHunk":"@@ -0,0 +1,166 @@\n+import re\n+\n+from coalib.output.ConfWriter import ConfWriter\n+from tomlkit import dumps\n+from tomlkit import table, key, document\n+from tomlkit.items import Key, KeyType\n+from coalib.output.TomlConfWriter import TomlConfWriter\n+\n+\n+class ConfigConverter:\n+\n+    \"\"\"\n+    Class that contains functions for generating\n+    coafile from toml sections and toml file from\n+    coala sections\n+    \"\"\"\n+\n+    def __init__(self, file):\n+        self.__key_delimiter = ','\n+        self.file = file\n+        self.document = document()\n+        self.unsavable_keys = ['save', 'toml_config']","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzUxMTYzNA==","createdAt":"2019-07-26T20:19:35Z","content":"THUMBS_UP","user":{"login":"Nosferatul","name":"Alexandru-Sorin Maxim"}}],"createdAt":"2019-07-25T19:29:21Z","lastEditedAt":"2019-07-25T20:04:48Z","updatedAt":"2019-07-25T20:04:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ2ODUwMA==","url":"https://github.com/coala/coala/pull/6043#discussion_r307468500","bodyText":"coafile configuration sees every settings as a single string. But toml configuration has data-types.  So this function tries to infer the datatype from the string for toml in coafile to toml conversion.\nAre you sure this will return the expected type everytime?\nIt handles strings, booleans and list of strings and integers.\nThese are the settings types I have seen used by coala . If more types are used like floats, then then this function can make a provision for that as well.\nSo I think for now it returns the expected types.\nWhere it fails and why failing does not matter\nIf someone writes a = 20 in coafile and wants to mean 20 as a string and not a integer, then this function will fail as it always assumes 20 to be an integer.\nEven if the function fails, it will not break down the functionality. It may appear as an integer in a toml file, but when coala is run all settings will become one single string.\nSo function can fail only in purpose but not in functionality.\nAlso coafile configuration provides no means to specify the data-type in configuration file. So we can make the approximation that makes the best sense for our use-case as there is no source of truth or loss of functionality.","diffHunk":"@@ -0,0 +1,177 @@\n+import os\n+\n+from coala_utils.string_processing import unescape\n+from coalib.parsing.TomlConfParser import TomlSetting\n+\n+from tomlkit import document, table, dumps, array, string, key, integer\n+from tomlkit.items import (Array, String, Bool, Integer, Comment, Key,\n+                           KeyType, Trivia)\n+\n+\n+class TomlConfWriter:\n+\n+    \"\"\"\n+    Class that contains functions for\n+    converting toml sections to toml\n+    file\n+    \"\"\"\n+\n+    def __init__(self, file):\n+        self.file = file\n+        if os.path.isdir(self.file):\n+            self.file = os.path.join(self.file, '.coafile.toml')\n+        self.unsavable_keys = ['save', 'toml_config']\n+        self.document = document()\n+\n+    def write(self, sections):\n+        \"\"\"\n+        Converts the given sections into a TOML\n+        document and writes the document into\n+        the specified file\n+\n+        :param sections: The sections that have to be\n+                         written into the file\n+        \"\"\"\n+\n+        if sections.get('cli', None):\n+            self.remove_unsavable_settings(sections)\n+\n+        for item in sections:\n+            section = sections[item]\n+            table_name = self.get_table_name(section)\n+            if table_name in self.document:\n+                continue\n+            table_contents = table()\n+            for _, setting in section.contents.items():\n+\n+                setting_key = self.get_setting_key(setting)\n+\n+                if isinstance(setting, TomlSetting):\n+                    value = setting.original_value\n+                else:\n+                    value = self.get_original_value(setting.value)\n+\n+                if isinstance(value, Array):\n+                    table_contents.add(setting_key, array(value.as_string()))\n+                    if value.trivia.comment:\n+                        table_contents[setting_key].comment(value.trivia\n+                                                            .comment)\n+                elif isinstance(value, String):\n+                    table_contents.add(setting_key, string(value))\n+                    if value.trivia.comment:\n+                        table_contents[setting_key].comment(value.trivia\n+                                                            .comment)\n+                elif isinstance(value, Bool):\n+                    table_contents.add(setting_key, value)\n+                elif isinstance(value, Integer):\n+                    table_contents.add(setting_key, integer(value.as_string()))\n+                    if value.trivia.comment:\n+                        table_contents[setting_key].comment(value.trivia\n+                                                            .comment)\n+                elif isinstance(value, Comment):\n+                    table_contents.add(Comment(\n+                        Trivia(comment_ws='  ', comment=str(value))\n+                    ))\n+                else:\n+                    table_contents.add(setting_key, value)\n+\n+            self.document.add(table_name, table_contents)\n+        self.write_to_file()\n+\n+    def write_to_file(self):\n+        \"\"\"\n+        Write the TOML document in the specified file\n+        \"\"\"\n+        with open(self.file, 'w') as f:\n+            f.write(dumps(self.document))\n+\n+    def remove_unsavable_settings(self, sections):\n+        \"\"\"\n+        Removes the un-savable keys from the sections\n+        before they are written into a file\n+\n+        :param sections: The sections that have to be\n+                         written into the file\n+        \"\"\"\n+\n+        cli_section_contents = sections['cli'].contents\n+        for unsavable_key in self.unsavable_keys:\n+            if unsavable_key in cli_section_contents:\n+                del cli_section_contents[unsavable_key]\n+\n+    @staticmethod\n+    def get_original_value(value):\n+        \"\"\"\n+        Converts a string into its original value\n+\n+        :param value: The value as a string\n+        :return: The original value deduced from the string","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzUxMTcyMw==","createdAt":"2019-07-26T20:21:00Z","content":"THUMBS_UP","user":{"login":"Nosferatul","name":"Alexandru-Sorin Maxim"}}],"createdAt":"2019-07-25T19:39:59Z","lastEditedAt":"2019-07-25T20:14:41Z","updatedAt":"2019-07-25T20:14:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ3NDY2Nw==","url":"https://github.com/coala/coala/pull/6043#discussion_r307474667","bodyText":"I will try this.","diffHunk":"@@ -0,0 +1,166 @@\n+import re\n+\n+from coalib.output.ConfWriter import ConfWriter\n+from tomlkit import dumps\n+from tomlkit import table, key, document\n+from tomlkit.items import Key, KeyType\n+from coalib.output.TomlConfWriter import TomlConfWriter\n+\n+\n+class ConfigConverter:","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-25T19:57:31Z","lastEditedAt":null,"updatedAt":"2019-07-25T19:57:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ3NjU4Nw==","url":"https://github.com/coala/coala/pull/6043#discussion_r307476587","bodyText":"setting.original_value can work if the setting is a TomlSetting (obtained from a toml file).\nBut  coala -s will invoke the TomlConfWriter  by which settings from the command line will be saved as well into the toml file as well. Since these are not  TomlSetting, they do not have the original_value parameter and data-type has to be guessed.","diffHunk":"@@ -0,0 +1,177 @@\n+import os\n+\n+from coala_utils.string_processing import unescape\n+from coalib.parsing.TomlConfParser import TomlSetting\n+\n+from tomlkit import document, table, dumps, array, string, key, integer\n+from tomlkit.items import (Array, String, Bool, Integer, Comment, Key,\n+                           KeyType, Trivia)\n+\n+\n+class TomlConfWriter:\n+\n+    \"\"\"\n+    Class that contains functions for\n+    converting toml sections to toml\n+    file\n+    \"\"\"\n+\n+    def __init__(self, file):\n+        self.file = file\n+        if os.path.isdir(self.file):\n+            self.file = os.path.join(self.file, '.coafile.toml')\n+        self.unsavable_keys = ['save', 'toml_config']\n+        self.document = document()\n+\n+    def write(self, sections):\n+        \"\"\"\n+        Converts the given sections into a TOML\n+        document and writes the document into\n+        the specified file\n+\n+        :param sections: The sections that have to be\n+                         written into the file\n+        \"\"\"\n+\n+        if sections.get('cli', None):\n+            self.remove_unsavable_settings(sections)\n+\n+        for item in sections:\n+            section = sections[item]\n+            table_name = self.get_table_name(section)\n+            if table_name in self.document:\n+                continue\n+            table_contents = table()\n+            for _, setting in section.contents.items():\n+\n+                setting_key = self.get_setting_key(setting)\n+\n+                if isinstance(setting, TomlSetting):\n+                    value = setting.original_value\n+                else:\n+                    value = self.get_original_value(setting.value)","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-25T20:02:47Z","lastEditedAt":null,"updatedAt":"2019-07-25T20:02:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzQ4NDExOQ==","url":"https://github.com/coala/coala/pull/6043#discussion_r307484119","bodyText":"Done","diffHunk":"@@ -0,0 +1,166 @@\n+import re\n+\n+from coalib.output.ConfWriter import ConfWriter\n+from tomlkit import dumps\n+from tomlkit import table, key, document\n+from tomlkit.items import Key, KeyType\n+from coalib.output.TomlConfWriter import TomlConfWriter\n+\n+\n+class ConfigConverter:","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-25T20:22:58Z","lastEditedAt":null,"updatedAt":"2019-07-25T20:22:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzg5ODI0NA==","url":"https://github.com/coala/coala/pull/6043#discussion_r307898244","bodyText":"when would you want to overwrite it?","diffHunk":"@@ -0,0 +1,313 @@\n+import os\n+import sys\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.exceptions import TOMLKitError\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+import logging\n+\n+\n+class TomlSetting(Setting):\n+    \"\"\"\n+    A subclass of a setting but has an additional parameter\n+    called the original value. This class is required to\n+    infer comments and original data-type of a settings value.\n+    \"\"\"\n+\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+    \"\"\"\n+\n+    The parser that generates sections from data in\n+    TOML config files. Each TOML table is converted\n+    into a section and the all the sections are returned\n+    as a ordered dictionary of sections.\n+\n+    \"\"\"\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+        self.logger = logging.getLogger()\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-26T20:26:32Z","lastEditedAt":null,"updatedAt":"2019-07-26T20:26:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk1MzUxMg==","url":"https://github.com/coala/coala/pull/6043#discussion_r307953512","bodyText":"I kept the signature of ConfParser implementation of parse so that they would be consistent. But the feature seems to be not used anywhere in coala.\n\n  \n    \n      coala/coalib/parsing/ConfParser.py\n    \n    \n         Line 38\n      in\n      23b9f62\n    \n    \n    \n    \n\n        \n          \n           def parse(self, input_data, overwrite=False):","diffHunk":"@@ -0,0 +1,313 @@\n+import os\n+import sys\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.exceptions import TOMLKitError\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+import logging\n+\n+\n+class TomlSetting(Setting):\n+    \"\"\"\n+    A subclass of a setting but has an additional parameter\n+    called the original value. This class is required to\n+    infer comments and original data-type of a settings value.\n+    \"\"\"\n+\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+    \"\"\"\n+\n+    The parser that generates sections from data in\n+    TOML config files. Each TOML table is converted\n+    into a section and the all the sections are returned\n+    as a ordered dictionary of sections.\n+\n+    \"\"\"\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+        self.logger = logging.getLogger()\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-27T05:09:38Z","lastEditedAt":"2019-07-27T05:09:56Z","updatedAt":"2019-07-27T05:09:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMjUxMTE3Nw==","url":"https://github.com/coala/coala/pull/6043#issuecomment-512511177","bodyText":"@jayvdb @RaiVaibhav @Nosferatul @ksdme @margobra8 Can you review this PR commit 45dc933","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-17T18:21:13Z","lastEditedAt":"2019-07-21T19:11:03Z","updatedAt":"2019-07-21T19:11:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzY1MDAyMA==","url":"https://github.com/coala/coala/pull/6043#issuecomment-513650020","bodyText":"@Nosferatul All reviews have been implemented.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-22T05:51:16Z","lastEditedAt":null,"updatedAt":"2019-07-22T05:51:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNTU5MjcwMQ==","url":"https://github.com/coala/coala/pull/6043#issuecomment-515592701","bodyText":"Also please check the error given by the appveyor. It doesn't make sense because travis passed","diffHunk":null,"author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzUzNDE3Nw==","createdAt":"2019-07-27T16:19:46Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-07-26T20:40:52Z","lastEditedAt":null,"updatedAt":"2019-07-26T20:40:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNTU5Mjc4MA==","url":"https://github.com/coala/coala/pull/6043#issuecomment-515592780","bodyText":"@ksdme @margobra8 please review","diffHunk":null,"author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-26T20:41:09Z","lastEditedAt":null,"updatedAt":"2019-07-26T20:41:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzk5MjQ2NQ==","url":"https://github.com/coala/coala/pull/6043#issuecomment-517992465","bodyText":"Check Appveyor build failing. Other than that the commits LGTM.","diffHunk":null,"author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"reactions":[],"createdAt":"2019-08-04T10:41:42Z","lastEditedAt":null,"updatedAt":"2019-08-04T10:41:42Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565536503000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6046","number":6046,"title":"Tutorial for writing bear actions","body":"This adds a tutorial in the docs which describes how to write\nactions specific to bears.","comments":0,"createdAt":"2019-07-23T04:36:45Z","updatedAt":"2019-08-11T15:15:03Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6046","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564883274000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6048","number":6048,"title":"Sync Templates with moban","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-07-29T13:30:21Z","updatedAt":"2019-08-04T01:47:54Z","closedAt":null,"state":"open","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6048","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM2NzM5OQ==","url":"https://github.com/coala/coala/pull/6048#discussion_r310367399","bodyText":"These changes were sync'd with the Fudge CI PR.\nPlease rebase and there should only be two files needing updating now.","diffHunk":"@@ -1,63 +1,92 @@\n+image: Visual Studio 2015","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-08-04T01:47:54Z","lastEditedAt":null,"updatedAt":"2019-08-04T01:47:54Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566401670000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6049","number":6049,"title":"ConfigurationGathering.py: Run coala based on style guides","body":"This PR allows users to run coala without writing\nany configuration files. The user can specify the\nstyle-guide they want to run coala on. Currently\nhandful of styleguides for java, python, html\nand cpp are supported.\nCloses #4609\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2019-08-02T13:53:27Z","updatedAt":"2019-08-21T15:34:30Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6049","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjcyNDI5OA==","url":"https://github.com/coala/coala/pull/6049#discussion_r312724298","bodyText":"A better integration mechanism would be to provide a way to bootstrap a .coafile instead.\nFor example,\ncoala --generate-config py,cpp,html \n\nAnd this utility should just download corresponding style files from a repo, collate them and save as .coafile.","diffHunk":"@@ -155,6 +155,10 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('--init', nargs=2, metavar='FILE',","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-11T06:12:51Z","lastEditedAt":null,"updatedAt":"2019-08-11T06:12:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjcyNDM3Ng==","url":"https://github.com/coala/coala/pull/6049#discussion_r312724376","bodyText":"moban integration at a later point can add a whole lot more features.","diffHunk":"@@ -155,6 +155,10 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('--init', nargs=2, metavar='FILE',","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-11T06:15:54Z","lastEditedAt":null,"updatedAt":"2019-08-11T06:15:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjcyNDQ0MA==","url":"https://github.com/coala/coala/pull/6049#discussion_r312724440","bodyText":"PrajwalM2212/coala-styles#1 (comment)","diffHunk":"@@ -155,6 +155,10 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('--init', nargs=2, metavar='FILE',","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-11T06:19:04Z","lastEditedAt":null,"updatedAt":"2019-08-11T06:19:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjgzNDE4Ng==","url":"https://github.com/coala/coala/pull/6049#discussion_r312834186","bodyText":"@ksdme Done.\nUsers can now run coala -g python pep8 -g cpp google and this will bootstrap the .coafile with configurations for pep8 and cpp google style guides.","diffHunk":"@@ -155,6 +155,10 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('--init', nargs=2, metavar='FILE',","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-12T09:11:04Z","lastEditedAt":null,"updatedAt":"2019-08-12T09:11:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAwNjAzNQ==","url":"https://github.com/coala/coala/pull/6049#discussion_r313006035","bodyText":"This help message needs an update.","diffHunk":"@@ -155,6 +155,13 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('-g',\n+                              '--generate-config', nargs=2,\n+                              action='append',\n+                              metavar='FILE',\n+                              help='Run coala based on a language'","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:11:28Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:11:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAwNjM1Nw==","url":"https://github.com/coala/coala/pull/6049#discussion_r313006357","bodyText":"Why is there a limit on nargs? Shouldn't this be + instead?","diffHunk":"@@ -155,6 +155,13 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('-g',\n+                              '--generate-config', nargs=2,","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:12:14Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:12:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAwNjYzMA==","url":"https://github.com/coala/coala/pull/6049#discussion_r313006630","bodyText":"This belongs to upper block of imports.","diffHunk":"@@ -1,7 +1,9 @@\n import os\n+import shutil\n import sys\n import logging\n \n+import requests","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:12:54Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:12:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAwNzE0NQ==","url":"https://github.com/coala/coala/pull/6049#discussion_r313007145","bodyText":"ConfigurationGathering.py seems to be a weird place for this functionality to be implemented in. This is an action and should probably be handled at an higher level.","diffHunk":"@@ -1,7 +1,9 @@\n import os\n+import shutil","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:14:09Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:14:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAwNzc3Ng==","url":"https://github.com/coala/coala/pull/6049#discussion_r313007776","bodyText":"This needs to at least be defined as a higher scoped string literal variable.","diffHunk":"@@ -448,6 +450,40 @@ def get_filtered_bears(languages,\n     return local_bears, global_bears\n \n \n+def get_style_config(args, config_file):\n+    \"\"\"\n+    Get the style guide configuration files for all\n+    the requested styles and collate them into the\n+    specified config file.\n+    :param args: Alternative pre-parsed CLI arguments.\n+    :param config_file: The config file to collate to\n+    \"\"\"\n+    if args and args.generate_config:\n+        style_list = args.generate_config\n+        base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:15:39Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:15:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAwOTEwNw==","url":"https://github.com/coala/coala/pull/6049#discussion_r313009107","bodyText":"Quite hacky, this should be dropped imo. It could interfere with bear caches. It is fine if we don't have caching mechanism built in as of yet. You can build a simple caching system if you so desire rn.","diffHunk":"@@ -448,6 +450,40 @@ def get_filtered_bears(languages,\n     return local_bears, global_bears\n \n \n+def get_style_config(args, config_file):\n+    \"\"\"\n+    Get the style guide configuration files for all\n+    the requested styles and collate them into the\n+    specified config file.\n+    :param args: Alternative pre-parsed CLI arguments.\n+    :param config_file: The config file to collate to\n+    \"\"\"\n+    if args and args.generate_config:\n+        style_list = args.generate_config\n+        base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'\n+                    'coala-styles/master/coala_styles/styles/')\n+        file_list = []\n+        from coalib.core.Bear import Bear\n+        for style in style_list:\n+            lang = style[0]\n+            author = style[1]\n+            try:\n+                file_list.append(Bear.download_cached_file(","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:18:48Z","lastEditedAt":"2019-08-13T12:06:22Z","updatedAt":"2019-08-13T12:06:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAxMTY2OA==","url":"https://github.com/coala/coala/pull/6049#discussion_r313011668","bodyText":"I think coala --generate-config should be an independent command, it should exit after generating the configuration file.","diffHunk":"@@ -495,6 +531,9 @@ def gather_configuration(acquire_settings,\n         # Note: arg_list can also be []. Hence we cannot use\n         # `arg_list = arg_list or default_list`\n         arg_list = sys.argv[1:] if arg_list is None else arg_list\n+\n+    get_style_config(args, config_file='.coafile')","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:24:49Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:24:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAxMjc4Mw==","url":"https://github.com/coala/coala/pull/6049#discussion_r313012783","bodyText":"Why not lang, author = style?","diffHunk":"@@ -448,6 +450,40 @@ def get_filtered_bears(languages,\n     return local_bears, global_bears\n \n \n+def get_style_config(args, config_file):\n+    \"\"\"\n+    Get the style guide configuration files for all\n+    the requested styles and collate them into the\n+    specified config file.\n+    :param args: Alternative pre-parsed CLI arguments.\n+    :param config_file: The config file to collate to\n+    \"\"\"\n+    if args and args.generate_config:\n+        style_list = args.generate_config\n+        base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'\n+                    'coala-styles/master/coala_styles/styles/')\n+        file_list = []\n+        from coalib.core.Bear import Bear\n+        for style in style_list:\n+            lang = style[0]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:27:24Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:27:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAxMzY3Mg==","url":"https://github.com/coala/coala/pull/6049#discussion_r313013672","bodyText":"It should probably accept a list of language:style_name strings. A project could be have more than one language.","diffHunk":"@@ -155,6 +155,13 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('-g',\n+                              '--generate-config', nargs=2,","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:29:27Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:29:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzAxNDYzOA==","url":"https://github.com/coala/coala/pull/6049#discussion_r313014638","bodyText":"The behavior that this tool will append to an existing .coafile should be documented.","diffHunk":"@@ -448,6 +450,40 @@ def get_filtered_bears(languages,\n     return local_bears, global_bears\n \n \n+def get_style_config(args, config_file):\n+    \"\"\"\n+    Get the style guide configuration files for all\n+    the requested styles and collate them into the\n+    specified config file.\n+    :param args: Alternative pre-parsed CLI arguments.\n+    :param config_file: The config file to collate to\n+    \"\"\"\n+    if args and args.generate_config:\n+        style_list = args.generate_config\n+        base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'\n+                    'coala-styles/master/coala_styles/styles/')\n+        file_list = []\n+        from coalib.core.Bear import Bear\n+        for style in style_list:\n+            lang = style[0]\n+            author = style[1]\n+            try:\n+                file_list.append(Bear.download_cached_file(\n+                    (base_url\n+                     + '{}/{}_config.coafile')\n+                    .format(lang, author),\n+                    lang))\n+            except requests.exceptions.HTTPError:\n+                logging.info('{} style guide for {} not avilable'.format(\n+                    author, lang\n+                ))\n+\n+        with open(config_file, 'ab') as config:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-12T16:31:45Z","lastEditedAt":null,"updatedAt":"2019-08-12T16:31:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzM1OTQ2Nw==","url":"https://github.com/coala/coala/pull/6049#discussion_r313359467","bodyText":"Just noticed #6049 (comment), anyway I think language:style_name syntax is a better choice for readability reasons.","diffHunk":"@@ -155,6 +155,13 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('-g',\n+                              '--generate-config', nargs=2,","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-13T12:05:38Z","lastEditedAt":null,"updatedAt":"2019-08-13T12:05:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyMTk3OQ==","url":"https://github.com/coala/coala/pull/6049#discussion_r315521979","bodyText":"This is not the place for it. Probably a beginner issue.","diffHunk":"@@ -97,5 +100,14 @@ def mode_format(args, debug=False):\n     from coalib.output.ConsoleInteraction import print_results_formatted\n \n     _, exitcode, _ = run_coala(\n-            print_results=print_results_formatted, args=args, debug=debug)\n+        print_results=print_results_formatted, args=args, debug=debug)","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:21:45Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:21:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyMjgzNA==","url":"https://github.com/coala/coala/pull/6049#discussion_r315522834","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n                                        help='A tool generate config files '\n        \n          \n            \n                                          help='A tool generate config files '\n          \n          \n            \n                                          help='A tool to generate config files '","diffHunk":"@@ -155,6 +155,12 @@ def default_arg_parser(formatter_class=None):\n         '--no-autoapply-warn', const=True, action='store_const',\n         help='turn off warning about patches not being auto applicable')\n \n+    config_group.add_argument('-g',\n+                              '--generate-config', nargs='+',\n+                              metavar='FILE',\n+                              help='A tool generate config files '","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:25:35Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:25:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyMzA5OA==","url":"https://github.com/coala/coala/pull/6049#discussion_r315523098","bodyText":"Please regroup this import blocks.","diffHunk":"@@ -0,0 +1,125 @@\n+import logging","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:26:42Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:26:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyMzE1OA==","url":"https://github.com/coala/coala/pull/6049#discussion_r315523158","bodyText":"Two import statements?","diffHunk":"@@ -0,0 +1,125 @@\n+import logging\n+import sys\n+from genericpath import exists\n+import os\n+from appdirs import user_data_dir\n+import requests\n+\n+from coalib.misc import Constants\n+from coalib.settings.ConfigurationGathering import (load_configuration,","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:26:59Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:26:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyNTQ4Mg==","url":"https://github.com/coala/coala/pull/6049#discussion_r315525482","bodyText":"Thank you for showing me this.","diffHunk":"@@ -0,0 +1,125 @@\n+import logging\n+import sys\n+from genericpath import exists\n+import os\n+from appdirs import user_data_dir\n+import requests\n+\n+from coalib.misc import Constants\n+from coalib.settings.ConfigurationGathering import (load_configuration,\n+                                                    save_sections)\n+from coalib.settings.Setting import Setting\n+\n+\n+class ConfigGenerator:\n+    \"\"\"\n+    This class can be used top create .coafile\n+    \"\"\"\n+\n+    def __init__(self, args):\n+        self.args = args\n+        self.collector_file = Constants.local_coafile\n+        self.base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'\n+                         'coala-styles/master/coala_styles/styles/')\n+\n+    def download_cached_file(self, url, filename):\n+        \"\"\"\n+        Download the config file or return the existing config\n+        file if it already exists.\n+\n+        :param url: The url to download from\n+        :param filename: The filename in which the config will be saved\n+        :return: Return filename\n+        \"\"\"\n+        filename = os.path.join(self.data_dir, filename)\n+        if exists(filename):\n+            return filename\n+\n+        response = requests.get(url, stream=True, timeout=20)\n+        response.raise_for_status()","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:36:23Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:36:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyNzQ5Nw==","url":"https://github.com/coala/coala/pull/6049#discussion_r315527497","bodyText":"Dangling parenthesis looks weird.","diffHunk":"@@ -0,0 +1,125 @@\n+import logging\n+import sys\n+from genericpath import exists\n+import os\n+from appdirs import user_data_dir\n+import requests\n+\n+from coalib.misc import Constants\n+from coalib.settings.ConfigurationGathering import (load_configuration,\n+                                                    save_sections)\n+from coalib.settings.Setting import Setting\n+\n+\n+class ConfigGenerator:\n+    \"\"\"\n+    This class can be used top create .coafile\n+    \"\"\"\n+\n+    def __init__(self, args):\n+        self.args = args\n+        self.collector_file = Constants.local_coafile\n+        self.base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'\n+                         'coala-styles/master/coala_styles/styles/')\n+\n+    def download_cached_file(self, url, filename):\n+        \"\"\"\n+        Download the config file or return the existing config\n+        file if it already exists.\n+\n+        :param url: The url to download from\n+        :param filename: The filename in which the config will be saved\n+        :return: Return filename\n+        \"\"\"\n+        filename = os.path.join(self.data_dir, filename)\n+        if exists(filename):\n+            return filename\n+\n+        response = requests.get(url, stream=True, timeout=20)\n+        response.raise_for_status()\n+\n+        with open(filename, 'ab') as file:\n+            for chunk in response.iter_content(125):\n+                file.write(chunk)\n+        return filename\n+\n+    @property\n+    def data_dir(self):\n+        \"\"\"\n+        Define the path where downloaded config files will be stored.\n+\n+        :return: data_dir path\n+        \"\"\"\n+        data_dir = os.path.abspath(os.path.join(\n+            user_data_dir('coala-styles')))\n+\n+        os.makedirs(data_dir, exist_ok=True)\n+        return data_dir\n+\n+    def create_coafile(self):\n+        \"\"\"\n+        Generate .coafile based on user preferences.\n+\n+        Downloads the config files if they don't already\n+        exist. Combines the style-based config files\n+        and writes them into .coafile.\n+        \"\"\"\n+        config_groups = self.args.generate_config\n+        file_list = []\n+        lint_files_dict = {}\n+\n+        for config_group in config_groups:\n+            config_group_args = config_group.split(':')\n+            try:\n+                if len(config_group_args) == 2:\n+                    lang, author = config_group_args\n+                else:\n+                    lang, author, lint_files_dict[lang] = config_group_args\n+            except ValueError:\n+                logging.error('Supply command line args in '\n+                              'the form language:style_name '\n+                              )","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:43:30Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:43:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyNzcxOQ==","url":"https://github.com/coala/coala/pull/6049#discussion_r315527719","bodyText":"Exit with an error code. coala generally seems to exit with 255.","diffHunk":"@@ -0,0 +1,125 @@\n+import logging\n+import sys\n+from genericpath import exists\n+import os\n+from appdirs import user_data_dir\n+import requests\n+\n+from coalib.misc import Constants\n+from coalib.settings.ConfigurationGathering import (load_configuration,\n+                                                    save_sections)\n+from coalib.settings.Setting import Setting\n+\n+\n+class ConfigGenerator:\n+    \"\"\"\n+    This class can be used top create .coafile\n+    \"\"\"\n+\n+    def __init__(self, args):\n+        self.args = args\n+        self.collector_file = Constants.local_coafile\n+        self.base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'\n+                         'coala-styles/master/coala_styles/styles/')\n+\n+    def download_cached_file(self, url, filename):\n+        \"\"\"\n+        Download the config file or return the existing config\n+        file if it already exists.\n+\n+        :param url: The url to download from\n+        :param filename: The filename in which the config will be saved\n+        :return: Return filename\n+        \"\"\"\n+        filename = os.path.join(self.data_dir, filename)\n+        if exists(filename):\n+            return filename\n+\n+        response = requests.get(url, stream=True, timeout=20)\n+        response.raise_for_status()\n+\n+        with open(filename, 'ab') as file:\n+            for chunk in response.iter_content(125):\n+                file.write(chunk)\n+        return filename\n+\n+    @property\n+    def data_dir(self):\n+        \"\"\"\n+        Define the path where downloaded config files will be stored.\n+\n+        :return: data_dir path\n+        \"\"\"\n+        data_dir = os.path.abspath(os.path.join(\n+            user_data_dir('coala-styles')))\n+\n+        os.makedirs(data_dir, exist_ok=True)\n+        return data_dir\n+\n+    def create_coafile(self):\n+        \"\"\"\n+        Generate .coafile based on user preferences.\n+\n+        Downloads the config files if they don't already\n+        exist. Combines the style-based config files\n+        and writes them into .coafile.\n+        \"\"\"\n+        config_groups = self.args.generate_config\n+        file_list = []\n+        lint_files_dict = {}\n+\n+        for config_group in config_groups:\n+            config_group_args = config_group.split(':')\n+            try:\n+                if len(config_group_args) == 2:\n+                    lang, author = config_group_args\n+                else:\n+                    lang, author, lint_files_dict[lang] = config_group_args\n+            except ValueError:\n+                logging.error('Supply command line args in '\n+                              'the form language:style_name '\n+                              )\n+                sys.exit()","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:44:13Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:44:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyNzk4MA==","url":"https://github.com/coala/coala/pull/6049#discussion_r315527980","bodyText":"I don't think this style is very good.","diffHunk":"@@ -0,0 +1,125 @@\n+import logging\n+import sys\n+from genericpath import exists\n+import os\n+from appdirs import user_data_dir\n+import requests\n+\n+from coalib.misc import Constants\n+from coalib.settings.ConfigurationGathering import (load_configuration,\n+                                                    save_sections)\n+from coalib.settings.Setting import Setting\n+\n+\n+class ConfigGenerator:\n+    \"\"\"\n+    This class can be used top create .coafile\n+    \"\"\"\n+\n+    def __init__(self, args):\n+        self.args = args\n+        self.collector_file = Constants.local_coafile\n+        self.base_url = ('https://raw.githubusercontent.com/PrajwalM2212/'\n+                         'coala-styles/master/coala_styles/styles/')\n+\n+    def download_cached_file(self, url, filename):\n+        \"\"\"\n+        Download the config file or return the existing config\n+        file if it already exists.\n+\n+        :param url: The url to download from\n+        :param filename: The filename in which the config will be saved\n+        :return: Return filename\n+        \"\"\"\n+        filename = os.path.join(self.data_dir, filename)\n+        if exists(filename):\n+            return filename\n+\n+        response = requests.get(url, stream=True, timeout=20)\n+        response.raise_for_status()\n+\n+        with open(filename, 'ab') as file:\n+            for chunk in response.iter_content(125):\n+                file.write(chunk)\n+        return filename\n+\n+    @property\n+    def data_dir(self):\n+        \"\"\"\n+        Define the path where downloaded config files will be stored.\n+\n+        :return: data_dir path\n+        \"\"\"\n+        data_dir = os.path.abspath(os.path.join(\n+            user_data_dir('coala-styles')))\n+\n+        os.makedirs(data_dir, exist_ok=True)\n+        return data_dir\n+\n+    def create_coafile(self):\n+        \"\"\"\n+        Generate .coafile based on user preferences.\n+\n+        Downloads the config files if they don't already\n+        exist. Combines the style-based config files\n+        and writes them into .coafile.\n+        \"\"\"\n+        config_groups = self.args.generate_config\n+        file_list = []\n+        lint_files_dict = {}\n+\n+        for config_group in config_groups:\n+            config_group_args = config_group.split(':')\n+            try:\n+                if len(config_group_args) == 2:\n+                    lang, author = config_group_args\n+                else:\n+                    lang, author, lint_files_dict[lang] = config_group_args\n+            except ValueError:\n+                logging.error('Supply command line args in '\n+                              'the form language:style_name '\n+                              )\n+                sys.exit()\n+\n+            try:\n+                file_name = (self.download_cached_file(\n+                    (self.base_url + '{}/{}_config.coafile')\n+                    .format(lang, author),\n+                    lang + '_' + author))\n+\n+                file_list.append(file_name)\n+\n+            except requests.exceptions.HTTPError:\n+                logging.warning('{} style guide for {} not avilable'.format(\n+                    author, lang\n+                ))\n+\n+        with open(self.collector_file, 'a') as outfile:\n+            for fname in file_list:\n+                with open(fname) as infile:\n+                    for line in infile:\n+                        outfile.write(line)\n+\n+        self.args.save = True\n+        self.args.config = self.collector_file\n+\n+        sections, targets = load_configuration(None, None,\n+                                               args=self.args)\n+\n+        sections.get('cli').delete_setting('config')\n+        sections.get('cli').delete_setting('generate_config')\n+\n+        for lang, lint_files in lint_files_dict.items():\n+            if sections.get(lang, None):\n+                sections.get(lang).append(\n+                    Setting('files',\n+                            lint_files,\n+                            ))","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:45:07Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:45:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyODEwNA==","url":"https://github.com/coala/coala/pull/6049#discussion_r315528104","bodyText":"?","diffHunk":"@@ -495,6 +494,7 @@ def gather_configuration(acquire_settings,\n         # Note: arg_list can also be []. Hence we cannot use\n         # `arg_list = arg_list or default_list`\n         arg_list = sys.argv[1:] if arg_list is None else arg_list\n+","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:45:31Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:45:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyODI4NQ==","url":"https://github.com/coala/coala/pull/6049#discussion_r315528285","bodyText":"Change not in scope.","diffHunk":"@@ -109,11 +108,10 @@ def test_default_coafile_deprecation(self, capture):\n \n         capture.check(\n             ('root', 'WARNING', 'Filename default_coafile has been deprecated. '\n-             'Please use system_coafile instead.')\n+                                'Please use system_coafile instead.')","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:46:07Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:46:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyODMwOQ==","url":"https://github.com/coala/coala/pull/6049#discussion_r315528309","bodyText":"Change not in scope.","diffHunk":"@@ -25,11 +25,10 @@\n     gather_configuration,\n     get_filtered_bears,\n     load_configuration,\n-)\n+    )","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:46:12Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:46:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzcxMTQ4OA==","url":"https://github.com/coala/coala/pull/6049#issuecomment-517711488","bodyText":"Currently, 5 style guides are supported across 4 languages (cpp, java, html, python).\ncoala --init language style --files = [files to lint] will run style guide lint on the required files\nEg:-\ncoala --init python pep8 --files = a.py will check a.py against pep8 guidelines.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-02T13:59:58Z","lastEditedAt":"2019-08-02T14:44:59Z","updatedAt":"2019-08-02T14:44:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzcyNzkzMg==","url":"https://github.com/coala/coala/pull/6049#issuecomment-517727932","bodyText":"@jayvdb @RaiVaibhav @Nosferatul @ksdme @margobra8 Can you review this PR ?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-02T14:45:35Z","lastEditedAt":null,"updatedAt":"2019-08-02T14:45:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzk5MjM3NQ==","url":"https://github.com/coala/coala/pull/6049#issuecomment-517992375","bodyText":"Check the Travis CI build faling. Exit code 1 is given when running pip install coala-bears.zip[alldeps] --pre -U. Other than that, commits LGTM.","diffHunk":null,"author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"createdAt":"2019-08-04T10:40:01Z","lastEditedAt":null,"updatedAt":"2019-08-04T10:40:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDE1NjQ3MA==","url":"https://github.com/coala/coala/pull/6049#issuecomment-520156470","bodyText":"Passing now, could merge\ncc: @Nosferatul or @li-boxuan","diffHunk":null,"author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"createdAt":"2019-08-10T15:14:17Z","lastEditedAt":null,"updatedAt":"2019-08-10T15:14:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDE3Mzc5NQ==","url":"https://github.com/coala/coala/pull/6049#issuecomment-520173795","bodyText":"There is still a problem with Travis. I have temporarily fixed it by adding ruamel.yaml<=0.15.0.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-10T19:27:27Z","lastEditedAt":null,"updatedAt":"2019-08-10T19:27:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDE3Nzc5Ng==","url":"https://github.com/coala/coala/pull/6049#issuecomment-520177796","bodyText":"The second commit uses https://github.com/PrajwalM2212/coala-styles for configuration files.\nThe first commit has configuration files within the repo.\nBased on the needs we can choose one of them.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-10T20:33:45Z","lastEditedAt":"2019-08-10T20:36:30Z","updatedAt":"2019-08-10T20:36:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDkyNTA3OA==","url":"https://github.com/coala/coala/pull/6049#issuecomment-520925078","bodyText":"@ksdme Can you see if this approach is okay.\nI have made this into an independent command.\nUser can follow lang:style:files format. Also for the default or all or cli  section files can be specified as well.\nSo we can use something like coala -g python:pep8:a.py cpp:google:b.cpp --files c\nThis will generate a coafile that's fully functional out of the box.\nThis will generate\n[python]\nbears = PEP8Bear, PycodestyleBear\nlanguage = Python\nfiles = a.py\n\n[cpp]\nbears = CPPLintBear\nlanguage = CPP\nfiles = b.cpp\n\n[cli]\nconfig = .coafile\nfiles = c\ngenerate_config = python:pep8:a.py,cpp:google:b.cpp\n\nI should still write tests. I thought you could see the approach while I write tests.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-13T17:16:04Z","lastEditedAt":"2019-08-13T17:27:44Z","updatedAt":"2019-08-13T17:27:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMTU0OTkxOQ==","url":"https://github.com/coala/coala/pull/6049#issuecomment-521549919","bodyText":"Tests have been added.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-15T07:48:33Z","lastEditedAt":null,"updatedAt":"2019-08-15T07:48:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMTYxMjA2OA==","url":"https://github.com/coala/coala/pull/6049#issuecomment-521612068","bodyText":"@ksdme The documentation PR for this coala/documentation#599","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-15T11:38:14Z","lastEditedAt":null,"updatedAt":"2019-08-15T11:38:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMjI5MjM5Nw==","url":"https://github.com/coala/coala/pull/6049#issuecomment-522292397","bodyText":"@ksdme Can you review this?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-18T05:26:35Z","lastEditedAt":"2019-08-19T12:49:04Z","updatedAt":"2019-08-19T12:49:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMjg3MDAxMA==","url":"https://github.com/coala/coala/pull/6049#issuecomment-522870010","bodyText":"I love the approach except for CLI section. I know we handle CLI section in an unnecessarily special way, but you shouldn't include that in the generated config. The way it should work ideally is to have a generate an all section and have every other section be a child of all. Such as all.python, all.c etc and dump all the options such as files in it. Is there any error handling built in, for example what happens if I only pass python:pep8 and omit the third field? also can I pass multiple file patterns for each style say python:google:*.py,**/**/one/*.py\nBut if this system works for now, I am good with it. We can make improvements later.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:16:12Z","lastEditedAt":"2019-08-20T06:19:21Z","updatedAt":"2019-08-20T06:19:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMjg3OTIxOA==","url":"https://github.com/coala/coala/pull/6049#issuecomment-522879218","bodyText":"One other feature addition we can have is to support exclusions in -g syntax i.e. lang:author:files:excludes. Also, it would be good to assume that files=** and excludes= if they are missing. This would make it more flexible.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2019-08-20T06:48:49Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:48:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzA2MjI3NQ==","url":"https://github.com/coala/coala/pull/6049#issuecomment-523062275","bodyText":"also can I pass multiple file patterns for each style say python:google:*.py,**/**/one/*.py\n\nYes\n\nIs there any error handling built in, for example what happens if I only pass python:pep8 and omit the third field?\n\nYes\nIf files and excludes are missed default values will be taken.\n\nOne other feature addition we can have is to support exclusions in -g syntax i.e. lang:author:files:excludes. Also, it would be good to assume that files=** and excludes= if they are missing. This would make it more flexible.\n\nAdded\n\nI know we handle CLI section in an unnecessarily special way, but you shouldn't include that in the generated config.\n\ncli has been replaced with all","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-20T15:16:18Z","lastEditedAt":"2019-08-21T15:01:44Z","updatedAt":"2019-08-21T15:01:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzEzNzA2NQ==","url":"https://github.com/coala/coala/pull/6049#issuecomment-523137065","bodyText":"Appveyor is failing due to timeout on coalaTest.py. I have not made changes in this part of the codebase.\nNot sure if appveyor build is broken or if there is a problem on appveyor side.  I will try to build again tomorrow.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-20T18:22:38Z","lastEditedAt":null,"updatedAt":"2019-08-20T18:22:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzI2MDM5NA==","url":"https://github.com/coala/coala/pull/6049#issuecomment-523260394","bodyText":"appveyor build is passing as well.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-21T01:43:02Z","lastEditedAt":null,"updatedAt":"2019-08-21T01:43:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565163782000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6054","number":6054,"title":".travis.yml: Build on xenial using template","body":"#6053 is only\noccurring in the Travis trusty environment.\nUpgrading to xenial bypasses that problem, but\nrequires a few workarounds, especially replacing the\nPython 3.4.2 job with Python '3.4' which causes\nTravis to provide Python 3.4.8.\nAdd gravis to template to switch jdk versions on Xenial.\nUninstall setuptools multiple times on Xenial for the same\nreason it was required once on Trusty.  Also remove\nunnecessary pipenv which causes pip to complain about\nincompatibilities.\nDisable new template for JinjaBear due to its inability\nto handle indentation.\n.misc/check_moban.sh is no longer needed as the\nTravis template provides a moban job, and the latest\nmoban handles branches.\nRelated to #4708\nRelated to #6053\nImplements https://gitlab.com/coala/mobans/merge_requests/135 , which needs to be approved first.","comments":0,"createdAt":"2019-08-04T16:04:51Z","updatedAt":"2019-08-07T07:43:02Z","closedAt":"2019-08-07T07:35:27Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6054","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5MzU4NQ==","url":"https://github.com/coala/coala/pull/6054#discussion_r310393585","bodyText":"Note that if we find a better solution for #6053 on trusty, the old Python 3.4.2 minimum dep will be restored, or maybe before then the need for py34 has evaporated.","diffHunk":"@@ -0,0 +1,151 @@\n+{% extends 'ci/travis.yml.jj2' %}\n+\n+{% block custom_python_versions %}\n+python:\n+{% if travis_dist not in ['precise', 'trusty'] %}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-04T16:08:28Z","lastEditedAt":null,"updatedAt":"2019-08-04T16:08:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDUyMTcxMA==","url":"https://github.com/coala/coala/pull/6054#discussion_r310521710","bodyText":"Template moved to https://gitlab.com/coala/mobans/merge_requests/135 , as coala-quickstart and others need the same fixes","diffHunk":"@@ -0,0 +1,151 @@\n+{% extends 'ci/travis.yml.jj2' %}\n+\n+{% block custom_python_versions %}\n+python:\n+{% if travis_dist not in ['precise', 'trusty'] %}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-05T09:45:58Z","lastEditedAt":null,"updatedAt":"2019-08-05T09:45:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTAzOTI3OQ==","url":"https://github.com/coala/coala/pull/6054#discussion_r311039279","bodyText":"is this required? As you have moved this file","diffHunk":"@@ -134,6 +134,8 @@ ignore = node_modules/\n [jinja2]\n bears = Jinja2Bear\n files = **.jj2\n+check_end_labels = False\n+ignore = .moban.dt/core-travis.yml.jj2","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-06T12:41:27Z","lastEditedAt":null,"updatedAt":"2019-08-06T12:41:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTExODg2MA==","url":"https://github.com/coala/coala/pull/6054#discussion_r311118860","bodyText":"Good catch.  That should be removed.","diffHunk":"@@ -134,6 +134,8 @@ ignore = node_modules/\n [jinja2]\n bears = Jinja2Bear\n files = **.jj2\n+check_end_labels = False\n+ignore = .moban.dt/core-travis.yml.jj2","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODE5MjY0Mw==","createdAt":"2019-08-06T15:15:19Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-06T15:10:39Z","lastEditedAt":null,"updatedAt":"2019-08-06T15:10:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTQwOTM5Mw==","url":"https://github.com/coala/coala/pull/6054#discussion_r311409393","bodyText":"Just a thought, In test-requirements.txt we're installing another version of moban for python version > 3.0 and here we're installing a different version. Shouldn't they be same?","diffHunk":"@@ -14,19 +16,27 @@ stages:\n     if: branch = master AND type = push\n \n .disable_global: &disable_global\n+  addons: false\n+  cache: false\n+  env: {}\n+  python: false\n   before_install: false\n-  install: true\n+  install: false\n   before_script: false\n+  script: false\n   after_success: false\n   after_failure: false\n+  before_deploy: false\n+  deploy: false\n \n-.check_moban: &check_moban\n+.moban: &moban\n   <<: *disable_global\n   python: 3.6\n   stage: moban\n-  install: pip install moban\n-  script: .misc/check_moban.sh\n-  if: branch != master OR type = pull_request\n+  install: pip install moban>=0.0.4","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-07T07:41:13Z","lastEditedAt":null,"updatedAt":"2019-08-07T07:41:13Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564989782000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6055","number":6055,"title":"Update test-requirements.txt","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-08-05T07:23:02Z","updatedAt":"2019-08-05T07:23:02Z","closedAt":null,"state":"open","user":{"login":"S963ourab","avatarUrl":"https://avatars2.githubusercontent.com/u/26776444?v=4"},"owner":{"login":"S963ourab","avatarUrl":"https://avatars2.githubusercontent.com/u/26776444?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6055","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565801347000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6057","number":6057,"title":"Support for bears to suggest multiple patches","body":"This PR is on top of #6029.\nAdded a new attribute in Result class, alternate_diffs. It is a list of dictionaries. For each alternate patch, a corresponding diff should be created and added to alternate_diffs.\nThen in ConsoleInteraction module get_alternate_patch_actions function adds mulitple instances of AlternatePatchAction to the list of action.\nAlternatePatchAction when applied updates the result.diffs and applies ShowPatchAction.","comments":0,"createdAt":"2019-08-12T03:24:13Z","updatedAt":"2019-08-14T16:49:07Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6057","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1563963855000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6015","number":6015,"title":"Fix EOF error","body":"When running coala with -A or --single-action flag,\nthe program will exit 1 if user pressing Ctrl + D.\nNow, the program will exit 0.\nFixes #6003\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-04-21T18:17:35Z","updatedAt":"2019-07-24T10:24:15Z","closedAt":null,"state":"open","user":{"login":"RuidongLiu","avatarUrl":"https://avatars3.githubusercontent.com/u/35019392?v=4"},"owner":{"login":"RuidongLiu","avatarUrl":"https://avatars3.githubusercontent.com/u/35019392?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6015","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxMDkxODQxMw==","url":"https://github.com/coala/coala/pull/6015#issuecomment-510918413","bodyText":"IMO A better solution would be to catch the exception and pass it to get_exitcode function which is in Exceptions.py.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-12T14:57:51Z","lastEditedAt":"2019-07-24T10:24:15Z","updatedAt":"2019-07-24T10:24:15Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566216511000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6026","number":6026,"title":"Add `require_files` settings","body":"This adds couple of new settings to coala,\nrequire_files_not_empty and require_files_for_each_glob\nto require the existence of the files.\nRelated to coala/coala-bears#527\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-18T03:21:50Z","updatedAt":"2019-08-19T12:08:31Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6026","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565168505000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6027","number":6027,"title":" TomlConfParser.py: Support Toml","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2019-06-18T06:50:43Z","updatedAt":"2019-08-07T09:01:45Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6027","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDYzMjUyNw==","url":"https://github.com/coala/coala/pull/6027#discussion_r300632527","bodyText":"run what? please change the help","diffHunk":"@@ -136,6 +136,10 @@ def default_arg_parser(formatter_class=None):\n         help='find {} in ancestors of the working directory'.format(\n             Constants.local_coafile))\n \n+    config_group.add_argument('-T', '--use-toml', action='store_const',\n+                              const=True, help='run by using toml config'\n+                                               'files')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-05T10:36:40Z","lastEditedAt":null,"updatedAt":"2019-07-05T10:36:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDYzNDg0NQ==","url":"https://github.com/coala/coala/pull/6027#discussion_r300634845","bodyText":"in your coafile.toml the section name id Default, so even if the deafult section is there it will create a section name default","diffHunk":"@@ -0,0 +1,255 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns or creates a section with given name\n+\n+        :param name: The name of the section\n+        :param create_if_not_exists: create a section if it does not exist\n+        :return: Section of given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        Generates section\n+\n+        :param item: Configuration group\n+        :param origin: The file from which the configuration originated\n+        \"\"\"\n+\n+        section_name = item[0]\n+        section_content = item[1]\n+        appends = []\n+\n+        # Handle Default section\n+        if not isinstance(section_content, Table):\n+            original_value = section_content\n+            current_section = self.get_section('default', True)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-05T10:45:45Z","lastEditedAt":null,"updatedAt":"2019-07-05T10:45:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDYzNTM0MQ==","url":"https://github.com/coala/coala/pull/6027#discussion_r300635341","bodyText":"comment on what is this condition","diffHunk":"@@ -0,0 +1,255 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns or creates a section with given name\n+\n+        :param name: The name of the section\n+        :param create_if_not_exists: create a section if it does not exist\n+        :return: Section of given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        Generates section\n+\n+        :param item: Configuration group\n+        :param origin: The file from which the configuration originated\n+        \"\"\"\n+\n+        section_name = item[0]\n+        section_content = item[1]\n+        appends = []\n+\n+        # Handle Default section\n+        if not isinstance(section_content, Table):\n+            original_value = section_content\n+            current_section = self.get_section('default', True)\n+            logging.warning('A setting does not have a section.'\n+                            'This is a deprecated feature please '\n+                            'put this setting in a section defined'\n+                            ' with `[<your-section-name]` in a '\n+                            'configuration file.')\n+\n+            if section_name is None:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-05T10:47:26Z","lastEditedAt":null,"updatedAt":"2019-07-05T10:47:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDYzNjEwMw==","url":"https://github.com/coala/coala/pull/6027#discussion_r300636103","bodyText":"Comment what exactly it is doing like if you put just like generates section then how will you different it get_section","diffHunk":"@@ -0,0 +1,255 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns or creates a section with given name\n+\n+        :param name: The name of the section\n+        :param create_if_not_exists: create a section if it does not exist\n+        :return: Section of given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        Generates section","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-05T10:50:10Z","lastEditedAt":null,"updatedAt":"2019-07-05T10:50:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDYzNjY1OQ==","url":"https://github.com/coala/coala/pull/6027#discussion_r300636659","bodyText":"Just remember these all name should be converted to lowercase when even if it is capitalise in the toml file.","diffHunk":"@@ -0,0 +1,255 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns or creates a section with given name\n+\n+        :param name: The name of the section\n+        :param create_if_not_exists: create a section if it does not exist\n+        :return: Section of given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        Generates section\n+\n+        :param item: Configuration group\n+        :param origin: The file from which the configuration originated\n+        \"\"\"\n+\n+        section_name = item[0]\n+        section_content = item[1]\n+        appends = []\n+\n+        # Handle Default section\n+        if not isinstance(section_content, Table):\n+            original_value = section_content\n+            current_section = self.get_section('default', True)\n+            logging.warning('A setting does not have a section.'\n+                            'This is a deprecated feature please '\n+                            'put this setting in a section defined'\n+                            ' with `[<your-section-name]` in a '\n+                            'configuration file.')\n+\n+            if section_name is None:\n+                section_content = section_content.as_string()\n+                section_name = '(' + 'comment' + str(self.__rand_helper) + ')'\n+                self.__rand_helper += 1\n+            self.create_setting(current_section,\n+                                section_name,\n+                                section_content,\n+                                original_value,\n+                                origin,\n+                                False\n+                                )\n+            return\n+\n+        # Get the keys to be appended\n+        if 'appends' in section_content.keys():","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-05T10:52:24Z","lastEditedAt":null,"updatedAt":"2019-07-05T10:52:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDYzNzI2Ng==","url":"https://github.com/coala/coala/pull/6027#discussion_r300637266","bodyText":"What is TomlConfParser comment please","diffHunk":"@@ -0,0 +1,255 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-05T10:54:35Z","lastEditedAt":null,"updatedAt":"2019-07-05T10:54:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDc2ODM1OA==","url":"https://github.com/coala/coala/pull/6027#discussion_r300768358","bodyText":"This is for settings at top of the file without any sections. These settings which do not belong to any sections will be added to the default section.","diffHunk":"@@ -0,0 +1,255 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns or creates a section with given name\n+\n+        :param name: The name of the section\n+        :param create_if_not_exists: create a section if it does not exist\n+        :return: Section of given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        Generates section\n+\n+        :param item: Configuration group\n+        :param origin: The file from which the configuration originated\n+        \"\"\"\n+\n+        section_name = item[0]\n+        section_content = item[1]\n+        appends = []\n+\n+        # Handle Default section\n+        if not isinstance(section_content, Table):\n+            original_value = section_content\n+            current_section = self.get_section('default', True)","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NjA4NDExNQ==","createdAt":"2019-07-07T11:48:54Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2019-07-05T18:31:35Z","lastEditedAt":null,"updatedAt":"2019-07-05T18:31:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDgyMzQ4OA==","url":"https://github.com/coala/coala/pull/6027#discussion_r300823488","bodyText":"__prepare_key in Section.py seems to be handling it for us.","diffHunk":"@@ -0,0 +1,255 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns or creates a section with given name\n+\n+        :param name: The name of the section\n+        :param create_if_not_exists: create a section if it does not exist\n+        :return: Section of given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        Generates section\n+\n+        :param item: Configuration group\n+        :param origin: The file from which the configuration originated\n+        \"\"\"\n+\n+        section_name = item[0]\n+        section_content = item[1]\n+        appends = []\n+\n+        # Handle Default section\n+        if not isinstance(section_content, Table):\n+            original_value = section_content\n+            current_section = self.get_section('default', True)\n+            logging.warning('A setting does not have a section.'\n+                            'This is a deprecated feature please '\n+                            'put this setting in a section defined'\n+                            ' with `[<your-section-name]` in a '\n+                            'configuration file.')\n+\n+            if section_name is None:\n+                section_content = section_content.as_string()\n+                section_name = '(' + 'comment' + str(self.__rand_helper) + ')'\n+                self.__rand_helper += 1\n+            self.create_setting(current_section,\n+                                section_name,\n+                                section_content,\n+                                original_value,\n+                                origin,\n+                                False\n+                                )\n+            return\n+\n+        # Get the keys to be appended\n+        if 'appends' in section_content.keys():","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NjA4NDExMQ==","createdAt":"2019-07-07T11:48:38Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2019-07-06T07:42:04Z","lastEditedAt":null,"updatedAt":"2019-07-06T07:42:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg3MzI0Ng==","url":"https://github.com/coala/coala/pull/6027#discussion_r300873246","bodyText":"No need of else if you are using the return","diffHunk":"@@ -0,0 +1,302 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    \"\"\"\n+    A subclass of a setting but has an additional parameter\n+    called the original value. This class is required to\n+    infer comments and original data-type of a settings value.\n+    \"\"\"\n+\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+    \"\"\"\n+\n+    The parser that generates sections from data in\n+    TOML config files. Each TOML table is converted\n+    into a section and the all the sections are returned\n+    as a ordered dictionary of sections.\n+\n+    \"\"\"\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns section with the given name if it exists,\n+        otherwise creates a new section with the given name.\n+\n+        :param name: The name of the section to be returned\n+        :param create_if_not_exists: create the section if it does not exist\n+        :return: section of the given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        This method is the core of the parser. It converts\n+        TOML tables into sections\n+\n+        :param item: Configuration group\n+        :param origin: The file from which the configuration originated\n+        \"\"\"\n+\n+        section_name = item[0]\n+        section_content = item[1]\n+        appends = []\n+\n+        # Add settings that do not belong to any sections into default section\n+        if not isinstance(section_content, Table):\n+            original_value = section_content\n+            current_section = self.get_section('default', True)\n+            logging.warning('A setting does not have a section.'\n+                            'This is a deprecated feature please '\n+                            'put this setting in a section defined'\n+                            ' with `[<your-section-name]` in a '\n+                            'configuration file.')\n+\n+            # Store full-line comments that appear before any sections\n+            if section_name is None:\n+                section_content = section_content.as_string()\n+                section_name = '(' + 'comment' + str(self.__rand_helper) + ')'\n+                self.__rand_helper += 1\n+\n+            self.create_setting(current_section,\n+                                section_name,\n+                                section_content,\n+                                original_value,\n+                                origin,\n+                                False\n+                                )\n+            return\n+\n+        # Get the keys to be appended\n+        if 'appends' in section_content.keys():\n+            appends = section_content.get('appends')\n+\n+        # If inherits = [ 'a' , 'b'] is in section 'all',\n+        # then generate 'all.a' and 'all.b' sections\n+        if 'inherits' in section_content.keys():\n+\n+            inherits = section_content.get('inherits')\n+\n+            if not isinstance(inherits, list):\n+                inherits = [inherits]\n+\n+            for parent in inherits:\n+                s_appends = appends\n+                s_name = parent + '.' + section_name.as_string()\n+                current_section = self.get_section(s_name, True)\n+                if isinstance(appends, Table):\n+                    s_appends = appends.get(parent, [])\n+                self.fill_table_settings(current_section, section_content,\n+                                         origin, s_appends)\n+        else:\n+\n+            section_name = section_name.as_string()\n+            current_section = self.get_section(section_name, True)\n+            self.fill_table_settings(current_section, section_content,\n+                                     origin, appends)\n+\n+    def fill_table_settings(self, current_section, section_content,\n+                            origin, appends):\n+        \"\"\"\n+        Parses a table into a section. Works on a single table\n+        at a time.\n+\n+        :param current_section: The section under consideration\n+        :param section_content: The TOML table under consideration\n+        :param origin: The file from which the configuration originated\n+        :param appends: The list of the keys to be appended\n+        \"\"\"\n+        for content_key, content_value in section_content.value.body:\n+\n+            original_value = content_value\n+            # Handle full-line comments\n+            if content_key is None:\n+                content_key = '(' + 'comment' + str(self.__rand_helper) + ')'\n+                self.__rand_helper += 1\n+                self.create_setting(current_section, content_key,\n+                                    content_value.as_string(),\n+                                    original_value,\n+                                    origin, False)\n+                continue\n+            else:\n+                content_key = content_key.as_string()\n+                if isinstance(content_value, Table):\n+                    self.handle_nested_table(content_key, content_value,\n+                                             current_section, appends,\n+                                             origin)\n+                    continue\n+\n+                to_append = False\n+\n+                if not isinstance(content_value, str):\n+                    content_value = self.format_value(content_value)\n+\n+                if content_key in appends:\n+                    to_append = True\n+\n+                self.create_setting(current_section, content_key, content_value,\n+                                    original_value, origin, to_append)\n+\n+    def __init_sections(self):\n+        self.sections = OrderedDict()\n+        self.sections['default'] = Section('Default')\n+        self.__rand_helper = 0\n+\n+    def create_setting(self, current_section, key, value, original_value,\n+                       origin, to_append):\n+        \"\"\"\n+        Adds the given setting to the specified section\n+        \"\"\"\n+        current_section.add_or_create_setting(\n+            TomlSetting(key,\n+                        value,\n+                        original_value,\n+                        SourcePosition(\n+                            str(origin)),\n+                        to_append=to_append,\n+                        # Start ignoring PEP8Bear, PycodestyleBear*\n+                        # they fail to resolve this\n+                        remove_empty_iter_elements=\n+                        self.__remove_empty_iter_elements),\n+            # Stop ignoring\n+            allow_appending=(key == []))\n+\n+    def handle_nested_table(self, content_key, content_value,\n+                            current_section, appends, origin):\n+        \"\"\"\n+        Converts a nested table into a section object\n+\n+        :param origin: The file from which the configuration originated\n+        :param appends: The list of the keys to be appended\n+        :param content_key: The name of the nested table\n+        :param content_value: The values of the TOML table under consideration\n+        :param current_section:  The section under consideration\n+        \"\"\"\n+\n+        base_key = content_key\n+        for k, v in content_value.value.body:\n+            original_value = v\n+            if k is None:\n+                com_key = '(' + 'comment' + str(self.__rand_helper) + ')'\n+                self.__rand_helper += 1\n+                self.create_setting(current_section, com_key, v.as_string(),\n+                                    original_value, origin, False)\n+            else:\n+                k = k.as_string()\n+\n+                key = base_key + ':' + k\n+\n+                if isinstance(v, Table):\n+                    self.handle_nested_table(key, v, current_section,\n+                                             appends, origin)\n+                    continue\n+\n+                if not isinstance(v, str):\n+                    v = self.format_value(v)\n+\n+                to_append = False\n+\n+                if base_key + '.' + k in appends:\n+                    to_append = True\n+\n+                self.create_setting(current_section, key, v, original_value,\n+                                    origin, to_append)\n+\n+    @staticmethod\n+    def format_value(value):\n+        \"\"\"\n+        Converts a value of any type to a string\n+        :param value: The original value to be formatted\n+        :return: A value converted into a string\n+        \"\"\"\n+        if isinstance(value, list):\n+            value = [str(i) for i in value]\n+            return ', '.join(value)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-07T15:38:26Z","lastEditedAt":null,"updatedAt":"2019-07-07T15:38:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg3Mzk2Mg==","url":"https://github.com/coala/coala/pull/6027#discussion_r300873962","bodyText":"Handle every Error with logging.error no rasing please","diffHunk":"@@ -0,0 +1,302 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    \"\"\"\n+    A subclass of a setting but has an additional parameter\n+    called the original value. This class is required to\n+    infer comments and original data-type of a settings value.\n+    \"\"\"\n+\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+    \"\"\"\n+\n+    The parser that generates sections from data in\n+    TOML config files. Each TOML table is converted\n+    into a section and the all the sections are returned\n+    as a ordered dictionary of sections.\n+\n+    \"\"\"\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns section with the given name if it exists,\n+        otherwise creates a new section with the given name.\n+\n+        :param name: The name of the section to be returned\n+        :param create_if_not_exists: create the section if it does not exist\n+        :return: section of the given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-07T15:55:09Z","lastEditedAt":null,"updatedAt":"2019-07-07T15:55:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg3NDA1MA==","url":"https://github.com/coala/coala/pull/6027#discussion_r300874050","bodyText":"create a custom helper function for all these kind of utils. (if you want to )","diffHunk":"@@ -0,0 +1,302 @@\n+import logging\n+\n+import os\n+\n+import tomlkit.container\n+import tomlkit.items\n+from coalib.misc import Constants\n+from tomlkit.items import Table, Item\n+\n+from coalib.results.SourcePosition import SourcePosition\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from collections import Iterable, OrderedDict\n+\n+\n+class TomlSetting(Setting):\n+    \"\"\"\n+    A subclass of a setting but has an additional parameter\n+    called the original value. This class is required to\n+    infer comments and original data-type of a settings value.\n+    \"\"\"\n+\n+    def __init__(self, key,\n+                 value,\n+                 original_value,\n+                 origin: (str, SourcePosition) = '',\n+                 strip_whitespaces: bool = True,\n+                 list_delimiters: Iterable = (',', ';'),\n+                 from_cli: bool = False,\n+                 remove_empty_iter_elements: bool = True,\n+                 to_append: bool = False,\n+                 ):\n+        self.original_value = original_value\n+        super(TomlSetting, self).__init__(\n+            key,\n+            value,\n+            origin,\n+            strip_whitespaces,\n+            list_delimiters,\n+            from_cli,\n+            remove_empty_iter_elements,\n+            to_append)\n+\n+\n+class TomlConfParser:\n+    \"\"\"\n+\n+    The parser that generates sections from data in\n+    TOML config files. Each TOML table is converted\n+    into a section and the all the sections are returned\n+    as a ordered dictionary of sections.\n+\n+    \"\"\"\n+\n+    def __init__(self, remove_empty_iter_elements=True):\n+\n+        self.sections = None\n+        self.data = None\n+        self.__rand_helper = None\n+        self.__init_sections()\n+        self.__remove_empty_iter_elements = remove_empty_iter_elements\n+\n+    def parse(self, input_data, overwrite=False):\n+        \"\"\"\n+        Parses the input and adds the new data to the existing.\n+\n+        :param input_data: The filename to parse from.\n+        :param overwrite:  If True, wipes all existing Settings inside this\n+                           instance and adds only the newly parsed ones. If\n+                           False, adds the newly parsed data to the existing\n+                           one (and overwrites already existing keys with the\n+                           newly parsed values).\n+        :return:           A dictionary with (lowercase) section names as keys\n+                           and their Setting objects as values.\n+        \"\"\"\n+\n+        if os.path.isdir(input_data):\n+            input_data = os.path.join(input_data, Constants.local_coafile_toml)\n+\n+        if overwrite:\n+            self.__init_sections()\n+\n+        with open(input_data, 'r') as file:\n+            self.data = tomlkit.parse(file.read())\n+\n+        self.data = self.data.body\n+\n+        for item in self.data:\n+            self.generate_section(item, input_data)\n+        return self.sections\n+\n+    def get_section(self, name, create_if_not_exists=False):\n+        \"\"\"\n+        Returns section with the given name if it exists,\n+        otherwise creates a new section with the given name.\n+\n+        :param name: The name of the section to be returned\n+        :param create_if_not_exists: create the section if it does not exist\n+        :return: section of the given name\n+        \"\"\"\n+        key = self.__refine_key(name)\n+        sec = self.sections.get(key, None)\n+        if sec is not None:\n+            return sec\n+\n+        if not create_if_not_exists:\n+            raise IndexError\n+\n+        retval = self.sections[key] = Section(str(name))\n+        return retval\n+\n+    @staticmethod\n+    def __refine_key(key):\n+        return str(key).lower().strip()\n+\n+    def generate_section(self, item, origin):\n+        \"\"\"\n+        This method is the core of the parser. It converts\n+        TOML tables into sections\n+\n+        :param item: Configuration group\n+        :param origin: The file from which the configuration originated\n+        \"\"\"\n+\n+        section_name = item[0]\n+        section_content = item[1]\n+        appends = []\n+\n+        # Add settings that do not belong to any sections into default section\n+        if not isinstance(section_content, Table):\n+            original_value = section_content\n+            current_section = self.get_section('default', True)\n+            logging.warning('A setting does not have a section.'\n+                            'This is a deprecated feature please '\n+                            'put this setting in a section defined'\n+                            ' with `[<your-section-name]` in a '\n+                            'configuration file.')\n+\n+            # Store full-line comments that appear before any sections\n+            if section_name is None:\n+                section_content = section_content.as_string()\n+                section_name = '(' + 'comment' + str(self.__rand_helper) + ')'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-07T15:57:31Z","lastEditedAt":null,"updatedAt":"2019-07-07T15:57:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg3NTU2NA==","url":"https://github.com/coala/coala/pull/6027#discussion_r300875564","bodyText":"If you want only section then first assert that section exists then directly acess that section instead of popping of section one by one","diffHunk":"@@ -0,0 +1,316 @@\n+import logging\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.parsing.TomlConfParser import TomlConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class TomlConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = 'without_section'\n+comment0 = 'Hello'\n+# hello\n+[all]\n+# Hello World\n+max_line_length = 80 #cadc\n+ignore = './vendor'\n+a = true #ccas\n+\n+[EMPTY_ELEM_STRIP]\n+    A = ['a', 'b', 'c']\n+    B = ['a', '  ', '  ', 'd']\n+    C = ['','',\n+    '','']\n+\n+[foo]\n+files = '**'\n+aspects = ['aspectname1', 'AspectName2']\n+aspectname1.aspect_taste = 80\n+aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+aspectname1.subaspect_taste1 = 'word5'\n+\n+[foo2]\n+inherits = 'foo'\n+aspects = 'aspectname3'\n+aspectname1.subaspect_taste1 = ['dog', 'cat']\n+appends = 'aspectname1.subaspect_taste1'\n+a.b.c = '10'\n+\n+[sample]\n+    # coala\n+    [sample.item]\n+    # Hello World\n+    b = [ '1', #Hello\n+          '2'\n+        ]\n+\n+    a = 10\n+\n+[a]\n+p = '10'\n+q = '20'\n+\n+[b]\n+c = '5'\n+d  = '6'\n+\n+[c]\n+inherits = [ 'a', 'b' ]\n+p  = 'a'\n+d  = 'b'\n+appends.a = 'p'\n+appends.b = 'd'\n+\"\"\"\n+\n+    def setUp(self):\n+        self.tempdir = tempfile.gettempdir()\n+        self.file = os.path.join(self.tempdir, '.coafile.toml')\n+        self.nonexistentfile = os.path.join(self.tempdir, 'w31efr3rk')\n+        with open(self.file, 'w') as file:\n+            file.write(self.example_file)\n+\n+        self.uut = TomlConfParser()\n+\n+        try:\n+            os.remove(self.nonexistentfile)\n+        except FileNotFoundError:\n+            pass\n+\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as self.cm:\n+            self.sections = self.uut.parse(self.file)\n+\n+    def tearDown(self):\n+        os.remove(self.file)\n+\n+    def test_parse_nonexisting_file(self):\n+        self.assertRaises(FileNotFoundError,\n+                          self.uut.parse,\n+                          self.nonexistentfile)\n+\n+    def test_parse_nonexistent_section(self):\n+        self.assertRaises(IndexError,\n+                          self.uut.get_section,\n+                          'non-existent-section'\n+                          )\n+        self.assertNotEqual(self.uut.parse(self.file, True), self.sections)\n+\n+    def test_format_value(self):\n+        self.assertEqual(self.uut.format_value(80), '80')\n+        self.assertEqual(self.uut.format_value(True), 'True')\n+        self.assertEqual(self.uut.format_value([1, 2, 3]), '1, 2, 3')\n+\n+    def test_parse_default_section_deprecated(self):\n+        default_should = OrderedDict([\n+            ('setting', 'without_section'),\n+            ('comment0', 'Hello'),\n+            ('(comment0)', '# hello')\n+        ])\n+\n+        key, val = self.sections.popitem(last=False)\n+        self.assertTrue(isinstance(val, Section))\n+        self.assertEqual(key, 'default')\n+\n+        is_dict = OrderedDict()\n+        for k in val:\n+            is_dict[k] = str(val[k])\n+        self.assertEqual(is_dict, default_should)\n+\n+        self.assertRegex(self.cm.output[0],\n+                         'A setting does not have a section.')\n+\n+    def test_parse_all(self):\n+        all_should = OrderedDict([\n+            ('(comment1)', '# Hello World'),\n+            ('max_line_length', '80'),\n+            ('ignore', './vendor'),\n+            ('a', 'true'),\n+            ('(comment2)', '')\n+        ])\n+\n+        # pop off default\n+        self.sections.popitem(last=False)\n+\n+        key, val = self.sections.popitem(last=False)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-07T16:42:17Z","lastEditedAt":null,"updatedAt":"2019-07-07T16:42:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg3NTU4Mw==","url":"https://github.com/coala/coala/pull/6027#discussion_r300875583","bodyText":"Create a util function which do the same instead of repeating code every time","diffHunk":"@@ -0,0 +1,316 @@\n+import logging\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.parsing.TomlConfParser import TomlConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class TomlConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = 'without_section'\n+comment0 = 'Hello'\n+# hello\n+[all]\n+# Hello World\n+max_line_length = 80 #cadc\n+ignore = './vendor'\n+a = true #ccas\n+\n+[EMPTY_ELEM_STRIP]\n+    A = ['a', 'b', 'c']\n+    B = ['a', '  ', '  ', 'd']\n+    C = ['','',\n+    '','']\n+\n+[foo]\n+files = '**'\n+aspects = ['aspectname1', 'AspectName2']\n+aspectname1.aspect_taste = 80\n+aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+aspectname1.subaspect_taste1 = 'word5'\n+\n+[foo2]\n+inherits = 'foo'\n+aspects = 'aspectname3'\n+aspectname1.subaspect_taste1 = ['dog', 'cat']\n+appends = 'aspectname1.subaspect_taste1'\n+a.b.c = '10'\n+\n+[sample]\n+    # coala\n+    [sample.item]\n+    # Hello World\n+    b = [ '1', #Hello\n+          '2'\n+        ]\n+\n+    a = 10\n+\n+[a]\n+p = '10'\n+q = '20'\n+\n+[b]\n+c = '5'\n+d  = '6'\n+\n+[c]\n+inherits = [ 'a', 'b' ]\n+p  = 'a'\n+d  = 'b'\n+appends.a = 'p'\n+appends.b = 'd'\n+\"\"\"\n+\n+    def setUp(self):\n+        self.tempdir = tempfile.gettempdir()\n+        self.file = os.path.join(self.tempdir, '.coafile.toml')\n+        self.nonexistentfile = os.path.join(self.tempdir, 'w31efr3rk')\n+        with open(self.file, 'w') as file:\n+            file.write(self.example_file)\n+\n+        self.uut = TomlConfParser()\n+\n+        try:\n+            os.remove(self.nonexistentfile)\n+        except FileNotFoundError:\n+            pass\n+\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as self.cm:\n+            self.sections = self.uut.parse(self.file)\n+\n+    def tearDown(self):\n+        os.remove(self.file)\n+\n+    def test_parse_nonexisting_file(self):\n+        self.assertRaises(FileNotFoundError,\n+                          self.uut.parse,\n+                          self.nonexistentfile)\n+\n+    def test_parse_nonexistent_section(self):\n+        self.assertRaises(IndexError,\n+                          self.uut.get_section,\n+                          'non-existent-section'\n+                          )\n+        self.assertNotEqual(self.uut.parse(self.file, True), self.sections)\n+\n+    def test_format_value(self):\n+        self.assertEqual(self.uut.format_value(80), '80')\n+        self.assertEqual(self.uut.format_value(True), 'True')\n+        self.assertEqual(self.uut.format_value([1, 2, 3]), '1, 2, 3')\n+\n+    def test_parse_default_section_deprecated(self):\n+        default_should = OrderedDict([\n+            ('setting', 'without_section'),\n+            ('comment0', 'Hello'),\n+            ('(comment0)', '# hello')\n+        ])\n+\n+        key, val = self.sections.popitem(last=False)\n+        self.assertTrue(isinstance(val, Section))\n+        self.assertEqual(key, 'default')\n+\n+        is_dict = OrderedDict()\n+        for k in val:\n+            is_dict[k] = str(val[k])\n+        self.assertEqual(is_dict, default_should)\n+\n+        self.assertRegex(self.cm.output[0],\n+                         'A setting does not have a section.')\n+\n+    def test_parse_all(self):\n+        all_should = OrderedDict([\n+            ('(comment1)', '# Hello World'),\n+            ('max_line_length', '80'),\n+            ('ignore', './vendor'),\n+            ('a', 'true'),\n+            ('(comment2)', '')\n+        ])\n+\n+        # pop off default\n+        self.sections.popitem(last=False)\n+\n+        key, val = self.sections.popitem(last=False)\n+        self.assertTrue(isinstance(val, Section))\n+        self.assertTrue(key, 'all')\n+\n+        is_dict = OrderedDict()\n+\n+        for k in val:\n+            is_dict[k] = str(val[k])\n+        self.assertEqual(is_dict, all_should)\n+\n+    def test_parse_empty_elem_strip_section(self):\n+        empty_elem_strip_should = OrderedDict([\n+            ('a', 'a, b, c'),\n+            ('b', 'a,   ,   , d'),\n+            ('c', ', , ,'),\n+            ('(comment3)', '')\n+        ])\n+\n+        # Pop off default and all section.\n+        self.sections.popitem(last=False)\n+        self.sections.popitem(last=False)\n+\n+        key, val = self.sections.popitem(last=False)\n+        self.assertTrue(isinstance(val, Section))\n+        self.assertEqual(key, 'empty_elem_strip')\n+\n+        is_dict = OrderedDict()","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-07T16:42:53Z","lastEditedAt":null,"updatedAt":"2019-07-07T16:42:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg4NTA2OQ==","url":"https://github.com/coala/coala/pull/6027#discussion_r300885069","bodyText":"why do you need it just for this case?","diffHunk":"@@ -244,10 +245,121 @@ def load_configuration(arg_list,\n                              args=args)\n     check_conflicts(cli_sections)\n \n+    if bool(cli_sections['cli'].get('use_toml', 'False')):\n+        sections, targets = load_toml_config(cli_sections, silent)\n+    else:\n+        sections, targets = load_coafile_config(cli_sections, silent)\n+    for name, section in list(sections.items()):\n+        section.set_default_section(sections)\n+        if name == 'default':\n+            if section.contents:\n+                logging.warning('Implicit \\'Default\\' section inheritance is '\n+                                'deprecated. It will be removed soon. To '\n+                                'silence this warning remove settings in the '\n+                                '\\'Default\\' section from your coafile. You '\n+                                'can use dots to specify inheritance: the '\n+                                'section \\'all.python\\' will inherit all '\n+                                'settings from \\'all\\'.')\n+                sections['default'].update(sections['cli'])\n+                sections['default'].name = 'cli'\n+                sections['cli'] = sections['default']\n+            del sections['default']\n+\n+    str_log_level = str(sections['cli'].get('log_level', '')).upper()\n+    logging.getLogger().setLevel(LOG_LEVEL.str_dict.get(str_log_level,\n+                                                        LOG_LEVEL.INFO))\n+\n+    return sections, targets\n+\n+\n+def load_toml_config_file(filename, log_printer=None, silent=False):\n+    filename = os.path.abspath(filename)\n+    try:\n+        return TomlConfParser().parse(filename)\n+    except FileNotFoundError:\n+        if not silent:\n+            if os.path.basename(filename) == Constants.local_coafile_toml:\n+                logging.warning(COAFILE_OUTPUT\n+                                .substitute(type='Local coafile',\n+                                            file=Constants.local_coafile_toml,\n+                                            found='not found'))\n+            elif os.path.basename(filename) == '.coarc.toml':\n+                logging.warning(COARC_OUTPUT\n+                                .substitute(type='Requested coarc file',\n+                                            file=filename,\n+                                            found='does not exist'))\n+            else:\n+                logging.error(COAFILE_OUTPUT\n+                              .substitute(type='Requested coafile',\n+                                          file=filename,\n+                                          found='does not exist'))\n+                sys.exit(2)","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-07T20:58:45Z","lastEditedAt":null,"updatedAt":"2019-07-07T20:58:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg4NTQ4Mw==","url":"https://github.com/coala/coala/pull/6027#discussion_r300885483","bodyText":"this function is very similar with load_coafile_config, it's not possible to not duplicate it?if one of the function is changed in any way, probably will have to change the other one too. Maybe to use different functions setted by a flag, like flag=1 use toml functions flag=0 use coafile functions, like a variables that have functions depending on the flag. I dont know if it's possible but it is worth checking  out.","diffHunk":"@@ -244,10 +245,121 @@ def load_configuration(arg_list,\n                              args=args)\n     check_conflicts(cli_sections)\n \n+    if bool(cli_sections['cli'].get('use_toml', 'False')):\n+        sections, targets = load_toml_config(cli_sections, silent)\n+    else:\n+        sections, targets = load_coafile_config(cli_sections, silent)\n+    for name, section in list(sections.items()):\n+        section.set_default_section(sections)\n+        if name == 'default':\n+            if section.contents:\n+                logging.warning('Implicit \\'Default\\' section inheritance is '\n+                                'deprecated. It will be removed soon. To '\n+                                'silence this warning remove settings in the '\n+                                '\\'Default\\' section from your coafile. You '\n+                                'can use dots to specify inheritance: the '\n+                                'section \\'all.python\\' will inherit all '\n+                                'settings from \\'all\\'.')\n+                sections['default'].update(sections['cli'])\n+                sections['default'].name = 'cli'\n+                sections['cli'] = sections['default']\n+            del sections['default']\n+\n+    str_log_level = str(sections['cli'].get('log_level', '')).upper()\n+    logging.getLogger().setLevel(LOG_LEVEL.str_dict.get(str_log_level,\n+                                                        LOG_LEVEL.INFO))\n+\n+    return sections, targets\n+\n+\n+def load_toml_config_file(filename, log_printer=None, silent=False):\n+    filename = os.path.abspath(filename)\n+    try:\n+        return TomlConfParser().parse(filename)\n+    except FileNotFoundError:\n+        if not silent:\n+            if os.path.basename(filename) == Constants.local_coafile_toml:\n+                logging.warning(COAFILE_OUTPUT\n+                                .substitute(type='Local coafile',\n+                                            file=Constants.local_coafile_toml,\n+                                            found='not found'))\n+            elif os.path.basename(filename) == '.coarc.toml':\n+                logging.warning(COARC_OUTPUT\n+                                .substitute(type='Requested coarc file',\n+                                            file=filename,\n+                                            found='does not exist'))\n+            else:\n+                logging.error(COAFILE_OUTPUT\n+                              .substitute(type='Requested coafile',\n+                                          file=filename,\n+                                          found='does not exist'))\n+                sys.exit(2)\n+\n+        return {'default': Section('default')}\n+\n+\n+def load_toml_config(cli_sections, silent):","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-07T21:08:58Z","lastEditedAt":null,"updatedAt":"2019-07-07T21:08:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDg4NTUxOA==","url":"https://github.com/coala/coala/pull/6027#discussion_r300885518","bodyText":"when a string is used more then one time, it should be a global variable in top of the file.","diffHunk":"@@ -244,10 +245,121 @@ def load_configuration(arg_list,\n                              args=args)\n     check_conflicts(cli_sections)\n \n+    if bool(cli_sections['cli'].get('use_toml', 'False')):\n+        sections, targets = load_toml_config(cli_sections, silent)\n+    else:\n+        sections, targets = load_coafile_config(cli_sections, silent)\n+    for name, section in list(sections.items()):\n+        section.set_default_section(sections)\n+        if name == 'default':\n+            if section.contents:\n+                logging.warning('Implicit \\'Default\\' section inheritance is '\n+                                'deprecated. It will be removed soon. To '\n+                                'silence this warning remove settings in the '\n+                                '\\'Default\\' section from your coafile. You '\n+                                'can use dots to specify inheritance: the '\n+                                'section \\'all.python\\' will inherit all '\n+                                'settings from \\'all\\'.')\n+                sections['default'].update(sections['cli'])\n+                sections['default'].name = 'cli'\n+                sections['cli'] = sections['default']\n+            del sections['default']\n+\n+    str_log_level = str(sections['cli'].get('log_level', '')).upper()\n+    logging.getLogger().setLevel(LOG_LEVEL.str_dict.get(str_log_level,\n+                                                        LOG_LEVEL.INFO))\n+\n+    return sections, targets\n+\n+\n+def load_toml_config_file(filename, log_printer=None, silent=False):\n+    filename = os.path.abspath(filename)\n+    try:\n+        return TomlConfParser().parse(filename)\n+    except FileNotFoundError:\n+        if not silent:\n+            if os.path.basename(filename) == Constants.local_coafile_toml:\n+                logging.warning(COAFILE_OUTPUT\n+                                .substitute(type='Local coafile',\n+                                            file=Constants.local_coafile_toml,\n+                                            found='not found'))\n+            elif os.path.basename(filename) == '.coarc.toml':\n+                logging.warning(COARC_OUTPUT\n+                                .substitute(type='Requested coarc file',\n+                                            file=filename,\n+                                            found='does not exist'))\n+            else:\n+                logging.error(COAFILE_OUTPUT\n+                              .substitute(type='Requested coafile',\n+                                          file=filename,\n+                                          found='does not exist'))\n+                sys.exit(2)\n+\n+        return {'default': Section('default')}\n+\n+\n+def load_toml_config(cli_sections, silent):\n     if (\n             bool(cli_sections['cli'].get('find_config', 'False')) and\n             str(cli_sections['cli'].get('config')) == ''):\n         cli_sections['cli'].add_or_create_setting(\n+\n+            Setting('config', PathArg(find_user_config(\n+                os.getcwd(),\n+                default_file='.coafile.toml'))))\n+\n+    # We don't want to store targets argument back to file, thus remove it\n+    targets = [item.lower() for item in list(\n+        cli_sections['cli'].contents.pop('targets', ''))]\n+\n+    if bool(cli_sections['cli'].get('no_config', 'False')):\n+        sections = cli_sections\n+    else:\n+        base_sections = load_toml_config_file(Constants.system_coafile_toml,\n+                                              silent=silent)\n+        user_sections = load_toml_config_file(\n+            Constants.user_coafile_toml, silent=True)\n+        default_config = str(base_sections['default'].\n+                             get('config', '.coafile.toml'))\n+        user_config = str(user_sections['default'].\n+                          get('config', default_config))\n+        config = os.path.abspath(\n+            str(cli_sections['cli'].get('config', user_config)))\n+\n+        try:\n+            save = bool(cli_sections['cli'].get('save', 'False'))\n+        except ValueError:\n+            # A file is deposited for the save parameter, means we want to save\n+            # but to a specific file.\n+            save = True\n+\n+        coafile_sections = load_toml_config_file(config,\n+                                                 silent=save or silent)\n+\n+        sections = merge_section_dicts(base_sections, user_sections)\n+\n+        sections = merge_section_dicts(sections, coafile_sections)\n+\n+        if 'cli' in sections:\n+            logging.warning('\\'cli\\' is an internally reserved section name. '","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-07T21:10:18Z","lastEditedAt":null,"updatedAt":"2019-07-07T21:10:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDk1NjIwNg==","url":"https://github.com/coala/coala/pull/6027#discussion_r300956206","bodyText":"It has been used in load_config_file from the beginning","diffHunk":"@@ -244,10 +245,121 @@ def load_configuration(arg_list,\n                              args=args)\n     check_conflicts(cli_sections)\n \n+    if bool(cli_sections['cli'].get('use_toml', 'False')):\n+        sections, targets = load_toml_config(cli_sections, silent)\n+    else:\n+        sections, targets = load_coafile_config(cli_sections, silent)\n+    for name, section in list(sections.items()):\n+        section.set_default_section(sections)\n+        if name == 'default':\n+            if section.contents:\n+                logging.warning('Implicit \\'Default\\' section inheritance is '\n+                                'deprecated. It will be removed soon. To '\n+                                'silence this warning remove settings in the '\n+                                '\\'Default\\' section from your coafile. You '\n+                                'can use dots to specify inheritance: the '\n+                                'section \\'all.python\\' will inherit all '\n+                                'settings from \\'all\\'.')\n+                sections['default'].update(sections['cli'])\n+                sections['default'].name = 'cli'\n+                sections['cli'] = sections['default']\n+            del sections['default']\n+\n+    str_log_level = str(sections['cli'].get('log_level', '')).upper()\n+    logging.getLogger().setLevel(LOG_LEVEL.str_dict.get(str_log_level,\n+                                                        LOG_LEVEL.INFO))\n+\n+    return sections, targets\n+\n+\n+def load_toml_config_file(filename, log_printer=None, silent=False):\n+    filename = os.path.abspath(filename)\n+    try:\n+        return TomlConfParser().parse(filename)\n+    except FileNotFoundError:\n+        if not silent:\n+            if os.path.basename(filename) == Constants.local_coafile_toml:\n+                logging.warning(COAFILE_OUTPUT\n+                                .substitute(type='Local coafile',\n+                                            file=Constants.local_coafile_toml,\n+                                            found='not found'))\n+            elif os.path.basename(filename) == '.coarc.toml':\n+                logging.warning(COARC_OUTPUT\n+                                .substitute(type='Requested coarc file',\n+                                            file=filename,\n+                                            found='does not exist'))\n+            else:\n+                logging.error(COAFILE_OUTPUT\n+                              .substitute(type='Requested coafile',\n+                                          file=filename,\n+                                          found='does not exist'))\n+                sys.exit(2)","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-08T07:31:25Z","lastEditedAt":null,"updatedAt":"2019-07-08T07:31:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNDg1OTE4Mg==","url":"https://github.com/coala/coala/pull/6027#issuecomment-504859182","bodyText":"@jayvdb Can you review this PR ?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-06-24T05:06:56Z","lastEditedAt":null,"updatedAt":"2019-06-24T05:06:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwODcyMDk4Nw==","url":"https://github.com/coala/coala/pull/6027#issuecomment-508720987","bodyText":"@Makman2  @jayvdb  can you guys please take a look at the PR","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-05T10:56:48Z","lastEditedAt":null,"updatedAt":"2019-07-05T10:56:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwOTAxNTQ4MQ==","url":"https://github.com/coala/coala/pull/6027#issuecomment-509015481","bodyText":"@PrajwalM2212 I want you to exit the coala with a proper warning and message when someone run coala -T with a toml file but there is no content in their\n[WARNING][22:27:57] coala will not run any analysis. Did you forget to give the `--files` argument?\n[WARNING][22:27:57] coala will not run any analysis. Did you forget to give the `--bears` or `--aspects` argument?\n\nAbove is what currently I am getting this message is okay when section name is defined but not okay when there is no content, also during parsing using toml you are not handling the error comes form toml.parse\nself.data = tomlkit.parse(file.read())\n\nKindly update the code.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-07-07T17:04:19Z","lastEditedAt":null,"updatedAt":"2019-07-07T17:04:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzQ1NjkzMw==","url":"https://github.com/coala/coala/pull/6027#issuecomment-513456933","bodyText":"It looks good to me, you have my approval. 👍","diffHunk":null,"author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-07-20T10:42:05Z","lastEditedAt":null,"updatedAt":"2019-07-20T10:42:05Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565535971000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6029","number":6029,"title":"Support bears to define their own actions","body":"This adds a new attribute actions to the Result class. It is a list of action objects which are specific to the origin to that Result.\nThis also makes changes in ConsoleInteraction module and Processing module to incorporate these additions and support bears to define their own actions.","comments":1,"createdAt":"2019-06-19T12:46:20Z","updatedAt":"2019-08-11T15:06:11Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6029","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDczOTQyNw==","url":"https://github.com/coala/coala/pull/6029#discussion_r300739427","bodyText":"This condition ensures that if action is in bear_actions then it must be in result.actions.","diffHunk":"@@ -145,30 +150,34 @@ def autoapply_actions(results,\n             else:\n                 not_processed_results.append(result)\n                 continue\n+        if action not in bear_actions or action in result.actions:","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-05T16:18:19Z","lastEditedAt":null,"updatedAt":"2019-07-05T16:18:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDIzNTM1Mg==","url":"https://github.com/coala/coala/pull/6029#issuecomment-520235352","bodyText":"Ping @Makman2","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-08-11T15:06:11Z","lastEditedAt":null,"updatedAt":"2019-08-11T15:06:11Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1564836709000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6030","number":6030,"title":"Use Fudge for Windows development and CI","body":"Includes workaround for #5985\nNote commit .moban.yaml: Use local mobans needs to be removed before merging.","comments":0,"createdAt":"2019-06-20T03:23:08Z","updatedAt":"2019-08-03T12:51:49Z","closedAt":"2019-08-03T12:51:49Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6030","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTkwNDkxNQ==","url":"https://github.com/coala/coala/pull/6030#discussion_r305904915","bodyText":"Isn't py.test old enough to be replaced by pytest?","diffHunk":"@@ -32,32 +41,90 @@ branches:\n   except:\n     - /^sils\\/.*/\n \n+# This forces unix style line endings in the clone, which is necessary to\n+# avoid warning regarding EOLs when running git diff on Windows\n+init: git config --global core.autocrlf false\n+\n install:\n-  # Prepend newly installed Python to the PATH of this build (this cannot be\n-  # done from inside the powershell script as it would require to restart\n-  # the parent CMD process).\n-  - \"SET PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%\"\n-  - \"SET PATH=%PATH%;C:\\\\Program\\ Files\\\\Git\\\\mingw64\\\\bin\"\n+  # Show initial state\n+  - powershell -c \"$PSVersionTable\"\n+  # Uncomment to debug\n+  # printenv\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+  - which cl & exit 0\n+\n+  # Stores environment in registry, with minor tweaks\n+  - python .misc/store_env_in_registry.py\n+  - refreshenv\n+\n+  # Set up AppVeyor product versions, and install dummy choco entries for them\n+  - ps: . .misc/FudgeCI.ps1; Initialize-AppVeyorVM\n+  - refreshenv\n+  - echo %PATH%\n+  # Avoid tools finding and using MinGW\n+  - mv C:\\MinGW %TEMP%\n+  # TODO: Avoid tools finding and using Visual Studio\n+\n+  # Show updated SOE; versions should be as defined in top of the Fudgefile\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n+  # Install remainer of the Fudgefile with chocolatey using Fudge\n+  - ps: . .misc/Fudge.ps1 install\n+  - refreshenv\n+  - echo %PATH%\n+\n \n   # Check that we have the expected version and architecture for Python\n   - \"python --version\"\n   - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n-  - \"%CMD_IN_ENV% python -m pip install --upgrade setuptools==21 pip==9.0.1\"\n-  - \"%CMD_IN_ENV% python -m pip install -r test-requirements.txt \\\n-    -r requirements.txt -r docs-requirements.txt\"\n+  # Confirm other versions\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  # Newly installed versions\n+\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n \n build: false  # Not a C# project, build stuff at the test step instead.\n \n test_script:\n-  - \"%CMD_IN_ENV% py.test\"\n-  - \"%CMD_IN_ENV% python setup.py install\"\n-  - \"%CMD_IN_ENV% python -m pip install \\\n-    git+https://github.com/coala/coala-bears\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+\n+  - py.test","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-22T15:24:14Z","lastEditedAt":null,"updatedAt":"2019-07-22T15:24:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTkwNTIzOA==","url":"https://github.com/coala/coala/pull/6030#discussion_r305905238","bodyText":"Oh, I thought you had a different hacky fix :P","diffHunk":"@@ -32,32 +41,90 @@ branches:\n   except:\n     - /^sils\\/.*/\n \n+# This forces unix style line endings in the clone, which is necessary to\n+# avoid warning regarding EOLs when running git diff on Windows\n+init: git config --global core.autocrlf false\n+\n install:\n-  # Prepend newly installed Python to the PATH of this build (this cannot be\n-  # done from inside the powershell script as it would require to restart\n-  # the parent CMD process).\n-  - \"SET PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%\"\n-  - \"SET PATH=%PATH%;C:\\\\Program\\ Files\\\\Git\\\\mingw64\\\\bin\"\n+  # Show initial state\n+  - powershell -c \"$PSVersionTable\"\n+  # Uncomment to debug\n+  # printenv\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+  - which cl & exit 0\n+\n+  # Stores environment in registry, with minor tweaks\n+  - python .misc/store_env_in_registry.py\n+  - refreshenv\n+\n+  # Set up AppVeyor product versions, and install dummy choco entries for them\n+  - ps: . .misc/FudgeCI.ps1; Initialize-AppVeyorVM\n+  - refreshenv\n+  - echo %PATH%\n+  # Avoid tools finding and using MinGW\n+  - mv C:\\MinGW %TEMP%\n+  # TODO: Avoid tools finding and using Visual Studio\n+\n+  # Show updated SOE; versions should be as defined in top of the Fudgefile\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n+  # Install remainer of the Fudgefile with chocolatey using Fudge\n+  - ps: . .misc/Fudge.ps1 install\n+  - refreshenv\n+  - echo %PATH%\n+\n \n   # Check that we have the expected version and architecture for Python\n   - \"python --version\"\n   - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n-  - \"%CMD_IN_ENV% python -m pip install --upgrade setuptools==21 pip==9.0.1\"\n-  - \"%CMD_IN_ENV% python -m pip install -r test-requirements.txt \\\n-    -r requirements.txt -r docs-requirements.txt\"\n+  # Confirm other versions\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  # Newly installed versions\n+\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n \n build: false  # Not a C# project, build stuff at the test step instead.\n \n test_script:\n-  - \"%CMD_IN_ENV% py.test\"\n-  - \"%CMD_IN_ENV% python setup.py install\"\n-  - \"%CMD_IN_ENV% python -m pip install \\\n-    git+https://github.com/coala/coala-bears\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+\n+  - py.test\n+\n+  - python setup.py install\n+\n+  - python -m pip install\n+      git+https://github.com/coala/coala-bears#egg=coala-bears\n   - npm install csslint -g\n   # https://github.com/coala/coala/issues/5619\n   - rm docs/Developers/coala_settings.rst\n-  - sed -i '/ShellCheckBear/d' .coafile\n-  - \"%CMD_IN_ENV% coala --ci\"\n+  # https://github.com/coala/coala/issues/5985 and\n+  # https://github.com/coala/coala/issues/6028 and others:\n+  - rm coalib/misc/Asyncio.py","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-22T15:24:49Z","lastEditedAt":null,"updatedAt":"2019-07-22T15:24:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTkwNzgyOA==","url":"https://github.com/coala/coala/pull/6030#discussion_r305907828","bodyText":"EOL at EOF?","diffHunk":"@@ -0,0 +1,448 @@\n+<#\n+    .SYNOPSIS\n+        Fudge is a tool to help you manage and version control Chocolatey packages required for environments to function\n+\n+    .DESCRIPTION\n+        Fudge is a tool to help you manage and version control Chocolatey packages required for environments to function.\n+        This is done via a Fudgefile which allows you to specify packages (and their versions) to install. You can also\n+        specify dev-specific packages (like git, or fiddler)\n+\n+        You are also able to define pre/post install/upgrade/downgrade/uninstall scripts for additional required functionality\n+\n+        Furthermore, Fudge has a section to allow you to specify multiple nuspec files and pack the one you need\n+\n+    .PARAMETER Action\n+        The action that Fudge should undertake\n+        Actions: install, upgrade, downgrade, uninstall, reinstall, pack, list, search, new, delete, prune, clean, rebuild,\n+                 which, help, renew, add, remove\n+        [Alias: -a]\n+\n+    .PARAMETER Key\n+        The key represents a package/nuspec name in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, pack, new, which, renew, add, remove]\n+        [Alias: -k]\n+\n+    .PARAMETER FudgefilePath\n+        This will override looking for a default 'Fudgefile' at the root of the current path, and allow you to specify\n+        other files instead. This allows you to have multiple Fudgefiles\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, pack, list, new, delete, prune, rebuild, renew, add, remove]\n+        [Default: ./Fudgefile]\n+        [Alias: -fp]\n+\n+    .PARAMETER Limit\n+        This argument only applies for the 'search' action. It will limit the amount of packages returned when searching\n+        If 0 is supplied, the full list is returned\n+        [Actions: search]\n+        [Default: 10]\n+        [Alias: -l]\n+\n+    .PARAMETER Source\n+        Passing this argument will allow you to specify custom source locations to get/download packages for Chocolatey.\n+        This allows you to install packages from local directories, or from custom Chocolatey servers. Passing this will\n+        also override the source specified in any Fudgefiles\n+        [Default: Chocolatey's server]\n+        [Actions: install, upgrade, downgrade, reinstall, search, rebuild, add]\n+        [Alias: -s]\n+\n+    .PARAMETER Parameters\n+        This argument allows you to pass parameters to a chocolatey package, as if you were using \"--params\" on choco.\n+        For install/upgrade/downgrade/uninstall/reinstall, this argument only works when \"-Adhoc\" is also supplied\n+        [Default: Empty]\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, add]\n+        [Alias: -p]\n+\n+    .PARAMETER Arguments\n+        This argument allows you to pass extra arguments to a chocolatey, such as \"--x86\" or \"--ignore-checksum\"\n+        For install/upgrade/downgrade/uninstall/reinstall, this argument only works when \"-Adhoc\" is also supplied\n+        [Default: Empty]\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, add]\n+        [Alias: -args]\n+\n+    .PARAMETER Dev\n+        Switch parameter, if supplied will also action upon the devPackages in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, list, delete, prune, rebuild, add, remove]\n+        [Alias: -d]\n+\n+    .PARAMETER DevOnly\n+        Switch parameter, if supplied will only action upon the devPackages in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, list, delete, prune, rebuild]\n+        [Alias: -do]\n+\n+    .PARAMETER Install\n+        Switch parameter, if supplied will install packages after creating a new Fudgefile\n+        [Actions: new, renew, add]\n+        [Alias: -i]\n+\n+    .PARAMETER Uninstall\n+        Switch parameter, if supplied will uninstall packages before deleting a Fudgefile\n+        [Actions: delete, renew, remove]\n+        [Alias: -u]\n+\n+    .PARAMETER Adhoc\n+        Switch parameter, if supplied will install software from Chocolatey whether or not\n+        the package is in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall]\n+        [Alias: -ad]\n+\n+    .PARAMETER Version\n+        Switch parameter, if supplied will just display the current version of Fudge installed\n+        [Alias: -v]\n+\n+    .PARAMETER Help\n+        Switch parameter, if supplied will just display help output\n+        [Alias: -h]\n+\n+    .EXAMPLE\n+        fudge install\n+\n+    .EXAMPLE\n+        fudge install -d    # to also install devPackages (-do will only install devPackages)\n+\n+    .EXAMPLE\n+        fudge install git -ad   # installs git dispite not being in the Fudgefile\n+\n+    .EXAMPLE\n+        fudge pack website\n+\n+    .EXAMPLE\n+        fudge list\n+\n+    .EXAMPLE\n+        fudge search checksum\n+#>\n+param (\n+    [Alias('a')]\n+    [string]\n+    $Action,\n+\n+    [Alias('k')]\n+    [string]\n+    $Key,\n+\n+    [Alias('fp')]\n+    [string]\n+    $FudgefilePath,\n+\n+    [Alias('l')]\n+    [int]\n+    $Limit = 10,\n+\n+    [Alias('s')]\n+    [string]\n+    $Source,\n+\n+    [Alias('p')]\n+    [string]\n+    $Parameters,\n+\n+    [Alias('args')]\n+    [string]\n+    $Arguments,\n+\n+    [Alias('d')]\n+    [switch]\n+    $Dev,\n+\n+    [Alias('do')]\n+    [switch]\n+    $DevOnly,\n+\n+    [Alias('i')]\n+    [switch]\n+    $Install,\n+\n+    [Alias('u')]\n+    [switch]\n+    $Uninstall,\n+\n+    [Alias('v')]\n+    [switch]\n+    $Version,\n+\n+    [Alias('h')]\n+    [switch]\n+    $Help,\n+\n+    [Alias('ad')]\n+    [switch]\n+    $Adhoc\n+)\n+\n+# ensure if there's an error, we stop\n+$ErrorActionPreference = 'Stop'\n+\n+\n+# Import required modules\n+$root = Split-Path -Parent -Path $MyInvocation.MyCommand.Path\n+Import-Module \"$($root)\\Modules\\FudgeTools.psm1\" -Force -ErrorAction Stop\n+\n+\n+# output the version\n+$ver = 'v$version$'\n+Write-Success \"Fudge $($ver)\"\n+\n+# if we were only after the version, just return\n+if ($Version -or (@('v', 'version') -icontains $Action))\n+{\n+    return\n+}\n+\n+\n+# if action is just to display Help, show it and return\n+if ($Help -or (@('h', 'help') -icontains $Action))\n+{\n+    Write-Host \"`nUsage: fudge <action>\"\n+    Write-Host \"`nWhere <action> is one of:\"\n+    Write-Host \"    add, clean, delete, downgrade, help, install, list, new, pack,\"\n+    Write-Host \"    prune, rebuild, reinstall, remove, renew, search, uninstall,\"\n+    Write-Host \"    upgrade, version, which\"\n+    Write-Host \"\"\n+    return\n+}\n+\n+\n+try\n+{\n+    # start timer\n+    $timer = [DateTime]::UtcNow\n+\n+\n+    # ensure we have a valid action\n+    $packageActions = @('install', 'upgrade', 'uninstall', 'reinstall', 'list', 'rebuild', 'downgrade', 'add', 'remove')\n+    $maintainActions = @('prune')\n+    $packingActions = @('pack')\n+    $miscActions = @('search', 'clean', 'which')\n+    $newActions = @('new')\n+    $alterActions = @('delete', 'renew')\n+\n+    $actions = ($packageActions + $maintainActions + $packingActions + $miscActions + $newActions + $alterActions)\n+    if ((Test-Empty $Action) -or $actions -inotcontains $Action) {\n+        Write-Fail \"Unrecognised action supplied '$($Action)', should be either: $($actions -join ', ')\"\n+        return\n+    }\n+\n+\n+    # actions that require chocolatey\n+    $isChocoAction = (@('which', 'add', 'remove', 'delete') -inotcontains $Action)\n+    if (!$isChocoAction -and ($Install -or $Uninstall)) {\n+        $isChocoAction = $true\n+    }\n+\n+\n+    # if adhoc was supplied for an invalid action\n+    if ($Adhoc -and @('install', 'uninstall', 'upgrade', 'downgrade', 'reinstall') -inotcontains $Action) {\n+        Write-Fail \"Adhoc supplied for invalid action: $($Action)\"\n+        return\n+    }\n+\n+    # if adhoc supplied with no package name, fail\n+    if ($Adhoc -and [string]::IsNullOrWhiteSpace($Key)) {\n+        Write-Fail \"No package name supplied for adhoc $($Action)\"\n+        return\n+    }\n+\n+\n+    # if -devOnly is passed, set -dev to true\n+    if ($DevOnly) {\n+        $Dev = $true\n+    }\n+\n+\n+    # get the Fudgefile path, if adhoc is supplied set to empty\n+    $FudgefilePath = Get-FudgefilePath $FudgefilePath -Adhoc:$Adhoc\n+\n+\n+    # ensure that the Fudgefile exists (for certain actions), and deserialise it\n+    if (($packageActions + $maintainActions + $packingActions + $alterActions) -icontains $Action)\n+    {\n+        $config = $null\n+\n+        # if adhoc is supplied, we don't need to get the content\n+        if (!$Adhoc) {\n+            if (!(Test-Path $FudgefilePath)) {\n+                Write-Fail \"Path to Fudgefile does not exist: $($FudgefilePath)\"\n+                return\n+            }\n+\n+            $config = Get-FudgefileContent $FudgefilePath\n+        }\n+\n+        # if we have a custom source in the config and no CLI source, set the source\n+        if ((Test-Empty $Source) -and ($null -ne $config) -and !(Test-Empty $config.source)) {\n+            $Source = $config.source\n+        }\n+    }\n+\n+    # ensure that the Fudgefile doesn't exist\n+    elseif ($newActions -icontains $Action)\n+    {\n+        if (Test-Path $FudgefilePath) {\n+            Write-Fail \"Path to Fudgefile already exists: $($FudgefilePath)\"\n+            return\n+        }\n+    }\n+\n+\n+    # if there are no packages to install or nuspecs to pack, just return\n+    if ($null -ne $config)\n+    {\n+        # check nuspecs\n+        if ($packingActions -icontains $Action)\n+        {\n+            if (Test-Empty $config.pack) {\n+                Write-Notice \"There are no nuspecs to $($Action)\"\n+                return\n+            }\n+\n+            if (![string]::IsNullOrWhiteSpace($Key) -and [string]::IsNullOrWhiteSpace($config.pack.$Key)) {\n+                Write-Notice \"Fudgefile does not contain a nuspec pack file for '$($Key)'\"\n+                return\n+            }\n+        }\n+\n+        # check packages\n+        elseif ($packageActions -icontains $Action)\n+        {\n+            if ((Test-Empty $config.packages) -and (!$Dev -or ($Dev -and (Test-Empty $config.devPackages)))) {\n+                Write-Notice \"There are no packages to $($Action)\"\n+                return\n+            }\n+\n+            if ($DevOnly -and (Test-Empty $config.devPackages)) {\n+                Write-Notice \"There are no devPackages to $($Action)\"\n+                return\n+            }\n+        }\n+    }\n+\n+\n+    # check to see if chocolatey is installed\n+    if ($isChocoAction) {\n+        $isChocoInstalled = Test-Chocolatey\n+    }\n+\n+\n+    # check if the console is elevated (only needs to be done for certain actions)\n+    $isAdminAction = @('list', 'search', 'new', 'delete', 'renew', 'which', 'add', 'remove', 'pack') -inotcontains $Action\n+    $actionNeedsAdmin = (@('delete', 'remove') -icontains $Action -and $Uninstall) -or (@('new', 'renew', 'add') -icontains $Action -and $Install)\n+\n+    if (((!$isChocoInstalled -and $isChocoAction) -or $isAdminAction -or $actionNeedsAdmin) -and !(Test-AdminUser))\n+    {\n+        Write-Notice 'Must be running with administrator privileges for Fudge to fully function'\n+        return\n+    }\n+\n+\n+    # if chocolatey isn't installed, install it\n+    if (!$isChocoInstalled -and $isChocoAction) {\n+        Install-Chocolatey\n+    }\n+\n+\n+    # if we are using a global custom source, output it for info\n+    if (!(Test-Empty $Source)) {\n+        Write-Notice \"Source: $($Source)\"\n+    }\n+\n+    Write-Host ([string]::Empty)\n+\n+\n+    # retrieve a local list of what's currently installed\n+    if ($isChocoAction) {\n+        $localList = Get-ChocolateyLocalList\n+    }\n+\n+\n+    # invoke chocolatey based on the action required\n+    switch ($Action)\n+    {\n+        {($_ -ieq 'install') -or ($_ -ieq 'uninstall') -or ($_ -ieq 'upgrade')  -or ($_ -ieq 'downgrade')}\n+            {\n+                Invoke-ChocolateyAction -Action $Action -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -DevOnly:$DevOnly -Adhoc:$Adhoc\n+            }\n+\n+        {($_ -ieq 'reinstall')}\n+            {\n+                Invoke-ChocolateyAction -Action 'uninstall' -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -DevOnly:$DevOnly -Adhoc:$Adhoc\n+\n+                Invoke-ChocolateyAction -Action 'install' -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -DevOnly:$DevOnly -Adhoc:$Adhoc\n+            }\n+\n+        {($_ -ieq 'pack')}\n+            {\n+                Invoke-ChocolateyAction -Action 'pack' -Key $Key -Config $config\n+            }\n+\n+        {($_ -ieq 'list')}\n+            {\n+                Invoke-FudgeLocalDetails -Config $config -Key $Key -LocalList $localList -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'search')}\n+            {\n+                Invoke-Search -Key $Key -Limit $Limit -Source $Source -LocalList $localList\n+            }\n+\n+        {($_ -ieq 'new')}\n+            {\n+                New-Fudgefile -Path $FudgefilePath -Key $Key -LocalList $localList -Install:$Install -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'renew')}\n+            {\n+                Restore-Fudgefile -Path $FudgefilePath -Key $Key -LocalList $localList -Install:$Install -Uninstall:$Uninstall -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'delete')}\n+            {\n+                Remove-Fudgefile -Path $FudgefilePath -Uninstall:$Uninstall -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'prune')}\n+            {\n+                Invoke-FudgePrune -Config $config -LocalList $localList -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'clean')}\n+            {\n+                Invoke-FudgeClean -LocalList $localList\n+            }\n+\n+        {($_ -ieq 'add')}\n+            {\n+                Invoke-FudgeAdd -Path $FudgefilePath -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -Install:$Install\n+            }\n+\n+        {($_ -ieq 'remove')}\n+            {\n+                Invoke-FudgeRemove -Path $FudgefilePath -Key $Key -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -Uninstall:$Uninstall\n+            }\n+\n+        {($_ -ieq 'which')}\n+            {\n+                Invoke-FudgeWhich -Key $Key\n+            }\n+\n+        {($_ -ieq 'rebuild')}\n+            {\n+                Invoke-FudgeClean -LocalList $localList\n+                Invoke-ChocolateyAction -Action 'install' -Key $Key -Source $Source -Config $config -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        default\n+            {\n+                Write-Fail \"Action not recognised: $($_)\"\n+            }\n+    }\n+}\n+finally\n+{\n+    # output duration, and cleanup\n+    Write-Details \"`nDuration: $(([DateTime]::UtcNow - $timer).ToString())\"\n+    Remove-Module -Name 'FudgeTools' -ErrorAction SilentlyContinue | Out-Null\n+}","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-22T15:29:38Z","lastEditedAt":null,"updatedAt":"2019-07-22T15:29:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM1MDUyOA==","url":"https://github.com/coala/coala/pull/6030#discussion_r310350528","bodyText":"Sure fix it in the template","diffHunk":"@@ -32,32 +41,90 @@ branches:\n   except:\n     - /^sils\\/.*/\n \n+# This forces unix style line endings in the clone, which is necessary to\n+# avoid warning regarding EOLs when running git diff on Windows\n+init: git config --global core.autocrlf false\n+\n install:\n-  # Prepend newly installed Python to the PATH of this build (this cannot be\n-  # done from inside the powershell script as it would require to restart\n-  # the parent CMD process).\n-  - \"SET PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%\"\n-  - \"SET PATH=%PATH%;C:\\\\Program\\ Files\\\\Git\\\\mingw64\\\\bin\"\n+  # Show initial state\n+  - powershell -c \"$PSVersionTable\"\n+  # Uncomment to debug\n+  # printenv\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+  - which cl & exit 0\n+\n+  # Stores environment in registry, with minor tweaks\n+  - python .misc/store_env_in_registry.py\n+  - refreshenv\n+\n+  # Set up AppVeyor product versions, and install dummy choco entries for them\n+  - ps: . .misc/FudgeCI.ps1; Initialize-AppVeyorVM\n+  - refreshenv\n+  - echo %PATH%\n+  # Avoid tools finding and using MinGW\n+  - mv C:\\MinGW %TEMP%\n+  # TODO: Avoid tools finding and using Visual Studio\n+\n+  # Show updated SOE; versions should be as defined in top of the Fudgefile\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n+  # Install remainer of the Fudgefile with chocolatey using Fudge\n+  - ps: . .misc/Fudge.ps1 install\n+  - refreshenv\n+  - echo %PATH%\n+\n \n   # Check that we have the expected version and architecture for Python\n   - \"python --version\"\n   - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n-  - \"%CMD_IN_ENV% python -m pip install --upgrade setuptools==21 pip==9.0.1\"\n-  - \"%CMD_IN_ENV% python -m pip install -r test-requirements.txt \\\n-    -r requirements.txt -r docs-requirements.txt\"\n+  # Confirm other versions\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  # Newly installed versions\n+\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n \n build: false  # Not a C# project, build stuff at the test step instead.\n \n test_script:\n-  - \"%CMD_IN_ENV% py.test\"\n-  - \"%CMD_IN_ENV% python setup.py install\"\n-  - \"%CMD_IN_ENV% python -m pip install \\\n-    git+https://github.com/coala/coala-bears\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+\n+  - py.test","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-08-03T12:48:16Z","lastEditedAt":null,"updatedAt":"2019-08-03T12:48:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM1MDU1Mw==","url":"https://github.com/coala/coala/pull/6030#discussion_r310350553","bodyText":"this is code imported from https://github.com/Badgerati/Fudge ; raise issues or PRs there :P","diffHunk":"@@ -0,0 +1,448 @@\n+<#\n+    .SYNOPSIS\n+        Fudge is a tool to help you manage and version control Chocolatey packages required for environments to function\n+\n+    .DESCRIPTION\n+        Fudge is a tool to help you manage and version control Chocolatey packages required for environments to function.\n+        This is done via a Fudgefile which allows you to specify packages (and their versions) to install. You can also\n+        specify dev-specific packages (like git, or fiddler)\n+\n+        You are also able to define pre/post install/upgrade/downgrade/uninstall scripts for additional required functionality\n+\n+        Furthermore, Fudge has a section to allow you to specify multiple nuspec files and pack the one you need\n+\n+    .PARAMETER Action\n+        The action that Fudge should undertake\n+        Actions: install, upgrade, downgrade, uninstall, reinstall, pack, list, search, new, delete, prune, clean, rebuild,\n+                 which, help, renew, add, remove\n+        [Alias: -a]\n+\n+    .PARAMETER Key\n+        The key represents a package/nuspec name in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, pack, new, which, renew, add, remove]\n+        [Alias: -k]\n+\n+    .PARAMETER FudgefilePath\n+        This will override looking for a default 'Fudgefile' at the root of the current path, and allow you to specify\n+        other files instead. This allows you to have multiple Fudgefiles\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, pack, list, new, delete, prune, rebuild, renew, add, remove]\n+        [Default: ./Fudgefile]\n+        [Alias: -fp]\n+\n+    .PARAMETER Limit\n+        This argument only applies for the 'search' action. It will limit the amount of packages returned when searching\n+        If 0 is supplied, the full list is returned\n+        [Actions: search]\n+        [Default: 10]\n+        [Alias: -l]\n+\n+    .PARAMETER Source\n+        Passing this argument will allow you to specify custom source locations to get/download packages for Chocolatey.\n+        This allows you to install packages from local directories, or from custom Chocolatey servers. Passing this will\n+        also override the source specified in any Fudgefiles\n+        [Default: Chocolatey's server]\n+        [Actions: install, upgrade, downgrade, reinstall, search, rebuild, add]\n+        [Alias: -s]\n+\n+    .PARAMETER Parameters\n+        This argument allows you to pass parameters to a chocolatey package, as if you were using \"--params\" on choco.\n+        For install/upgrade/downgrade/uninstall/reinstall, this argument only works when \"-Adhoc\" is also supplied\n+        [Default: Empty]\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, add]\n+        [Alias: -p]\n+\n+    .PARAMETER Arguments\n+        This argument allows you to pass extra arguments to a chocolatey, such as \"--x86\" or \"--ignore-checksum\"\n+        For install/upgrade/downgrade/uninstall/reinstall, this argument only works when \"-Adhoc\" is also supplied\n+        [Default: Empty]\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, add]\n+        [Alias: -args]\n+\n+    .PARAMETER Dev\n+        Switch parameter, if supplied will also action upon the devPackages in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, list, delete, prune, rebuild, add, remove]\n+        [Alias: -d]\n+\n+    .PARAMETER DevOnly\n+        Switch parameter, if supplied will only action upon the devPackages in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall, list, delete, prune, rebuild]\n+        [Alias: -do]\n+\n+    .PARAMETER Install\n+        Switch parameter, if supplied will install packages after creating a new Fudgefile\n+        [Actions: new, renew, add]\n+        [Alias: -i]\n+\n+    .PARAMETER Uninstall\n+        Switch parameter, if supplied will uninstall packages before deleting a Fudgefile\n+        [Actions: delete, renew, remove]\n+        [Alias: -u]\n+\n+    .PARAMETER Adhoc\n+        Switch parameter, if supplied will install software from Chocolatey whether or not\n+        the package is in the Fudgefile\n+        [Actions: install, upgrade, downgrade, uninstall, reinstall]\n+        [Alias: -ad]\n+\n+    .PARAMETER Version\n+        Switch parameter, if supplied will just display the current version of Fudge installed\n+        [Alias: -v]\n+\n+    .PARAMETER Help\n+        Switch parameter, if supplied will just display help output\n+        [Alias: -h]\n+\n+    .EXAMPLE\n+        fudge install\n+\n+    .EXAMPLE\n+        fudge install -d    # to also install devPackages (-do will only install devPackages)\n+\n+    .EXAMPLE\n+        fudge install git -ad   # installs git dispite not being in the Fudgefile\n+\n+    .EXAMPLE\n+        fudge pack website\n+\n+    .EXAMPLE\n+        fudge list\n+\n+    .EXAMPLE\n+        fudge search checksum\n+#>\n+param (\n+    [Alias('a')]\n+    [string]\n+    $Action,\n+\n+    [Alias('k')]\n+    [string]\n+    $Key,\n+\n+    [Alias('fp')]\n+    [string]\n+    $FudgefilePath,\n+\n+    [Alias('l')]\n+    [int]\n+    $Limit = 10,\n+\n+    [Alias('s')]\n+    [string]\n+    $Source,\n+\n+    [Alias('p')]\n+    [string]\n+    $Parameters,\n+\n+    [Alias('args')]\n+    [string]\n+    $Arguments,\n+\n+    [Alias('d')]\n+    [switch]\n+    $Dev,\n+\n+    [Alias('do')]\n+    [switch]\n+    $DevOnly,\n+\n+    [Alias('i')]\n+    [switch]\n+    $Install,\n+\n+    [Alias('u')]\n+    [switch]\n+    $Uninstall,\n+\n+    [Alias('v')]\n+    [switch]\n+    $Version,\n+\n+    [Alias('h')]\n+    [switch]\n+    $Help,\n+\n+    [Alias('ad')]\n+    [switch]\n+    $Adhoc\n+)\n+\n+# ensure if there's an error, we stop\n+$ErrorActionPreference = 'Stop'\n+\n+\n+# Import required modules\n+$root = Split-Path -Parent -Path $MyInvocation.MyCommand.Path\n+Import-Module \"$($root)\\Modules\\FudgeTools.psm1\" -Force -ErrorAction Stop\n+\n+\n+# output the version\n+$ver = 'v$version$'\n+Write-Success \"Fudge $($ver)\"\n+\n+# if we were only after the version, just return\n+if ($Version -or (@('v', 'version') -icontains $Action))\n+{\n+    return\n+}\n+\n+\n+# if action is just to display Help, show it and return\n+if ($Help -or (@('h', 'help') -icontains $Action))\n+{\n+    Write-Host \"`nUsage: fudge <action>\"\n+    Write-Host \"`nWhere <action> is one of:\"\n+    Write-Host \"    add, clean, delete, downgrade, help, install, list, new, pack,\"\n+    Write-Host \"    prune, rebuild, reinstall, remove, renew, search, uninstall,\"\n+    Write-Host \"    upgrade, version, which\"\n+    Write-Host \"\"\n+    return\n+}\n+\n+\n+try\n+{\n+    # start timer\n+    $timer = [DateTime]::UtcNow\n+\n+\n+    # ensure we have a valid action\n+    $packageActions = @('install', 'upgrade', 'uninstall', 'reinstall', 'list', 'rebuild', 'downgrade', 'add', 'remove')\n+    $maintainActions = @('prune')\n+    $packingActions = @('pack')\n+    $miscActions = @('search', 'clean', 'which')\n+    $newActions = @('new')\n+    $alterActions = @('delete', 'renew')\n+\n+    $actions = ($packageActions + $maintainActions + $packingActions + $miscActions + $newActions + $alterActions)\n+    if ((Test-Empty $Action) -or $actions -inotcontains $Action) {\n+        Write-Fail \"Unrecognised action supplied '$($Action)', should be either: $($actions -join ', ')\"\n+        return\n+    }\n+\n+\n+    # actions that require chocolatey\n+    $isChocoAction = (@('which', 'add', 'remove', 'delete') -inotcontains $Action)\n+    if (!$isChocoAction -and ($Install -or $Uninstall)) {\n+        $isChocoAction = $true\n+    }\n+\n+\n+    # if adhoc was supplied for an invalid action\n+    if ($Adhoc -and @('install', 'uninstall', 'upgrade', 'downgrade', 'reinstall') -inotcontains $Action) {\n+        Write-Fail \"Adhoc supplied for invalid action: $($Action)\"\n+        return\n+    }\n+\n+    # if adhoc supplied with no package name, fail\n+    if ($Adhoc -and [string]::IsNullOrWhiteSpace($Key)) {\n+        Write-Fail \"No package name supplied for adhoc $($Action)\"\n+        return\n+    }\n+\n+\n+    # if -devOnly is passed, set -dev to true\n+    if ($DevOnly) {\n+        $Dev = $true\n+    }\n+\n+\n+    # get the Fudgefile path, if adhoc is supplied set to empty\n+    $FudgefilePath = Get-FudgefilePath $FudgefilePath -Adhoc:$Adhoc\n+\n+\n+    # ensure that the Fudgefile exists (for certain actions), and deserialise it\n+    if (($packageActions + $maintainActions + $packingActions + $alterActions) -icontains $Action)\n+    {\n+        $config = $null\n+\n+        # if adhoc is supplied, we don't need to get the content\n+        if (!$Adhoc) {\n+            if (!(Test-Path $FudgefilePath)) {\n+                Write-Fail \"Path to Fudgefile does not exist: $($FudgefilePath)\"\n+                return\n+            }\n+\n+            $config = Get-FudgefileContent $FudgefilePath\n+        }\n+\n+        # if we have a custom source in the config and no CLI source, set the source\n+        if ((Test-Empty $Source) -and ($null -ne $config) -and !(Test-Empty $config.source)) {\n+            $Source = $config.source\n+        }\n+    }\n+\n+    # ensure that the Fudgefile doesn't exist\n+    elseif ($newActions -icontains $Action)\n+    {\n+        if (Test-Path $FudgefilePath) {\n+            Write-Fail \"Path to Fudgefile already exists: $($FudgefilePath)\"\n+            return\n+        }\n+    }\n+\n+\n+    # if there are no packages to install or nuspecs to pack, just return\n+    if ($null -ne $config)\n+    {\n+        # check nuspecs\n+        if ($packingActions -icontains $Action)\n+        {\n+            if (Test-Empty $config.pack) {\n+                Write-Notice \"There are no nuspecs to $($Action)\"\n+                return\n+            }\n+\n+            if (![string]::IsNullOrWhiteSpace($Key) -and [string]::IsNullOrWhiteSpace($config.pack.$Key)) {\n+                Write-Notice \"Fudgefile does not contain a nuspec pack file for '$($Key)'\"\n+                return\n+            }\n+        }\n+\n+        # check packages\n+        elseif ($packageActions -icontains $Action)\n+        {\n+            if ((Test-Empty $config.packages) -and (!$Dev -or ($Dev -and (Test-Empty $config.devPackages)))) {\n+                Write-Notice \"There are no packages to $($Action)\"\n+                return\n+            }\n+\n+            if ($DevOnly -and (Test-Empty $config.devPackages)) {\n+                Write-Notice \"There are no devPackages to $($Action)\"\n+                return\n+            }\n+        }\n+    }\n+\n+\n+    # check to see if chocolatey is installed\n+    if ($isChocoAction) {\n+        $isChocoInstalled = Test-Chocolatey\n+    }\n+\n+\n+    # check if the console is elevated (only needs to be done for certain actions)\n+    $isAdminAction = @('list', 'search', 'new', 'delete', 'renew', 'which', 'add', 'remove', 'pack') -inotcontains $Action\n+    $actionNeedsAdmin = (@('delete', 'remove') -icontains $Action -and $Uninstall) -or (@('new', 'renew', 'add') -icontains $Action -and $Install)\n+\n+    if (((!$isChocoInstalled -and $isChocoAction) -or $isAdminAction -or $actionNeedsAdmin) -and !(Test-AdminUser))\n+    {\n+        Write-Notice 'Must be running with administrator privileges for Fudge to fully function'\n+        return\n+    }\n+\n+\n+    # if chocolatey isn't installed, install it\n+    if (!$isChocoInstalled -and $isChocoAction) {\n+        Install-Chocolatey\n+    }\n+\n+\n+    # if we are using a global custom source, output it for info\n+    if (!(Test-Empty $Source)) {\n+        Write-Notice \"Source: $($Source)\"\n+    }\n+\n+    Write-Host ([string]::Empty)\n+\n+\n+    # retrieve a local list of what's currently installed\n+    if ($isChocoAction) {\n+        $localList = Get-ChocolateyLocalList\n+    }\n+\n+\n+    # invoke chocolatey based on the action required\n+    switch ($Action)\n+    {\n+        {($_ -ieq 'install') -or ($_ -ieq 'uninstall') -or ($_ -ieq 'upgrade')  -or ($_ -ieq 'downgrade')}\n+            {\n+                Invoke-ChocolateyAction -Action $Action -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -DevOnly:$DevOnly -Adhoc:$Adhoc\n+            }\n+\n+        {($_ -ieq 'reinstall')}\n+            {\n+                Invoke-ChocolateyAction -Action 'uninstall' -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -DevOnly:$DevOnly -Adhoc:$Adhoc\n+\n+                Invoke-ChocolateyAction -Action 'install' -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -DevOnly:$DevOnly -Adhoc:$Adhoc\n+            }\n+\n+        {($_ -ieq 'pack')}\n+            {\n+                Invoke-ChocolateyAction -Action 'pack' -Key $Key -Config $config\n+            }\n+\n+        {($_ -ieq 'list')}\n+            {\n+                Invoke-FudgeLocalDetails -Config $config -Key $Key -LocalList $localList -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'search')}\n+            {\n+                Invoke-Search -Key $Key -Limit $Limit -Source $Source -LocalList $localList\n+            }\n+\n+        {($_ -ieq 'new')}\n+            {\n+                New-Fudgefile -Path $FudgefilePath -Key $Key -LocalList $localList -Install:$Install -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'renew')}\n+            {\n+                Restore-Fudgefile -Path $FudgefilePath -Key $Key -LocalList $localList -Install:$Install -Uninstall:$Uninstall -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'delete')}\n+            {\n+                Remove-Fudgefile -Path $FudgefilePath -Uninstall:$Uninstall -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'prune')}\n+            {\n+                Invoke-FudgePrune -Config $config -LocalList $localList -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        {($_ -ieq 'clean')}\n+            {\n+                Invoke-FudgeClean -LocalList $localList\n+            }\n+\n+        {($_ -ieq 'add')}\n+            {\n+                Invoke-FudgeAdd -Path $FudgefilePath -Key $Key -Source $Source -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -Install:$Install\n+            }\n+\n+        {($_ -ieq 'remove')}\n+            {\n+                Invoke-FudgeRemove -Path $FudgefilePath -Key $Key -Config $config -LocalList $localList `\n+                    -Parameters $Parameters -Arguments $Arguments -Dev:$Dev -Uninstall:$Uninstall\n+            }\n+\n+        {($_ -ieq 'which')}\n+            {\n+                Invoke-FudgeWhich -Key $Key\n+            }\n+\n+        {($_ -ieq 'rebuild')}\n+            {\n+                Invoke-FudgeClean -LocalList $localList\n+                Invoke-ChocolateyAction -Action 'install' -Key $Key -Source $Source -Config $config -Dev:$Dev -DevOnly:$DevOnly\n+            }\n+\n+        default\n+            {\n+                Write-Fail \"Action not recognised: $($_)\"\n+            }\n+    }\n+}\n+finally\n+{\n+    # output duration, and cleanup\n+    Write-Details \"`nDuration: $(([DateTime]::UtcNow - $timer).ToString())\"\n+    Remove-Module -Name 'FudgeTools' -ErrorAction SilentlyContinue | Out-Null\n+}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-08-03T12:49:14Z","lastEditedAt":null,"updatedAt":"2019-08-03T12:49:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM1MDU4OA==","url":"https://github.com/coala/coala/pull/6030#discussion_r310350588","bodyText":"Nope - a hack until we get a real solution, or drop py34 (but py34 is helpful for the bears travis trusty (and precise?) builds, which are needed for some of the languages)","diffHunk":"@@ -32,32 +41,90 @@ branches:\n   except:\n     - /^sils\\/.*/\n \n+# This forces unix style line endings in the clone, which is necessary to\n+# avoid warning regarding EOLs when running git diff on Windows\n+init: git config --global core.autocrlf false\n+\n install:\n-  # Prepend newly installed Python to the PATH of this build (this cannot be\n-  # done from inside the powershell script as it would require to restart\n-  # the parent CMD process).\n-  - \"SET PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%\"\n-  - \"SET PATH=%PATH%;C:\\\\Program\\ Files\\\\Git\\\\mingw64\\\\bin\"\n+  # Show initial state\n+  - powershell -c \"$PSVersionTable\"\n+  # Uncomment to debug\n+  # printenv\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+  - which cl & exit 0\n+\n+  # Stores environment in registry, with minor tweaks\n+  - python .misc/store_env_in_registry.py\n+  - refreshenv\n+\n+  # Set up AppVeyor product versions, and install dummy choco entries for them\n+  - ps: . .misc/FudgeCI.ps1; Initialize-AppVeyorVM\n+  - refreshenv\n+  - echo %PATH%\n+  # Avoid tools finding and using MinGW\n+  - mv C:\\MinGW %TEMP%\n+  # TODO: Avoid tools finding and using Visual Studio\n+\n+  # Show updated SOE; versions should be as defined in top of the Fudgefile\n+  - python --version\n+  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  - which gcc & exit 0\n+  - gcc --version & exit 0\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n+  # Install remainer of the Fudgefile with chocolatey using Fudge\n+  - ps: . .misc/Fudge.ps1 install\n+  - refreshenv\n+  - echo %PATH%\n+\n \n   # Check that we have the expected version and architecture for Python\n   - \"python --version\"\n   - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n-  - \"%CMD_IN_ENV% python -m pip install --upgrade setuptools==21 pip==9.0.1\"\n-  - \"%CMD_IN_ENV% python -m pip install -r test-requirements.txt \\\n-    -r requirements.txt -r docs-requirements.txt\"\n+  # Confirm other versions\n+  - node --version\n+  - which npm\n+  - npm --version\n+  - npm config get prefix\n+  # Newly installed versions\n+\n+\n+  - \"%MSYS_BIN%\\\\date.exe\"\n \n build: false  # Not a C# project, build stuff at the test step instead.\n \n test_script:\n-  - \"%CMD_IN_ENV% py.test\"\n-  - \"%CMD_IN_ENV% python setup.py install\"\n-  - \"%CMD_IN_ENV% python -m pip install \\\n-    git+https://github.com/coala/coala-bears\"\n+  - python -m pip --version\n+  - python -c \"import setuptools; print(setuptools.__version__)\"\n+\n+  - py.test\n+\n+  - python setup.py install\n+\n+  - python -m pip install\n+      git+https://github.com/coala/coala-bears#egg=coala-bears\n   - npm install csslint -g\n   # https://github.com/coala/coala/issues/5619\n   - rm docs/Developers/coala_settings.rst\n-  - sed -i '/ShellCheckBear/d' .coafile\n-  - \"%CMD_IN_ENV% coala --ci\"\n+  # https://github.com/coala/coala/issues/5985 and\n+  # https://github.com/coala/coala/issues/6028 and others:\n+  - rm coalib/misc/Asyncio.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-08-03T12:50:22Z","lastEditedAt":null,"updatedAt":"2019-08-03T12:50:22Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1566269056000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6032","number":6032,"title":"TOML.py: Add Language definition","body":"Add TOML language to coala language definitions\nCloses #6031\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2019-06-21T11:51:20Z","updatedAt":"2019-08-20T02:44:16Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6032","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUwNDg2MjU1NA==","url":"https://github.com/coala/coala/pull/6032#issuecomment-504862554","bodyText":"@jayvdb @RaiVaibhav @Nosferatul @virresh @ksdme @margobra8 Can you review this?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-06-24T05:26:10Z","lastEditedAt":null,"updatedAt":"2019-06-24T05:26:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNTU3NTYyOQ==","url":"https://github.com/coala/coala/pull/6032#issuecomment-505575629","bodyText":"Push again to trigger appveyor retest","diffHunk":null,"author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"createdAt":"2019-06-25T18:53:45Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:53:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNTYwNTk0Nw==","url":"https://github.com/coala/coala/pull/6032#issuecomment-505605947","bodyText":"Push again to trigger appveyor retest\n\nAppveyor is currently broken. It is being fixed.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-06-25T20:18:02Z","lastEditedAt":null,"updatedAt":"2019-06-25T20:18:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565898891000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6037","number":6037,"title":"ConsoleInteraction.py: Show context for diffs","body":"Shows context for the affected lines\nCloses #2745\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-28T03:49:33Z","updatedAt":"2019-08-15T19:54:51Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6037","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODU0OTA3Ng==","url":"https://github.com/coala/coala/pull/6037#discussion_r298549076","bodyText":"The code in else block looks almost the same as code in if block - why not merge them together?","diffHunk":"@@ -466,6 +554,27 @@ def print_results_no_input(log_printer,\n     \"\"\"\n     for result in result_list:\n \n+        console_printer.print('\\n'+format_lines(result.message, symbol='!'))\n+        if hasattr(section, 'name'):\n+            console_printer.print(\n+                '**** {bear} [Section: {section} | Severity: '\n+                '{severity}] ****'\n+                .format(\n+                    bear=result.origin,\n+                    section=section.name,\n+                    severity=RESULT_SEVERITY.__str__(\n+                                              result.severity\n+                                              )\n+                        ),\n+                color=RESULT_SEVERITY_COLORS[result.severity])\n+        else:   # pragma: no cover\n+            console_printer.print(\n+                '**** {bear} [Section {section} | Severity '\n+                '{severity}] ****'\n+                .format(bear=result.origin, section='<empty>',\n+                        severity=RESULT_SEVERITY.__str__(result.severity)),\n+                color=RESULT_SEVERITY_COLORS[result.severity])","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2019-06-28T10:57:22Z","lastEditedAt":"2019-06-28T10:57:47Z","updatedAt":"2019-06-28T10:57:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODU2MjQwNA==","url":"https://github.com/coala/coala/pull/6037#discussion_r298562404","bodyText":"Fixed it. The code can be merged in print_results function as well","diffHunk":"@@ -466,6 +554,27 @@ def print_results_no_input(log_printer,\n     \"\"\"\n     for result in result_list:\n \n+        console_printer.print('\\n'+format_lines(result.message, symbol='!'))\n+        if hasattr(section, 'name'):\n+            console_printer.print(\n+                '**** {bear} [Section: {section} | Severity: '\n+                '{severity}] ****'\n+                .format(\n+                    bear=result.origin,\n+                    section=section.name,\n+                    severity=RESULT_SEVERITY.__str__(\n+                                              result.severity\n+                                              )\n+                        ),\n+                color=RESULT_SEVERITY_COLORS[result.severity])\n+        else:   # pragma: no cover\n+            console_printer.print(\n+                '**** {bear} [Section {section} | Severity '\n+                '{severity}] ****'\n+                .format(bear=result.origin, section='<empty>',\n+                        severity=RESULT_SEVERITY.__str__(result.severity)),\n+                color=RESULT_SEVERITY_COLORS[result.severity])","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2019-06-28T11:51:47Z","lastEditedAt":null,"updatedAt":"2019-06-28T11:51:47Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565535815000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6039","number":6039,"title":"ConsoleInteraction: Modify color_letter function","body":"This modifies color_letter function to run as correctly\nwhen there is a uppercase letter after \"the\" uppercase\nletter in parenthesis and also if action has a associated warning then\nit gets highlighted.\nFixes #6034","comments":3,"createdAt":"2019-06-30T12:06:52Z","updatedAt":"2019-08-11T15:03:35Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6039","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk5MjYxMg==","url":"https://github.com/coala/coala/pull/6039#discussion_r307992612","bodyText":"Shouldn't it be -1 if not found?","diffHunk":"@@ -97,22 +97,24 @@ def highlight_text(no_color, text, style, lexer=TextLexer()):\n \n \n def color_letter(console_printer, line):\n-    x = -1\n-    y = -1\n-    letter = ''\n-    for i, l in enumerate(line, 0):\n-        if line[i] == '(':\n-            x = i\n-        if line[i] == ')':\n-            y = i\n-        if l.isupper() and x != -1:\n-            letter = l\n+    x = line.find('(')\n+    if x == -1:\n+        letter = ''\n+        y = x + 1\n+    else:\n+        letter = line[x + 1]\n+        y = x + 2\n+    warn = line.rfind('[')\n+    if warn == 0:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2019-07-28T09:06:15Z","lastEditedAt":null,"updatedAt":"2019-07-28T09:06:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk5MjYyMw==","url":"https://github.com/coala/coala/pull/6039#discussion_r307992623","bodyText":"I am not familiar with this part, but is it able to verify the color of output?","diffHunk":"@@ -189,6 +190,22 @@ def tearDown(self):\n         OpenEditorAction.is_applicable = self.old_open_editor_applicable\n         ApplyPatchAction.is_applicable = self.old_apply_patch_applicable\n \n+    def test_color_letter(self):\n+        line1 = '[  ] 1. (A)pply Patch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line1)\n+            self.assertEqual(line1 + '\\n', stdout.getvalue())\n+\n+        line2 = '[  ] *0. Apply (P)atch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line2)\n+            self.assertEqual(line2 + '\\n', stdout.getvalue())\n+\n+        line3 = '[  ] 3. Apply (P)atch [Note: This will do something]'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line3)\n+            self.assertEqual(line3 + '\\n', stdout.getvalue())","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2019-07-28T09:06:46Z","lastEditedAt":null,"updatedAt":"2019-07-28T09:06:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk5MzEwMA==","url":"https://github.com/coala/coala/pull/6039#discussion_r307993100","bodyText":"No, notice [ is always the first character when you are asked for an action.","diffHunk":"@@ -97,22 +97,24 @@ def highlight_text(no_color, text, style, lexer=TextLexer()):\n \n \n def color_letter(console_printer, line):\n-    x = -1\n-    y = -1\n-    letter = ''\n-    for i, l in enumerate(line, 0):\n-        if line[i] == '(':\n-            x = i\n-        if line[i] == ')':\n-            y = i\n-        if l.isupper() and x != -1:\n-            letter = l\n+    x = line.find('(')\n+    if x == -1:\n+        letter = ''\n+        y = x + 1\n+    else:\n+        letter = line[x + 1]\n+        y = x + 2\n+    warn = line.rfind('[')\n+    if warn == 0:","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-28T09:23:27Z","lastEditedAt":null,"updatedAt":"2019-07-28T09:23:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk5MzExMA==","url":"https://github.com/coala/coala/pull/6039#discussion_r307993110","bodyText":"No, it just checks the parsing of the line.","diffHunk":"@@ -189,6 +190,22 @@ def tearDown(self):\n         OpenEditorAction.is_applicable = self.old_open_editor_applicable\n         ApplyPatchAction.is_applicable = self.old_apply_patch_applicable\n \n+    def test_color_letter(self):\n+        line1 = '[  ] 1. (A)pply Patch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line1)\n+            self.assertEqual(line1 + '\\n', stdout.getvalue())\n+\n+        line2 = '[  ] *0. Apply (P)atch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line2)\n+            self.assertEqual(line2 + '\\n', stdout.getvalue())\n+\n+        line3 = '[  ] 3. Apply (P)atch [Note: This will do something]'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line3)\n+            self.assertEqual(line3 + '\\n', stdout.getvalue())","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-28T09:23:55Z","lastEditedAt":null,"updatedAt":"2019-07-28T09:23:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzk5MzEzNQ==","url":"https://github.com/coala/coala/pull/6039#discussion_r307993135","bodyText":"I will look if there is a way to verify color as well","diffHunk":"@@ -189,6 +190,22 @@ def tearDown(self):\n         OpenEditorAction.is_applicable = self.old_open_editor_applicable\n         ApplyPatchAction.is_applicable = self.old_apply_patch_applicable\n \n+    def test_color_letter(self):\n+        line1 = '[  ] 1. (A)pply Patch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line1)\n+            self.assertEqual(line1 + '\\n', stdout.getvalue())\n+\n+        line2 = '[  ] *0. Apply (P)atch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line2)\n+            self.assertEqual(line2 + '\\n', stdout.getvalue())\n+\n+        line3 = '[  ] 3. Apply (P)atch [Note: This will do something]'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line3)\n+            self.assertEqual(line3 + '\\n', stdout.getvalue())","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-28T09:24:38Z","lastEditedAt":null,"updatedAt":"2019-07-28T09:24:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODMwNzA0Mg==","url":"https://github.com/coala/coala/pull/6039#discussion_r308307042","bodyText":"I tried using termcolor for generating colored string but there is always a difference in some bits.","diffHunk":"@@ -189,6 +190,22 @@ def tearDown(self):\n         OpenEditorAction.is_applicable = self.old_open_editor_applicable\n         ApplyPatchAction.is_applicable = self.old_apply_patch_applicable\n \n+    def test_color_letter(self):\n+        line1 = '[  ] 1. (A)pply Patch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line1)\n+            self.assertEqual(line1 + '\\n', stdout.getvalue())\n+\n+        line2 = '[  ] *0. Apply (P)atch'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line2)\n+            self.assertEqual(line2 + '\\n', stdout.getvalue())\n+\n+        line3 = '[  ] 3. Apply (P)atch [Note: This will do something]'\n+        with retrieve_stdout() as stdout:\n+            color_letter(self.console_printer, line3)\n+            self.assertEqual(line3 + '\\n', stdout.getvalue())","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-29T15:55:49Z","lastEditedAt":null,"updatedAt":"2019-07-29T15:55:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzAzMTM1MQ==","url":"https://github.com/coala/coala/pull/6039#issuecomment-507031351","bodyText":"If action has warning the it looks something like","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-30T12:14:26Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:14:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwOTAxNTU1MQ==","url":"https://github.com/coala/coala/pull/6039#issuecomment-509015551","bodyText":"@abhishalya Can you review?","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-07T17:05:31Z","lastEditedAt":null,"updatedAt":"2019-07-07T17:05:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwOTcwODY5OA==","url":"https://github.com/coala/coala/pull/6039#issuecomment-509708698","bodyText":"Haven't tested it, but the changes look good to me 👍","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-09T16:15:29Z","lastEditedAt":null,"updatedAt":"2019-07-09T16:15:29Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1565330681000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5997","number":5997,"title":"ShowPatchAction.py : Make patches better readable","body":"Print better diffs showing a few context lines\nCloses #5480\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2019-03-03T11:54:05Z","updatedAt":"2019-08-09T06:04:41Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"assignee":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5997","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mzk4NjQ4MQ==","url":"https://github.com/coala/coala/pull/5997#discussion_r263986481","bodyText":"I doubt whether we should only use current_line_added. The way GitHub uses to print the line number is to provide both current_line_subtracted and current_line_added for unchanged lines.","diffHunk":"@@ -48,6 +48,8 @@ def print_beautified_diff(difflines, printer):\n                           color='red')\n             current_line_subtracted += 1\n         else:\n+            printer.print(format_line(line[1:],\n+                                      real_nr=current_line_added))","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-03-09T04:40:45Z","lastEditedAt":null,"updatedAt":"2019-03-09T04:40:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mzk5MTAxMw==","url":"https://github.com/coala/coala/pull/5997#discussion_r263991013","bodyText":"@li-boxuan  Is this okay ? I think this is close to how GitHub prints.","diffHunk":"@@ -48,6 +48,8 @@ def print_beautified_diff(difflines, printer):\n                           color='red')\n             current_line_subtracted += 1\n         else:\n+            printer.print(format_line(line[1:],\n+                                      real_nr=current_line_added))","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODQ3NDg3Mg==","createdAt":"2019-03-09T08:35:39Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2019-03-09T08:14:59Z","lastEditedAt":null,"updatedAt":"2019-03-09T08:14:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mzk5MTUyMw==","url":"https://github.com/coala/coala/pull/5997#discussion_r263991523","bodyText":"This looks great to me 👍. @Makman2 what's your view on it?","diffHunk":"@@ -48,6 +48,8 @@ def print_beautified_diff(difflines, printer):\n                           color='red')\n             current_line_subtracted += 1\n         else:\n+            printer.print(format_line(line[1:],\n+                                      real_nr=current_line_added))","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-03-09T08:36:14Z","lastEditedAt":null,"updatedAt":"2019-03-09T08:36:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTAxNjQ4Mg==","url":"https://github.com/coala/coala/pull/5997#issuecomment-469016482","bodyText":"Before the changes,\n\nContext lines are now displayed.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-03-03T12:04:34Z","lastEditedAt":"2019-03-03T12:13:15Z","updatedAt":"2019-03-03T12:13:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTAxNjc2MQ==","url":"https://github.com/coala/coala/pull/5997#issuecomment-469016761","bodyText":"The printing of the patch was handled by print_beautified_diff . This function took difflib.unified_diff as its input.  But difflib.unified_diff had n=3 which is the default number of context lines that will be supplied.\nThe print_beautified_diff took care of printing the affected lines but it did not print the normal context lines.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-03-03T12:08:09Z","lastEditedAt":"2019-03-03T14:27:04Z","updatedAt":"2019-03-03T14:27:04Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566478325000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2953","number":2953,"title":"CSVLintBear.py: Improve Documentation","body":"Provide some more details on what basis\nthe csv file is being validated.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-08-22T10:31:33Z","updatedAt":"2019-08-22T12:52:05Z","closedAt":"2019-08-22T12:52:05Z","state":"merged","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[{"name":"process/approved","color":"009800"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2953","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjYwODMxMw==","url":"https://github.com/coala/coala-bears/pull/2953#discussion_r316608313","bodyText":"wow ... this shouldnt be here.","diffHunk":"@@ -6,9 +6,15 @@\n \n \n @linter(executable='csvlint')\n-class CSVLintBear:\n+class CSVLintBear:  # pragma nt: no cover","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240OTMxOTYwOA==","createdAt":"2019-08-22T10:41:10Z","content":"EYES","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-08-22T10:38:00Z","lastEditedAt":null,"updatedAt":"2019-08-22T10:38:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjYwOTczOA==","url":"https://github.com/coala/coala-bears/pull/2953#discussion_r316609738","bodyText":"You are absolutely right.","diffHunk":"@@ -6,9 +6,15 @@\n \n \n @linter(executable='csvlint')\n-class CSVLintBear:\n+class CSVLintBear:  # pragma nt: no cover","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-08-22T10:42:14Z","lastEditedAt":null,"updatedAt":"2019-08-22T10:42:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzg0NzY0MA==","url":"https://github.com/coala/coala-bears/pull/2953#issuecomment-523847640","bodyText":"This is a clone of #2884\n@jayvdb please review.","diffHunk":null,"author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-08-22T10:33:11Z","lastEditedAt":null,"updatedAt":"2019-08-22T10:33:11Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566131493000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2948","number":2948,"title":"FilenameBear.py: Provide multiple patches","body":"This adds support for FilenameBear to provide multiple patches whenever it cannot guess a suitable naming convention.\nasciinema of this","comments":1,"createdAt":"2019-08-17T12:29:28Z","updatedAt":"2019-08-18T12:31:33Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2948","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMjMxODA4Mg==","url":"https://github.com/coala/coala-bears/pull/2948#issuecomment-522318082","bodyText":"I think codecov needs to be ignored, see this","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-08-18T12:31:33Z","lastEditedAt":null,"updatedAt":"2019-08-18T12:31:33Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566453006000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2951","number":2951,"title":"HTMLLintBear: Enable use_spaces by default","body":"This restores prior behaviour.\nFixes #2949","comments":0,"createdAt":"2019-08-22T04:33:40Z","updatedAt":"2019-08-22T05:50:06Z","closedAt":"2019-08-22T05:50:06Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2951","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564835655000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2939","number":2939,"title":"Sync templates with moban","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-07-29T13:50:40Z","updatedAt":"2019-08-03T12:34:15Z","closedAt":"2019-08-03T12:34:15Z","state":"merged","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2939","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565163468000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2942","number":2942,"title":"Fix pmd bears on Windows","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-08-03T16:29:48Z","updatedAt":"2019-08-07T07:37:48Z","closedAt":"2019-08-07T07:37:48Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2942","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM2NzQ0MA==","url":"https://github.com/coala/coala-bears/pull/2942#discussion_r310367440","bodyText":"while the error message isnt as good, the AnyOneOfRequirements above does the same thing.\nAnd removing the 'bash' prefix should be enough to make pmd work on Windows.","diffHunk":"@@ -30,15 +35,20 @@ class CPDBear(GlobalBear):\n                      'Swift': 'swift'}\n \n     LANGUAGES = set(language_dict.keys())\n+    REQUIREMENTS = {\n+        AnyOneOfRequirements(\n+            [ExecutableRequirement('pmd'),\n+             ExecutableRequirement('run.sh'),\n+             ]\n+        ),\n+    }\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     LICENSE = 'AGPL-3.0'\n     CAN_DETECT = {'Duplication'}\n \n     @classmethod\n     def check_prerequisites(cls):\n-        if which('bash') is None:\n-            return 'bash is not installed.'\n         if which('pmd') is None and which('run.sh') is None:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-08-04T01:51:44Z","lastEditedAt":null,"updatedAt":"2019-08-04T01:51:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzkzNzYyMA==","url":"https://github.com/coala/coala-bears/pull/2942#issuecomment-517937620","bodyText":"Note there is now another error, with phpmd.  #2943","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-08-03T16:34:34Z","lastEditedAt":null,"updatedAt":"2019-08-03T16:34:34Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566486417000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2946","number":2946,"title":"IndentationBear: Ignore doc comments","body":"This adds a new implementation to ignore all\nthe doc comments from IndentationBear since\ndoc comments are not supossed to follow indentation.\nCloses #644\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-08-11T14:21:11Z","updatedAt":"2019-08-22T15:06:57Z","closedAt":"2019-08-22T15:06:57Z","state":"merged","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2946","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjQ4OTcwMw==","url":"https://github.com/coala/coala-bears/pull/2946#discussion_r316489703","bodyText":"switch the logic to be if any(...): continue , then you do not need to touch the existing yield lines.","diffHunk":"@@ -118,12 +129,16 @@ def run(self,\n         if new_file != list(file):\n             wholediff = Diff.from_string_arrays(file, new_file)\n             for diff in wholediff.split_diff():\n-                yield Result(\n-                    self,\n-                    'The indentation could be changed to improve readability.',\n-                    severity=RESULT_SEVERITY.INFO,\n-                    affected_code=(diff.range(filename),),\n-                    diffs={filename: diff})\n+                if not any(gt_eq(diff.range(filename).start, string.range.start)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-08-22T04:10:35Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:10:35Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1565580514000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2947","number":2947,"title":"DeleteFileAction: New action for DuplicateFileBear","body":"This removes the file argument when the result is yielded from DuplicateFileBear.\nFixes #2945\nThis also adds a new action for DuplicateFileBear, DeleteFileAction.","comments":1,"createdAt":"2019-08-12T03:27:34Z","updatedAt":"2019-08-12T03:28:34Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2947","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMDI4OTkyNA==","url":"https://github.com/coala/coala-bears/pull/2947#issuecomment-520289924","bodyText":"Temp changes commit is for CI because this PR depends on coala/coala#6029","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-08-12T03:28:34Z","lastEditedAt":null,"updatedAt":"2019-08-12T03:28:34Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566462927000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2905","number":2905,"title":"Add: EmberTemplateLintBear","body":"Closes #2345\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2019-04-29T17:54:23Z","updatedAt":"2019-08-22T08:35:27Z","closedAt":"2019-08-22T08:35:27Z","state":"closed","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2905","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2Mjc3Mw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279762773","bodyText":"The name is a bit confusing.","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-04-30T13:50:14Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:50:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NDg2MQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279764861","bodyText":"Can be put into separate files under test folder.","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MjcxOA==","createdAt":"2019-04-30T14:04:55Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T13:54:27Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:54:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NTAyMw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279765023","bodyText":"Rename the directory name, like template-lint-test-files","diffHunk":"@@ -0,0 +1,7 @@\n+module.exports = {","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MjczMA==","createdAt":"2019-04-30T14:05:00Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T13:54:46Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:54:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NTQ4Nw==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279765487","bodyText":"We can have a new language definition (not in this PR though) if Ember (template) is a different language from existing ones.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-04-30T13:55:43Z","lastEditedAt":null,"updatedAt":"2019-04-30T13:55:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2OTYyNg==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279769626","bodyText":"yes you are write, this file denotes a good file when a config file is used. Is good_file_with_configwill be good enough?","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-04-30T14:04:41Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:04:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2OTkzOQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279769939","bodyText":"Yeah, that would be better","diffHunk":"@@ -0,0 +1,46 @@\n+import os\n+\n+from bears.ember.EmberTemplateLintBear import EmberTemplateLintBear\n+from coalib.testing.LocalBearTestHelper import verify_local_bear\n+\n+good_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr>\n+  post body\n+  <div style=\"background-image: url({{url}})\"></div>\n+</body>\n+\"\"\"\n+\n+bad_file = \"\"\"\n+<body>\n+  body: {{{body}}}\n+  <hr/>\n+  post body\n+  <div style=\"background-image: url({{url}})\">\n+</body>\n+\"\"\"\n+\n+good_file_config = \"\"\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240MTc0MzE5NA==","createdAt":"2019-04-30T14:10:47Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-04-30T14:05:22Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:05:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc3MTUzMg==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r279771532","bodyText":"Ember is a framework of JavaScript. It is doubtful where to put it as Ember (template) only handles the template part. So one option is to put it in JS but it is totally unrelated to linting that.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-04-30T14:08:57Z","lastEditedAt":null,"updatedAt":"2019-04-30T14:08:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxOTMwMQ==","url":"https://github.com/coala/coala-bears/pull/2905#discussion_r305619301","bodyText":"It needs a new language definition in coala core.","diffHunk":"@@ -0,0 +1,38 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.NpmRequirement import NpmRequirement\n+\n+\n+@linter(executable='ember-template-lint',\n+        output_format='regex',\n+        output_regex=r'(?P<line>\\d+):(?P<column>\\d+)(?P<message>.*)'\n+        )\n+class EmberTemplateLintBear:\n+    \"\"\"\n+    ember-template-lint lints templates and return error results.\n+\n+    This is commonly used through ember-cli-template-lint which\n+    adds failing lint tests for consuming ember-cli applications.\n+\n+    https://github.com/ember-template-lint/ember-template-lint\n+    \"\"\"\n+\n+    LANGUAGES = {'Ember'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-07-21T13:55:18Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:55:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzc2NTgzNA==","url":"https://github.com/coala/coala-bears/pull/2905#issuecomment-523765834","bodyText":"@jayvdb @li-boxuan I am extremely sorry, but my fork of coala-bears repo got corrupted and it no longer exists now. This PR is without a parent, please close this one and I'll make a new one for the same issue.","diffHunk":null,"author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-08-22T06:20:36Z","lastEditedAt":null,"updatedAt":"2019-08-22T06:20:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzgwNzY4Nw==","url":"https://github.com/coala/coala-bears/pull/2905#issuecomment-523807687","bodyText":"OK","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T08:35:27Z","lastEditedAt":null,"updatedAt":"2019-08-22T08:35:27Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566492745000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2912","number":2912,"title":"bears/general: Add FileModeBear","body":"Closes #2370\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2019-06-04T15:19:00Z","updatedAt":"2019-08-22T16:52:25Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2912","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzNTQ0Mg==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r294035442","bodyText":"Mention the reason wherever you have done this.","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+def get_testfile_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'filemode_test_files', file)\n+\n+\n+FILE_PATH = get_testfile_path('test_file.txt')\n+\n+\n+class FileModeBearTest(LocalBearTestHelper):\n+\n+    def setUp(self):\n+        self.section = Section('')\n+        self.uut = FileModeBear(self.section, Queue())\n+\n+    def test_r_to_r_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IRUSR)\n+        self.section.append(Setting('filemode', 'r'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_w_to_w_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IWUSR)\n+        self.section.append(Setting('filemode', 'w'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_x_to_x_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IXUSR)\n+        if platform.system() != 'Windows':","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-06-15T05:24:17Z","lastEditedAt":null,"updatedAt":"2019-06-15T05:24:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjIyMA==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622220","bodyText":"Descriptions for filename and file are quite redundant imo.","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NzgyNw==","createdAt":"2019-07-21T15:13:49Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T14:56:14Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:56:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjMxNA==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622314","bodyText":"How about using filter()?","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:\n+            File that needs to be checked in the form of a list of strings.\n+        :param filemode:\n+            Filemode to check, e.g. `rw`, `rwx`, etc.\n+        \"\"\"\n+        st = os.stat(filename)\n+        permissions = {'r': stat.S_IRUSR,\n+                       'w': stat.S_IWUSR,\n+                       'x': stat.S_IXUSR,\n+                       }\n+\n+        for char in filemode:\n+            if char not in permissions:","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:58:18Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:58:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjMzNg==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622336","bodyText":"This looks really ugly...","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:\n+            File that needs to be checked in the form of a list of strings.\n+        :param filemode:\n+            Filemode to check, e.g. `rw`, `rwx`, etc.\n+        \"\"\"\n+        st = os.stat(filename)\n+        permissions = {'r': stat.S_IRUSR,\n+                       'w': stat.S_IWUSR,\n+                       'x': stat.S_IXUSR,\n+                       }\n+\n+        for char in filemode:\n+            if char not in permissions:\n+                raise ValueError('Unable to recognize character `{}` in '\n+                                 'filemode `{}`.'.format(char, filemode))\n+\n+        mode = st.st_mode\n+        for char in filemode:\n+            if not mode & permissions[char]:\n+                message = ('The file permissions are not adequate. The '\n+                           'permissions are set to {}'.format(stat.filemode(\n+                                                              mode)))","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:59:02Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:59:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjQwOQ==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622409","bodyText":"You are using get_testfile_path() only once, so no need to keep the function.","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+def get_testfile_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'filemode_test_files', file)\n+\n+\n+FILE_PATH = get_testfile_path('test_file.txt')","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NzgzMg==","createdAt":"2019-07-21T15:14:11Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T15:00:45Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:00:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYyMjk4OQ==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r305622989","bodyText":"Will improve this 👍","diffHunk":"@@ -0,0 +1,51 @@\n+import os\n+import stat\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.results.RESULT_SEVERITY import RESULT_SEVERITY\n+\n+\n+class FileModeBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self,\n+            filename,\n+            file,\n+            filemode: str,\n+            ):\n+        \"\"\"\n+        The bear will check if the file has required permissions provided by\n+        the user.\n+\n+        :param filename:\n+            Name of the file that needs to be checked.\n+        :param file:\n+            File that needs to be checked in the form of a list of strings.\n+        :param filemode:\n+            Filemode to check, e.g. `rw`, `rwx`, etc.\n+        \"\"\"\n+        st = os.stat(filename)\n+        permissions = {'r': stat.S_IRUSR,\n+                       'w': stat.S_IWUSR,\n+                       'x': stat.S_IXUSR,\n+                       }\n+\n+        for char in filemode:\n+            if char not in permissions:\n+                raise ValueError('Unable to recognize character `{}` in '\n+                                 'filemode `{}`.'.format(char, filemode))\n+\n+        mode = st.st_mode\n+        for char in filemode:\n+            if not mode & permissions[char]:\n+                message = ('The file permissions are not adequate. The '\n+                           'permissions are set to {}'.format(stat.filemode(\n+                                                              mode)))","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-21T15:14:06Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:14:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjQ5MDM0Mw==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r316490343","bodyText":"No.  Get rid of it.  If this bear doesnt support Windows, that fact shouldnt be hidden inside the logic of the tests.\nA .coafile is a cross-platform specification, and it must not cause failures on only one platform.","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+def get_testfile_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'filemode_test_files', file)\n+\n+\n+FILE_PATH = get_testfile_path('test_file.txt')\n+\n+\n+class FileModeBearTest(LocalBearTestHelper):\n+\n+    def setUp(self):\n+        self.section = Section('')\n+        self.uut = FileModeBear(self.section, Queue())\n+\n+    def test_r_to_r_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IRUSR)\n+        self.section.append(Setting('filemode', 'r'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_w_to_w_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IWUSR)\n+        self.section.append(Setting('filemode', 'w'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_x_to_x_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IXUSR)\n+        if platform.system() != 'Windows':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:14:57Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:14:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjQ5MDkxNw==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r316490917","bodyText":"Perhaps create a separate test class for executable permissions, and the class should be skipped on Windows for tests which dont work on Windows, and potentially we need a second extra test class which does Windows specific testing to show that specifying executable bits in the .coafile results in a mild note in the coala log, but does not cause it to fail.","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+def get_testfile_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'filemode_test_files', file)\n+\n+\n+FILE_PATH = get_testfile_path('test_file.txt')\n+\n+\n+class FileModeBearTest(LocalBearTestHelper):\n+\n+    def setUp(self):\n+        self.section = Section('')\n+        self.uut = FileModeBear(self.section, Queue())\n+\n+    def test_r_to_r_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IRUSR)\n+        self.section.append(Setting('filemode', 'r'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_w_to_w_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IWUSR)\n+        self.section.append(Setting('filemode', 'w'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_x_to_x_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IXUSR)\n+        if platform.system() != 'Windows':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:19:14Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:19:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjY3NjI0NA==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r316676244","bodyText":"the issue asked for \"...on scripts\" .  Why are you using .txt ?","diffHunk":"@@ -0,0 +1,219 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+FILE_PATH = os.path.join(os.path.dirname(__file__),\n+                         'filemode_test_files', 'test_file.txt')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T13:26:34Z","lastEditedAt":null,"updatedAt":"2019-08-22T13:26:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjY4MzgzMg==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r316683832","bodyText":"I guess having no extension at all would've been better. This is because the bear is supposed to check for all file permissions as mentioned here and is not just restricted scripts.","diffHunk":"@@ -0,0 +1,219 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+FILE_PATH = os.path.join(os.path.dirname(__file__),\n+                         'filemode_test_files', 'test_file.txt')","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-08-22T13:41:27Z","lastEditedAt":null,"updatedAt":"2019-08-22T13:41:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjcwMDY0OA==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r316700648","bodyText":"Start with the realistic scenario of scripts having .sh / .bash etc extensions and make sure you can get that working and tested properly, before trying extensionless voodoo.","diffHunk":"@@ -0,0 +1,219 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+FILE_PATH = os.path.join(os.path.dirname(__file__),\n+                         'filemode_test_files', 'test_file.txt')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T14:12:13Z","lastEditedAt":"2019-08-22T14:12:41Z","updatedAt":"2019-08-22T14:12:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzczNDg5Mg==","url":"https://github.com/coala/coala-bears/pull/2912#issuecomment-513734892","bodyText":"Current codecov failure at 99.91% can be ignored - https://travis-ci.org/coala/coala-bears/jobs/561920971 shows the new bear is getting 100% test coverage","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA5ODM5Mw==","createdAt":"2019-07-22T11:20:21Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-07-22T10:25:52Z","lastEditedAt":null,"updatedAt":"2019-07-22T10:25:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzc0NzcyMA==","url":"https://github.com/coala/coala-bears/pull/2912#issuecomment-523747720","bodyText":"It should be possible to get executable bit working correctly on Windows, and this PR cant close the issue without executable support, as executable support is the primary motivation for this bear, and the need to include Windows was a consistent message throughout the comments of the issue.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:56:38Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:56:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzg3NzEwNA==","url":"https://github.com/coala/coala-bears/pull/2912#issuecomment-523877104","bodyText":"@jayvdb The bear works fine for Windows (as it only reads the file permissions and doesn't change them), the problem was I couldn't test it properly on Windows since Python can only set read-only flags on it. One way to test this could be to rename the file to the extension .exe which automatically sets the executable flag.","diffHunk":null,"author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-08-22T12:07:57Z","lastEditedAt":null,"updatedAt":"2019-08-22T12:07:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzkwNzQ2MA==","url":"https://github.com/coala/coala-bears/pull/2912#issuecomment-523907460","bodyText":"@bkhanale ,\n\n... the problem was I couldn't test it properly on Windows\n\nIf you can not test it, you have no way to determine that is works, and you should not attempt to argue that it does work.\nI can see a mile away it does not achieve what the issue requested.\nNo you do not get to create a useless test by renaming files to .exe .  That isnt what the issue asked for.\nAnd even ignoring the fact the bear doesnt work, the test method test_x_to_x_permissions on Windows does:\nos.chmod(FILE_PATH, stat.S_IXUSR)\nos.chmod(FILE_PATH, stat.S_IRUSR)\nThat is not a test of the bear, it it.  That is wrong.  Fix it.\nhttps://github.com/coala/coala-bears/pull/2912/files#r294035442 asked you two months ago to document why you were doing that.  You havent done that.  Why not?\nWhy are you using custom test logic instead of verify_local_bear?  Is there something about this bear which means verify_local_bear doesnt work for any of the tests?  If so, why not use self.check_invalidity?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T13:31:22Z","lastEditedAt":null,"updatedAt":"2019-08-22T13:31:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzk4NzU0Nw==","url":"https://github.com/coala/coala-bears/pull/2912#issuecomment-523987547","bodyText":"And even ignoring the fact the bear doesnt work, the test method test_x_to_x_permissions on Windows does:\n\nI guess that he did to roll back changes made to the file permissions (which I guess defaults to read permission).\n\nWhy are you using custom test logic instead of verify_local_bear? Is there something about this bear which means verify_local_bear doesnt work for any of the tests? If so, why not use self.check_invalidity?\n\nYep, you can use check_validity wherever you're not checking for the message statements.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-08-22T16:52:25Z","lastEditedAt":null,"updatedAt":"2019-08-22T16:52:25Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566448125000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2927","number":2927,"title":"New actions for GitCommitBear","body":"This adds two new actions for GitCommitBear:\n\nAddNewlineAction: This adds a newline between shortlog and body of the commit message.\nEditCommitMessageAction: Open an editor in which user can edit the commit message\n\nThis also modifies CommitBear.py to pass these actions when Result is yielded.\nTemp changes for travis commit is temporary commit because this PR depends on coala/coala#6029","comments":17,"createdAt":"2019-06-19T12:48:01Z","updatedAt":"2019-08-22T04:28:45Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2927","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTQxNzE5OA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295417198","bodyText":"@abhishalya I think git commit --amend also adds the staged changes. This is not good. Any alternatives?","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-19T17:27:47Z","lastEditedAt":"2019-06-19T17:33:52Z","updatedAt":"2019-06-19T17:33:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYxODAxMQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295618011","bodyText":"I guess git rebase would do then.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:47:17Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:47:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyMjA3Mw==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295622073","bodyText":"Since this action is only to be used by one of the vcs bears, the better place for this action would be in bears/vcs/actions.","diffHunk":"@@ -13,6 +13,7 @@\n from coalib.settings.Setting import typed_list\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from dependency_management.requirements.PipRequirement import PipRequirement\n+from bears.actions.AddNewlineAction import AddNewlineAction","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:53:21Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:53:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyNDI2MA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295624260","bodyText":"shortlog: str = ''","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:56:52Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:56:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyNTAxNA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295625014","bodyText":"Nope, no \\. Its a rule now, we even have a bear to check this :P","diffHunk":"@@ -271,8 +272,10 @@ def check_body(self, body,\n             return\n \n         if body[0] != '\\n':\n-            yield Result(self, 'No newline found between shortlog and body at '\n-                               'HEAD commit. Please add one.')\n+            message = 'No newline found between shortlog and body at '\\","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:58:06Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:58:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTcxOTk3NQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295719975","bodyText":"Have a look at this. Even rebase is not ideal if someone is using your commits.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T09:21:09Z","lastEditedAt":"2019-06-20T09:21:19Z","updatedAt":"2019-06-20T09:21:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTcyMTQ1Mg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295721452","bodyText":"PycodestyleBear is complaining for shortlog: str = ''","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T09:24:57Z","lastEditedAt":"2019-06-20T09:25:06Z","updatedAt":"2019-06-20T09:25:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg0MzY0OQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295843649","bodyText":"ping @Vamshi99 @kriti21","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T14:48:22Z","lastEditedAt":null,"updatedAt":"2019-06-20T14:48:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg0ODUxMg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295848512","bodyText":"Oh, I guess it must be complaining about no spaces around =.","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T14:57:12Z","lastEditedAt":null,"updatedAt":"2019-06-20T14:57:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1MTUxOQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295851519","bodyText":"Yeah, but here we are expecting the user to change the commit message. If the commit is not pushed doing rebase is just fine.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T15:02:52Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:02:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1Njg0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295856846","bodyText":"ping @abhishalya @Vamshi99 Looking at this I don't think amending or rebasing a commit is a good idea because it changes the history.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add New(L)ine\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:13:33Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:13:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1NzEzMQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295857131","bodyText":"My bad, it's not.","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:14:06Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:14:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg2NTIyNw==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295865227","bodyText":"Maybe we can warn that history will be rewritten action is applied.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:31:07Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:31:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg4MTM0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295881346","bodyText":"Yeah, a warning message would be good 👍","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T16:04:10Z","lastEditedAt":null,"updatedAt":"2019-06-20T16:04:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQ0MTI2NA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r296441264","bodyText":"I guess git rebase would do then.\n\ngit rebase doesn't run when there are unstaged or uncommitted changes.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-22T10:16:43Z","lastEditedAt":null,"updatedAt":"2019-06-22T10:16:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQ0MjExOQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r296442119","bodyText":"git commit --amend -o will do the job.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-22T10:50:45Z","lastEditedAt":null,"updatedAt":"2019-06-22T10:50:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDc0MDE3Mg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r300740172","bodyText":"User can first apply EditCommitMessageAction and change the commit message, so to check if AddNewlineAction is applicable or not, commit message is extracted first.","diffHunk":"@@ -0,0 +1,31 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def is_applicable(self,\n+                      result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        new_message, _ = run_shell_command('git log -1 --pretty=%B')","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-05T16:21:35Z","lastEditedAt":"2019-07-05T16:21:49Z","updatedAt":"2019-07-05T16:21:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzAzMTc0NA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-507031744","bodyText":"EditCommitMessageAction and AddNewlineAction in action","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-30T12:20:33Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:20:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU0NjQ3MQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513546471","bodyText":"Travis is failing because it depends on coala/coala#6029","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-21T11:42:37Z","lastEditedAt":null,"updatedAt":"2019-07-21T11:42:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU1MjM0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513552346","bodyText":"Yeah, please add the coala requirement as your branch.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T12:59:42Z","lastEditedAt":null,"updatedAt":"2019-07-21T12:59:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU1MjgwNA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513552804","bodyText":"Yeah, please add the coala requirement as your branch.\n\nBtw this is only temporary, to check if the changes work fine.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T13:06:04Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:06:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2MzgwOA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513563808","bodyText":"Yeah, please add the coala requirement as your branch.\n\nI made these changes, am I doing something wrong because the first travis job is failing because of some weird reason but it was passing before.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-21T15:27:04Z","lastEditedAt":"2019-07-21T15:31:11Z","updatedAt":"2019-07-21T15:31:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NDc4MQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513564781","bodyText":"You can ignore the first job of Sentinel since it fails for moban. But, the rest should pass... Looks like a breaking test.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T15:40:00Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:40:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NTExNw==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513565117","bodyText":"Btw, I think the rest of the jobs would stop if Sentinel fails (which it would eventually since the first one would fail due to moban) so instead of restarting those you can also make relevant changes to travis.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T15:44:17Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:44:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NTIzOQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513565239","bodyText":"Look at the error of the second build. This is because the changes in coala/coala#6029 are not there yet.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-21T15:45:54Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:45:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NTU0OQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513565549","bodyText":"coala is being installed correctly there from your branch, let me try this out locally","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T15:49:51Z","lastEditedAt":null,"updatedAt":"2019-07-21T15:49:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2NzE5Ng==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513567196","bodyText":"@akshatkarani This seems to be the problem...","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-21T16:11:45Z","lastEditedAt":null,"updatedAt":"2019-07-21T16:11:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzY3Mjg1Mg==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513672852","bodyText":"Removed the first sentinel build, now only one build is failing and the error is the same.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-22T07:24:01Z","lastEditedAt":null,"updatedAt":"2019-07-22T07:24:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc1OTY5Ng==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513759696","bodyText":"Okay build is passing with these temporary changes.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-07-22T11:52:10Z","lastEditedAt":null,"updatedAt":"2019-07-22T11:52:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc4MTIxOQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-513781219","bodyText":"Nice, (since other mentors aren't active) give me some time to check this (and the core changes) in more detail.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-07-22T13:00:52Z","lastEditedAt":null,"updatedAt":"2019-07-22T13:00:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDIzNTM3NA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-520235374","bodyText":"Ping @Makman2","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-08-11T15:06:29Z","lastEditedAt":null,"updatedAt":"2019-08-11T15:06:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDg1NjAwOA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-520856008","bodyText":"What about the temp-commit? ;)\nI would expect in the commit for AddNewlineAction to just do stuff with this action only, not mixing with EditCommitMessageAction. Please properly separate into the commits 👍","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2019-08-13T14:22:14Z","lastEditedAt":null,"updatedAt":"2019-08-13T14:22:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDg2MTg1MA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-520861850","bodyText":"What about the temp-commit? ;)\n\n\nThis PR depends on coala/coala#6029, so for builds to pass this commit has been added. Once that PR is merged it can be removed.\n\n\nI would expect in the commit for AddNewlineAction to just do stuff with this action only, not mixing with EditCommitMessageAction. Please properly separate into the commits +1\n\n\nYes, I will.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-08-13T14:36:13Z","lastEditedAt":null,"updatedAt":"2019-08-13T14:36:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMTExODAwMQ==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-521118001","bodyText":"@Makman2 I have separated the commits properly.\nAlso some comments you made on commits have been lost because I amended them, link to it","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-08-14T06:24:45Z","lastEditedAt":"2019-08-22T04:28:45Z","updatedAt":"2019-08-22T04:28:45Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566135769000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2928","number":2928,"title":"bears/general: Add OutdatedDependencyBear","body":"Closes #2445\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-24T12:16:30Z","updatedAt":"2019-08-18T13:42:49Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2928","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566545473000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2934","number":2934,"title":"bears/general: Add RegexLintBear","body":"Closes #1532\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2019-07-20T16:23:44Z","updatedAt":"2019-08-23T07:31:13Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2934","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzEyNQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617125","bodyText":"We use common description for language, 'The programming language of the file(s).'.","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture\n+from contextlib import suppress\n+\n+from bears.general.AnnotationBear import AnnotationBear\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from coalib.testing.LocalBearTestHelper import execute_bear\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RegexLintBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    REQUIREMENTS = {PipRequirement('regexlint', '1.6')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+    CAN_DETECT = {'Formatting'}\n+\n+    def run(self, filename, file, language: str):\n+        \"\"\"\n+        Bear for linting regex through regexlint.\n+\n+        :param language:\n+            The language of the files, must be supported by coala.","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NTgwMA==","createdAt":"2019-07-21T13:13:40Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T13:02:53Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:02:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzM1OQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617359","bodyText":"sarge is coala dependency?\nAfaik, sarge comes from package_manager, if you are using it directly here, you'll need to add it to requirements.txt.\nMaybe you can confirm this from @jayvdb","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T13:08:11Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:08:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzQ4Nw==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617487","bodyText":"This is a part of LocalBearTestHelper, I'm not too sure if we should use this here. But I don't find any reason not to do so.","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture\n+from contextlib import suppress\n+\n+from bears.general.AnnotationBear import AnnotationBear\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from coalib.testing.LocalBearTestHelper import execute_bear\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RegexLintBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    REQUIREMENTS = {PipRequirement('regexlint', '1.6')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+    CAN_DETECT = {'Formatting'}\n+\n+    def run(self, filename, file, language: str):\n+        \"\"\"\n+        Bear for linting regex through regexlint.\n+\n+        :param language:\n+            The language of the files, must be supported by coala.\n+        \"\"\"\n+        section = Section('')\n+        section.append(Setting('language', language))\n+        bear = AnnotationBear(section, Queue())\n+\n+        with execute_bear(bear, filename, file) as result:","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T13:10:36Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:10:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzUyMQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617521","bodyText":"Why so many? We know it would be fine since we already tested it. Keeping this once is also fine...","diffHunk":"@@ -0,0 +1,87 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzA1NTgwNQ==","createdAt":"2019-07-21T13:14:13Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-21T13:11:28Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:11:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzYwNQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617605","bodyText":"I think I'm not very sure about this since we might just create a conflict if the versions mismatch later on.","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-21T13:13:50Z","lastEditedAt":"2019-07-21T13:30:15Z","updatedAt":"2019-07-21T13:30:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTYxNzYyOA==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r305617628","bodyText":"Yeah, I missed to delete them later :P","diffHunk":"@@ -0,0 +1,87 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-21T13:14:31Z","lastEditedAt":null,"updatedAt":"2019-07-21T13:14:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjQ5MTQyMQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r316491421","bodyText":"Add the PipRequirement , but we have some magic piece of code somewhere in .ci/generate_* which excludes dependencies which are also provided by our own downstream.  e.g. this is used for requests which is provided by coala","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:23:13Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:23:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjQ5MTU5Mw==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r316491593","bodyText":"invert the logic.  if _some_bad_condition_: continue , then your yield isnt indented so deeply.  and more conditions will get added in the future.","diffHunk":"@@ -0,0 +1,54 @@\n+import re\n+\n+from queue import Queue\n+from sarge import run, Capture\n+from contextlib import suppress\n+\n+from bears.general.AnnotationBear import AnnotationBear\n+\n+from coalib.bears.LocalBear import LocalBear\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+from coalib.testing.LocalBearTestHelper import execute_bear\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RegexLintBear(LocalBear):\n+    LANGUAGES = {'All'}\n+    REQUIREMENTS = {PipRequirement('regexlint', '1.6')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+    CAN_DETECT = {'Formatting'}\n+\n+    def run(self, filename, file, language: str):\n+        \"\"\"\n+        Bear for linting regex through regexlint.\n+\n+        :param language:\n+            The programming language of the file(s).\n+        \"\"\"\n+        section = Section('')\n+        section.append(Setting('language', language))\n+        bear = AnnotationBear(section, Queue())\n+\n+        with execute_bear(bear, filename, file) as result:\n+            for src_range in result[0].contents['strings']:\n+                src_line = src_range.affected_source({filename: file})[0]\n+                regex = src_line[src_range.start.column:src_range.end.column-1]\n+                with suppress(re.error):\n+                    re.compile(regex)\n+                    out = run('regexlint --regex \"{}\"'.format(regex),\n+                              stdout=Capture()).stdout.text\n+                    if out[-3:-1] != 'OK':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:24:20Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:24:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjQ5MTczMg==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r316491732","bodyText":"it would be prettier to use textwrap.dedent","diffHunk":"@@ -0,0 +1,84 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'\n+\"\"\"\n+\n+BAD_MESSAGE = ('E105:argv:root:0: Potential out of order alternation between '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:24:58Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:24:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjQ5MjM0OQ==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r316492349","bodyText":"this class looks like it could be implemented using verify_local_bear or similar wrapper.  If not, why not.\nIf not, please at least use self.check_[in]validity","diffHunk":"@@ -0,0 +1,84 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'\n+\"\"\"\n+\n+BAD_MESSAGE = ('E105:argv:root:0: Potential out of order alternation between '\n+               '\\'else\\' and \\'elseif\\'\\n'\n+               '  \\'(else|elseif)\\'\\n'\n+               '         ^ here\\n')\n+\n+\n+class RegexLintBearTest(LocalBearTestHelper):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:29:32Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:29:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjc0MzY2Mw==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r316743663","bodyText":"Is there any specific reason to use those? I mean through this we can assert the line number, column number, message, etc.","diffHunk":"@@ -0,0 +1,84 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'\n+\"\"\"\n+\n+BAD_MESSAGE = ('E105:argv:root:0: Potential out of order alternation between '\n+               '\\'else\\' and \\'elseif\\'\\n'\n+               '  \\'(else|elseif)\\'\\n'\n+               '         ^ here\\n')\n+\n+\n+class RegexLintBearTest(LocalBearTestHelper):","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-08-22T15:28:47Z","lastEditedAt":"2019-08-22T15:28:59Z","updatedAt":"2019-08-22T15:28:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjc0OTU2Nw==","url":"https://github.com/coala/coala-bears/pull/2934#discussion_r316749567","bodyText":"This has no line number.  Use our pre-rolled helpers for more maintainable code.","diffHunk":"@@ -0,0 +1,84 @@\n+from os.path import abspath\n+from queue import Queue\n+\n+from bears.general.RegexLintBear import RegexLintBear\n+from coalib.testing.LocalBearTestHelper import (\n+    LocalBearTestHelper, execute_bear)\n+from coalib.results.Result import Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+test_good_python_file = \"\"\"\n+some_regex = r'[a-zA-Z]]'\n+\"\"\"\n+\n+test_bad_python_file = \"\"\"\n+some_regex = r'(else|elseif)'\n+\"\"\"\n+\n+test_good_cpp_file = \"\"\"\n+char some_regex[] = \"[a-zA-Z]]\";\n+\"\"\"\n+\n+test_bad_cpp_file = \"\"\"\n+char some_regex[13] = \"(else|elseif)\";\n+\"\"\"\n+\n+test_re_error_file = \"\"\"\n+some_regex = r'*ab' # This should be skipped\n+some_other_regex = r'[a-z]'\n+\"\"\"\n+\n+BAD_MESSAGE = ('E105:argv:root:0: Potential out of order alternation between '\n+               '\\'else\\' and \\'elseif\\'\\n'\n+               '  \\'(else|elseif)\\'\\n'\n+               '         ^ here\\n')\n+\n+\n+class RegexLintBearTest(LocalBearTestHelper):\n+\n+    def setUp(self):\n+        self.section = Section('')\n+        self.queue = Queue()\n+        self.uut = RegexLintBear(self.section, self.queue)\n+\n+    def test_good_python_file(self):\n+        self.section.append(Setting('language', 'python 3'))\n+        with execute_bear(self.uut, abspath('good_python_file'),\n+                          test_good_python_file.splitlines(True)) as results:\n+            self.assertEqual(results, [])\n+\n+    def test_bad_python_file(self):\n+        self.section.append(Setting('language', 'python 3'))\n+        with execute_bear(self.uut, abspath('bad_python_file'),\n+                          test_bad_python_file.splitlines()) as results:\n+            self.assertEqual(results[0],\n+                             Result.from_values(origin=self.uut,\n+                                                message=BAD_MESSAGE,\n+                                                file='bad_python_file',\n+                                                line=2, column=15,\n+                                                end_line=2, end_column=29))\n+\n+    def test_good_cpp_file(self):\n+        self.section.append(Setting('language', 'cpp'))\n+        with execute_bear(self.uut, abspath('good_cpp_file'),\n+                          test_good_cpp_file.splitlines()) as results:\n+            self.assertEqual(results, [])","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T15:39:58Z","lastEditedAt":null,"updatedAt":"2019-08-22T15:39:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2MTA0Nw==","url":"https://github.com/coala/coala-bears/pull/2934#issuecomment-513561047","bodyText":"Restarted few jobs, there was a timeout.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:51:34Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:51:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU2MTExOQ==","url":"https://github.com/coala/coala-bears/pull/2934#issuecomment-513561119","bodyText":"@sangamcse @kriti21 You guys can also have a look.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-07-21T14:52:10Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:52:10Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566135936000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2935","number":2935,"title":"bears/python: Add RequirementsCheckBear","body":"Closes #1113\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-07-21T03:10:35Z","updatedAt":"2019-08-18T13:45:36Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2935","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMjkxNQ==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308002915","bodyText":"Can there be a case where lines[0] doesn't contain Could not? If yes, then what message will it yield for that?","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()\n+                if not orig_file:\n+                    orig_file = cont\n+                else:\n+                    data += cont\n+\n+        with open(req_files[0], 'a+') as temp_file:\n+            temp_file.write(data)\n+\n+        out = capture_both('pip-compile {} -r -n --no-annotate --no-header '\n+                           '--no-index --allow-unsafe'.format(req_files[0]))\n+\n+        if out.stderr.text and not out.stdout.text:\n+            lines = out.stderr.text.splitlines()\n+            yield Result(self,\n+                         message=[s for s in lines if 'Could not' in s][0],","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2019-07-28T13:55:19Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:55:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMzAyNA==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308003024","bodyText":"Better to give a meaningful variable name for cont","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzU2MzUyNA==","createdAt":"2019-07-29T03:06:50Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-28T13:57:48Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:57:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMzAzNg==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308003036","bodyText":"require_files makes more sense.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzU2MzUyNg==","createdAt":"2019-07-29T03:06:59Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-28T13:58:18Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:58:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODAwMzA3OA==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308003078","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              The bear to check and find any conflicting dependencies.\n        \n          \n            \n                The bear to check and find any conflicting pip dependencies.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb240NzU2MzUzOA==","createdAt":"2019-07-29T03:07:11Z","content":"THUMBS_UP","user":{"login":"bkhanale","name":"Bhushan Khanale"}}],"createdAt":"2019-07-28T13:59:22Z","lastEditedAt":null,"updatedAt":"2019-07-28T13:59:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODA0MTkzNg==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308041936","bodyText":"The exception will always have 'Could not' in it. Actually, the better solution was to just get lines[0] but, some of the warnings from pip are getting recorded too with it.\nhttps://github.com/jazzband/pip-tools/blob/b37b91d251f7c7e590047f902e6f51e9a49d276c/piptools/exceptions.py#L22","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()\n+                if not orig_file:\n+                    orig_file = cont\n+                else:\n+                    data += cont\n+\n+        with open(req_files[0], 'a+') as temp_file:\n+            temp_file.write(data)\n+\n+        out = capture_both('pip-compile {} -r -n --no-annotate --no-header '\n+                           '--no-index --allow-unsafe'.format(req_files[0]))\n+\n+        if out.stderr.text and not out.stdout.text:\n+            lines = out.stderr.text.splitlines()\n+            yield Result(self,\n+                         message=[s for s in lines if 'Could not' in s][0],","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-29T03:03:31Z","lastEditedAt":null,"updatedAt":"2019-07-29T03:03:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODA0NDg3Mw==","url":"https://github.com/coala/coala-bears/pull/2935#discussion_r308044873","bodyText":"Updated, seems like a much better solution now.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.results.Result import Result, RESULT_SEVERITY\n+from sarge import capture_both\n+\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+class RequirementsCheckBear(GlobalBear):\n+    \"\"\"\n+    The bear to check and find any conflicting dependencies.\n+    \"\"\"\n+    LANGUAGES = {\n+        'Python Requirements',\n+        'Python 2 Requirements',\n+        'Python 3 Requirements',\n+    }\n+    REQUIREMENTS = {PipRequirement('pip-tools', '3.8.0')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+\n+    def run(self, req_files: tuple):\n+        \"\"\"\n+        :param req_files:\n+            Tuple of requirements files.\n+        \"\"\"\n+        data = ''\n+        orig_file = ''\n+\n+        for req_file in req_files:\n+            if not os.path.isfile(os.path.abspath(req_file)):\n+                raise ValueError('The file \\'{}\\' doesn\\'t exist.'\n+                                 .format(req_file))\n+\n+            with open(req_file) as req:\n+                cont = req.read()\n+                if not orig_file:\n+                    orig_file = cont\n+                else:\n+                    data += cont\n+\n+        with open(req_files[0], 'a+') as temp_file:\n+            temp_file.write(data)\n+\n+        out = capture_both('pip-compile {} -r -n --no-annotate --no-header '\n+                           '--no-index --allow-unsafe'.format(req_files[0]))\n+\n+        if out.stderr.text and not out.stdout.text:\n+            lines = out.stderr.text.splitlines()\n+            yield Result(self,\n+                         message=[s for s in lines if 'Could not' in s][0],","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-07-29T03:26:53Z","lastEditedAt":null,"updatedAt":"2019-07-29T03:26:53Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563934924000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2880","number":2880,"title":"Add support for yapf>=0.21.0<0.27.0 and fix filename in .ci/generate_bear_metadata.py","body":"Modify test_allow_multiline_lambdas to be\nversion specific.\nCloses #2873\nChange \"overrides\" filename from\npackage-manager-requirements.yaml to pm-requirements.yaml\nFixes #2936\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":8,"createdAt":"2019-02-20T15:14:15Z","updatedAt":"2019-07-24T02:22:04Z","closedAt":"2019-07-24T02:22:04Z","state":"merged","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"assignee":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/dependencies","color":"b60205"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2880","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxMzcwNTc3OQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513705779","bodyText":"Needs a rebase\n\nDone.\nHeads up: Merge conflict in bear-requirements.yaml was resolved by hand (merge both incoming changes).  Please let me know if I'm supposed to re-generate it.","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-07-22T09:01:24Z","lastEditedAt":"2019-07-22T09:02:53Z","updatedAt":"2019-07-22T09:02:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzczMzE1NA==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513733154","bodyText":"Refetch master bear-requirements.yaml\nUse .ci/generate_bear_metadata.py , and then run moban.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-22T10:20:10Z","lastEditedAt":null,"updatedAt":"2019-07-22T10:20:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc1NDM0Ng==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513754346","bodyText":".ci/generate_bear_metadata.py\n\nI'm running into:\nWarning: Both package-manager-requirements.yaml and /home/areebbeigh/.cache/moban/repos/mobans/package-manager-requirements.yaml does not exist\n\nand I suspect this is because running ci/generate_bear_metadata.py sets overrides: package-manager-requirements.yaml whereas it should be overrides: pm-requirements.yaml.\nNew issue? Although this is probably just a change in \n  \n    \n      coala-bears/.ci/generate_bear_metadata.py\n    \n    \n         Line 461\n      in\n      afb068b\n    \n    \n    \n    \n\n        \n          \n           requirements['overrides'] = 'package-manager-requirements.yaml'","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-07-22T11:33:22Z","lastEditedAt":null,"updatedAt":"2019-07-22T11:33:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc3NTE0Nw==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513775147","bodyText":"Yup; new issue.  That is a bug in my PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-22T12:42:50Z","lastEditedAt":null,"updatedAt":"2019-07-22T12:42:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzc3Njk4OQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513776989","bodyText":"You can add the fix to this PR as a separate commit.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-22T12:48:33Z","lastEditedAt":null,"updatedAt":"2019-07-22T12:48:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzgxNTE5NQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-513815195","bodyText":"You can add the fix to this PR as a separate commit.\n\nDone.","diffHunk":null,"author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-07-22T14:28:00Z","lastEditedAt":null,"updatedAt":"2019-07-22T14:28:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNDE3NzM0Mg==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-514177342","bodyText":"Sorry ; wrong button press.\n@areebbeigh , this needs another rebase, but please also revise your commit messages to follow the coala commit guidelines.  specifically the first line should start with a filename of the most important file in the commit which is being modified (usually not a file which is generated).","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-23T11:51:52Z","lastEditedAt":null,"updatedAt":"2019-07-23T11:51:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNDQ1MjQwMQ==","url":"https://github.com/coala/coala-bears/pull/2880#issuecomment-514452401","bodyText":"I'm going to merge this despite it failing due to #2937 , which I'll fix after this is merged","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-24T02:20:22Z","lastEditedAt":null,"updatedAt":"2019-07-24T02:20:22Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566468957000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2884","number":2884,"title":"Improve Documentation of CSVLintBear","body":"Provide some more details on what\nrespects the csv file is being validated.\nCloses #2277\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2019-03-05T14:28:22Z","updatedAt":"2019-08-22T10:15:57Z","closedAt":"2019-08-22T10:15:57Z","state":"closed","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"assignee":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[{"name":"area/documentation","color":"c5def5"},{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2884","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQ3OTgzNQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263479835","bodyText":"Is this link necessary ?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T17:08:42Z","lastEditedAt":null,"updatedAt":"2019-03-07T17:08:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQ4MDAyNw==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263480027","bodyText":"IMO has -> does","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODM3NDU0NQ==","createdAt":"2019-03-07T18:38:29Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-07T17:09:11Z","lastEditedAt":null,"updatedAt":"2019-03-07T17:09:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQ4MTI3MA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263481270","bodyText":"What does CSV on the web means ?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T17:12:07Z","lastEditedAt":null,"updatedAt":"2019-03-07T17:12:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxMzkyOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263513928","bodyText":"Not necessary but it can provide more information about the validation process. So should I remove it?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T18:37:54Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:37:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxNDkzOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263514938","bodyText":"CSV on the web provides standard ways to express useful metadata about CSV files and other kinds of tabular data.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T18:40:44Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:40:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUxOTM4NQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263519385","bodyText":"So, it isn't a validation check right ?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T18:52:44Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:52:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUyMTY3Mg==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263521672","bodyText":"If it gives more information, then OK 👍","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-07T18:58:34Z","lastEditedAt":null,"updatedAt":"2019-03-07T18:58:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzMjQ3Mw==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263532473","bodyText":"No","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODM4MDYxNw==","createdAt":"2019-03-07T20:01:04Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-03-07T19:27:28Z","lastEditedAt":null,"updatedAt":"2019-03-07T19:27:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU0NTY5Ng==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263545696","bodyText":"Just replace semi-colon with and to differentiate between “ schema standards“ and “csv on the web”\nBecause both of them are different","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODM4MTAwMw==","createdAt":"2019-03-07T20:06:44Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-07T20:03:22Z","lastEditedAt":"2019-03-07T20:03:50Z","updatedAt":"2019-03-07T20:03:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU0NjE1MA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263546150","bodyText":"Use SEE_MORE.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-03-07T20:04:27Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:04:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU0OTUyNQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263549525","bodyText":"@bkhanale so you want me to replace \"Find out more at:\" with \"SEE_MORE\" followed by the link?","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T20:14:28Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:14:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU1MDYzOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263550638","bodyText":"git grep SEE_MORE. You can find lot of examples.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4","name":"Bhushan Khanale"},"reactions":[],"createdAt":"2019-03-07T20:17:42Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:17:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU1NDAyMw==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263554023","bodyText":"Got it! Thanks for the review.","diffHunk":"@@ -9,6 +9,15 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` has validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standards; CSV on the Web\n+\n+    Find out more at:\n+    <https://github.com/theodi/csvlint.rb/blob/master/README.md>","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-07T20:28:21Z","lastEditedAt":null,"updatedAt":"2019-03-07T20:28:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzY1NTY4MQ==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263655681","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              - delimiter-separated values (dsv) file accessible via URL, File,\n        \n          \n            \n                - delimiter-separated values (DSV) file accessible via URL, File,","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODQyNzkwMA==","createdAt":"2019-03-08T13:00:04Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-08T03:31:03Z","lastEditedAt":null,"updatedAt":"2019-03-08T03:31:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzY1NTg4Mg==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r263655882","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              - against multiple schema standard and CSV on the Web\n        \n          \n            \n                - against multiple schema standards and CSV on the Web","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (dsv) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)\n+    - against CSV dialects\n+    - against multiple schema standard and CSV on the Web","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODQyNzg4OQ==","createdAt":"2019-03-08T12:59:53Z","content":"THUMBS_UP","user":{"login":"chay2199","name":"Chaitanya Tyagi"}}],"createdAt":"2019-03-08T03:32:43Z","lastEditedAt":null,"updatedAt":"2019-03-08T03:32:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjMzNjAxMA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266336010","bodyText":"need alignment of sentences in one column.","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-18T08:37:33Z","lastEditedAt":null,"updatedAt":"2019-03-18T08:37:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjM5NDAyOA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266394028","bodyText":"@KVGarg I can't understand you properly. Are you talking about the misalignment of line no. 15?","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-18T11:19:15Z","lastEditedAt":null,"updatedAt":"2019-03-18T11:19:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjM5NzkzMg==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266397932","bodyText":"Yes, need a tab space before “or”","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-18T11:31:54Z","lastEditedAt":null,"updatedAt":"2019-03-18T11:31:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjM5OTI5NA==","url":"https://github.com/coala/coala-bears/pull/2884#discussion_r266399294","bodyText":"It was like that early on but coala or some build showed an error because of it. That is why I changed it.","diffHunk":"@@ -9,6 +9,12 @@\n class CSVLintBear:  # pragma nt: no cover\n     \"\"\"\n     Verifies using ``csvlint`` if ``.csv`` files are valid CSV or not.\n+    The ``CSVLintBear`` does validation that checks:\n+    - structural formatting of a CSV file\n+    - delimiter-separated values (DSV) file accessible via URL, File,\n+    or an IO-style object (e.g. StringIO)","author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-03-18T11:36:11Z","lastEditedAt":"2019-03-18T11:36:36Z","updatedAt":"2019-03-18T11:36:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzU1ODA1Nw==","url":"https://github.com/coala/coala-bears/pull/2884#issuecomment-513558057","bodyText":"Needs a rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-07-21T14:13:50Z","lastEditedAt":null,"updatedAt":"2019-07-21T14:13:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzc0MTA2Ng==","url":"https://github.com/coala/coala-bears/pull/2884#issuecomment-523741066","bodyText":"@chay2199 please rebase!","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:20:23Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:20:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzc2NTU5Mg==","url":"https://github.com/coala/coala-bears/pull/2884#issuecomment-523765592","bodyText":"@jayvdb @li-boxuan I am extremely sorry, but my fork of coala-bears repo got corrupted and it no longer exists now. This PR is without a parent, please close this one and I'll make a new one for the same issue.","diffHunk":null,"author":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4","name":"Chaitanya Tyagi"},"reactions":[],"createdAt":"2019-08-22T06:19:36Z","lastEditedAt":null,"updatedAt":"2019-08-22T06:19:36Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1563974124000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2890","number":2890,"title":"Update the bear requirements to allow new versions","body":"The commit updates the bear requirements to allow\nnew linter versions used. The new linter versions are\nidentified from an openSUSE build log where the\nbears' test pass.\nCloses #2877","comments":7,"createdAt":"2019-03-15T13:13:42Z","updatedAt":"2019-07-24T13:15:24Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"CFB80A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2890","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzI4OTQ1MA==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473289450","bodyText":"The sentinel build is failing due to version conflict of package colorama.\nThis is happening due to version change of package radon\nChanging back to old version of radon i.e. 1.4.0","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-03-15T13:39:55Z","lastEditedAt":null,"updatedAt":"2019-03-15T13:39:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzI5Nzk5OQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473297999","bodyText":"In the build log the test YapfBearTest.test_allow_multiline_lambdas wasn't executed. And that only test has been failing\n@jayvdb Can you take a look over it! Need help","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-03-15T14:03:39Z","lastEditedAt":null,"updatedAt":"2019-03-15T14:03:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzMzNTI4Mw==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473335283","bodyText":"@KVGarg I hope you you've seen this.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-03-15T15:40:14Z","lastEditedAt":null,"updatedAt":"2019-03-15T15:40:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzM0Nzg3MQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-473347871","bodyText":"@KVGarg I hope you you've seen this.\n\nGive me some time to look over this. Will soon come with solution to this.\nAlso, @jayvdb mentioned in issue that pylint should be ignored as it is being covered by #2826\nAlso, will edit the commit message. I avoid witing desc. while I push commits to fork as if any changes are made and re-pushed the issue gets notified about that changes, that's why I avoid that.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-03-15T16:13:05Z","lastEditedAt":null,"updatedAt":"2019-03-15T16:13:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzY1NTUwOQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-513655509","bodyText":"I rebased and pushed changes but ignored bear-requirements.yaml as on the top of the file the comments mentions that it shouldn't be edited by hand. But pushing without the yaml changes the moban is failing. And now when I pushed those changes, it is passing. Is this OK?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-07-22T06:16:32Z","lastEditedAt":null,"updatedAt":"2019-07-22T06:16:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMzcwMDUyMQ==","url":"https://github.com/coala/coala-bears/pull/2890#issuecomment-513700521","bodyText":"Separate the PR into two -- one which expands the ranges, where this doesnt have problems with existing tests --- and the other that moves the ranges.\n\nSorry if it sounds silly! Does this mean that one PR to have these current changes and another one to have the version ranges(> or <) for each dependency version changes in this PR?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-07-22T08:46:37Z","lastEditedAt":null,"updatedAt":"2019-07-22T08:46:37Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1566463805000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2710","number":2710,"title":"CPPCheckBear.py: Support language parameter","body":"It adds the command line argument 'language' which can be\ngiven whenever using the CPPCheckBear. It can hold two values\neither C or C++.\nCloses #2450\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":12,"createdAt":"2018-10-12T17:31:31Z","updatedAt":"2019-08-22T08:50:05Z","closedAt":null,"state":"open","user":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"owner":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"assignee":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2710","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk0NTg0NQ==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r224945845","bodyText":"CI is failing because you need to add tests for these lines.","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',\n                          ):\n         \"\"\"\n         :param enable:\n             Choose specific issues to report. Issues that can be\n             reported are: all, warning, style, performance,\n             portability, information, unusedFunction,\n             missingInclude\n+\n+        :param language:\n+            Choose specific language for linting. Language can be\n+            either C or C++\n         \"\"\"\n         args = ('--template={line}:{severity}:{id}:{message}',)\n         files = tuple(self.file_dict.keys())\n \n         if enable:\n             args += ('--enable=' + ','.join(enable),)\n \n+        if language:\n+            args += ('--language={language}',)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-10-13T01:42:24Z","lastEditedAt":null,"updatedAt":"2018-10-13T01:42:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk2NjYyNw==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r224966627","bodyText":"@jayvdb , can you guide me a bit what should language parameter would do if we provide it.\nBecause in tests, already defined parameters are giving error or warnings.\nBut I am unable to understand what would it return.","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',\n                          ):\n         \"\"\"\n         :param enable:\n             Choose specific issues to report. Issues that can be\n             reported are: all, warning, style, performance,\n             portability, information, unusedFunction,\n             missingInclude\n+\n+        :param language:\n+            Choose specific language for linting. Language can be\n+            either C or C++\n         \"\"\"\n         args = ('--template={line}:{severity}:{id}:{message}',)\n         files = tuple(self.file_dict.keys())\n \n         if enable:\n             args += ('--enable=' + ','.join(enable),)\n \n+        if language:\n+            args += ('--language={language}',)","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-10-13T17:39:30Z","lastEditedAt":"2018-10-13T17:39:50Z","updatedAt":"2018-10-13T17:39:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk3NTQwMQ==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r224975401","bodyText":"If existings tests are failing on your PR, it is because your code is buggy.\nThe existing tests for CPPCheckBear work correctly in the CI on master builds and other peoples PRs.","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',\n                          ):\n         \"\"\"\n         :param enable:\n             Choose specific issues to report. Issues that can be\n             reported are: all, warning, style, performance,\n             portability, information, unusedFunction,\n             missingInclude\n+\n+        :param language:\n+            Choose specific language for linting. Language can be\n+            either C or C++\n         \"\"\"\n         args = ('--template={line}:{severity}:{id}:{message}',)\n         files = tuple(self.file_dict.keys())\n \n         if enable:\n             args += ('--enable=' + ','.join(enable),)\n \n+        if language:\n+            args += ('--language={language}',)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-10-14T00:17:05Z","lastEditedAt":null,"updatedAt":"2018-10-14T00:17:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODA2NDg4MA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r238064880","bodyText":"Please use language: Language: None and ideally provide a default of : None.\nSee other bears which use Language.","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-12-01T14:22:07Z","lastEditedAt":null,"updatedAt":"2018-12-01T14:22:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODc4MDEyNw==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r238780127","bodyText":"I am sorry, I didn't get it exactly. Though with reference to other bears which uses language, I think you are telling me to set a default for it. So it should be like:\nlanguage: str = 'c'\nCorrect me if I am wrong here.","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-12-04T18:19:15Z","lastEditedAt":null,"updatedAt":"2018-12-04T18:19:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODkyNDY4OA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r238924688","bodyText":"@gutsytechster language should be of data type Language (already defined in coala, I think you'll need to import it) with the default value as None.","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-12-05T03:57:13Z","lastEditedAt":null,"updatedAt":"2018-12-05T03:57:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODk2Mzc1OA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r238963758","bodyText":"Oh ok. Thanks @pareksha","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-12-05T08:10:07Z","lastEditedAt":null,"updatedAt":"2018-12-05T08:10:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDAxMjU3Mg==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r240012572","bodyText":"Hey @pareksha, I tried finding how to use the Language data type. I just find it used in LineLengthBear where it is used as language: language = Language['Unknown']. So, I didn't get exactly about its use as data type. Though I tried on the basis of what I understood.\nI used it in above code as language: Language = None, but when after this I ran test specific to this bear, I got following error:\n=================================================== FAILURES ===================================================\n____________________________________ CPPCheckBearTest.test_results_complete ____________________________________\n\nself = <tests.c_languages.CPPCheckBearTest.CPPCheckBearTest testMethod=test_results_complete>\n\n    def test_results_complete(self):\n        self.section.append(Setting('enable', 'unusedFunction'))\n        self.section.append(Setting('language', 'cpp'))\n>       results = self.get_results(self.test_files)\n\ntests/c_languages/CPPCheckBearTest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/c_languages/CPPCheckBearTest.py:34: in get_results\n    return list(self.uut.run_bear_from_section([], {}))\n../coala-env/lib/python3.5/site-packages/coalib/bears/Bear.py:426: in run_bear_from_section\n    self.get_metadata().create_params_from_section(self.section))\n../coala-env/lib/python3.5/site-packages/coalib/settings/FunctionMetadata.py:132: in create_params_from_section\n    params[param] = self._get_param(param, section, annotation)\n../coala-env/lib/python3.5/site-packages/coalib/settings/FunctionMetadata.py:144: in _get_param\n    return annotation(section[param])\n../coala-env/lib/python3.5/site-packages/coalib/bearlib/languages/Language.py:158: in __call__\n    '`Language[%s]`?' % (repr(arg[0]),)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Setting object(key='language', value='cpp', origin='', from_cli=False, to_append=False) at 0x7f0bebae44e0>\nitem = 0\n\n    def __getitem__(self, item):\n>       return self.__dict.__getitem__(item)\nE       KeyError: 0\n\n../coala-env/lib/python3.5/site-packages/coala_utils/string_processing/StringConverter.py:89: KeyError\nProfiling (from /home/gutsytechster/Documents/coala/coala-bears/prof/combined.prof):\nSat Dec  8 23:51:24 2018    /home/gutsytechster/Documents/coala/coala-bears/prof/combined.prof\n\n\nCould this test be failing because of giving 'cpp' as a string? Since language parameter takes the value of Language type. Or there could be some other reason. Please help me know where I am doing it wrong!","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-12-08T18:28:30Z","lastEditedAt":null,"updatedAt":"2018-12-08T18:28:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDAyMzMwNw==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r240023307","bodyText":"Try passing Language['cpp'] in the tests, i.e. as a language object in the tests as well.","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-12-09T04:07:07Z","lastEditedAt":null,"updatedAt":"2018-12-09T04:07:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDAyODcxNA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r240028714","bodyText":"Well, it gives the same error. :|","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-12-09T08:52:55Z","lastEditedAt":null,"updatedAt":"2018-12-09T08:52:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDAzMTU0OA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r240031548","bodyText":"Try using language: language = None (I am not sure whether it's with big L or small one) and refer to the code and tests of LineLengthBear, I think it will help!","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-12-09T10:31:08Z","lastEditedAt":"2018-12-09T10:32:14Z","updatedAt":"2018-12-09T10:32:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTk1NTc0Mg==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r241955742","bodyText":"@pareksha, I tried it that way. But then it just doesn't execute and hence gives AssertionError which is expected.\nHey @jayvdb, can you help here about how it should be used. I have tried all combinations but it doesn't work!","diffHunk":"@@ -30,18 +30,26 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-12-15T17:31:29Z","lastEditedAt":null,"updatedAt":"2018-12-15T17:31:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI0ODQ2MA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r249248460","bodyText":"Use this:\n  \n    \n      \n        Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n                                   language: str = '',\n        \n          \n            \n                                     language: Language = Language['Unknown'],\n          \n      \n    \n    \n  \n\nIt  will set a default of None.","diffHunk":"@@ -30,18 +33,37 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"rajdeepbharati","avatarUrl":"https://avatars1.githubusercontent.com/u/30660439?v=4","name":"Rajdeep Bharati"},"reactions":[],"createdAt":"2019-01-19T15:48:23Z","lastEditedAt":"2019-01-19T15:58:59Z","updatedAt":"2019-01-19T15:58:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTI1MDUwMw==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r249250503","bodyText":"Thanks @rajdeepbharati for your review!","diffHunk":"@@ -30,18 +33,37 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-01-19T16:53:05Z","lastEditedAt":null,"updatedAt":"2019-01-19T16:53:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTkyNjE3Ng==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r251926176","bodyText":"The part where I am confused is that the whichever parameter the user will input would be treated as a string so how come the value of variable language will be of Language type.","diffHunk":"@@ -30,18 +33,37 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-01-29T17:02:53Z","lastEditedAt":null,"updatedAt":"2019-01-29T17:02:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTkyNzc5OA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r251927798","bodyText":"So, if I input --language=c++, it will be treated as \"c++\".\nBut what I need to do is that it should be like Language['c++'].","diffHunk":"@@ -30,18 +33,37 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-01-29T17:06:45Z","lastEditedAt":null,"updatedAt":"2019-01-29T17:06:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDk3OTA0MQ==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r314979041","bodyText":"Hello @gutsytechster do you still plan to work on this ? We need it for our game  (play0ad.com)\nYou can't do what you want in one line. This won't work :\ndef create_arguments(self, config_file, enable: typed_list(str) = [], language: str = Language[language]):\nFrom what I understand the default should be language = None\ndef create_arguments(self, config_file, enable: typed_list(str) = [], language: str = None):\nThen line 55 check for\n        if language is not None:\n            try:\n                lang = Language[language]\n                if isinstance(lang, Language.CPP):\n                    args += ('--language=c++',)\n                elif isinstance(lang, Language.C):\n                    args += ('--language=c',)\n                else:\n                    logging.error('Language can be either c or c++')\n                    return\n            except(AttributeError):\n                logging.error('Language can be either c or c++')\n                return\n        else\n            args += ('--language=c',)","diffHunk":"@@ -30,18 +33,37 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"StanleySweet","avatarUrl":"https://avatars3.githubusercontent.com/u/6837402?v=4","name":"Stanislas Dolcini"},"reactions":[{"id":"MDg6UmVhY3Rpb240OTE2NDE5Ng==","createdAt":"2019-08-20T18:29:58Z","content":"THUMBS_UP","user":{"login":"gutsytechster","name":"Prashant Sharma"}}],"createdAt":"2019-08-18T10:39:24Z","lastEditedAt":null,"updatedAt":"2019-08-18T10:39:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0MDg5Nw==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r315840897","bodyText":"@StanleySweet, thanks for update on this.\nYes, I'll finish the issue :)","diffHunk":"@@ -30,18 +33,37 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-08-20T18:31:42Z","lastEditedAt":null,"updatedAt":"2019-08-20T18:31:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTkxOTkxMA==","url":"https://github.com/coala/coala-bears/pull/2710#discussion_r315919910","bodyText":"Cool. I think you need to add tests now. The Appveyor fails because the coberage went from 100% to 87 something\nNot sure why travis fails but I guess it's related\nDo younow how to write the tests ?","diffHunk":"@@ -30,18 +33,37 @@ class CPPCheckBear:\n \n     def create_arguments(self, config_file,\n                          enable: typed_list(str) = [],\n+                         language: str = '',","author":{"login":"StanleySweet","avatarUrl":"https://avatars3.githubusercontent.com/u/6837402?v=4","name":"Stanislas Dolcini"},"reactions":[{"id":"MDg6UmVhY3Rpb240OTI1NDY0MQ==","createdAt":"2019-08-21T16:38:31Z","content":"THUMBS_UP","user":{"login":"gutsytechster","name":"Prashant Sharma"}}],"createdAt":"2019-08-20T21:52:18Z","lastEditedAt":"2019-08-20T21:52:33Z","updatedAt":"2019-08-20T21:52:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQzNzkzMzc3NQ==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-437933775","bodyText":"I have two different versions of cppcheck installed on two different machines. One of them has version 1.76.1 and other one has version 1.82 installed. However, when I used cppcheck on the newly added test file language_test.h which is a header file containing a bit of c++ specific code, on version 1.82, it did give an error like Code 'classFoo{' is invalid C code. Use --std or --language to configure the language. which means that version 1.82 considering .h files to be C specific. However, on cppcheck version 1.76.1 it doesn't give any error.\nIt seems that coala tests are using the previous version of cppcheck, and that's the reason the tests are failing.\nWhat should be done here?","diffHunk":null,"author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-11-12T15:59:46Z","lastEditedAt":"2018-11-12T16:05:44Z","updatedAt":"2018-11-12T16:05:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQzODA4MDk2Ng==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-438080966","bodyText":"@gutsytechster , you need to build a test case which works with the version of cppclean that coala uses.\nSee the file bear-requirements.txt to see which version that is.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-11-13T00:22:54Z","lastEditedAt":null,"updatedAt":"2018-11-13T00:22:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQzODE2MzU5NQ==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-438163595","bodyText":"Isn't cppcheck and cppclean different?\nAnd doesn't CPPCheckBear uses cppcheck?","diffHunk":null,"author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2018-11-13T07:25:25Z","lastEditedAt":null,"updatedAt":"2018-11-13T07:25:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQzODE3NDk3Nw==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-438174977","bodyText":"Yes, my apology, I should have said cppcheck","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-11-13T08:14:01Z","lastEditedAt":null,"updatedAt":"2018-11-13T08:14:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1NDA4NzE4Mg==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-454087182","bodyText":"@jayvdb can you review it?\nI just need to know if I am taking the correct approach for using the Language class defined.","diffHunk":null,"author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-01-14T17:20:57Z","lastEditedAt":"2019-01-14T17:22:12Z","updatedAt":"2019-01-14T17:22:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzc0Njg2MA==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-523746860","bodyText":"Tests are still missing 100% coverage","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T04:51:49Z","lastEditedAt":null,"updatedAt":"2019-08-22T04:51:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzc4MjQ3Mg==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-523782472","bodyText":"Hey @jayvdb can you help to find why appveyor and travis are giving different assertion errors and even though they are passing on local?","diffHunk":null,"author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-08-22T07:20:10Z","lastEditedAt":null,"updatedAt":"2019-08-22T07:20:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzgwODU4OQ==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-523808589","bodyText":"On researching, I found that the Travis is failing because it is using cppcheck 1.52(https://travis-ci.org/coala/coala-bears/jobs/575212105#L295) which doesn't support the language parameter and hence generating error resulting in return a None object instead of a list type object.","diffHunk":null,"author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-08-22T08:37:53Z","lastEditedAt":null,"updatedAt":"2019-08-22T08:37:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzgxMjM4Mw==","url":"https://github.com/coala/coala-bears/pull/2710#issuecomment-523812383","bodyText":"Appveyor is failing because it is using cppcheck 1.88(https://ci.appveyor.com/project/coala/coala-bears/builds/26877468/job/i2incdndjdui7jvf#L246) which generates different output when using the language parameter. As expected, it does generate 3 error when I specify --language=c though not for the older versions.\nAs far as I've understood, the cause for failing tests is because of using different cppcheck version across different test environments. Since different version acts differently, the tests are failing.\n@jayvdb kindly have a look.\nShouldn't we use the same versions for apt packages across all testing environments?","diffHunk":null,"author":{"login":"gutsytechster","avatarUrl":"https://avatars3.githubusercontent.com/u/31796326?v=4","name":"Prashant Sharma"},"reactions":[],"createdAt":"2019-08-22T08:48:17Z","lastEditedAt":"2019-08-22T08:50:05Z","updatedAt":"2019-08-22T08:50:05Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1564903731000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2803","number":2803,"title":"Jinja2Bear: Add support for indentation","body":"This adds the indentation feature to the Jinja2\nlanguage. This indentation is applied only to\nthe tags of Jinja2.\nCloses #2763\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-12-02T13:33:27Z","updatedAt":"2019-08-04T07:28:51Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"},{"name":"process/wip","color":"fbca04"},{"name":"size/M","color":"CFB80A"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2803","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ0MzUwODAyNQ==","url":"https://github.com/coala/coala-bears/pull/2803#issuecomment-443508025","bodyText":"WIP - Writing the tests. Implemented the TESTS","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-12-02T13:34:08Z","lastEditedAt":"2018-12-18T00:25:50Z","updatedAt":"2018-12-18T00:25:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDM0NzE4OQ==","url":"https://github.com/coala/coala-bears/pull/2803#issuecomment-460347189","bodyText":"Asciineam - https://asciinema.org/a/yFCyH8m2hYIeFdQj0AniVV5qE","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2019-02-04T17:57:34Z","lastEditedAt":null,"updatedAt":"2019-02-04T17:57:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDM1NzAyNQ==","url":"https://github.com/coala/coala-bears/pull/2803#issuecomment-460357025","bodyText":"The basic working of the patch can be explained as follows [For future reference]\nWe have three things -\n\nLabel_stack: Used to store all the control tags\nIndent Level: This tells the indentation level of the line.\nIndent step: Number of spaces for each indentation\n\nInitially the stack starts with no elements. As soon as it encounters a control label(eg: for,if,set etc..), it appends those labels into the stack. Note that, we also maintain the end control label where ever necessary. Whenever an control tag is added and if it doesn't find it's endtag in the next line, The Indent step is increased. This is done, because if the endtag is not found on the nextline it basically means that we have nesting of instructions.\nEg:\n{% for tony in avengers %}\n{% for thanos in enemy %}\n{% set thanos == 'EVIL' %}\n{% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nAs you see above after the first for, we do not have an endfor, that means we have a nesting in our Code. In such cases we append the first for in the stack. Now when it goes to the next line, it  checks if the next label matches the end label for the element present in the stack. That means, here we are checking if the next label is endfor. If it is then do nothing.\nIf it's not, then increase the Indent step , which is nothing but the number of spaces that has to be appended in front of a line. And check if the next line has that many number of indent steps. If not then create a diff.\nNow, when it encounters a endtag for the element present in the stack, it does two things\n\nDecreases the Indentaion Step\nPops out the element from the stack.\n\nThis is the basic working of the solution.\nThe above example get's indented as follows:\n{% for tony in avengers %}\n  {% for thanos in enemy %}\n    {% set thanos == 'EVIL' %}\n  {% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nFor the cases where we have a code which has nested languages such as Jinja2 and Python. The lines from other languages are skipped. coala doesn't yet have the functionality to detect multiple languages.\nFor eg:\nimport sys\n{% for tony in avengers %}\n  {% for thanos in enemy %}\n                    print(\"Thanos Rocks!!\")\n          print(\"Testing Indentation\")\n{% set avengers = loose %}\n  {% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nAfter the indentation, it would look like\nimport sys\n{% for tony in avengers %}\n  {% for thanos in enemy %}\n                   print(\"Thanos Rocks!!\")\n          print(\"Testing Indentation\")\n     {% set avengers = loose %}\n  {% endfor %}{# for thanos in enemy #}\n{% endfor %}{# for tony in avengers #}\n\nAs you see above, we provide no indentation  to both the print statements. We just ignore them.","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2019-02-04T18:25:08Z","lastEditedAt":"2019-05-25T08:43:17Z","updatedAt":"2019-05-25T08:43:17Z"}]}}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1566314761000,"issue":{"htmlUrl":"https://github.com/coala/documentation/pull/599","number":599,"title":"Tutorial.rst: Doc on ConfigGenerator","body":"This adds documentation on how to generate config files using config generator tool\nRelated to coala/coala#6049\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2019-08-15T11:34:01Z","updatedAt":"2019-08-20T15:26:01Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/documentation/pull/599","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTUyNzExMw==","url":"https://github.com/coala/documentation/pull/599#discussion_r315527113","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              $ coala -g python:pep8:app.py\n        \n          \n            \n                $ coala -g python:pep8:app.py\n          \n          \n            \n                $ coala -g python:pep8:**.py\n          \n      \n    \n    \n  \n\nI think this explains it better.","diffHunk":"@@ -129,6 +129,47 @@ But don't stop reading - you don't have to enter all those values again!\n We have given coala the ``--save`` argument, which means that it will\n automatically generate a ``.coafile`` into the current directory. Read on!\n \n+Generation of configuration files based on style guides\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+coala can automatically generate a configuration file\n+for you based on your preference of languages and style\n+guides.\n+\n+If you want to generate a configuration file for python\n+language based on pep8 style guide you can execute\n+\n+::\n+\n+    $ coala -g python:pep8:app.py","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb240OTEwNzc0Mg==","createdAt":"2019-08-20T07:55:52Z","content":"THUMBS_UP","user":{"login":"margobra8","name":"Marcos Gómez"}}],"createdAt":"2019-08-20T06:42:09Z","lastEditedAt":null,"updatedAt":"2019-08-20T06:42:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMTYxMTk1Nw==","url":"https://github.com/coala/documentation/pull/599#issuecomment-521611957","bodyText":"@jayvdb @Makman2  @RaiVaibhav @Nosferatul @ksdme @margobra8 Can you review this PR?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-08-15T11:37:44Z","lastEditedAt":null,"updatedAt":"2019-08-15T11:37:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMjcxNzQ0OA==","url":"https://github.com/coala/documentation/pull/599#issuecomment-522717448","bodyText":"good to go, LGTM","diffHunk":null,"author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-08-19T19:19:12Z","lastEditedAt":null,"updatedAt":"2019-08-19T19:19:12Z"}]}}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1565111425000,"issue":{"htmlUrl":"https://github.com/coala/documentation/pull/598","number":598,"title":"toml_config.rst: Config in TOML","body":"Documentation on how to write coala configuration file in TOML\nCloses #597\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2019-06-15T19:34:26Z","updatedAt":"2019-08-06T17:10:25Z","closedAt":"2019-08-06T17:10:17Z","state":"merged","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/documentation/pull/598","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTE4MDU1Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r295180556","bodyText":"This coafile is in TOML format or in coala format? Also specify what type of format is because from the example i can't be sure and for other examples.","diffHunk":"@@ -0,0 +1,155 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three coafiles to configure your project.\n+\n+1. A project-wide coafile.\n+2. A user-wide coafile.\n+3. A system-wide coafile.\n+\n+Project-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDk2NjI0MA==","createdAt":"2019-06-19T17:16:20Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-19T08:34:36Z","lastEditedAt":null,"updatedAt":"2019-06-19T08:34:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTE4MTkwMw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295181903","bodyText":"Maybe it is useful to have like a side-by-side comparison of how the syntax is. You can start with a complex coafile in coala format and explain how it can be written in toml format because users already know how to write in coala format but not in toml.","diffHunk":"@@ -0,0 +1,155 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three coafiles to configure your project.\n+\n+1. A project-wide coafile.\n+2. A user-wide coafile.\n+3. A system-wide coafile.\n+\n+Project-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. In coala you will be using TOML strings,\n+booleans, integers and arrays as values.\n+\n+Section Inheritance\n+----------------------------\n+coala supports section inheritance. You can define section inheritance\n+explicitly by naming a section in the format ``[\"basesection.newsection\"]``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+.. note::\n+\n+    In ``[\"basesection.newsection\"]``, the quotes insides the square braces are\n+    necessary for specifying section inheritance in TOML.\n+\n+\n+Consider the following coafile::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [\"all.section1\"]\n+  overridable = 3\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [\"all.section2\"]\n+  overridable = 4\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section. This is the same file without section\n+inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Defining Aspects and Tastes\n+---------------------------\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDk2NjI0Ng==","createdAt":"2019-06-19T17:16:24Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-19T08:37:34Z","lastEditedAt":null,"updatedAt":"2019-06-19T08:37:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyNTQ3Mw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295525473","bodyText":"why string?","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:10:40Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:10:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyNTk1OA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295525958","bodyText":"If there is a case where appends can be section name then create a subheading and explain with example (what will happen when you do so)","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:12:00Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:12:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyODY3Nw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295528677","bodyText":"Mention above that if property is redefined in the inherited section then it will overwrite if appends is not mentioned","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:19:32Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:19:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzMDk2OA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295530968","bodyText":"appends can be list If I am correct, mention it here,","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:25:56Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:25:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzMjk1Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r295532956","bodyText":"What will happen when someone writes all.a, if nothing happens, mention that inherits can be a section name only","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:31:50Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:31:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNTYxOA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295535618","bodyText":"Move this in aspect section","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:39:48Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:39:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNTk1Mg==","url":"https://github.com/coala/documentation/pull/598#discussion_r295535952","bodyText":"Remove ]","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:40:48Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:40:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNjY2NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295536665","bodyText":"See other files how they have define headings with subheadings","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:43:12Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:43:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNzA3NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295537075","bodyText":"why gap","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:44:28Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:44:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzODgwMQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295538801","bodyText":"If you are putting some type of warning then you should see how we have written the docs.\nDon't forget to preview it on netlify","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'\n+ appends = 'bears'\n+ language = 'Python'\n+ remove_all_unused_imports = true\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:49:55Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:49:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzOTQ0Nw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295539447","bodyText":"In future, we will split this doc in 2 part\n\ncoafile to TOML\nTOML to coafile\n\nso you should see how they are doing it in the docs.","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'\n+ appends = 'bears'\n+ language = 'Python'\n+ remove_all_unused_imports = true\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:52:02Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:52:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2MTM5MQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r296761391","bodyText":"typo caofile","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML\n+\n+.. code::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+---------------------\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML\n+\n+.. code::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance\n+\n+.. code::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+.. code::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same in coafile format appears as\n+\n+.. code::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+.. note::\n+\n+   - If you want to append multiple settings then use ``appends`` as a list\n+     ::\n+\n+        appends = [ 'a', 'b']\n+   - If you want to inherit multiple sections use ``inherits`` as a list\n+     ::\n+\n+        inherits = [ 'section1', 'section2']\n+   - You can only inherit sections\n+   - You can only append settings\n+   - If  a setting is redefined in the inherited section then it will\n+     overwritten if appends is not used.\n+\n+Defining Aspects and Tastes\n+----------------------------\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example\n+\n+.. code::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  [python]\n+  files = '**.py'\n+  language = 'Python'\n+  inherits = 'all'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+For caofile users who want to write configuration in TOML","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-06-24T14:47:29Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:47:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2NjAxMw==","url":"https://github.com/coala/documentation/pull/598#discussion_r296766013","bodyText":"This should be rephrased as two of the three configuration files don't just affect a project but rather multiple projects.","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2019-06-24T14:56:33Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:56:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2OTE4NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r296769185","bodyText":"Do we have a list of recognized parameters a section can have such as bears, ignore, files etc. If we do, we should link it here with appropriate text.","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2019-06-24T15:02:51Z","lastEditedAt":null,"updatedAt":"2019-06-24T15:02:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg2NDkxNA==","url":"https://github.com/coala/documentation/pull/598#discussion_r296864914","bodyText":"At line 60 I have added :\nA list of settings required to write configuration can be found at\nSettings <http://api.coala.io/en/latest/Developers/coala_settings.html>","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI4MTM2NA==","createdAt":"2019-06-25T00:22:34Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2019-06-24T18:49:04Z","lastEditedAt":null,"updatedAt":"2019-06-24T18:49:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzM0MTQ0Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r297341446","bodyText":"typo: can be the same","diffHunk":"@@ -8,6 +8,9 @@ Naming, Scope and Location\n --------------------------\n \n You can use up to three configuration files to configure your project.\n+Two of these configuration files ``.coarc.toml`` and ``system_coafile.toml``\n+can be same for any number of projects but ``.coafile.toml`` can be","author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"reactions":[],"createdAt":"2019-06-25T18:50:48Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:50:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNDg2MTgyMw==","url":"https://github.com/coala/documentation/pull/598#issuecomment-504861823","bodyText":"@jayvdb  @margobra8 @ksdme Can you review this?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-06-24T05:22:18Z","lastEditedAt":null,"updatedAt":"2019-06-24T05:22:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNTA0MzgyMw==","url":"https://github.com/coala/documentation/pull/598#issuecomment-505043823","bodyText":"it looks good to me, when thinks will be changed we will update the documentation too. ack","diffHunk":null,"author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI0Mjc0OA==","createdAt":"2019-06-24T14:51:01Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-24T14:49:33Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:49:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxMTg3Mjk2NA==","url":"https://github.com/coala/documentation/pull/598#issuecomment-511872964","bodyText":"@jayvdb @RaiVaibhav @Nosferatul @ksdme @margobra8 Can you review this commit 1309129","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-07-16T15:44:52Z","lastEditedAt":"2019-07-16T20:33:36Z","updatedAt":"2019-07-16T20:33:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODc2MDMzNw==","url":"https://github.com/coala/documentation/pull/598#issuecomment-518760337","bodyText":"Manually merged.","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2019-08-06T17:10:25Z","lastEditedAt":null,"updatedAt":"2019-08-06T17:10:25Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566512367000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/741","number":741,"title":"Add RohanVB report","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2019-08-22T21:13:14Z","updatedAt":"2019-08-22T22:19:27Z","closedAt":null,"state":"open","user":{"login":"RohanVB","avatarUrl":"https://avatars0.githubusercontent.com/u/15197846?v=4"},"owner":{"login":"RohanVB","avatarUrl":"https://avatars0.githubusercontent.com/u/15197846?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/741","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566500838000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/737","number":737,"title":"Add Prajwal M report","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2019-08-19T13:57:21Z","updatedAt":"2019-08-22T19:07:18Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/737","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMjYwNjYzNg==","url":"https://github.com/coala/projects/pull/737#issuecomment-522606636","bodyText":"Preview https://deploy-preview-737--coala-projects.netlify.com/gsoc/2019/statusreport/prajwalm","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-08-19T14:43:03Z","lastEditedAt":null,"updatedAt":"2019-08-19T14:43:03Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566498399000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/739","number":739,"title":"Add ChaitanyaTyagi report","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-08-22T16:00:12Z","updatedAt":"2019-08-22T18:26:39Z","closedAt":null,"state":"open","user":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"owner":{"login":"chay2199","avatarUrl":"https://avatars1.githubusercontent.com/u/33033514?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/739","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566493818000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/732","number":732,"title":"events.html: Fetch and Display events from webservices","body":"The commits adds an events directive that fetches the\nevents from coala Webservices and displays them on the\nwebsite in the card format. Instead of dissplaying all\nevents, only the ongoing events, events occured in last\n3 months and the events which are about to occur in next\n3 months will be displayed to avoid a long list of cards.\nCloses #560","comments":4,"createdAt":"2019-08-12T10:04:54Z","updatedAt":"2019-08-22T17:10:18Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/732","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566494277000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/733","number":733,"title":"projects.html: Get related issues states from webservices","body":"The commit adds a method, to get related issues states\nfrom coala Webservices and adds the issue state to a\nHashMap which is being used to get issue css class,\nwhen the project pop-ups.\nCloses #298","comments":2,"createdAt":"2019-08-12T17:43:31Z","updatedAt":"2019-08-22T17:17:57Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/733","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566488889000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/735","number":735,"title":"students.html: Add a tab displaying GSoC Students ","body":"The commit replaces the reports web-page by the\nstudents web-page. This displays all the GSoC students\nusing the same logic as used in reports.html for reading\nall the work reports.\nCloses #734","comments":1,"createdAt":"2019-08-13T11:59:42Z","updatedAt":"2019-08-22T15:48:09Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/735","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566492590000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/736","number":736,"title":"index.html: Add a navbar","body":"The tabs are limted to 3, as adding more than 3 tabs\nit is causing a small size due to which the tab text\nis not completely visible. So, a better solution to\nthis is to replace the tabs with a navbar.","comments":0,"createdAt":"2019-08-17T16:17:33Z","updatedAt":"2019-08-22T16:49:50Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/736","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566461138000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/724","number":724,"title":"README.md: Remove Spacing Inconsistency","body":"Readme.md contained some spacing inconsitency\nwhich has been now removed.\nFixes #713\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":25,"createdAt":"2019-03-25T11:27:51Z","updatedAt":"2019-08-22T08:05:38Z","closedAt":"2019-08-22T08:05:37Z","state":"closed","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/724","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM5NzUxNA==","url":"https://github.com/coala/projects/pull/724#discussion_r269397514","bodyText":"Why has this section been removed?","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T03:52:28Z","lastEditedAt":null,"updatedAt":"2019-03-27T03:52:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM5NzU4Ng==","url":"https://github.com/coala/projects/pull/724#discussion_r269397586","bodyText":"and this added?\nThese changes are not related to the SpaceConsistencyBear issue afaik","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T03:53:01Z","lastEditedAt":null,"updatedAt":"2019-03-27T03:53:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQwODQ4MA==","url":"https://github.com/coala/projects/pull/724#discussion_r269408480","bodyText":"No your right these sections are not related. This is related to another issue #600. Actually makman2 and me were planning to fix the CI in this pr itself because gsoc is already upon us. I have discussed this with him and based on that appropriate action will be taken :)","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T05:19:14Z","lastEditedAt":null,"updatedAt":"2019-03-27T05:19:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTU5MTA2NA==","url":"https://github.com/coala/projects/pull/724#discussion_r269591064","bodyText":"That's great. Just add that issue reference to the comment/pr as well.","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T14:29:08Z","lastEditedAt":null,"updatedAt":"2019-03-27T14:29:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTU5NDI2Ng==","url":"https://github.com/coala/projects/pull/724#discussion_r269594266","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n                  - cOALA_ZIP_URL=https://github.com/coala/coala/archive/master.zip\n        \n          \n            \n                    - COALA_ZIP_URL=https://codeload.github.com/coala/coala/archive/master.zip","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala\n+      <<: *disable_global\n+      language: python\n+      python: 3.6\n+      cache: pip\n+      install:\n+        - cOALA_ZIP_URL=https://github.com/coala/coala/archive/master.zip","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTc4OTMyNQ==","createdAt":"2019-03-29T12:15:57Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2019-03-27T14:34:57Z","lastEditedAt":null,"updatedAt":"2019-03-27T14:34:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4MzU5MQ==","url":"https://github.com/coala/projects/pull/724#discussion_r269683591","bodyText":"I don't think so this is required. This was reporting InvalidLink because we were using old coala. You should run latest coala and verify if it still throws InvalidLink.","diffHunk":"@@ -164,7 +164,7 @@ investigation/review. Based on this feature, I implemented a\n [script](https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d) to\n demonstrate the ability of bootstrapping coala Go bears on a bare-metal FreeBSD\n system\n-([Screen record for the demo](https://asciinema.org/a/0poVbHE7lqehV4islFo6cptjb)),\n+([Screen record for the demo]()),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:29:42Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:29:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NDEwNw==","url":"https://github.com/coala/projects/pull/724#discussion_r269684107","bodyText":"Are these changes related to SpaceConsistency?","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:30:47Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:30:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NTgwMA==","url":"https://github.com/coala/projects/pull/724#discussion_r269685800","bodyText":"No the link bear complained even after we installed the latest version so I removed the backslash","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T17:34:16Z","lastEditedAt":"2019-03-27T17:34:32Z","updatedAt":"2019-03-27T17:34:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NjQ0MQ==","url":"https://github.com/coala/projects/pull/724#discussion_r269686441","bodyText":"I just followed up on @kriti21's PR and I think she installed the latest coala and still the bear complained.","diffHunk":"@@ -164,7 +164,7 @@ investigation/review. Based on this feature, I implemented a\n [script](https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d) to\n demonstrate the ability of bootstrapping coala Go bears on a bare-metal FreeBSD\n system\n-([Screen record for the demo](https://asciinema.org/a/0poVbHE7lqehV4islFo6cptjb)),\n+([Screen record for the demo]()),","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTYzNTI2MA==","createdAt":"2019-03-27T19:14:31Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-03-27T17:35:39Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:35:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY5MTQxMA==","url":"https://github.com/coala/projects/pull/724#discussion_r269691410","bodyText":"Then I think its better to add a new commit for this change. Actually for all invalid link changes.","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:46:28Z","lastEditedAt":"2019-03-27T17:46:51Z","updatedAt":"2019-03-27T17:46:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDM4NDc2NQ==","url":"https://github.com/coala/projects/pull/724#discussion_r270384765","bodyText":"See  @kriti21's PR.\n@sladyn98 \t, i suggest you make your PR only about fixing the spacing.  Leave the other problem to kriti.\nOr split your commit into two well written commits, as they are two distinct fixes.","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-03-29T12:17:50Z","lastEditedAt":null,"updatedAt":"2019-03-29T12:17:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDM4NjQ3Mw==","url":"https://github.com/coala/projects/pull/724#discussion_r270386473","bodyText":"@jayvdb yep agreed I made these changes intially with the aim of having my PR merged but since @kriti21 got her CI green I am removing these changes 👍","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-29T12:23:46Z","lastEditedAt":null,"updatedAt":"2019-03-29T12:23:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI2NzU0NQ==","url":"https://github.com/coala/projects/pull/724#issuecomment-477267545","bodyText":"@sladyn98 I would've really liked if there is a single PR fixing the CI. Two PRs for same purpose makes one redundant. Although this PR references changes regarding space consistency but the goal is same. Anyways, as soon as #600 is finished, you need to cherry pick that commit and push here. We should be able to see the CI green here, since that commit is has been done before than this (following linear git history).","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:27:32Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:27:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI2ODg5OA==","url":"https://github.com/coala/projects/pull/724#issuecomment-477268898","bodyText":"@sladyn98 I would've really liked if there is a single PR fixing the CI. Two PRs for same purpose makes one redundant. Although this PR references changes regarding space consistency but the goal is same. Anyways, as soon as #600 is finished, you need to cherry pick that commit and push here. We should be able to see the CI green here, since that commit is has been done before than this (following linear git history).\n\nYeah @abhishalya your bang on I will remove the changes from my PR once #600 has been fixed :)","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T17:30:27Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:30:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI3MjQ0Mg==","url":"https://github.com/coala/projects/pull/724#issuecomment-477272442","bodyText":"@abhishalya @kriti21  https://travis-ci.org/sladyn98/projects/builds/511483343 I have linked the branch which made the CI green on my local fork you can have a look.The one problem is the asci link. I do not think I should have made that change because we just cannot remove a link from someone's project.So we need to find a workaround that.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTYzNTMwMQ==","createdAt":"2019-03-27T19:15:02Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}},{"id":"MDg6UmVhY3Rpb24zOTcwNzcxOQ==","createdAt":"2019-03-28T14:14:47Z","content":"THUMBS_UP","user":{"login":"kriti21","name":"Kriti Rohilla"}}],"createdAt":"2019-03-27T17:38:15Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:38:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNjI3NjUwNQ==","url":"https://github.com/coala/projects/pull/724#issuecomment-516276505","bodyText":"@jayvdb This fixes the spacing inconsistency and is ready to be merged IMO.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-07-30T06:05:18Z","lastEditedAt":null,"updatedAt":"2019-07-30T06:05:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMzc5NzM0Ng==","url":"https://github.com/coala/projects/pull/724#issuecomment-523797346","bodyText":"Duplicate of #600","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-08-22T08:05:37Z","lastEditedAt":null,"updatedAt":"2019-08-22T08:05:37Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566485031000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/729","number":729,"title":"app.js: Get mentors from Webservices","body":"The webservices now has a table for mentors,\nthat stores the requests created by contributor\non the community website. After all checks are\ngreen, the contributor is added a mentor for the\nupcoming program based on the request. Therefore,\nfetch all those contributors from webservices for\nthe upcoming GSoC program and append them to the\nmentors list\nCloses #728\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2019-08-09T12:43:29Z","updatedAt":"2019-08-22T14:43:51Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/729","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMDIxNzA5OQ==","url":"https://github.com/coala/projects/pull/729#issuecomment-520217099","bodyText":"@sks444 Please Review!","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-08-11T10:28:19Z","lastEditedAt":null,"updatedAt":"2019-08-11T10:28:19Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566486982000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/730","number":730,"title":"tabs: Fetch and Display forms from webservices","body":"The forms uploaded by developers from community\nwebsite, are being fetched from Webservices\nwhere the request to add a new form is being\nprocessed. If a valid request is created, the form\nis added to the database. Therefore, we can fetch\nthose forms and display them on the projects website.\nPreview with added test forms:\n\nCloses #284","comments":4,"createdAt":"2019-08-09T18:53:31Z","updatedAt":"2019-08-22T15:16:22Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/730","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMDIxNzA2OQ==","url":"https://github.com/coala/projects/pull/730#issuecomment-520217069","bodyText":"@sks444 @RohanVB @li-boxuan Please review!","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-08-11T10:27:47Z","lastEditedAt":null,"updatedAt":"2019-08-11T10:27:47Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566491746000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/731","number":731,"title":"projects.html: Add filters for searching projects","body":"This commit adds filters for filtering the projects\nbased on project work status, tags, difficulty level,\ninitiatives and collaborating projects.\nCloses #559","comments":8,"createdAt":"2019-08-11T10:23:23Z","updatedAt":"2019-08-22T16:35:46Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/731","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMDIxNzAyMQ==","url":"https://github.com/coala/projects/pull/731#issuecomment-520217021","bodyText":"@sks444 @Vamshi99 @li-boxuan Please review!","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-11T10:26:53Z","lastEditedAt":null,"updatedAt":"2019-08-11T10:26:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDgzNDA5Ng==","url":"https://github.com/coala/projects/pull/731#issuecomment-520834096","bodyText":"Nice work!\nI think the filter doesn't work as expected when we select status as disabled and github tag, there are some other cases too when it doesn't work as expected. Check cases where no results exist.\nWhen we select clear filters, drop down fields values should also reset to default.\nAnd popup isn't looking well, it would be great if isn't a popup, just show the filter options below the search when clicked filter button, else hide them. I think that look nice.","diffHunk":null,"author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODY2NDgzOA==","createdAt":"2019-08-13T14:43:37Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-13T13:27:39Z","lastEditedAt":null,"updatedAt":"2019-08-13T13:27:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDg2NTIzOA==","url":"https://github.com/coala/projects/pull/731#issuecomment-520865238","bodyText":"I will look at the issues 👍 and will also remove the popup display","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-13T14:44:14Z","lastEditedAt":null,"updatedAt":"2019-08-13T14:44:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDkzNjYyMQ==","url":"https://github.com/coala/projects/pull/731#issuecomment-520936621","bodyText":"@Vamshi99 I've corrected the existing issues. Please review!","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-13T17:47:19Z","lastEditedAt":null,"updatedAt":"2019-08-13T17:47:19Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566484414000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/693","number":693,"title":"_faq: Add details about cEPs to faq","body":"This faq helps contributor in understanding about cEP and its\nimportance.\nCloses #684","comments":30,"createdAt":"2018-11-23T08:06:05Z","updatedAt":"2019-08-22T14:33:34Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"importance/medium","color":"f2db30"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/693","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAwMjE1OA==","url":"https://github.com/coala/projects/pull/693#discussion_r236002158","bodyText":"proposal proposed is a bit redundant, perhaps just proposed should convey the same meaning","diffHunk":"@@ -0,0 +1,10 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP(coala Enhancement Proposal)** is a proposal proposed to the coala community discussing the new major features that the contributor is intended to implement during GSoC.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T18:10:27Z","lastEditedAt":null,"updatedAt":"2018-11-23T18:10:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAwMjI0MA==","url":"https://github.com/coala/projects/pull/693#discussion_r236002240","bodyText":"the contributor is intended to implement could be reworded to the contributor intends to implement","diffHunk":"@@ -0,0 +1,10 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP(coala Enhancement Proposal)** is a proposal proposed to the coala community discussing the new major features that the contributor is intended to implement during GSoC.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T18:11:15Z","lastEditedAt":null,"updatedAt":"2018-11-23T18:11:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAwMjMyMQ==","url":"https://github.com/coala/projects/pull/693#discussion_r236002321","bodyText":"not well-designed content could be changed to poorly designed content for clarity","diffHunk":"@@ -0,0 +1,10 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP(coala Enhancement Proposal)** is a proposal proposed to the coala community discussing the new major features that the contributor is intended to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to not well-designed content - developer and user wise. This can essentially save a lot of coding work when big features are written which are oftentimes not well enough designed initially. This also makes sure that major features are properly documented.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T18:11:54Z","lastEditedAt":null,"updatedAt":"2018-11-23T18:11:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAwMjc1Nw==","url":"https://github.com/coala/projects/pull/693#discussion_r236002757","bodyText":"creating projects -> created projects and expanding on -> expanded on in order to preserve parallel structure from contributed to","diffHunk":"@@ -0,0 +1,10 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP(coala Enhancement Proposal)** is a proposal proposed to the coala community discussing the new major features that the contributor is intended to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to not well-designed content - developer and user wise. This can essentially save a lot of coding work when big features are written which are oftentimes not well enough designed initially. This also makes sure that major features are properly documented.\n+\n+Anyone planning to do GSoC with coala should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, creating projects from the issues, and expanding on existing ***.md*** files. And generally learning how to express complex technical ideas in the markup. If you can't explain your idea, and how you will achieve it, we probably don't want to mentor you doing that undefined project.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T18:15:15Z","lastEditedAt":null,"updatedAt":"2018-11-23T18:15:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAwMjk2Mw==","url":"https://github.com/coala/projects/pull/693#discussion_r236002963","bodyText":"And generally learning how to express complex... is a sentence fragment, could either reword so that it stands alone as a complete sentence or attach it to the previous sentence.","diffHunk":"@@ -0,0 +1,10 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP(coala Enhancement Proposal)** is a proposal proposed to the coala community discussing the new major features that the contributor is intended to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to not well-designed content - developer and user wise. This can essentially save a lot of coding work when big features are written which are oftentimes not well enough designed initially. This also makes sure that major features are properly documented.\n+\n+Anyone planning to do GSoC with coala should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, creating projects from the issues, and expanding on existing ***.md*** files. And generally learning how to express complex technical ideas in the markup. If you can't explain your idea, and how you will achieve it, we probably don't want to mentor you doing that undefined project.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T18:17:01Z","lastEditedAt":null,"updatedAt":"2018-11-23T18:17:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAxMTMyNg==","url":"https://github.com/coala/projects/pull/693#discussion_r236011326","bodyText":"missing comma between with coala and you should","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community discussing the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work when big features are written which are oftentimes not well enough designed initially. This also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably don't want to mentor you doing that undefined project.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T19:40:45Z","lastEditedAt":null,"updatedAt":"2018-11-23T19:40:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAxMTMzMg==","url":"https://github.com/coala/projects/pull/693#discussion_r236011332","bodyText":"discussing -> and discusses","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community discussing the new major features that the contributor intends to implement during GSoC.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T19:40:49Z","lastEditedAt":null,"updatedAt":"2018-11-23T19:40:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAxMTQ0Mw==","url":"https://github.com/coala/projects/pull/693#discussion_r236011443","bodyText":"You can probably cut doing that undefined project from the end of that sentence, since it is already described earlier.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community discussing the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work when big features are written which are oftentimes not well enough designed initially. This also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably don't want to mentor you doing that undefined project.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T19:41:46Z","lastEditedAt":null,"updatedAt":"2018-11-23T19:41:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAxMTY5NQ==","url":"https://github.com/coala/projects/pull/693#discussion_r236011695","bodyText":"when big features are written which are oftentimes not well enough designed initially is already conveyed effectively through the sentence before, so you can probably cut this for brevity. Suggested change: This can essentially save a lot of coding work and also makes sure that major features are properly documented.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community discussing the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work when big features are written which are oftentimes not well enough designed initially. This also makes sure that major features are properly documented.","author":{"login":"CLiu13","avatarUrl":"https://avatars3.githubusercontent.com/u/15334486?v=4","name":"Charlie Liu"},"reactions":[],"createdAt":"2018-11-23T19:44:11Z","lastEditedAt":null,"updatedAt":"2018-11-23T19:44:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAyMTQyMw==","url":"https://github.com/coala/projects/pull/693#discussion_r236021423","bodyText":"Shouldn't it be cEP, instead of cEP's?","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.","author":{"login":"utkarsh2102","avatarUrl":"https://avatars1.githubusercontent.com/u/31288318?v=4","name":"Utkarsh Gupta"},"reactions":[],"createdAt":"2018-11-23T21:47:41Z","lastEditedAt":null,"updatedAt":"2018-11-23T21:47:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAyMTQ4Mw==","url":"https://github.com/coala/projects/pull/693#discussion_r236021483","bodyText":"Not sure about this but can we have something else (or nothing at all!) in place of we probably won't be able to mentor you.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"utkarsh2102","avatarUrl":"https://avatars1.githubusercontent.com/u/31288318?v=4","name":"Utkarsh Gupta"},"reactions":[],"createdAt":"2018-11-23T21:48:38Z","lastEditedAt":null,"updatedAt":"2018-11-23T21:48:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAzNTEwNQ==","url":"https://github.com/coala/projects/pull/693#discussion_r236035105","bodyText":"Used cEP's  because maybe user is interested in submitting more than one proposal.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-24T07:44:57Z","lastEditedAt":"2018-11-24T09:00:04Z","updatedAt":"2018-11-24T09:00:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAzNTEzMA==","url":"https://github.com/coala/projects/pull/693#discussion_r236035130","bodyText":"or we can use cEP(s) !!","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-24T07:45:31Z","lastEditedAt":null,"updatedAt":"2018-11-24T07:45:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAzNTE3MA==","url":"https://github.com/coala/projects/pull/693#discussion_r236035170","bodyText":"I will think upon the last line and will look to reword that line that looks good.\nWill commit as soon as I get time, busy with exams study 😞","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-24T07:47:53Z","lastEditedAt":null,"updatedAt":"2018-11-24T07:47:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjAzNjcxNw==","url":"https://github.com/coala/projects/pull/693#discussion_r236036717","bodyText":"@utkarsh2102 we probably won't be able to select your proposal in place of we probably won't be able to mentor you , will it be ok ? or something else ?","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-24T09:11:33Z","lastEditedAt":null,"updatedAt":"2018-11-24T09:11:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA0MTU5MA==","url":"https://github.com/coala/projects/pull/693#discussion_r236041590","bodyText":"Yeah, but the plural of cEP should be cEPs, right?\nThat is, coala Enhancement Proposals.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.","author":{"login":"utkarsh2102","avatarUrl":"https://avatars1.githubusercontent.com/u/31288318?v=4","name":"Utkarsh Gupta"},"reactions":[],"createdAt":"2018-11-24T12:49:21Z","lastEditedAt":null,"updatedAt":"2018-11-24T12:49:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA0MTYyNg==","url":"https://github.com/coala/projects/pull/693#discussion_r236041626","bodyText":"Can we not have that line at all? :P\nNot sure. @jayvdb would be the right person to tell you.\nCC: @li-boxuan.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"utkarsh2102","avatarUrl":"https://avatars1.githubusercontent.com/u/31288318?v=4","name":"Utkarsh Gupta"},"reactions":[],"createdAt":"2018-11-24T12:50:40Z","lastEditedAt":null,"updatedAt":"2018-11-24T12:50:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA0MjAyMA==","url":"https://github.com/coala/projects/pull/693#discussion_r236042020","bodyText":"yep, right","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-24T13:04:59Z","lastEditedAt":null,"updatedAt":"2018-11-24T13:04:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA0MjAzMw==","url":"https://github.com/coala/projects/pull/693#discussion_r236042033","bodyText":"so should I replace cEP's with cEPs ?","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-24T13:05:37Z","lastEditedAt":null,"updatedAt":"2018-11-24T13:05:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA0MjE3Nw==","url":"https://github.com/coala/projects/pull/693#discussion_r236042177","bodyText":"IMO that line should be there but it can be expressed in more appropriate way because the contributor must know that the cEP he is working on has to be in detailed manner with proper markup tools used at right places and should be presented good, so that mentors can easily understand what will that contributor intends to implement.\nWill wait for maintainers to get their view 👍","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-24T13:12:12Z","lastEditedAt":"2018-11-25T08:13:52Z","updatedAt":"2018-11-25T08:13:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA4MjE4Ng==","url":"https://github.com/coala/projects/pull/693#discussion_r236082186","bodyText":"This line (as well as others) is too long. We don't have 80 max characters limit per line in this repository, so CI doesn't complain, but please break down into multiple lines.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjkxMTgyMA==","createdAt":"2018-11-25T18:09:43Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2018-11-25T17:20:14Z","lastEditedAt":null,"updatedAt":"2018-11-25T17:20:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA4Mzk5Nw==","url":"https://github.com/coala/projects/pull/693#discussion_r236083997","bodyText":"Ohk, I didn't know about this line limit that it has to be followed in this repository also. Will make that changes and commit them ASAP.\ncan you also please help in above requested changes, stuck at one of comments suggested by one of the reviewer","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-25T18:09:38Z","lastEditedAt":null,"updatedAt":"2018-11-25T18:09:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjEyNzczOA==","url":"https://github.com/coala/projects/pull/693#discussion_r236127738","bodyText":"IMO that line should be there\n\nI disagree. Everyone applying for gsoc know the possible outcome of either getting selected or rejected. The way @KVGarg has mentioned it would make us seem like a community that is too hard to get into which is far from what this community is actually like. I have not seen a community where the maintainers and the admin try so hard to select every good student for GSoC and even advise them to submit multiple proposals to other organizations.\nSo I am with @utkarsh2102 on this. It should be rephrased like an interested student must do enough research about their project to be able to express their ideas, timeline, etc clearly in their GSoC proposal which will increase their chances of success.\nWhat you ( @KVGarg  ) wrote is absolutely correct but I just don't find it very welcoming towards newcomers.","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjkyNTM4Nw==","createdAt":"2018-11-26T06:59:34Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}},{"id":"MDg6UmVhY3Rpb24zMjk0MTY1Ng==","createdAt":"2018-11-26T12:53:52Z","content":"THUMBS_UP","user":{"login":"utkarsh2102","name":"Utkarsh Gupta"}}],"createdAt":"2018-11-26T05:46:37Z","lastEditedAt":null,"updatedAt":"2018-11-26T05:46:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjEzOTIzNg==","url":"https://github.com/coala/projects/pull/693#discussion_r236139236","bodyText":"Thnx @palash25 for your review\nAnd i have totally understand what you are trying to say and will rephrase that last line as like you have said","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-26T06:59:17Z","lastEditedAt":null,"updatedAt":"2018-11-26T06:59:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODE5ODE4NA==","url":"https://github.com/coala/projects/pull/693#discussion_r238198184","bodyText":"hey @palash25 can you please review the latest commit","diffHunk":"@@ -0,0 +1,12 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to discuss the new major features that the contributor intends to implement during GSoC.\n+\n+**cEP's** are designed before implementation. Implementing major features usually happens from a technical perspective and may lead to poorly designed content - developer and user wise. This can essentially save a lot of coding work and also makes sure that major features are properly documented.\n+\n+Experience tells us that the best GSoC students are the ones who heavily contributed to the project ideas website, created projects from the issues, and expanded on existing ***.md*** files.\n+\n+So, if you are planning to do GSoC with coala, you should be starting to write detailed project ideas in our [projects](https://github.com/coala/projects) repository. Also, you should learn how to express complex technical ideas in the markup because if you can't explain your idea, and how you will achieve it, we probably won't be able to mentor you.","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-12-03T09:43:20Z","lastEditedAt":null,"updatedAt":"2018-12-03T09:43:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTIxNzQ1Mg==","url":"https://github.com/coala/projects/pull/693#discussion_r239217452","bodyText":"please remove the unnecessary whitespaces at the start of line 6, 7, 15, 16, 19, 20, 21, 22","diffHunk":"@@ -0,0 +1,25 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and\n+ design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to\n+ discuss the new major features that the contributor intends to implement during","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMzUxMzc0OA==","createdAt":"2018-12-05T21:36:21Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2018-12-05T20:02:16Z","lastEditedAt":null,"updatedAt":"2018-12-05T20:02:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTI0OTgyOA==","url":"https://github.com/coala/projects/pull/693#discussion_r239249828","bodyText":"Actually, when I separated a long line to multiple lines, that whitespace at the starting of each line came up when I pressed enter key after a certain a word and that whitespace at beginning of sentence was actually the space between any two words, say between to and discuss. I thought that space is necessary at the beginning so that content can be rendered properly on webpage but I was wrong, it is still getting rendered properly even when the extra beginning whitespaces's are removed. 😃","diffHunk":"@@ -0,0 +1,25 @@\n+---\n+question: \"What is a cEP and why it is so important to do analysis pre-gsoc and\n+ design as early as possible, to be finalized in the cEP?\"\n+---\n+A **cEP (coala Enhancement Proposal)** is proposed to the coala community to\n+ discuss the new major features that the contributor intends to implement during","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-12-05T21:46:29Z","lastEditedAt":null,"updatedAt":"2018-12-05T21:46:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MTMwMjcwMg==","url":"https://github.com/coala/projects/pull/693#issuecomment-441302702","bodyText":"Ok @CLiu13 ,I will make the suggested changes and will commit them soon.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjg4MjYyOQ==","createdAt":"2018-11-23T19:45:21Z","content":"THUMBS_UP","user":{"login":"CLiu13","name":"Charlie Liu"}}],"createdAt":"2018-11-23T18:49:39Z","lastEditedAt":null,"updatedAt":"2018-11-23T18:49:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MTMwODI0Ng==","url":"https://github.com/coala/projects/pull/693#issuecomment-441308246","bodyText":"@CLiu13 Please check whether changes I made are correct or not !!\nThanks a lot","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjg4MjYyNw==","createdAt":"2018-11-23T19:45:18Z","content":"THUMBS_UP","user":{"login":"CLiu13","name":"Charlie Liu"}}],"createdAt":"2018-11-23T19:35:32Z","lastEditedAt":null,"updatedAt":"2018-11-23T19:35:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MTMxMjgxMA==","url":"https://github.com/coala/projects/pull/693#issuecomment-441312810","bodyText":"Done 😄","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjg4MzM1MA==","createdAt":"2018-11-23T20:18:11Z","content":"THUMBS_UP","user":{"login":"CLiu13","name":"Charlie Liu"}}],"createdAt":"2018-11-23T20:16:54Z","lastEditedAt":null,"updatedAt":"2018-11-23T20:16:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MTMxNTMxNw==","url":"https://github.com/coala/projects/pull/693#issuecomment-441315317","bodyText":"Ohk, I will look into it and will reword it 😃","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-23T20:41:58Z","lastEditedAt":null,"updatedAt":"2018-11-23T20:41:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MTQ1MzQwOA==","url":"https://github.com/coala/projects/pull/693#issuecomment-441453408","bodyText":"@KVGarg  Use cEPs instead of cEP's.","diffHunk":null,"author":{"login":"bharatpurohit97","avatarUrl":"https://avatars1.githubusercontent.com/u/40547237?v=4","name":"Bharat Purohit"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjkxMDgyMA==","createdAt":"2018-11-25T16:59:41Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2018-11-25T16:33:36Z","lastEditedAt":null,"updatedAt":"2018-11-25T16:33:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MTYyOTUwMA==","url":"https://github.com/coala/projects/pull/693#issuecomment-441629500","bodyText":"As a rule of thumb, always checkout the branch to something else, other than the master.","diffHunk":null,"author":{"login":"utkarsh2102","avatarUrl":"https://avatars1.githubusercontent.com/u/31288318?v=4","name":"Utkarsh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjk0MjQ0Nw==","createdAt":"2018-11-26T13:08:48Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2018-11-26T12:56:49Z","lastEditedAt":null,"updatedAt":"2018-11-26T12:56:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MTY0MjgyMA==","url":"https://github.com/coala/projects/pull/693#issuecomment-441642820","bodyText":"Will be able to work on this issue after 4 days as my semester sessionals are going on, So busy with them. 😇","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjk1ODE2NA==","createdAt":"2018-11-26T17:02:39Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-11-26T13:42:34Z","lastEditedAt":"2018-11-26T13:43:55Z","updatedAt":"2018-11-26T13:43:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0MzIxMDEwOA==","url":"https://github.com/coala/projects/pull/693#issuecomment-443210108","bodyText":"Review Requested @li-boxuan @palash25 @utkarsh2102 😉","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-11-30T13:54:43Z","lastEditedAt":null,"updatedAt":"2018-11-30T13:54:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0NDY2Nzc1OQ==","url":"https://github.com/coala/projects/pull/693#issuecomment-444667759","bodyText":"Earlier there was no error being raised by travis, but now it's raising an error over a link in saksham.md.\nThis issue seems to be solved by sils in PR #696","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-12-05T22:01:31Z","lastEditedAt":null,"updatedAt":"2018-12-05T22:01:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0NjI2MTc1Nw==","url":"https://github.com/coala/projects/pull/693#issuecomment-446261757","bodyText":"@utkarsh2102 @li-boxuan @palash25 Need review on current commit","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-12-11T16:15:17Z","lastEditedAt":null,"updatedAt":"2018-12-11T16:15:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0ODY4NDYyNA==","url":"https://github.com/coala/projects/pull/693#issuecomment-448684624","bodyText":"Thnx @shashank-b @frextrite for reviewing this PR. Please go through the current changes made and check if any more changes are required. 😄","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNDIyNjU3NQ==","createdAt":"2018-12-19T18:44:17Z","content":"THUMBS_UP","user":{"login":"shashank-b","name":"Shashank Batra"}}],"createdAt":"2018-12-19T17:47:57Z","lastEditedAt":null,"updatedAt":"2018-12-19T17:47:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTU4OTEwMg==","url":"https://github.com/coala/projects/pull/693#issuecomment-449589102","bodyText":"Review Request @li-boxuan @utkarsh2102 @frextrite @shashank-b A major change done in explanation. The beginning two paragraphs are now merged to one para explaining all about a cEP.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-12-22T18:21:12Z","lastEditedAt":"2018-12-22T18:21:34Z","updatedAt":"2018-12-22T18:21:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTYxODkwOQ==","url":"https://github.com/coala/projects/pull/693#issuecomment-449618909","bodyText":"As mentioned in this step of the Newcomers' Guide, it would be a nice practice to not make changes on the Master Branch of your forked repository from the next time 🙂","diffHunk":null,"author":{"login":"shashank-b","avatarUrl":"https://avatars2.githubusercontent.com/u/22676390?v=4","name":"Shashank Batra"},"reactions":[],"createdAt":"2018-12-23T07:10:37Z","lastEditedAt":null,"updatedAt":"2018-12-23T07:10:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTYxOTY2Nw==","url":"https://github.com/coala/projects/pull/693#issuecomment-449619667","bodyText":"Yeah shashank, I was earlier informed about this. Will take care from next time. 😇","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNDM2OTI4Mg==","createdAt":"2018-12-23T07:42:34Z","content":"THUMBS_UP","user":{"login":"shashank-b","name":"Shashank Batra"}}],"createdAt":"2018-12-23T07:32:58Z","lastEditedAt":null,"updatedAt":"2018-12-23T07:32:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1MDQ4Nzc3Ng==","url":"https://github.com/coala/projects/pull/693#issuecomment-450487776","bodyText":"@shashank-b @frextrite @utkarsh2102 Please review the latest commit.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2018-12-29T11:58:38Z","lastEditedAt":null,"updatedAt":"2018-12-29T11:58:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1NTg5NjkzMg==","url":"https://github.com/coala/projects/pull/693#issuecomment-455896932","bodyText":"@jayvdb @li-boxuan @Makman2 Kindly review the PR, thnx","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-01-20T19:56:34Z","lastEditedAt":null,"updatedAt":"2019-01-20T19:56:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NjQyNzAyOQ==","url":"https://github.com/coala/projects/pull/693#issuecomment-476427029","bodyText":"@utkarsh2102 You’re correct that CI is failing due to spacing inconsistencies but these inconsistencies are not being raised from my changes. They are being raised from some another merged PR.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-26T00:24:47Z","lastEditedAt":null,"updatedAt":"2019-03-26T00:24:47Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566485775000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/712","number":712,"title":"app.js: Sort projects acc. to status in scope","body":"The commit sorts the projectsList itself in the JavaScript file\nusing orderBy filter and set the sorted array globally, which\nomits the use of orderBy filter in projects.html file\nFixes #711","comments":2,"createdAt":"2019-02-17T13:09:45Z","updatedAt":"2019-08-22T14:56:15Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"1d76db"},{"name":"importance/low","color":"2fe055"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/712","comments":[]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566486211000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/714","number":714,"title":"Add GSoC report link for completed tasks","body":"This commit adds the corresponding GSoC report\nlink for completed tasks.\nCloses #703\nChecklist\n\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":8,"createdAt":"2019-02-17T16:37:11Z","updatedAt":"2019-08-22T15:03:31Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"difficulty/low","color":"1d76db"},{"name":"enhancement","color":"84b6eb"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/714","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTM5MjkyNQ==","url":"https://github.com/coala/projects/pull/714#discussion_r259392925","bodyText":"Can you use relative link?","diffHunk":"@@ -14,6 +14,7 @@ mentors:\n   - corona10\n   - aptrishu\n name: \"Integrate ANTLR v4 into coala\"\n+report: \"http://projects.coala.io/GSoC/2018/StatusReport/virresh.html\"","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-02-22T15:38:41Z","lastEditedAt":null,"updatedAt":"2019-02-22T15:38:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTM5Mzc3MQ==","url":"https://github.com/coala/projects/pull/714#discussion_r259393771","bodyText":"Better make it a new page.","diffHunk":"@@ -210,6 +210,10 @@\n                     $location.url($location.path());\n                 }\n \n+                $scope.redirectToReport = function(){\n+                    $window.location.href = $scope.currentProject.report;","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNzU1NjEyMg==","createdAt":"2019-02-22T16:08:23Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-02-22T15:40:33Z","lastEditedAt":null,"updatedAt":"2019-02-22T15:40:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTQwNTU1Mw==","url":"https://github.com/coala/projects/pull/714#discussion_r259405553","bodyText":"I will try that and if possible I will update that change.","diffHunk":"@@ -14,6 +14,7 @@ mentors:\n   - corona10\n   - aptrishu\n name: \"Integrate ANTLR v4 into coala\"\n+report: \"http://projects.coala.io/GSoC/2018/StatusReport/virresh.html\"","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-22T16:08:09Z","lastEditedAt":null,"updatedAt":"2019-02-22T16:08:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYxNTI1OA==","url":"https://github.com/coala/projects/pull/714#discussion_r259615258","bodyText":"@li-boxuan I have changed the reports link. But couldn't make it a fine relative link because the href was also containing the other parameters like year.\nCould please tell me if the changes are correct or not ?","diffHunk":"@@ -14,6 +14,7 @@ mentors:\n   - corona10\n   - aptrishu\n name: \"Integrate ANTLR v4 into coala\"\n+report: \"http://projects.coala.io/GSoC/2018/StatusReport/virresh.html\"","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-24T11:16:24Z","lastEditedAt":null,"updatedAt":"2019-02-24T11:16:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2NDY1MzEzMQ==","url":"https://github.com/coala/projects/pull/714#issuecomment-464653131","bodyText":"@frextrite not all completed projects are having report section on the LHS. Only few of completed projects, around 22 completed projects are having that section.\nYou can find it below initiatives, having a title of GSoC for completed projects.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-18T09:24:51Z","lastEditedAt":"2019-02-18T09:27:54Z","updatedAt":"2019-02-18T09:27:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2NDY3NzU3OQ==","url":"https://github.com/coala/projects/pull/714#issuecomment-464677579","bodyText":"My bad. Can see them now. I was looking for the report link in the uncompleted projects.","diffHunk":null,"author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNzIxNzkwMw==","createdAt":"2019-02-18T10:33:20Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}},{"id":"MDg6UmVhY3Rpb24zNzIxNzkxMQ==","createdAt":"2019-02-18T10:33:26Z","content":"LAUGH","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-02-18T10:32:36Z","lastEditedAt":null,"updatedAt":"2019-02-18T10:32:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2NDY3ODMwMg==","url":"https://github.com/coala/projects/pull/714#issuecomment-464678302","bodyText":"Sidenote: You may want to check everything in the checklist","diffHunk":null,"author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNzIxODA3OA==","createdAt":"2019-02-18T10:36:06Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-02-18T10:34:45Z","lastEditedAt":null,"updatedAt":"2019-02-18T10:34:45Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566485588000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/715","number":715,"title":"index.html: Update footer design","body":"This commit updates the current footer design,\nsimilar to that of coala website.\nCLoses #184\nChecklist\n\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":8,"createdAt":"2019-02-19T04:46:51Z","updatedAt":"2019-08-22T14:53:08Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/715","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODAxOTcyOA==","url":"https://github.com/coala/projects/pull/715#discussion_r258019728","bodyText":"This should point to the organization page, i.e, github.com/coala","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" class=\"btn center\">\n+                    <i class=\"fa fa-commenting-o\" aria-hidden=\"true\">\n+                      Join Chat on Gitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://github.com/coala/projects/\" class=\"btn center\">","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNzI5MjQxMw==","createdAt":"2019-02-19T12:48:24Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-02-19T12:36:22Z","lastEditedAt":null,"updatedAt":"2019-02-19T12:36:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODAyMDE1Mw==","url":"https://github.com/coala/projects/pull/715#discussion_r258020153","bodyText":"Also, the footer left and right margin seems different from that of coala.io. It would be great if both are consistent.","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-02-19T12:37:49Z","lastEditedAt":null,"updatedAt":"2019-02-19T12:37:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODAyMjcwOQ==","url":"https://github.com/coala/projects/pull/715#discussion_r258022709","bodyText":"Ok, i will make that change as soon as I get my lappi in my hands. Not accessible to my laptop for next 5 days ☹️","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-19T12:46:04Z","lastEditedAt":"2019-02-19T12:46:37Z","updatedAt":"2019-02-19T12:46:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODAyMzczMQ==","url":"https://github.com/coala/projects/pull/715#discussion_r258023731","bodyText":"Yeah, this should point to org page because we are already providing a fork option to developer.","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" class=\"btn center\">\n+                    <i class=\"fa fa-commenting-o\" aria-hidden=\"true\">\n+                      Join Chat on Gitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://github.com/coala/projects/\" class=\"btn center\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-19T12:49:17Z","lastEditedAt":null,"updatedAt":"2019-02-19T12:49:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODQ5MzA1Mw==","url":"https://github.com/coala/projects/pull/715#discussion_r258493053","bodyText":"That won't be an issue at all.","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-02-20T14:00:23Z","lastEditedAt":null,"updatedAt":"2019-02-20T14:00:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODQ5ODg3NQ==","url":"https://github.com/coala/projects/pull/715#discussion_r258498875","bodyText":"I guess no, but will check it. By class names, I don’t think so it will adjust the margins","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-20T14:14:28Z","lastEditedAt":null,"updatedAt":"2019-02-20T14:14:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYxMzg5MQ==","url":"https://github.com/coala/projects/pull/715#discussion_r259613891","bodyText":"@frextrite The margin is set to auto by a bootstrap class container. It isn't being explicitly mentioned in any of the css files for either coala.io or project.coala.io.","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-24T10:36:29Z","lastEditedAt":null,"updatedAt":"2019-02-24T10:36:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYxNzE0Nw==","url":"https://github.com/coala/projects/pull/715#discussion_r259617147","bodyText":"In that case, there is nothing that we can do. Giving a go-ahead to the footer design.","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNzYxMDk0OA==","createdAt":"2019-02-24T12:12:06Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-02-24T12:03:25Z","lastEditedAt":null,"updatedAt":"2019-02-24T12:03:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYxNzQ5NA==","url":"https://github.com/coala/projects/pull/715#discussion_r259617494","bodyText":"If everything is ok, can you approve the changes ?","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-24T12:12:48Z","lastEditedAt":null,"updatedAt":"2019-02-24T12:12:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYyMzUzOA==","url":"https://github.com/coala/projects/pull/715#discussion_r259623538","bodyText":"Technically these projects are a part of GSoC and hence this might be the correct gitter channel for the discussion, but I was thinking if it would be better to redirect the user to coala's gitter homepage https://gitter.im/coala/ and from there a user could select gsoc channel for discussion. The benefit of this flow would be that the user would have a list of all the other(more active) channels as well. This debatable though, and so the decision is upto you :)","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" target=\"_blank\" class=\"btn center\">","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-02-24T14:35:11Z","lastEditedAt":null,"updatedAt":"2019-02-24T14:35:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYyMzY5Nw==","url":"https://github.com/coala/projects/pull/715#discussion_r259623697","bodyText":"Fork on GitHub would look cooler?","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-commenting-o\" aria-hidden=\"true\">\n+                      Join Chat on Gitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://github.com/coala/coala/\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-github\" aria-hidden=\"true\">\n+                      Follow us on GitHub","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-02-24T14:39:17Z","lastEditedAt":null,"updatedAt":"2019-02-24T14:39:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYyMzkwNw==","url":"https://github.com/coala/projects/pull/715#discussion_r259623907","bodyText":"Fork on Github is already there at the top of page to fork the projects repository\nEven in mobile view, fork button appears at the bottom of page","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-commenting-o\" aria-hidden=\"true\">\n+                      Join Chat on Gitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://github.com/coala/coala/\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-github\" aria-hidden=\"true\">\n+                      Follow us on GitHub","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-24T14:44:02Z","lastEditedAt":"2019-02-24T14:59:12Z","updatedAt":"2019-02-24T14:59:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTYyNDIzOA==","url":"https://github.com/coala/projects/pull/715#discussion_r259624238","bodyText":"IMO your idea would look great if this is implemented on main coala website but for projects website i think redirecting to gsoc channel is OK because developers interested in GSoC visit more on this website,","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" target=\"_blank\" class=\"btn center\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-24T14:49:09Z","lastEditedAt":null,"updatedAt":"2019-02-24T14:49:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTg1NDEwOQ==","url":"https://github.com/coala/projects/pull/715#discussion_r259854109","bodyText":"Follow us on GitHub doesn't make sense. Go with either Fork on GitHub or Star us on GitHub","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-commenting-o\" aria-hidden=\"true\">\n+                      Join Chat on Gitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://github.com/coala/coala/\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-github\" aria-hidden=\"true\">\n+                      Follow us on GitHub","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-02-25T14:42:11Z","lastEditedAt":null,"updatedAt":"2019-02-25T14:42:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTg1ODA4OQ==","url":"https://github.com/coala/projects/pull/715#discussion_r259858089","bodyText":"Star us on GitHub will look better 👍🏻","diffHunk":"@@ -55,12 +55,65 @@\n     </select>\n   </div>\n   </main>\n-  <footer class=\"page-footer footer-light transparent\">\n+  <footer class=\"page-footer\">\n     <div class=\"row center for-mobile\"> <a class=\"github-button\" href=\"{{ site.githuburl }}\" data-size=\"large\">Fork</a> </div>\n-    <div class=\"row\">\n-      <div class=\"col m6 offset-m3 center\"> <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\"> <span class=\"footer-title\">{{ site.organization }}</span> </div>\n+    <div class=\"container\">\n+        <div class=\"row\">\n+            <div class=\"col m3 s12\">\n+                <h5 class=\"white-text fine\">Site Links</h5>\n+                <ul>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/docs\">Documentation</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/newcomer\">Newcomer Docs</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://coala.io/coc\">Code of Conduct</a></li>\n+                    <li><a class=\"grey-text text-lighten-3\" href=\"http://blog.coala.io/\">Blog</a></li>\n+                </ul>\n+            </div>\n+            <div class=\"col m9 s12 center\">\n+              <div class=\"center\">\n+                <h3 class=\"fine white-text\">\n+                  <span>\n+                    <img class=\"footer-logo\" src=\"https://api.coala.io/en/latest/_static/images/coala_logo.svg\" alt=\"coala\">\n+                  </span>\n+                  <span>{{ site.organization }}</span>\n+                </h3>\n+              </div>\n+              <div class=\"center footer-icons\">\n+                <span class=\"icon\">\n+                  <a href=\"https://twitter.com/coala_io\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-twitter\" aria-hidden=\"true\">\n+                      Follow us on Twitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://gitter.im/coala/coala/gsoc\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-commenting-o\" aria-hidden=\"true\">\n+                      Join Chat on Gitter\n+                    </i>\n+                  </a>\n+                </span>\n+                <span class=\"icon\">\n+                  <a href=\"https://github.com/coala/coala/\" target=\"_blank\" class=\"btn center\">\n+                    <i class=\"fa fa-github\" aria-hidden=\"true\">\n+                      Follow us on GitHub","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-02-25T14:50:17Z","lastEditedAt":null,"updatedAt":"2019-02-25T14:50:17Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1566484847000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/719","number":719,"title":"_projects: Add \"Enhance Website Architecture\" project to projects list","body":"This commit adds new Project Proposal - \"Enhance\nwebsites architecture\" to current projects list.\nCloses #691","comments":13,"createdAt":"2019-03-06T09:28:23Z","updatedAt":"2019-08-22T14:40:47Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"assignee":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[{"name":"Project Proposal","color":"f9d0c4"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/719","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMwNzU4Mw==","url":"https://github.com/coala/projects/pull/719#discussion_r265307583","bodyText":"community project is a static project we are not storing any user data, it would not be feasible to implement this.\nalso why do we need to have these functionalities?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:00:32Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:00:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxMDUwNA==","url":"https://github.com/coala/projects/pull/719#discussion_r265310504","bodyText":"Why do we need to have the leaderboard on the homepage?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:09:02Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:09:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxMTQwNQ==","url":"https://github.com/coala/projects/pull/719#discussion_r265311405","bodyText":"Do not add this line until you're not sure if we need new models/fields.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:11:34Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:11:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxNDA0Mg==","url":"https://github.com/coala/projects/pull/719#discussion_r265314042","bodyText":"I am not sure if we need these functionalities in the website, these were only some temporary requirements iirc. @jayvdb","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**\n+\n+    c. Enhancement in **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+2. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. Add **[Filters](https://github.com/coala/projects/issues/559)** for searching projects\n+\n+3. Make Improvements in coala [community website](https://community.coala.io/)\n+\n+    a. **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+    b. **[UI](https://coala-community.netlify.com/)**\n+      * [Re-designing of the website](https://github.com/coala/community/issues/44) and making it responsive.\n+      * [Inactive Issue](https://coala-community.netlify.com/static/inactive-issues.json) and [unassigned issues activity](https://coala-community.netlify.com/static/unassigned-issues.json) web pages shows","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:19:06Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:19:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxNjI0Mg==","url":"https://github.com/coala/projects/pull/719#discussion_r265316242","bodyText":"If you want to implement a Django form then it couldn't be done in the community website, as its a static website and we are not storing any data anywhere permanently.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**\n+\n+    c. Enhancement in **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+2. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. Add **[Filters](https://github.com/coala/projects/issues/559)** for searching projects\n+\n+3. Make Improvements in coala [community website](https://community.coala.io/)\n+\n+    a. **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+    b. **[UI](https://coala-community.netlify.com/)**\n+      * [Re-designing of the website](https://github.com/coala/community/issues/44) and making it responsive.\n+      * [Inactive Issue](https://coala-community.netlify.com/static/inactive-issues.json) and [unassigned issues activity](https://coala-community.netlify.com/static/unassigned-issues.json) web pages shows\n+        just JSON response, it should be displayed in proper format with some\n+        extra important information.\n+      * [Meta-Review data](https://coala-community.netlify.com/meta-review/) web pages should be redesigned to make it look good.\n+\n+#### CODING PHASE 3\n+\n+1. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. [Improve](https://github.com/coala/projects/issues/394) the projects website for use by other GSoC orgs\n+\n+    b. Create [tab for all the google forms](https://github.com/coala/projects/issues/284)\n+\n+    c. Add [posts / calendar app](https://github.com/coala/projects/issues/560) to projects website\n+\n+    d. Create a tab for **GSoC Students**\n+\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create a feedback form","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:25:12Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:25:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxNjUyOA==","url":"https://github.com/coala/projects/pull/719#discussion_r265316528","bodyText":"How you plan to do this?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**\n+\n+    c. Enhancement in **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+2. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. Add **[Filters](https://github.com/coala/projects/issues/559)** for searching projects\n+\n+3. Make Improvements in coala [community website](https://community.coala.io/)\n+\n+    a. **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+    b. **[UI](https://coala-community.netlify.com/)**\n+      * [Re-designing of the website](https://github.com/coala/community/issues/44) and making it responsive.\n+      * [Inactive Issue](https://coala-community.netlify.com/static/inactive-issues.json) and [unassigned issues activity](https://coala-community.netlify.com/static/unassigned-issues.json) web pages shows\n+        just JSON response, it should be displayed in proper format with some\n+        extra important information.\n+      * [Meta-Review data](https://coala-community.netlify.com/meta-review/) web pages should be redesigned to make it look good.\n+\n+#### CODING PHASE 3\n+\n+1. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. [Improve](https://github.com/coala/projects/issues/394) the projects website for use by other GSoC orgs\n+\n+    b. Create [tab for all the google forms](https://github.com/coala/projects/issues/284)\n+\n+    c. Add [posts / calendar app](https://github.com/coala/projects/issues/560) to projects website\n+\n+    d. Create a tab for **GSoC Students**\n+\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create a feedback form\n+\n+    b. Create a databse model for feedback entries\n+\n+    c. Automating the process of assigning issues","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:25:57Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:25:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxNzQ3Nw==","url":"https://github.com/coala/projects/pull/719#discussion_r265317477","bodyText":"These are just minor fixes, not sure if they qualify to be included in a gsoc project. This could be a pre gsoc or community bonding task.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODc5NTc0Ng==","createdAt":"2019-03-14T12:24:07Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-03-13T20:28:29Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:28:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxNzc0MQ==","url":"https://github.com/coala/projects/pull/719#discussion_r265317741","bodyText":"Could you explain a bit more here, what type of data you want to manage and how?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:29:13Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:29:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMxODc5MA==","url":"https://github.com/coala/projects/pull/719#discussion_r265318790","bodyText":"Before adding new cron jobs we need to fix the old ones, landing website is down right now, figure out how to fix the same. We might need to have CD in the landing repo.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODc5NjgwNA==","createdAt":"2019-03-14T12:40:00Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-03-13T20:32:08Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:32:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMyMDg1OQ==","url":"https://github.com/coala/projects/pull/719#discussion_r265320859","bodyText":"I had a pr for this coala/community#81, why it didn't get merged and how do you plan to do this now?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:37:42Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:37:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMyMjY5Mg==","url":"https://github.com/coala/projects/pull/719#discussion_r265322692","bodyText":"I am not sure if this a task? How you're going to add mentors and where? And why do we need to have this in a gsoc project?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:42:40Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:42:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMyMzUwNA==","url":"https://github.com/coala/projects/pull/719#discussion_r265323504","bodyText":"What type of data fields do we need in the Users model?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:44:47Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:44:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTMyNDQwMw==","url":"https://github.com/coala/projects/pull/719#discussion_r265324403","bodyText":"What kind of dashboard it would be, how it would be useful and how you plan to implement it?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-13T20:47:13Z","lastEditedAt":null,"updatedAt":"2019-03-13T20:47:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTQ1MTQ3Mg==","url":"https://github.com/coala/projects/pull/719#discussion_r265451472","bodyText":"Without Authentication, GitHub API calls limit to only 60 per hour. The main objective to add login is to increase the limit to 5k per hour.\nSince we can add a single OAuth token (created by the organization) but that won't help because updating the records in the database for all users will surely increase the 5k limit. Also, there will be other jobs running in the background.\nSo, adding login will help to update the user records on a regular basis with a limit up to 5k per hour.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T07:55:29Z","lastEditedAt":null,"updatedAt":"2019-03-14T07:55:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTQ1MjQyNA==","url":"https://github.com/coala/projects/pull/719#discussion_r265452424","bodyText":"Can't we make it feasible by not removing db.sqlite3, that is removed whenever CI runs on a new change ?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T07:59:18Z","lastEditedAt":null,"updatedAt":"2019-03-14T07:59:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTQ1Mzg4Ng==","url":"https://github.com/coala/projects/pull/719#discussion_r265453886","bodyText":"Not complete leaderboard, just showing only top 10 (or any other number) with only usernames. And, that too can be filtered by week, month and year.\nAdding on the homepage will make the website more interactive and creative. Also, it will give users an idea that we have a gamification system implemented and they can see full gamification leaderboard either by navigating through the menu or by clicking on see more results under the leaderboard shown on the homepage.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T08:05:07Z","lastEditedAt":null,"updatedAt":"2019-03-14T08:05:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTQ1NjE2Mg==","url":"https://github.com/coala/projects/pull/719#discussion_r265456162","bodyText":"I have analyzed all the new models that are to be created with the data fields that each model will have while I was creating the application proposal. Now, a review of the models will be great!\nshould I remove this point or just remove (if any) from it ?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T08:13:18Z","lastEditedAt":null,"updatedAt":"2019-03-14T08:13:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTUzNzM0OA==","url":"https://github.com/coala/projects/pull/719#discussion_r265537348","bodyText":"Ohh, but I think it will be OK if we display them. What I was thinking to display only those issues that have importance medium or above it. It will allow open-source enthusiasts to get familiar with current important issues and a way can be provided to redirect to GitHub that will show all issues(Inactive or unassigned acc. to selection) of all levels.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**\n+\n+    c. Enhancement in **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+2. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. Add **[Filters](https://github.com/coala/projects/issues/559)** for searching projects\n+\n+3. Make Improvements in coala [community website](https://community.coala.io/)\n+\n+    a. **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+    b. **[UI](https://coala-community.netlify.com/)**\n+      * [Re-designing of the website](https://github.com/coala/community/issues/44) and making it responsive.\n+      * [Inactive Issue](https://coala-community.netlify.com/static/inactive-issues.json) and [unassigned issues activity](https://coala-community.netlify.com/static/unassigned-issues.json) web pages shows","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T12:08:02Z","lastEditedAt":null,"updatedAt":"2019-03-14T12:08:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU0MDAxMA==","url":"https://github.com/coala/projects/pull/719#discussion_r265540010","bodyText":"Won't it be good if we are able to store data on coala community website permanently? I guess this is achievable by removing the removal of db.sqlite cli instruction from the bash script.\nAlthough, the data for feedback form can even be stored in coala-webservices database.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**\n+\n+    c. Enhancement in **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+2. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. Add **[Filters](https://github.com/coala/projects/issues/559)** for searching projects\n+\n+3. Make Improvements in coala [community website](https://community.coala.io/)\n+\n+    a. **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+    b. **[UI](https://coala-community.netlify.com/)**\n+      * [Re-designing of the website](https://github.com/coala/community/issues/44) and making it responsive.\n+      * [Inactive Issue](https://coala-community.netlify.com/static/inactive-issues.json) and [unassigned issues activity](https://coala-community.netlify.com/static/unassigned-issues.json) web pages shows\n+        just JSON response, it should be displayed in proper format with some\n+        extra important information.\n+      * [Meta-Review data](https://coala-community.netlify.com/meta-review/) web pages should be redesigned to make it look good.\n+\n+#### CODING PHASE 3\n+\n+1. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. [Improve](https://github.com/coala/projects/issues/394) the projects website for use by other GSoC orgs\n+\n+    b. Create [tab for all the google forms](https://github.com/coala/projects/issues/284)\n+\n+    c. Add [posts / calendar app](https://github.com/coala/projects/issues/560) to projects website\n+\n+    d. Create a tab for **GSoC Students**\n+\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create a feedback form","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T12:16:20Z","lastEditedAt":null,"updatedAt":"2019-03-14T12:16:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU0MjQ0OA==","url":"https://github.com/coala/projects/pull/719#discussion_r265542448","bodyText":"I was planning to achieve this by creating a function that will perform validation checks to avoid spam. And automating this process of assigning requires the use of OAuth token(with issue edit rights) created by the organization.\nSince the token is already added added by org in the environment. The contributor can get assigned via a form type UI.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**\n+\n+    c. Enhancement in **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+2. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. Add **[Filters](https://github.com/coala/projects/issues/559)** for searching projects\n+\n+3. Make Improvements in coala [community website](https://community.coala.io/)\n+\n+    a. **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+    b. **[UI](https://coala-community.netlify.com/)**\n+      * [Re-designing of the website](https://github.com/coala/community/issues/44) and making it responsive.\n+      * [Inactive Issue](https://coala-community.netlify.com/static/inactive-issues.json) and [unassigned issues activity](https://coala-community.netlify.com/static/unassigned-issues.json) web pages shows\n+        just JSON response, it should be displayed in proper format with some\n+        extra important information.\n+      * [Meta-Review data](https://coala-community.netlify.com/meta-review/) web pages should be redesigned to make it look good.\n+\n+#### CODING PHASE 3\n+\n+1. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. [Improve](https://github.com/coala/projects/issues/394) the projects website for use by other GSoC orgs\n+\n+    b. Create [tab for all the google forms](https://github.com/coala/projects/issues/284)\n+\n+    c. Add [posts / calendar app](https://github.com/coala/projects/issues/560) to projects website\n+\n+    d. Create a tab for **GSoC Students**\n+\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create a feedback form\n+\n+    b. Create a databse model for feedback entries\n+\n+    c. Automating the process of assigning issues","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T12:23:47Z","lastEditedAt":"2019-03-15T19:09:37Z","updatedAt":"2019-03-15T19:09:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU0ODA0MQ==","url":"https://github.com/coala/projects/pull/719#discussion_r265548041","bodyText":"A contributor gets assigned on issues, creates a PR for it and do reviews. Doing all this will eventually increase contribution time to the community with gain new skills as well as age (Earlier was eligible for GCI but now be eligible for GSoC)😄\nI want to manage the profile data with the issues (and PRs) the contributor has worked on. The labels of issues that will be displayed as a new column in gamification leaderboard. Also, the contributed time to the community. Also, looked over to fetch data that will be used to show statistics of a contributor in the form a bar/hike graph(2D or 3D). All this need to managed so that the website can help everyone.\nSince managing all this data will require a number of API calls. So, I was thinking to call an update function in the background whenever contributor login and the data of that contributor gets updated with time.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T12:39:10Z","lastEditedAt":null,"updatedAt":"2019-03-14T12:39:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU1MTIyNg==","url":"https://github.com/coala/projects/pull/719#discussion_r265551226","bodyText":"Sorry, I haven't seen that PR 😢\nbut What I was planning to achieve is simply creating a cron Job for updating the cluster map that is being created on the basis of the location of our community members (if added in their profile). It will also require an OAuth token(IMO) because of querying thousands of users.\nThen Once there is a cluster map on the coala-webservices we can show that on our community website.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T12:48:04Z","lastEditedAt":null,"updatedAt":"2019-03-14T12:48:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU1MzcxMw==","url":"https://github.com/coala/projects/pull/719#discussion_r265553713","bodyText":"I planned to create an API Endpoint at coala-webservices that will have a database model to store all the mentors with a data field year. And the data then can be displayed on both the websites (projects as well as community) because it is important for a GSoC participant to know who all will be mentoring this year and about the Admins too of this year.\nThe contributors can participate as a mentor in GSoC by just one tap Want to mentor this year in GSoC? from there profile which will call a function/method on coala-webservices that will perform validation checks whether the contributor is eligible for mentor position or not. If all checks got validated then the contributor will be added as a mentor.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T12:54:48Z","lastEditedAt":null,"updatedAt":"2019-03-14T12:54:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU1NTI3Nw==","url":"https://github.com/coala/projects/pull/719#discussion_r265555277","bodyText":"Currently, the user model support only 7 data fields.\nThe fields that I thought of to add are-\n\nUpdated_at\nStatistics\nIssue labels\nTotal time(Total time, Contributed time or anything else that means to users)\nIS_GCI_PARTICIPANT( Decide parameters or methods to get to know about information)\nPRs Merged\nPRs Opened\nNumber of Issues working on","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T12:58:55Z","lastEditedAt":null,"updatedAt":"2019-03-14T12:58:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTU1OTc4Mw==","url":"https://github.com/coala/projects/pull/719#discussion_r265559783","bodyText":"It won't actually be a dashboard but with more options in the Profile page for coala-maintainers team members that newcomers or developers won't have normally.\nThey can\n\nrun any cron Job anytime,\nparticipate as Admin in GSoC,\nadd new google forms\nadd/update calendar events etc.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T13:10:50Z","lastEditedAt":"2019-03-22T16:14:06Z","updatedAt":"2019-03-22T16:14:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc1ODAxNw==","url":"https://github.com/coala/projects/pull/719#discussion_r265758017","bodyText":"No, community website will not be having any database, we just consume apis, do some analysis on that if needed and show it. Anything you want to implement which required data storage, implement it in the landing project, build apis and use it here.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-14T20:42:30Z","lastEditedAt":null,"updatedAt":"2019-03-14T20:42:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc1ODI3Mw==","url":"https://github.com/coala/projects/pull/719#discussion_r265758273","bodyText":"I forgot to tell earlier that for user login, I will be using django-allauth instead of Django login system. Then, in that case, I guess it will be feasible.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T20:43:08Z","lastEditedAt":null,"updatedAt":"2019-03-14T20:43:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc1OTYwOQ==","url":"https://github.com/coala/projects/pull/719#discussion_r265759609","bodyText":"Without Authentication, ...\n\nWhy do you want to increase the limit anyway?\nWe are not hitting github apis directly to get the contributor data. We are using our apis end points, which are in the landing project.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-14T20:46:48Z","lastEditedAt":null,"updatedAt":"2019-03-14T20:46:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc2Mjk5MQ==","url":"https://github.com/coala/projects/pull/719#discussion_r265762991","bodyText":"Yes I agree that currently we're not hitting the limit, but the new data fields that I'm looking forward to add will definitely cross the limit if the contributor has done a large number of contributions in the organization.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T20:57:06Z","lastEditedAt":null,"updatedAt":"2019-03-14T20:57:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc2MzE5OA==","url":"https://github.com/coala/projects/pull/719#discussion_r265763198","bodyText":"Sounds cool. But adding only gamification leaderboard on the home page makes it look like that is only the important thing in this website. There are other links also on the home page right now, E.g. Meta-review data, contributors-data, google-code-in etc.. imo have a clickable card for each link on the home page..and then by clicking on the leader-board user will be redirected to the leaderboard dashboard which is designed in a cool way and have all the functionalities that you're saying..similar cases for other cards...what do you think?","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-03-14T20:57:47Z","lastEditedAt":null,"updatedAt":"2019-03-14T20:57:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc2NTQwMA==","url":"https://github.com/coala/projects/pull/719#discussion_r265765400","bodyText":"..achievable by removing the removal of db.sqlite cli instruction from the bash script.\n\nNo this is a static website, it does not matter if you have db.sqlite file or not the whole data will be updated with the new api data when the app is deployed. And iirc all the apps in the community website are built following the same principle.","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**\n+\n+    c. Enhancement in **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+2. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. Add **[Filters](https://github.com/coala/projects/issues/559)** for searching projects\n+\n+3. Make Improvements in coala [community website](https://community.coala.io/)\n+\n+    a. **[Gamification Leaderboard](https://coala-community.netlify.com/gamification/)**\n+\n+    b. **[UI](https://coala-community.netlify.com/)**\n+      * [Re-designing of the website](https://github.com/coala/community/issues/44) and making it responsive.\n+      * [Inactive Issue](https://coala-community.netlify.com/static/inactive-issues.json) and [unassigned issues activity](https://coala-community.netlify.com/static/unassigned-issues.json) web pages shows\n+        just JSON response, it should be displayed in proper format with some\n+        extra important information.\n+      * [Meta-Review data](https://coala-community.netlify.com/meta-review/) web pages should be redesigned to make it look good.\n+\n+#### CODING PHASE 3\n+\n+1. Implementation of listed enhancements in [projects website](https://projects.coala.io)\n+\n+    a. [Improve](https://github.com/coala/projects/issues/394) the projects website for use by other GSoC orgs\n+\n+    b. Create [tab for all the google forms](https://github.com/coala/projects/issues/284)\n+\n+    c. Add [posts / calendar app](https://github.com/coala/projects/issues/560) to projects website\n+\n+    d. Create a tab for **GSoC Students**\n+\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create a feedback form","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODgzNzkzNg==","createdAt":"2019-03-14T21:10:41Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-03-14T21:04:20Z","lastEditedAt":null,"updatedAt":"2019-03-14T21:04:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTc2NTgxNQ==","url":"https://github.com/coala/projects/pull/719#discussion_r265765815","bodyText":"Yep, I like your idea. We can have clickable cards for each link on the homepage which will display some important information and then upon clicking it the user will be redirected to the original web page. I will think upon it, on how can we make homepage better with this idea i.e. what all can be displayed for other links in that card and will it need some additions or not!","diffHunk":"@@ -0,0 +1,160 @@\n+---\n+collaborating_projects:\n+  - coala\n+desc: \"Enhance and Improve the architecture of coala Community and Projects\n+website with new API Endpoints in webservices.\"\n+difficulty: hard\n+initiatives:\n+  - GSoC\n+issues:\n+  - \"https://github.com/coala/projects/issues/691\"\n+markdown: enhance-and-improve-coala-community-and-projects-website.md\n+mentors:\n+  - damngamerz\n+  - sks444\n+name: \"Enhance websites architecture\"\n+requirements:\n+  - \"At least one patch accepted to coala community, projects and webservices\n+  repository.\"\n+  - \"The applicant should be familiar with AngularJS, Django and Python.\"\n+tags:\n+  - community\n+  - projects\n+  - webservices\n+  - AngularJS\n+  - Django\n+  - Python\n+---\n+### Overview\n+The motivation here, is to enhance and improve the websites ([community](https://community.coala.io) and\n+[projects](https://projects.coala.io)) for the coala community, for newcomers\n+who wish to start contributing to coala open-source organization and for other\n+organizations. The hurdle that newcomers mainly come across is the invitation\n+to the organization before making any contributions, so this project adds a\n+form for newcomers who wish to join the coala community. Also, to give a\n+motivation to existing contributors, coala has created a `Promotion form` which\n+will promote them to `coala Developer` status. To reduce the workload for\n+maintainers, this project includes the development of form with some\n+rudimentary checks that will promote the coala-newcomer to coala-developer.\n+Moreover, this project adds major enhancements to websites that will help\n+newcomers as well as developers to know more about this community and about\n+what they have contributed to it.\n+\n+### Goals\n+\n+* Add calendar app to show timeline for various events\n+* Add a one-stop tab for all google forms\n+* Add contributors geolocation\n+* Add *Login/SignUp* using GitHub\n+* Add organization teams\n+* Advanced filters\n+* Automate welcoming process for newcomer\n+* Automate newcomer promotion\n+* Create new database models to manage data\n+* Ease navigatibility in websites\n+* Improve the **UI/UX of websites** to make more interactive\n+* Motivating newcomers & developers with -\n+  * modifications in Gamification Leaderboard\n+  * adding a tab of **GSoC** in projects website\n+* New coala-community logo\n+* Contributors profile page\n+* Admin/Maintainers dashboard\n+\n+### Milestones\n+\n+#### PREPARATION/BONDING\n+\n+* Detailed research on what **new cron jobs** or **API endpoints** need to be\n+  added in [coala webservices](https://gitlab.com/coala/landing/).\n+* Discussion on improvements to be made in coala [community website](http://community.coala.io/) and\n+  [projects website](http://projects.coala.io/)\n+* Research on new models to be created (if any) and adding new fields to\n+  existing db models in coala community website **db models**.\n+* *Created* and *Merged* a cEP of how the new enhancements will be implemented\n+  and how will it be beneficial to [coala community](https://github.com/orgs/coala/teams/coala-newcomers).\n+\n+#### CODING PHASE 1\n+\n+1. Implementation of methods in **coala [webservices](https://gitlab.com/coala/landing)**\n+2. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create new **[Community Logo](https://github.com/coala/community/issues/55) + Header Image of README.md**\n+\n+    b. Add information about new endpoints at coala-webserivces homepage.\n+\n+    c. Add [contributor's Geolocation](https://github.com/coala/community/issues/18)\n+\n+    d. Add [Organisation Teams](https://github.com/coala/community/issues/12)\n+\n+    e. Add [Mentors](https://github.com/coala/community/issues/11)\n+\n+    f. Add **Newcomer Invitation** [form](https://github.com/coala/community/issues/89#issuecomment-468955279)\n+\n+    g. Add **Promotion to Developer** [form](https://github.com/coala/community/issues/89)\n+\n+    h. Manage live data of community members\n+\n+    i. Addition of more data fields in **Users** db model\n+\n+    j. Add **Login and Sign-up** using GitHub\n+3. Make Improvements (or fix bugs) in coala [community website](https://community.coala.io/)\n+\n+    a. Build failure for more than one remote [#235](https://github.com/coala/community/issues/235)\n+\n+    b. Netlify build failure for fork [#232](https://github.com/coala/community/issues/232)\n+\n+#### CODING PHASE 2\n+\n+1. Implementation of listed enhancements in coala [community website](http://community.coala.io/)\n+\n+    a. Create **Profile Page**\n+\n+    b. Leaderboard on **[Homepage](https://coala-community.netlify.com/)**","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-14T21:05:31Z","lastEditedAt":null,"updatedAt":"2019-03-14T21:05:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NDU0OTYxMQ==","url":"https://github.com/coala/projects/pull/719#issuecomment-474549611","bodyText":"have continuous deployment of the data?\n\nshouldn't release pipeline continuously updates the data whenever a PR is merged to master ?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-19T19:44:40Z","lastEditedAt":null,"updatedAt":"2019-03-19T19:44:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzY4NTA5MQ==","url":"https://github.com/coala/projects/pull/719#issuecomment-477685091","bodyText":"Does GSoD mean \"Global Summary of the Day\" or something else? I actually don't know the full form of this 😄","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-28T17:02:56Z","lastEditedAt":null,"updatedAt":"2019-03-28T17:02:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzY4NjAwMw==","url":"https://github.com/coala/projects/pull/719#issuecomment-477686003","bodyText":"Does GSoD mean \"Global Summary of the Day\" or something else? I actually don't know the full form of this 😄\n\nGoogle Season of Docs.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTcyNDUxMQ==","createdAt":"2019-03-28T17:06:03Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-03-28T17:05:13Z","lastEditedAt":null,"updatedAt":"2019-03-28T17:05:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3Nzc2MzA2NQ==","url":"https://github.com/coala/projects/pull/719#issuecomment-477763065","bodyText":"@abhishalya @bkhanale For now I guess adding faqs related GSoD will be ok? As I have gone through their timeline and noticed that we can create display mentors as well as technical writers on websites which will look good and informative. For this new database, models have to be implemented with some appropriate checks for which I'm not having much information.\nI will think about this more and will update side by side 👍","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTg0NjY3Ng==","createdAt":"2019-03-30T14:50:06Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-03-28T20:42:06Z","lastEditedAt":null,"updatedAt":"2019-03-28T20:42:06Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1564468673000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/657","number":657,"title":"labhub.py: Add private response","body":"Added user mentions in labhub commands\nAdded a user mention in lmgtfy plugin\nas well\nCloses #349\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":1,"createdAt":"2019-04-14T09:50:35Z","updatedAt":"2019-07-30T06:37:53Z","closedAt":null,"state":"open","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/657","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ4Mjk3NTM5NQ==","url":"https://github.com/coala/corobo/pull/657#issuecomment-482975395","bodyText":"@Vamshi99 @abhishalya Can you guys kindly give this a look.Thanks","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-14T13:23:49Z","lastEditedAt":null,"updatedAt":"2019-04-14T13:23:49Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1564466566000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/658","number":658,"title":"labhub.py: Add duplicate issue title check","body":"Added a duplicate issue check to warn\nthe user of a duplicate issue title.\nCloses #291\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":6,"createdAt":"2019-04-16T15:12:54Z","updatedAt":"2019-07-30T06:02:46Z","closedAt":null,"state":"open","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/658","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTIwMDMyOA==","url":"https://github.com/coala/corobo/pull/658#discussion_r279200328","bodyText":"There will be thousands of issues in each repository, get the right ones and then check the body, title in those issues.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-04-28T15:48:57Z","lastEditedAt":null,"updatedAt":"2019-04-28T15:48:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTIwMzQ4OA==","url":"https://github.com/coala/corobo/pull/658#discussion_r279203488","bodyText":"@Vamshi99 Im not quite sure I understand what your saying, how do I get the \"right ones\", I would have to scan all the issues in order to compare the titles, else how would I determine the duplicate one .","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-28T17:12:46Z","lastEditedAt":null,"updatedAt":"2019-04-28T17:12:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTIwOTgzOQ==","url":"https://github.com/coala/corobo/pull/658#discussion_r279209839","bodyText":"@sladyn98 You should have a look at the comments on the previous PR #332 to get the correct approach of doing this.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-04-28T19:59:07Z","lastEditedAt":null,"updatedAt":"2019-04-28T19:59:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTI0MzE5Nw==","url":"https://github.com/coala/corobo/pull/658#discussion_r279243197","bodyText":"@abhishalya Yeah I did have a look at #332 . For every assign_cmd the corresponding repo would be selected and iterated through to determine a duplicate issue list.\nAnother approach I see would be to maintain a cache of issues and their titles, but IMO that would be a unnecessary overhead because of the constant updation.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-29T06:03:43Z","lastEditedAt":null,"updatedAt":"2019-04-29T06:03:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTYxMjUyNw==","url":"https://github.com/coala/corobo/pull/658#discussion_r279612527","bodyText":"@sladyn98 Use a search query, it will give the issues which matches the text you gave, then search in those issues. See GitHub search and IGitt API if you don't know how.","diffHunk":"@@ -213,6 +213,12 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            issue_list = list(repo.search_issues())","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-04-30T04:46:13Z","lastEditedAt":null,"updatedAt":"2019-04-30T04:46:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3NjkxMA==","url":"https://github.com/coala/corobo/pull/658#discussion_r280976910","bodyText":"How does this query help?  You need to search for open issues of coala repositories.","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-05-04T10:24:22Z","lastEditedAt":null,"updatedAt":"2019-05-04T10:24:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3Njk2Mg==","url":"https://github.com/coala/corobo/pull/658#discussion_r280976962","bodyText":"Also, I couldn't find any implementation for GitLab. Search for appropriate method in IGitt API before you do anything.","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4","name":"Vamshi Krishna"},"createdAt":"2019-05-04T10:26:31Z","lastEditedAt":null,"updatedAt":"2019-05-04T10:26:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3OTEzNQ==","url":"https://github.com/coala/corobo/pull/658#discussion_r280979135","bodyText":"@Vamshi99 Yeah still working on it.Just wanted you to review the approach.Thanks\nEdit 1: GitLab doesn’t allow searching through raw queries, we might have to follow conventional approach here.","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-05-04T11:50:17Z","lastEditedAt":"2019-05-04T12:48:56Z","updatedAt":"2019-05-04T12:48:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDk3OTM5NQ==","url":"https://github.com/coala/corobo/pull/658#discussion_r280979395","bodyText":"How does this query help? You need to search for open issues of coala repositories.\n\n@Vamshi99 I modified the query this would help us get all the issues that have been opened that contain the current issue title open or close.Because it could be that the issue we are creating has already been solved, hence I did not include a restriction there.Thoughts?","diffHunk":"@@ -213,6 +213,14 @@ def create_issue_cmd(self, msg, match):\n \n         if repo_name in self.REPOS:\n             repo = self.REPOS[repo_name]\n+            query = iss_title + \" is:issue\"","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-05-04T12:00:12Z","lastEditedAt":"2019-05-04T12:45:55Z","updatedAt":"2019-05-04T12:45:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4NzI3MTU5Mw==","url":"https://github.com/coala/corobo/pull/658#issuecomment-487271593","bodyText":"@sladyn98 Tests?","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-04-27T09:42:23Z","lastEditedAt":null,"updatedAt":"2019-04-27T09:42:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ4NzI5NDc2Mw==","url":"https://github.com/coala/corobo/pull/658#issuecomment-487294763","bodyText":"@abhishalya @Vamshi99 I added some tests I am not very sure if they are correct, could you give me a review","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-04-27T15:22:50Z","lastEditedAt":null,"updatedAt":"2019-04-27T15:22:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNjI3NDYxOA==","url":"https://github.com/coala/corobo/pull/658#issuecomment-516274618","bodyText":"Possible to make an exact title search to avoid too many results?\n\nActually the title search is being done at iss_title  this and the other constraints do allow us to minimize search results","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-07-30T05:57:44Z","lastEditedAt":null,"updatedAt":"2019-07-30T05:57:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNjI3NTEzNg==","url":"https://github.com/coala/corobo/pull/658#issuecomment-516275136","bodyText":"Not necessary to split the string further ;)\n\nWhere exactly ?","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-07-30T05:59:57Z","lastEditedAt":null,"updatedAt":"2019-07-30T05:59:57Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564940478000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/295","number":295,"title":"Sync Moban","body":"","comments":0,"createdAt":"2019-08-04T17:41:18Z","updatedAt":"2019-08-04T17:41:18Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/295","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565107647000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/293","number":293,"title":" community/: Add web-page displaying mentors","body":"The web-page displays all the mentors\nof the upcoming summer/winter program\nor of previous year, if no mentors are\nbeing found for upcoming program\nCloses #271","comments":5,"createdAt":"2019-08-02T16:27:15Z","updatedAt":"2019-08-06T16:07:27Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/293","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565109293000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/294","number":294,"title":"Updated readme","body":"","comments":2,"createdAt":"2019-08-04T12:21:29Z","updatedAt":"2019-08-06T16:34:53Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/294","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565619677000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/286","number":286,"title":" openhub/: Use openhub_django pypi package","body":"Overriding the default openhub_django URLs\nso as to define new ones and pass the\nheader and footer context of webpages and\nmake openhub_django templates look similar\nto that of commuity website.\nCloses #285","comments":22,"createdAt":"2019-08-01T12:09:08Z","updatedAt":"2019-08-12T14:21:17Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/286","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxODU1NjA2Ng==","url":"https://github.com/coala/community/pull/286#issuecomment-518556066","bodyText":"Rebase this on top of #261 and Why the CIs are failing?","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-06T07:59:33Z","lastEditedAt":"2019-08-06T08:00:05Z","updatedAt":"2019-08-06T08:00:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODYzMjM4OA==","url":"https://github.com/coala/community/pull/286#issuecomment-518632388","bodyText":"Yeah! I will fix that soon.\nI haven't yet rebased on this one on to the previous green merge request. Will get that green soon","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-06T11:38:04Z","lastEditedAt":null,"updatedAt":"2019-08-06T11:38:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTAyNTM5Mg==","url":"https://github.com/coala/community/pull/286#issuecomment-519025392","bodyText":"Add a card for this type of page https://deploy-preview-286--coala-community.netlify.com/openhub/outside_committer/4/","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-07T09:46:45Z","lastEditedAt":"2019-08-07T09:47:16Z","updatedAt":"2019-08-07T09:47:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTAzNTQ0NA==","url":"https://github.com/coala/community/pull/286#issuecomment-519035444","bodyText":"Will make that change in the openhub_django repository!\n\nAdd a card for this type of page https://deploy-preview-286--coala-community.netlify.com/openhub/outside_committer/4/","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-07T10:16:22Z","lastEditedAt":null,"updatedAt":"2019-08-07T10:16:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTA0MjU3NA==","url":"https://github.com/coala/community/pull/286#issuecomment-519042574","bodyText":"Is this OK? (PR: sks444/openhub-django#6)\n\nI could have shown user-image, but we're not getting the username and also, we are fetching it from openhub, so if we want to display image will it be OK to use github image?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-07T10:40:21Z","lastEditedAt":"2019-08-07T12:45:45Z","updatedAt":"2019-08-07T12:45:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTM2ODgzMA==","url":"https://github.com/coala/community/pull/286#issuecomment-519368830","bodyText":"I feel like title Committer shreyans.. Details should on the card? Maybe? Not sure.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-08T05:23:07Z","lastEditedAt":null,"updatedAt":"2019-08-08T05:23:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTM3MDMxNw==","url":"https://github.com/coala/community/pull/286#issuecomment-519370317","bodyText":"I feel like title Committer shreyans.. Details should on the card? Maybe? Not sure.\n\nI will add the heading title inside the card and will share that too soon.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-08T05:29:52Z","lastEditedAt":null,"updatedAt":"2019-08-08T05:29:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTM3MDg0MQ==","url":"https://github.com/coala/community/pull/286#issuecomment-519370841","bodyText":"Also for all the other pages 1, try putting the title on the card/table and then the search option below it, and then the list of items, and all should be centre-align.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODMzODEzNg==","createdAt":"2019-08-08T05:33:38Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-08T05:32:06Z","lastEditedAt":null,"updatedAt":"2019-08-08T05:32:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTM4ODE3NQ==","url":"https://github.com/coala/community/pull/286#issuecomment-519388175","bodyText":"I feel like title Committer shreyans.. Details should on the card? Maybe? Not sure.\n\n\n\ntry putting the title on the card/table and then the search option below it, and then the list of items\n\n\n\nall should be centre-align.\n\nCenter aligning list items! The current version of list items isn't much better than the new ones? Just a thought","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-08T06:40:05Z","lastEditedAt":null,"updatedAt":"2019-08-08T06:40:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTQwMzc0OA==","url":"https://github.com/coala/community/pull/286#issuecomment-519403748","bodyText":"I think the later one looks good, let's take a third person opinion(cc @li-boxuan) and go with that.\nAlso the background color should be the old one right?","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODM0NDczNw==","createdAt":"2019-08-08T07:35:28Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-08T07:32:34Z","lastEditedAt":null,"updatedAt":"2019-08-08T07:32:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTQwNDU2NA==","url":"https://github.com/coala/community/pull/286#issuecomment-519404564","bodyText":"Also the background color should be the old one right?\n\nYes! These screenshots are the changes from openhub-django repo","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-08T07:35:08Z","lastEditedAt":null,"updatedAt":"2019-08-08T07:35:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDQxODg0OA==","url":"https://github.com/coala/community/pull/286#issuecomment-520418848","bodyText":"I think it would look a bit weird if we center align everything","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-08-12T13:12:01Z","lastEditedAt":null,"updatedAt":"2019-08-12T13:12:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDQyMzQ2Ng==","url":"https://github.com/coala/community/pull/286#issuecomment-520423466","bodyText":"I think it would look a bit weird if we center align everything\n\nSo, which one will look good? v1 or v2","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-12T13:25:20Z","lastEditedAt":null,"updatedAt":"2019-08-12T13:25:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDQyMzkyMA==","url":"https://github.com/coala/community/pull/286#issuecomment-520423920","bodyText":"I personally prefer v2, coz a yellow background is not very common","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODU2NjY0Ng==","createdAt":"2019-08-12T13:28:39Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-12T13:26:32Z","lastEditedAt":null,"updatedAt":"2019-08-12T13:26:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDQyNDY3Nw==","url":"https://github.com/coala/community/pull/286#issuecomment-520424677","bodyText":"coz a yellow background is not very common\n\nIt will have a light-green bg like we have in v1, the screenshot is taken w/o any bg-color","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-12T13:28:35Z","lastEditedAt":null,"updatedAt":"2019-08-12T13:28:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUyMDQ0NTIzNA==","url":"https://github.com/coala/community/pull/286#issuecomment-520445234","bodyText":"It will have a light-green bg like we have in v1, the screenshot is taken w/o any bg-color\n\nThen I think v1 is better. v2 is more common on a narrow screen or mobile phone.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODU3MjIyOQ==","createdAt":"2019-08-12T14:29:02Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-12T14:21:17Z","lastEditedAt":null,"updatedAt":"2019-08-12T14:21:17Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565105466000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/290","number":290,"title":" community/: Display org teams","body":"The webpage will be displaying all the\norganization teams, to the authenticated\nusers only. If tried to access w/o auth,\nthe user will be redirected to homepage\nwith an error message.\nCloses #287","comments":6,"createdAt":"2019-08-02T16:24:26Z","updatedAt":"2019-08-06T15:31:06Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/290","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565106203000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/291","number":291,"title":" community/: Add a webpage for Listing Issues","body":"This commit adds a general view for listing\nall the issue objects for any model which\nstores issue related details. The details\nwhich are compulsory needed are Hoster,\nRepository name, Issue title, Number and\nthe URl of it. using this, the commit adds\na webpage for displaying all the inactive\nissues.\nCloses #288","comments":4,"createdAt":"2019-08-02T16:25:30Z","updatedAt":"2019-08-06T15:43:23Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/291","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565106981000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/292","number":292,"title":" Display more info. about unassigned issues","body":"This commit uses the issues.html general template\nto display the activity of unassigned issues. It\ndisplays some useful information about issues\nwhich were not being provided earlier\nCloses #289","comments":4,"createdAt":"2019-08-02T16:26:29Z","updatedAt":"2019-08-06T15:56:21Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/292","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565024066000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/269","number":269,"title":" community/: Display contributor statistics","body":"Show the contributor statistics in the form of\ncharts. The charts will be shown for issues,\ncommits, reviews and for merge requests. And,\nan overall chart, which will display stats\nrepository wise. Apart from all these charts,\nthe type of issues the contrib has worked on\nwill be shown, with the count of issues the\nuser is working on and the last updated datetime\nthe user data was updated. All this will be shown,\nonly if there is some statistics, otherwise the\npopup option will not be shown.\n\nCloses #268","comments":1,"createdAt":"2019-07-30T17:20:32Z","updatedAt":"2019-08-05T16:54:26Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/269","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565027698000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/276","number":276,"title":"community/: Add a form for uploading google forms","body":"Not everyone, will be able to fill forms.\nOnly the logged in users will be able to\nfill them and some of the forms, can only\nbe filled by developers or contributors\nwho are a part of more than one team.\nAt every step, the check is performed whether\nthe user is authenticated or not, to avoid\nfalse form submissions.\nCloses #265","comments":1,"createdAt":"2019-07-31T13:43:48Z","updatedAt":"2019-08-05T17:54:58Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/276","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565030617000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/277","number":277,"title":" community/: Add a form for adding calendar events","body":"Not everyone, will be able to fill forms.\nOnly the logged in users will be able to\nfill them and some of the forms, can only\nbe filled by developers or contributors\nwho are a part of more than one team.\nAt every step, the check is performed whether\nthe user is authenticated or not, to avoid\nfalse form submissions.\nCloses #270","comments":1,"createdAt":"2019-07-31T14:02:40Z","updatedAt":"2019-08-05T18:43:37Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/277","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565068546000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/278","number":278,"title":"communit/: Add a form for applying as a mentor","body":"Closes #272","comments":2,"createdAt":"2019-07-31T14:49:38Z","updatedAt":"2019-08-06T05:15:46Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/278","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565082607000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/279","number":279,"title":" community/: Add a form for adding a gsoc student","body":"Closes #273","comments":2,"createdAt":"2019-07-31T15:22:51Z","updatedAt":"2019-08-06T09:10:07Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/279","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565858958000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/282","number":282,"title":"community/: Add a request form to assign issue","body":"Closes #280","comments":1,"createdAt":"2019-08-01T06:38:44Z","updatedAt":"2019-08-15T08:49:18Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/282","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565090994000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/283","number":283,"title":"community/: Add a newcomer promotion request form","body":"Closes #281","comments":0,"createdAt":"2019-08-01T08:19:11Z","updatedAt":"2019-08-06T11:29:54Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/283","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565095124000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/284","number":284,"title":" community/: Add a feedback form","body":"Closes #274","comments":2,"createdAt":"2019-08-01T10:37:50Z","updatedAt":"2019-08-06T12:38:44Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/284","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564940788000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/242","number":242,"title":"Fix the failing Continuous Integration build on master as well as fork","body":"Running command \".ci/build.sh\" locally on pc used\nto failed the build, if there is more than one\ngit remote's.\nFixes #235","comments":6,"createdAt":"2019-05-08T07:58:40Z","updatedAt":"2019-08-04T17:46:28Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/242","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ5NDIzMzI1OA==","url":"https://github.com/coala/community/pull/242#issuecomment-494233258","bodyText":"@jayvdb Need review!\n\nBonding period milestone (https://gitlab.com/coala/GSoC/gsoc-2019/issues/12)","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-05-21T04:17:54Z","lastEditedAt":null,"updatedAt":"2019-05-21T04:17:54Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1564902083000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/249","number":249,"title":"README.md: Update header image","body":"The new header image is designed on the thought\nthat this project is a re-usable project which\ncan be forked by any other organisation. Therefore,\nthe header should be a project specific logo which\nsymbolises three components - creating, growing and\nsupporting community.\nCloses #55","comments":2,"createdAt":"2019-05-29T08:09:28Z","updatedAt":"2019-08-04T07:01:23Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/249","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxNzg5NzU5MA==","url":"https://github.com/coala/community/pull/249#issuecomment-517897590","bodyText":"Hey @li-boxuan, can this be merged?","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"createdAt":"2019-08-03T05:57:41Z","lastEditedAt":null,"updatedAt":"2019-08-03T05:57:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzk3OTQ1MA==","url":"https://github.com/coala/community/pull/249#issuecomment-517979450","bodyText":"IMO this logo is still a bit coala-specific, as there are many logos related to angular, linux, etc\n\nThis is true that I have added programming languages based on languages being used by coala community, but the devs outside circle in the image shows the all the developers having knowledge about all the programming language. If needed, we can have the logos of most common programming languages used today.\n\nAnother concern is whether these logos violate their copyright.\n\nUsed  images have no copyright issue, downloaded from freepik.com and after downloading them I've modified them too, to make it completely different from the original ones. the were treated as base images on which the oepn-source community related ideas can be added! So, These images don't violate any kind of copyright.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-08-04T07:01:23Z","lastEditedAt":null,"updatedAt":"2019-08-04T07:01:23Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565002932000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/250","number":250,"title":"Redesign homepage","body":"The enhancement includes addition of materialize\ncss, JQuery, responsiveness, and easy-navigation\nof website features. The easy-navigatibility is\nachieved by adding a navbar with display of meta\n-review and gamification leaderboard on homepage.\nApart from this, the activity graph url is omitted\nfrom website by displaying the graph itslef on the\nhomepage on large devices.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/142","comments":20,"createdAt":"2019-06-09T16:20:08Z","updatedAt":"2019-08-05T11:02:12Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/250","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODQyNg==","url":"https://github.com/coala/community/pull/250#discussion_r294038426","bodyText":"Any specific reason to have the import here instead of at the top of the module?\nP.S. https://stackoverflow.com/questions/128478/should-import-statements-always-be-at-the-top-of-a-module","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):\n+        org_name = get_org_name()\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team_objs = [Team.objects.get(name=team), ]\n+            contributors = Contributor.objects.filter(teams__in=team_objs)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        import requests\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:\n+            return None\n+        return {\n+            'quote': qod_data['contents']['quotes'][0]['quote'],\n+            'author': qod_data['contents']['quotes'][0]['author'],\n+        }\n+\n+    def get_top_meta_review_users(self, count):\n+        from meta_review.models import Participant","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:35:39Z","lastEditedAt":"2019-06-15T08:19:07Z","updatedAt":"2019-06-15T08:19:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODQ4NA==","url":"https://github.com/coala/community/pull/250#discussion_r294038484","bodyText":"Can we use f-Strings to do all the string formatting?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:39:20Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:39:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODU0MQ==","url":"https://github.com/coala/community/pull/250#discussion_r294038541","bodyText":"Why http instead of https?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:42:01Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:42:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODU3NA==","url":"https://github.com/coala/community/pull/250#discussion_r294038574","bodyText":"I believe we are already using it in this repo at some places, can you check?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:43:58Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:43:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzOTExOQ==","url":"https://github.com/coala/community/pull/250#discussion_r294039119","bodyText":"Add a related_name in the teams field of the Contributor model.\nGet a Team by it's name.\nGet contributors of that team by using the related_name.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NzI1Nw==","createdAt":"2019-06-15T14:00:44Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:08:28Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:08:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzOTMwMg==","url":"https://github.com/coala/community/pull/250#discussion_r294039302","bodyText":"handle should have only few lines of code, add all the other code in a separate file and use them here. E.g. see https://github.com/coala/community/blob/master/meta_review/management/commands/run_meta_review_system.py","diffHunk":"@@ -0,0 +1,119 @@\n+import logging\n+import json\n+import getorg\n+import os\n+\n+from django.core.management.base import BaseCommand\n+\n+from data.models import Contributor\n+from activity.scraper import activity_json\n+\n+\n+class Command(BaseCommand):\n+    help = 'Create a cluster map using contributors geolocation'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('output_dir', nargs='?', type=str)\n+\n+    def handle(self, *args, **options):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NjI5OA==","createdAt":"2019-06-15T13:00:06Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:15:18Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:15:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTYyMQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045621","bodyText":"Any specific reason to have the import here instead of at the top of the module?\n\nNo! Specific reason. I have seen in some of the upstream packages where they were also importing a module within a function.\nWill Move it to top of the module","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):\n+        org_name = get_org_name()\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team_objs = [Team.objects.get(name=team), ]\n+            contributors = Contributor.objects.filter(teams__in=team_objs)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        import requests\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:\n+            return None\n+        return {\n+            'quote': qod_data['contents']['quotes'][0]['quote'],\n+            'author': qod_data['contents']['quotes'][0]['author'],\n+        }\n+\n+    def get_top_meta_review_users(self, count):\n+        from meta_review.models import Participant","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:33:56Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:33:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTY4Nw==","url":"https://github.com/coala/community/pull/250#discussion_r294045687","bodyText":"Will correct it!","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:36:23Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:36:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTkzNQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045935","bodyText":"Sure! I will check it. But using .format() is an improved way of formatting the strings. Its' also mentioned in the provided link by you.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:45:06Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:45:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTk5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045995","bodyText":"We can also opt-for this one https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:47:33Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:47:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NjAzMg==","url":"https://github.com/coala/community/pull/250#discussion_r294046032","bodyText":"I believe we are already using it in this repo at some places, can you check?\n\nBoth are being used %-formatting as well as .format()","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:49:04Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:49:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjQ2Mg==","url":"https://github.com/coala/community/pull/250#discussion_r294072462","bodyText":"We can also opt-for this one https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python\n\nYeah that's what I mean, are we using these anywhere in this project?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T07:59:09Z","lastEditedAt":null,"updatedAt":"2019-06-16T07:59:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjYzOA==","url":"https://github.com/coala/community/pull/250#discussion_r294072638","bodyText":"team.contributors.count() should give you the count.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTQzNw==","createdAt":"2019-06-16T10:34:37Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:04:18Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:04:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjY4Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294072686","bodyText":"You changed string team to an object in the line 62.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T08:05:24Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:05:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Mjk0Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294072946","bodyText":"Can you do something like \n  \n    \n      community/data/contrib_data.py\n    \n    \n         Line 14\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           try:","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTExMg==","createdAt":"2019-06-16T10:08:04Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:12:13Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:12:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzE3Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294073176","bodyText":"You can directly do contributor['location'] = contributor.get('location')\nIf there is no location field you will have None. And location field can accept null values. https://github.com/coala/community/pull/250/files#diff-6556cd068e37d3b094ccb8363a7e3a7dR18","diffHunk":"@@ -32,6 +32,9 @@ def import_data(contributor):\n     try:\n         contributor['issues_opened'] = contributor.pop('issues')\n         contributor['num_commits'] = contributor.pop('contributions')\n+        contributor_location = contributor.get('location')\n+        if contributor_location:\n+            contributor['location'] = contributor_location","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTExMw==","createdAt":"2019-06-16T10:08:08Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:18:11Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:18:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzMxOA==","url":"https://github.com/coala/community/pull/250#discussion_r294073318","bodyText":"You can do def handle(output_dir='cluster_map') by default, if they provide some other dir it will be replaced by that.\nYou can also log that the cluster_map dir is used by default for this thing.","diffHunk":"@@ -0,0 +1,113 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir=None):\n+    logger = logging.getLogger(__name__)\n+\n+    if not output_dir:\n+        logger.debug('output_dir arg not provided! Setting output_dir'\n+                     ' to cluster_map/')\n+        output_dir = 'cluster_map'","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTA4MA==","createdAt":"2019-06-16T10:06:01Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:23:05Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:23:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzUxNg==","url":"https://github.com/coala/community/pull/250#discussion_r294073516","bodyText":"Add a proper documentations for any new methods you add.\nE.g. see: \n  \n    \n      community/gamification/process/update.py\n    \n    \n         Line 25\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def update_participants_data_with_mr(mr): \n        \n    \n  \n\n or \n  \n    \n      community/gamification/models.py\n    \n    \n         Line 84\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def add_points(self, points, activity_string, performed_at, updated_at):","diffHunk":"@@ -0,0 +1,113 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir=None):\n+    logger = logging.getLogger(__name__)\n+\n+    if not output_dir:\n+        logger.debug('output_dir arg not provided! Setting output_dir'\n+                     ' to cluster_map/')\n+        output_dir = 'cluster_map'\n+\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTA3NQ==","createdAt":"2019-06-16T10:05:32Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:29:08Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:29:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Mzc4Nw==","url":"https://github.com/coala/community/pull/250#discussion_r294073787","bodyText":"Btw, can you give me some good reasons on why we should have a quote on our home page? I mean how are those quote relatable to the website? 😄","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T08:34:12Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:34:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3NjYxNQ==","url":"https://github.com/coala/community/pull/250#discussion_r294076615","bodyText":"Yes! These are also being used in this repo.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:02:06Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:02:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3NjcwNg==","url":"https://github.com/coala/community/pull/250#discussion_r294076706","bodyText":"Since It's an open-source community project and is a reusable project by any of the org. And, any contributor or user visiting must receive some type of motivation in any of the manner. Showing inspirational quotes will be helpful to contributors to find some inspiration as well as motivation","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:05:19Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:05:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Njc2OQ==","url":"https://github.com/coala/community/pull/250#discussion_r294076769","bodyText":"Ohh! My bad. I will correct it 👍","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:07:50Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:07:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA4MTc4Mw==","url":"https://github.com/coala/community/pull/250#discussion_r294081783","bodyText":"Then try to use that only. They are more readable and faster.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T12:26:56Z","lastEditedAt":null,"updatedAt":"2019-06-16T12:26:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA4ODQ5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r294088495","bodyText":"Used them and pushed it! 🙂👍🏻","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T15:08:10Z","lastEditedAt":null,"updatedAt":"2019-06-16T15:08:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg3OTkwOA==","url":"https://github.com/coala/community/pull/250#discussion_r296879908","bodyText":"Have these imports in an order.\nE.g. built modules should be imported at one place. all the django imports should go at one place, etc..etc..see other files for more examples.","diffHunk":"@@ -1,28 +1,110 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n+import logging","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTMxMjE2NA==","createdAt":"2019-06-25T10:12:39Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:30:39Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:30:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4MjEyOA==","url":"https://github.com/coala/community/pull/250#discussion_r296882128","bodyText":"No, not like this, I meant have the request.get in the try:except and useraise_for_status also. Similar to what is done in \n  \n    \n      community/data/contrib_data.py\n    \n    \n         Line 9\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def get_contrib_data(): \n        \n    \n  \n\n as I said earlier.","diffHunk":"@@ -1,28 +1,110 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n+import logging\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': f'https://blog.{org_name}.io/',\n+        'twitter_url': f'https://twitter.com/{org_name}_io/',\n+        'facebook_url': f'https://www.facebook.com/{org_name}Analyzer',\n+        'repo_url': get_remote_url().href,\n+        'docs': f'https://{org_name}.io/docs',\n+        'newcomer_docs': f'https://{org_name}.io/newcomer',\n+        'coc': f'https://{org_name}.io/coc',\n+        'logo_url': (f'https://api.{org_name}.io/en/latest/_static/images/'\n+                     f'{org_name}_logo.svg'),\n+        'gitter_chat': f'https://gitter.im/{org_name}/{org_name}/',\n+        'github_core_repo': f'https://github.com/{org_name}/{org_name}/',\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team_name in teams:\n+            team = Team.objects.get(name=team_name)\n+            team_details[team] = team.contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        try:\n+            return {\n+                'quote': qod_data['contents']['quotes'][0]['quote'],\n+                'author': qod_data['contents']['quotes'][0]['author'],\n+            }","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:37:07Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:37:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4Mzg1NA==","url":"https://github.com/coala/community/pull/250#discussion_r296883854","bodyText":"Can you use double inverted commas(\"\") here, then you don't have to use \\ for ''","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:41:50Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:41:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4ODgxMQ==","url":"https://github.com/coala/community/pull/250#discussion_r296888811","bodyText":"the code should not depend on test, tests should depends on code.\nI understand the problem, can you try removing the test users from https://github.com/sks444/webservices.coala.io/blob/master/contrib.json, and see what are the existing test cases which fails(on master branch), or if we are not getting the 100 % coverage, we will try to fix those, because the original data which will come from the webservices will not have the testusers.\nI will give you access to push directly to https://github.com/sks444/webservices.coala.io/ so that you don't have to create a pr each time you have to modify the data for testing.","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI5MzgyMA==","createdAt":"2019-06-25T05:59:23Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:55:31Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:55:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4OTUxNA==","url":"https://github.com/coala/community/pull/250#discussion_r296889514","bodyText":"When you're writing the documentation under \"\"\" \"\"\" you don't have to use #","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:57:26Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:57:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5MDAxNg==","url":"https://github.com/coala/community/pull/250#discussion_r296890016","bodyText":"use f Strings.","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and\n+    # the 'map.html' file to django templates directory to get it displayed\n+    # on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                       output_dir)\n+    leaflet_destination_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI5Mzc0OA==","createdAt":"2019-06-25T05:57:15Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:58:48Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:58:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5MzAzNA==","url":"https://github.com/coala/community/pull/250#discussion_r296893034","bodyText":"I guess, you can directly do:\nIn [1]: with open('file.txt') as f:\n   ...:     for line in f:\n   ...:         print (line)\nsee https://stackoverflow.com/questions/39086/search-and-replace-a-line-in-a-file-in-python","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and\n+    # the 'map.html' file to django templates directory to get it displayed\n+    # on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                       output_dir)\n+    leaflet_destination_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                            'static')\n+\n+    # Remove existing leaflet_dir if exists\n+    for root, dirs, files in os.walk(leaflet_destination_path):\n+        for file in files:\n+            os.remove(os.path.join(leaflet_destination_path, file))\n+        os.rmdir(root)\n+\n+    os.renames(leaflet_source_path, leaflet_destination_path)\n+\n+    # Move org_locations.js to static folder\n+    locations_source_path = '{}/{}/org-locations.js'.format(os.getcwd(),\n+                                                            output_dir)\n+    locations_destination_path = '{}/{}/org-locations.js'.format(\n+        os.getcwd(), 'static')\n+    os.rename(locations_source_path, locations_destination_path)\n+\n+    # Make changes in map.html to support django syntax with needed CSS\n+    with open('{}/map.html'.format(output_dir)) as f:\n+        django_supported_htmls = []\n+        lines = f.readlines()\n+        for index in range(len(lines)):\n+            line = lines[index].strip()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTMwOTcyOA==","createdAt":"2019-06-25T09:40:52Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T20:06:52Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:06:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5ODYzNQ==","url":"https://github.com/coala/community/pull/250#discussion_r296898635","bodyText":"Can you make the whole card clickable instead of just the footer?\nI also think that these cards should look similar(in color, etc.) with the individual cards on their respective pages. What's your opinion?","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}\n+  <div class=\"center quote-of-day custom-green-color-font\">\n+    <div class=\"center apply-flex center-content\">\n+      <h3 style=\"padding-right: 15px\">~</h3>\n+      <div class=\"quote\">\n+        <p style=\"margin-bottom: 0px\">{{ quote_details.quote }}</p>\n+        <h6 style=\"margin-top: 0px\">- {{ quote_details.author }}</h6>\n+      </div>\n+      <h3 style=\"padding-left: 15px\">~</h3>\n+    </div>\n+  </div>\n+  {% endif %}{# if quote_details #}\n+\n+  <div class=\"center org-teams-stats apply-flex center-content custom-green-color-font\">\n+    {% for team_name, members_count in org.team_details.items %}\n+    <div class=\"team\" style=\"margin-right: 20px\">\n+      <h3 style=\"margin-bottom: 0\">{{ members_count }}</h3>\n+      <h4 style=\"margin-top: 0\">{{ team_name }}</h4>\n+    </div>\n+    {% endfor %}{# for team_name, members_count in org.team_details.items #}\n+  </div>\n+\n+  <div class=\"organization-map\">\n+    {% include 'map.html' %}\n+  </div>\n+\n+  <div class=\"top-contributors\">\n+    <div class=\"top-meta-reviewers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Meta-review Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for contrib in top_meta_review_users %}\n+          <tr>\n+            <td>{{ contrib.rank }}</td>\n+            <td>{{ contrib.login }}</td>\n+            <td>{{ contrib.score|floatformat:0 }}</td>\n+          </tr>\n+        {% endfor %}{# for contrib in top_meta_review_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"meta-review/\" class=\"waves-effect waves-light btn leaderboards-btn\">Contributors Meta-review</a>\n+    </div>\n+    <div class=\"top-gamifiers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Gamification Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for index, contrib in top_gamification_users %}\n+          <tr>\n+            <td>{{ index|add:\"1\" }}</td>\n+            <td>{{ contrib.username }}</td>\n+            <td>{{ contrib.score }}</td>\n+          </tr>\n+        {% endfor %}{# for index, contrib in top_gamification_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"gamification/\" class=\"waves-effect waves-light btn leaderboards-btn\">Gamification leaderboard</a>","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T20:22:00Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:22:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5OTM3Nw==","url":"https://github.com/coala/community/pull/250#discussion_r296899377","bodyText":"Is it solved? I see you're still using the team object in team_details[team] instead of a string team.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T20:23:57Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:23:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzAxNTc3NQ==","url":"https://github.com/coala/community/pull/250#discussion_r297015775","bodyText":"Won't coala raise errors! As single quotation marks are being preferred as mentioned in .coafile","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T05:52:09Z","lastEditedAt":null,"updatedAt":"2019-06-25T05:52:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzAxNjc5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r297016795","bodyText":"Ohh! I forgot to remove them","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T05:56:42Z","lastEditedAt":null,"updatedAt":"2019-06-25T05:56:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzEwOTcxMw==","url":"https://github.com/coala/community/pull/250#discussion_r297109713","bodyText":"Yeas! I will make the whole card clickable. What will make it more good is that we can add a href to each row which when clicked will redirect the user to the same user-details card on which the user has clicked.\n\nCan you make the whole card clickable instead of just the footer?\n\nI tried to give them same color (all green color variants being used in website) but it wasn't looking good, it was giving a dull-like experience. Currently, both of them are having that background colors which are going in match with header, body-background as well as text. Also, the yellow-orange color combination is one of the famous combinations.\n\nI also think that these cards should look similar(in color, etc.)\n\nWe can surely do that! but the only issue is space, we can't separate the current main-content div into two div blocks in which one div block will be used for a single card. Also, if we don't choose to create partitions then the concern is where will it be shown at top or bottom of page. Neither of the positions will have a nice UX experience. Showing at home-page will give user a glance giving a nice UX experience and with giving them an additional information that the website has two types of leaderboards related to contribs. And, a new-user to website always recognizes the website by its homepage and easy-navigability.\n\nwith the individual cards on their respective pages. What's your opinion?","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}\n+  <div class=\"center quote-of-day custom-green-color-font\">\n+    <div class=\"center apply-flex center-content\">\n+      <h3 style=\"padding-right: 15px\">~</h3>\n+      <div class=\"quote\">\n+        <p style=\"margin-bottom: 0px\">{{ quote_details.quote }}</p>\n+        <h6 style=\"margin-top: 0px\">- {{ quote_details.author }}</h6>\n+      </div>\n+      <h3 style=\"padding-left: 15px\">~</h3>\n+    </div>\n+  </div>\n+  {% endif %}{# if quote_details #}\n+\n+  <div class=\"center org-teams-stats apply-flex center-content custom-green-color-font\">\n+    {% for team_name, members_count in org.team_details.items %}\n+    <div class=\"team\" style=\"margin-right: 20px\">\n+      <h3 style=\"margin-bottom: 0\">{{ members_count }}</h3>\n+      <h4 style=\"margin-top: 0\">{{ team_name }}</h4>\n+    </div>\n+    {% endfor %}{# for team_name, members_count in org.team_details.items #}\n+  </div>\n+\n+  <div class=\"organization-map\">\n+    {% include 'map.html' %}\n+  </div>\n+\n+  <div class=\"top-contributors\">\n+    <div class=\"top-meta-reviewers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Meta-review Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for contrib in top_meta_review_users %}\n+          <tr>\n+            <td>{{ contrib.rank }}</td>\n+            <td>{{ contrib.login }}</td>\n+            <td>{{ contrib.score|floatformat:0 }}</td>\n+          </tr>\n+        {% endfor %}{# for contrib in top_meta_review_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"meta-review/\" class=\"waves-effect waves-light btn leaderboards-btn\">Contributors Meta-review</a>\n+    </div>\n+    <div class=\"top-gamifiers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Gamification Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for index, contrib in top_gamification_users %}\n+          <tr>\n+            <td>{{ index|add:\"1\" }}</td>\n+            <td>{{ contrib.username }}</td>\n+            <td>{{ contrib.score }}</td>\n+          </tr>\n+        {% endfor %}{# for index, contrib in top_gamification_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"gamification/\" class=\"waves-effect waves-light btn leaderboards-btn\">Gamification leaderboard</a>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T10:08:18Z","lastEditedAt":null,"updatedAt":"2019-06-25T10:08:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzExMTE3Mg==","url":"https://github.com/coala/community/pull/250#discussion_r297111172","bodyText":"Yeah! Its solved. Also, will change to make it more clear to team_name instead of object","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T10:12:02Z","lastEditedAt":null,"updatedAt":"2019-06-25T10:12:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMwODU3Ng==","url":"https://github.com/coala/community/pull/250#discussion_r297308576","bodyText":"line is looping variable, don't use the same variable name to store the line after the modfication(use newline maybe). It might work in this case, but it's not the correct way to do it, it will not behave expectedly always.\nDo change it everywhere you're doing this.","diffHunk":"@@ -0,0 +1,132 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    logger.info(\"'cluster_map/' is the default directory for storing\"\n+                \" organization map related files. If arg 'output_dir'\"\n+                ' not provided it will be used as a default directory by'\n+                \" 'getorg' package.\")\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug(f'{contrib.login} location {user_location}'\n+                         f' added on map')\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    Move static files from 'output_dir' to django static folder and\n+    the 'map.html' file to django templates directory to get it displayed\n+    on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = f'{os.getcwd()}/{output_dir}/leaflet_dist/'\n+    leaflet_destination_path = f'{os.getcwd()}/static/leaflet_dist/'\n+\n+    # Remove existing leaflet_dir if exists\n+    for root, dirs, files in os.walk(leaflet_destination_path):\n+        for file in files:\n+            os.remove(os.path.join(leaflet_destination_path, file))\n+        os.rmdir(root)\n+\n+    os.renames(leaflet_source_path, leaflet_destination_path)\n+\n+    # Move org_locations.js to static folder\n+    locations_source_path = f'{os.getcwd()}/{output_dir}/org-locations.js'\n+    locations_destination_path = f'{os.getcwd()}/static/org-locations.js'\n+    os.rename(locations_source_path, locations_destination_path)\n+\n+    # Make changes in map.html to support django syntax with needed CSS\n+    with open('{}/map.html'.format(output_dir)) as f:\n+        django_supported_htmls = []\n+        for line in f:\n+            line = line.strip()\n+            if line.__contains__('<html>'):\n+                django_supported_htmls.append('{% load staticfiles %}\\n')\n+                django_supported_htmls.append(line + '\\n')\n+            elif line.__contains__('</head>'):\n+                adjust_prop = '''\n+                <style>\n+                    #map {\n+                    width: 60%;\n+                    height: 300px;\n+                    margin: auto;\n+                    box-shadow: 0px 0px 25px 2px;\n+                    }\n+                    @media only screen and (max-width:750px){\n+                        #map {\n+                            width: 90%\n+                        }\n+                    }\n+                </style>\\n\n+                '''\n+                meta_charset = '<meta charset=\"utf-8\">'\n+                adjust_prop = adjust_prop.strip().replace('    ', '')\n+                django_supported_htmls.insert(6, meta_charset + '\\n')\n+                django_supported_htmls.append(adjust_prop + '\\n')\n+                django_supported_htmls.append(line + '\\n')\n+            elif line.__contains__('https://'):\n+                line = line.replace('https:', '').replace(' />', '>')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTM1MTEyMQ==","createdAt":"2019-06-25T17:48:51Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-25T17:36:07Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:36:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMDcxODU0Ng==","url":"https://github.com/coala/community/pull/250#issuecomment-500718546","bodyText":"@sks444 @damngamerz @margobra8\nPlease review, Thnx","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-11T07:18:23Z","lastEditedAt":null,"updatedAt":"2019-06-11T07:18:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMjM0NjE4OQ==","url":"https://github.com/coala/community/pull/250#issuecomment-502346189","bodyText":"Create an issue in this repo and close that one, do not close the gitlab issues from here.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NjY2MA==","createdAt":"2019-06-15T13:24:24Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:20:43Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:20:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzQwOTE1NA==","url":"https://github.com/coala/community/pull/250#issuecomment-517409154","bodyText":"@sks444 I was thinking, to add the map.html generated by getorg in the commit. Doing this, will allow us to skip a bunch a of code, which may be time consuming","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-01T18:40:09Z","lastEditedAt":null,"updatedAt":"2019-08-01T18:40:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzk4Nzg3Mw==","url":"https://github.com/coala/community/pull/250#issuecomment-517987873","bodyText":"Could you make moban sync commit a separate PR? We can merge that one first. Smaller PRs are much easier to get merged.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-08-04T09:30:23Z","lastEditedAt":null,"updatedAt":"2019-08-04T09:30:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxNzk5MjEwMw==","url":"https://github.com/coala/community/pull/250#issuecomment-517992103","bodyText":"The homepage looks very good! Good job! Would be nice, as @li-boxuan said, to separate the Moban sync into another PR and roll back the head of this one only to include the homepage changes.","diffHunk":null,"author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"reactions":[],"createdAt":"2019-08-04T10:35:40Z","lastEditedAt":null,"updatedAt":"2019-08-04T10:35:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODAyMTYxOA==","url":"https://github.com/coala/community/pull/250#issuecomment-518021618","bodyText":"I was thinking why I wasn't receiving any emails from GitHub, I just saw my junk folder. All were there 😞 😄","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T17:32:10Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:32:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODAyMTY2NQ==","url":"https://github.com/coala/community/pull/250#issuecomment-518021665","bodyText":"Look nice! I just played around with the homepage, but I am not sure what do strings on geolocation map mean. For example, if you click on a certain location icon, it would display a string like e06d397ab187444adde99f33c29e36131ad82273.\n\nSorry for l8 rply! Those string are auto generated by getorg package, when locations are passed to them","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T17:32:51Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:32:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODAyMTY5Nw==","url":"https://github.com/coala/community/pull/250#issuecomment-518021697","bodyText":"Could you make moban sync commit a separate PR? We can merge that one first. Smaller PRs are much easier to get merged.\n\nYeah Sure! will create a separate PR for it\nCreated #295 But it will fail as there is no provision of field location in Contributor model which is being added by commit 6e9765d","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T17:33:12Z","lastEditedAt":"2019-08-04T17:48:55Z","updatedAt":"2019-08-04T17:48:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODAyNDk2Mw==","url":"https://github.com/coala/community/pull/250#issuecomment-518024963","bodyText":"The homepage looks very good! Good job! Would be nice, as @li-boxuan said, to separate the Moban sync into another PR and roll back the head of this one only to include the homepage changes.\n\nI would have done that, but doing so will lead to fail the Travis CI and netlify too.\nBecause the failure is due to many reasons which is being fixed in #242","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T18:22:05Z","lastEditedAt":"2019-08-04T18:22:22Z","updatedAt":"2019-08-04T18:22:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODAyNzUzNQ==","url":"https://github.com/coala/community/pull/250#issuecomment-518027535","bodyText":"Latest Preview can be seen in #252","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T18:58:50Z","lastEditedAt":null,"updatedAt":"2019-08-04T18:58:50Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565071407000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/251","number":251,"title":"Create build logs webapge","body":"The newly created webpage combines the previous\ntwo webpages- info.txt and log/index.html. This\nweb-page combines the results of both the pages\nand shows them in a better UI/UX with additional\nfeatures of filtering and searching within the\nexisting logs. The logs are fetched from a JSON\nfile which is created from the logs stored in\nthe log file _site/community.log\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/145","comments":4,"createdAt":"2019-06-10T20:00:27Z","updatedAt":"2019-08-06T06:03:27Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/251","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxNDI5Ng==","url":"https://github.com/coala/community/pull/251#discussion_r297314296","bodyText":"from community.git import (\n    get_org_name,\n    get_owner,\n    get_deploy_url,\n    get_upstream_deploy_url,\n)","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:49:10Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:49:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxNTI4OQ==","url":"https://github.com/coala/community/pull/251#discussion_r297315289","bodyText":"data is already dict right? Then why you're converting it to dict again?","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:51:28Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:51:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxODczNA==","url":"https://github.com/coala/community/pull/251#discussion_r297318734","bodyText":"You should directly do with open('./_site/community.log') as log_file: as it was done earlier without above three lines.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:58:57Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:58:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzMDE1OA==","url":"https://github.com/coala/community/pull/251#discussion_r297330158","bodyText":"I am not sure in what condition this line will execute, you have already set  previous_found_level to None, and I am not seeing getting it overridden anywhere except the if condition.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T18:24:57Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:24:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzMzYxNA==","url":"https://github.com/coala/community/pull/251#discussion_r297333614","bodyText":"Earlier it was raising some kind of error when we try to open the template as there .items is being used in django templates. Now, its working fine. I don't how. I will make it change","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:32:47Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:32:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzNTQ1MA==","url":"https://github.com/coala/community/pull/251#discussion_r297335450","bodyText":"I'm doing this because the message in html page will shown accordingly. If the file doesn't exists a different message will be displayed asking user to run the build command. 31f2135#diff-b640fac2a47fbe8bce3f0bfc4a528452R67","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:37:10Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:37:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzNjI3Nw==","url":"https://github.com/coala/community/pull/251#discussion_r297336277","bodyText":"It will get execute in case we have a Traceback error or a long error message being logged in multiple lines. That log message will be depending upon the previous line which mentions what type of log it is!","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:39:04Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:39:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMjk3NA==","url":"https://github.com/coala/community/pull/251#discussion_r297502974","bodyText":"Our README.md should explain how to setup the project and how to run it.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T06:34:57Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:34:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMzk1MA==","url":"https://github.com/coala/community/pull/251#discussion_r297503950","bodyText":"Yeah! It should. Already created a task in phase-3 where all the required information will updated in repositories README’s as well as docs.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:38:34Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:38:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMzk5Mw==","url":"https://github.com/coala/community/pull/251#discussion_r297503993","bodyText":"I still did't get you.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T06:38:44Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:38:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwNDQ5MQ==","url":"https://github.com/coala/community/pull/251#discussion_r297504491","bodyText":"Allow me to explain this via an example.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:40:38Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:40:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwODMzOA==","url":"https://github.com/coala/community/pull/251#discussion_r297508338","bodyText":"2019-06-26 06:50:10,770 [ERROR] django.request: Internal Server Error: /CI/Build/\nTraceback (most recent call last):\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 34, in inner\n    response = get_response(request)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 124, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 88, in dispatch\n    return handler(request, *args, **kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 149, in get\n    context = self.get_context_data(**kwargs)\n  File \"/home/kvgarg/GSoC/community/ci_build/view_log.py\", line 92, in get_context_data\n    context['build_logs_stored'] = list(self.get_build_logs())\nTypeError: 'bool' object is not iterable\nSince the Traceback doesn't have any kind of log-level specified, So it is clear that it will depend upon the log-line just before it i.e. 2019-06-26 06:50:10,770 [ERROR] django.request: Internal Server Error: /CI/Build/ therefore the Traceback error log will be appended in Error dict list.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:54:36Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:54:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxMTA4Mw==","url":"https://github.com/coala/community/pull/251#discussion_r297811083","bodyText":"You should directly do with open('./_site/community.log') as log_file: as it was done earlier without above three lines.\n\nSo, I think we can go ahead with the above solution? Any way if the file doesn't exist the other commands will fail, right?\n\nI'm doing this because the message in html page will shown accordingly. If the file doesn't exists a different message will be displayed asking user to run the build command. 31f2135#diff-b640fac2a47fbe8bce3f0bfc4a528452R67","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T18:36:15Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:36:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxNTk2MA==","url":"https://github.com/coala/community/pull/251#discussion_r297815960","bodyText":"No what I meant is how will you enter into this loop?\nsomething = None\nd = 3\nif d == 3:\n    something = 'something'\nelif something:\n    print(\"how can it get printed?\")\nSorry, if I am missing something.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T18:47:58Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:47:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxNjU2NQ==","url":"https://github.com/coala/community/pull/251#discussion_r297816565","bodyText":"Yeah! They’ll fail to get executed","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T18:49:30Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:49:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgyMTU5Mg==","url":"https://github.com/coala/community/pull/251#discussion_r297821592","bodyText":"Initially previous_found_level is None but once the for-loop begins it will never have the value None. And, the levels will either be empty or containing atmost one entry representing the log-level..\nSince, the traceback like log-messages will not contain any type of log-level enclosed in brackets which will return an empty regex match which in turn will execute this code.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T19:02:44Z","lastEditedAt":null,"updatedAt":"2019-06-26T19:02:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgyMjE0Nw==","url":"https://github.com/coala/community/pull/251#discussion_r297822147","bodyText":"In the example you have taken the value of d Will be getting changed. It will either have a value or will be None","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T19:04:21Z","lastEditedAt":null,"updatedAt":"2019-06-26T19:04:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMyNzI0MA==","url":"https://github.com/coala/community/pull/251#discussion_r298327240","bodyText":"Understood.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTU0MzU5Nw==","createdAt":"2019-06-27T19:21:46Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-27T19:08:46Z","lastEditedAt":null,"updatedAt":"2019-06-27T19:08:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMyNzgxMA==","url":"https://github.com/coala/community/pull/251#discussion_r298327810","bodyText":"Btw, can we break this function into smaller ones?","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-27T19:10:22Z","lastEditedAt":null,"updatedAt":"2019-06-27T19:10:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMzMTg1OA==","url":"https://github.com/coala/community/pull/251#discussion_r298331858","bodyText":"Yeah! In new changes I’ve breaked up this functions into multiple functions\nTalked about org_map func here 😅\nYeah! We can divide this one too.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-27T19:21:39Z","lastEditedAt":"2019-06-27T19:32:36Z","updatedAt":"2019-06-27T19:32:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5NjE4NQ==","url":"https://github.com/coala/community/pull/251#discussion_r310396185","bodyText":"You can directly call the function, no need to save it in a variable if that variable is not used anywhere else.","diffHunk":"@@ -0,0 +1,103 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (\n+    get_org_name,\n+    get_owner,\n+    get_deploy_url,\n+    get_upstream_deploy_url\n+)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-04T17:20:59Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:20:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5NjI3NQ==","url":"https://github.com/coala/community/pull/251#discussion_r310396275","bodyText":"r'ci/build'\nWhy capital?","diffHunk":"@@ -104,10 +98,10 @@ def get_organization():\n         distill_file='twitter/index.html',\n     ),\n     distill_url(\n-        r'log/', log_index,\n-        name='log',\n+        r'CI/Build/', BuildLogsView.as_view(),","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-04T17:24:07Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:24:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5NjMxNg==","url":"https://github.com/coala/community/pull/251#discussion_r310396316","bodyText":"Add doc string for this function and for others also. Like what does this function do?","diffHunk":"@@ -0,0 +1,103 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (\n+    get_org_name,\n+    get_owner,\n+    get_deploy_url,\n+    get_upstream_deploy_url\n+)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return data\n+\n+    def get_build_logs(self, log_file_path):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-04T17:24:53Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:24:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5Njc2OA==","url":"https://github.com/coala/community/pull/251#discussion_r310396768","bodyText":"As CI refers to Continuos Integration, so I was going with caps Initials. If not OK, I will relative url lowercase","diffHunk":"@@ -104,10 +98,10 @@ def get_organization():\n         distill_file='twitter/index.html',\n     ),\n     distill_url(\n-        r'log/', log_index,\n-        name='log',\n+        r'CI/Build/', BuildLogsView.as_view(),","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T17:38:11Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:38:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5Njc4Mw==","url":"https://github.com/coala/community/pull/251#discussion_r310396783","bodyText":"Yeah! Sure Will add docstrings for all functions","diffHunk":"@@ -0,0 +1,103 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (\n+    get_org_name,\n+    get_owner,\n+    get_deploy_url,\n+    get_upstream_deploy_url\n+)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return data\n+\n+    def get_build_logs(self, log_file_path):","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T17:38:39Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:38:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMDcxODU3NA==","url":"https://github.com/coala/community/pull/251#issuecomment-500718574","bodyText":"@sks444 @damngamerz @margobra8\nPlease review, Thnx","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-11T07:18:30Z","lastEditedAt":null,"updatedAt":"2019-06-11T07:18:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODAyNzQ3OQ==","url":"https://github.com/coala/community/pull/251#issuecomment-518027479","bodyText":"Latest Preview can be seen in #252","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-04T18:58:20Z","lastEditedAt":null,"updatedAt":"2019-08-04T18:58:20Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565072108000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/252","number":252,"title":"gci/: Redesign gci students web-page","body":"The redesigned web-page displays the data\nin a better UI/UX form with some additional\ninformation to make it more interactive and\nattractive.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/269","comments":6,"createdAt":"2019-06-12T12:12:05Z","updatedAt":"2019-08-06T06:15:08Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/252","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5NjU5MQ==","url":"https://github.com/coala/community/pull/252#discussion_r310396591","bodyText":"I think only if contributors: will do the work.","diffHunk":"@@ -15,75 +17,69 @@\n )\n \n \n-def index(request):\n-    logger = logging.getLogger(__name__ + '.index')\n-    try:\n-        get_tasks()\n-    except FileNotFoundError:\n-        logger.info('GCI data not available')\n-        s = ['GCI data not available']\n-    else:\n-        s = gci_overview()\n-\n-    return HttpResponse('\\n'.join(s))\n-\n-\n-def gci_overview():\n-    logger = logging.getLogger(__name__ + '.gci_overview')\n-    linked_students = list(get_linked_students())\n-    if not linked_students:\n-        logger.info('No GCI students are linked')\n-        return ['No GCI students are linked']\n-\n-    org_id = linked_students[0]['organization_id']\n-    org_name = linked_students[0]['organization_name']\n-    s = []\n-    s.append('<link rel=\"stylesheet\" href=\"static/main.css\">')\n-\n-    favicon = get_logo(org_name, 16)\n-    with open('_site/favicon.png', 'wb') as favicon_file:\n-        favicon_file.write(favicon)\n-\n-    org_logo = get_logo(org_name)\n-    with open('_site/org_logo.png', 'wb') as org_logo_file:\n-        org_logo_file.write(org_logo)\n-\n-    s.append('<link rel=\"shortcut icon\" type=\"image/png\" '\n-             'href=\"static/favicon.png\"/>')\n-    s.append('<img src=\"static/org_logo.png\" alt=\"'+org_name+'\">')\n-    s.append('<h2>Welcome</h2>')\n-    s.append('Hello, world. You are at the {org_name} community GCI website.'\n-             .format(org_name=org_name))\n-    s.append('Students linked to %s issues:<ul class=\"students\">' % org_name)\n-    for student in linked_students:\n-        student_id = student['id']\n-        username = student['username']\n-\n-        r = requests.get('https://api.github.com/users/{}'.format(username))\n-\n-        if r.status_code == 404:\n-            continue\n-\n-        student_url = STUDENT_URL.format(org_id=org_id,\n-                                         student_id=student_id,\n-                                         )\n-        s.append('<li class=\"student\">'\n-                 'STUDENT ID: <a href=\"{student_url}\">{student_id}</a><br />'\n-                 '<div class=\"github-card\" data-github=\"{username}\" '\n-                 'data-width=\"400\" data-theme=\"default\"></div>'\n-                 .format(student_url=student_url, student_id=student_id,\n-                         username=username))\n-\n-    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n-    s.append('</ul><i id=\"time\" class=\"timestamp\" data-time=\"{unix}\">'\n-             'Last updated: {timestamp} '\n-             '(<span id=\"ago\" class=\"timeago\"></span>)</i>'\n-             .format(unix=timegm(datetime.utcnow().utctimetuple()),\n-                     timestamp=timestamp))\n-\n-    s.append('<script src=\"//cdn.jsdelivr.net/gh/lepture/github-cards@1.0.2'\n-             '/jsdelivr/widget.js\"></script>')\n-    s.append('<script src=\"static/timeago.js\"></script>')\n-    s.append('<script>loadTimeElements()</script>')\n-\n-    return s\n+class GCIStudentsList(TemplateView):\n+    template_name = 'gci_students.html'\n+\n+    def get_all_students(self):\n+        logger = logging.getLogger(__name__ + '.gci_overview')\n+        linked_students = list(get_linked_students())\n+        data = {\n+            'students': list(),\n+            'error': None\n+        }\n+        if not linked_students:\n+            error_message = 'No GCI students are linked'\n+            logger.info(error_message)\n+            data['error'] = error_message\n+            return data\n+        org_id = linked_students[0]['organization_id']\n+        for student in linked_students:\n+            student_id = student['id']\n+            username = student['username']\n+            contributors = Contributor.objects.filter(login=username)\n+            if contributors.exists():","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODA0NzU2OA==","createdAt":"2019-08-04T17:55:35Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-04T17:33:23Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:33:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDM5NjYzMw==","url":"https://github.com/coala/community/pull/252#discussion_r310396633","bodyText":"use f-strings.","diffHunk":"@@ -15,75 +17,69 @@\n )\n \n \n-def index(request):\n-    logger = logging.getLogger(__name__ + '.index')\n-    try:\n-        get_tasks()\n-    except FileNotFoundError:\n-        logger.info('GCI data not available')\n-        s = ['GCI data not available']\n-    else:\n-        s = gci_overview()\n-\n-    return HttpResponse('\\n'.join(s))\n-\n-\n-def gci_overview():\n-    logger = logging.getLogger(__name__ + '.gci_overview')\n-    linked_students = list(get_linked_students())\n-    if not linked_students:\n-        logger.info('No GCI students are linked')\n-        return ['No GCI students are linked']\n-\n-    org_id = linked_students[0]['organization_id']\n-    org_name = linked_students[0]['organization_name']\n-    s = []\n-    s.append('<link rel=\"stylesheet\" href=\"static/main.css\">')\n-\n-    favicon = get_logo(org_name, 16)\n-    with open('_site/favicon.png', 'wb') as favicon_file:\n-        favicon_file.write(favicon)\n-\n-    org_logo = get_logo(org_name)\n-    with open('_site/org_logo.png', 'wb') as org_logo_file:\n-        org_logo_file.write(org_logo)\n-\n-    s.append('<link rel=\"shortcut icon\" type=\"image/png\" '\n-             'href=\"static/favicon.png\"/>')\n-    s.append('<img src=\"static/org_logo.png\" alt=\"'+org_name+'\">')\n-    s.append('<h2>Welcome</h2>')\n-    s.append('Hello, world. You are at the {org_name} community GCI website.'\n-             .format(org_name=org_name))\n-    s.append('Students linked to %s issues:<ul class=\"students\">' % org_name)\n-    for student in linked_students:\n-        student_id = student['id']\n-        username = student['username']\n-\n-        r = requests.get('https://api.github.com/users/{}'.format(username))\n-\n-        if r.status_code == 404:\n-            continue\n-\n-        student_url = STUDENT_URL.format(org_id=org_id,\n-                                         student_id=student_id,\n-                                         )\n-        s.append('<li class=\"student\">'\n-                 'STUDENT ID: <a href=\"{student_url}\">{student_id}</a><br />'\n-                 '<div class=\"github-card\" data-github=\"{username}\" '\n-                 'data-width=\"400\" data-theme=\"default\"></div>'\n-                 .format(student_url=student_url, student_id=student_id,\n-                         username=username))\n-\n-    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n-    s.append('</ul><i id=\"time\" class=\"timestamp\" data-time=\"{unix}\">'\n-             'Last updated: {timestamp} '\n-             '(<span id=\"ago\" class=\"timeago\"></span>)</i>'\n-             .format(unix=timegm(datetime.utcnow().utctimetuple()),\n-                     timestamp=timestamp))\n-\n-    s.append('<script src=\"//cdn.jsdelivr.net/gh/lepture/github-cards@1.0.2'\n-             '/jsdelivr/widget.js\"></script>')\n-    s.append('<script src=\"static/timeago.js\"></script>')\n-    s.append('<script>loadTimeElements()</script>')\n-\n-    return s\n+class GCIStudentsList(TemplateView):\n+    template_name = 'gci_students.html'\n+\n+    def get_all_students(self):\n+        logger = logging.getLogger(__name__ + '.gci_overview')\n+        linked_students = list(get_linked_students())\n+        data = {\n+            'students': list(),\n+            'error': None\n+        }\n+        if not linked_students:\n+            error_message = 'No GCI students are linked'\n+            logger.info(error_message)\n+            data['error'] = error_message\n+            return data\n+        org_id = linked_students[0]['organization_id']\n+        for student in linked_students:\n+            student_id = student['id']\n+            username = student['username']\n+            contributors = Contributor.objects.filter(login=username)\n+            if contributors.exists():\n+                contrib = contributors.first()\n+                student['url'] = STUDENT_URL.format(org_id=org_id,\n+                                                    student_id=student_id)\n+                student['name'] = contrib.name\n+                student['bio'] = contrib.bio\n+                student['public_repos'] = contrib.public_repos\n+                student['public_gists'] = contrib.public_gists\n+                student['followers'] = contrib.followers\n+                data['students'].append(student)\n+            else:\n+                logger.warning(\"GCI Student {} doesn't exists! Please check\"","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODA0NzU2NQ==","createdAt":"2019-08-04T17:55:27Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-04T17:34:33Z","lastEditedAt":null,"updatedAt":"2019-08-04T17:34:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDg4NTE1MA==","url":"https://github.com/coala/community/pull/252#discussion_r310885150","bodyText":"EOL at EOF","diffHunk":"@@ -0,0 +1,86 @@\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | GCI Students\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/gci_students.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"{% static 'js/timeago.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+  <div class=\"web-page-details apply-flex center-content\">\n+    <h3 style=\"padding-right: 15px\">~</h3>\n+    <h3 class=\"page-name\">\n+      <img src=\"{{ org.logo_url }}\" alt=\"{{ org.name }}\">\n+      GCI Students\n+    </h3>\n+    <h3 style=\"padding-left: 15px\">~</h3>\n+  </div>\n+\n+  <div class=\"apply-flex-center\">\n+    <p class=\"container web-page-description\">\n+      Hello, World! {{ org.name }} has been participating in GCI (Google Code-In) from last few years and will\n+      be participating in coming years too. Following are the GCI students who  participated in GCI with {{ org.name }}\n+      organization.\n+    </p>\n+  </div>\n+\n+  {% if gci_students.data %}\n+  <div class=\"gci-students apply-flex evenly-spread-content custom-green-color-font\">\n+  {% for student in gci_students.data %}\n+    <div class=\"student-card card horizontal\">\n+      <div class=\"student-image card-image apply-flex\">\n+        <img src=\"//github.com/{{ student.username }}.png/\">\n+      </div>\n+      <div class=\"student-details card-content\">\n+        <a class=\"user-name bold-text\" href=\"//github.com/{{ student.username }}\" target=\"_blank\">\n+          {% if student.display_name %}\n+            {{ student.display_name }}\n+          {% else %}\n+            {{ student.username }}\n+          {% endif %}\n+        </a><br>\n+        {% if student.bio %}\n+          <p>{{ student.bio }}</p>\n+        {% endif %}{# if student.bio #}\n+        <div class=\"inline-contents\">\n+          <p class=\"gci-student-id\">ID:</p>\n+          <a href=\"{{ student.url }}\" target=\"_blank\"> {{ student.id }}</a>\n+        </div><br>\n+        <div class=\"inline-contents\">\n+          <p class=\"participated-year\">Participation year: {{ student.program_year }}</p>\n+        </div><br>\n+        <div class=\"inline-contents\">\n+          <p class=\"public-repos\">Repos:</p>\n+          <p> {{ student.public_repos }}</p>\n+        </div>\n+        <div class=\"inline-contents\">\n+          <p class=\"public-gists\">Gists:</p>\n+          <p> {{ student.public_gists }}</p>\n+        </div>\n+        <div class=\"inline-contents\">\n+          <p class=\"followers\">Followers:</p>\n+          <p> {{ student.followers }}</p>\n+        </div><br>\n+      </div>\n+    </div>\n+  {% endfor %}\n+  </div>\n+  {% else %}\n+  <div class=\"apply-flex center-content data-fetch-error\">\n+    <h5><b>ERROR:</b></h5>\n+    <h5>{{ gci_students.error }}</h5>\n+  </div>\n+  {% endif %}{# if gci_students.data #}\n+\n+  <div class=\"apply-flex center-content data-updated-time\">\n+    <b>GCI Students data was updated:</b>\n+    <p id=\"time\" data-time=\"{{ updated_time }}\"></p>\n+  </div>\n+\n+{% endblock %}","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-06T05:23:44Z","lastEditedAt":null,"updatedAt":"2019-08-06T05:23:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDg4NTE4OA==","url":"https://github.com/coala/community/pull/252#discussion_r310885188","bodyText":"EOL at EOF","diffHunk":"@@ -0,0 +1,31 @@\n+$(document).ready(function(){\n+    function generateTimeString(timestamp) {\n+        var sec = ((new Date()).getTime() / 1000) - parseInt(timestamp);\n+        var min = sec / 60;\n+        var hour = min / 60;\n+        var day = hour / 24;\n+\n+        var timeString = '';\n+        if (day >= 1) {\n+            timeString = Math.round(day) + ' days ago';\n+        } else if (hour >= 1) {\n+            timeString = Math.round(hour) + ' hours ago';\n+        } else if (min >= 1) {\n+            timeString = Math.round(min) + ' minutes ago';\n+        } else {\n+            timeString = Math.round(sec) + ' seconds ago';\n+        }\n+\n+        return timeString;\n+    }\n+\n+    function updateTimeAgo(time) {\n+        time.text(\" \" + generateTimeString(time.attr('data-time')));\n+    }\n+\n+    function loadTimeElements() {\n+        updateTimeAgo($('#time'));\n+    }\n+\n+    loadTimeElements();\n+});","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-06T05:23:57Z","lastEditedAt":null,"updatedAt":"2019-08-06T05:23:57Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565070836000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/253","number":253,"title":"data/: Redesign the contributors webpage","body":"Closes #240 , #231 , #141 , #139, #140","comments":6,"createdAt":"2019-06-14T04:23:16Z","updatedAt":"2019-08-06T05:53:56Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/253","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Mzg1MTM2NA==","url":"https://github.com/coala/community/pull/253#discussion_r293851364","bodyText":"This image looks too large IMO.","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2019-06-14T15:13:19Z","lastEditedAt":null,"updatedAt":"2019-06-14T15:13:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzkxOTc2NQ==","url":"https://github.com/coala/community/pull/253#discussion_r293919765","bodyText":"exported from Photoshop itself for web display! Adjusted the header image height to make it look good on large screen otherwise it would have taken whole visible screen to display that image.\nAny suggestions? On how can I make it better.\n\nimage looks too large","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-06-14T18:07:43Z","lastEditedAt":null,"updatedAt":"2019-06-14T18:07:43Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565247811000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/254","number":254,"title":" meta-review/: Redesign the webpage","body":"The redesigned web-page provides a nice\nUI/UX design to the web-page with \"search\"\nfeature.\nCloses #259","comments":3,"createdAt":"2019-06-15T04:17:42Z","updatedAt":"2019-08-08T07:03:31Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/254","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTg2NzAzMg==","url":"https://github.com/coala/community/pull/254#discussion_r311867032","bodyText":"Link is not working for me","diffHunk":"@@ -1,53 +1,145 @@\n-<!DOCTYPE html>\n-<html lang=\"en\">\n-  <head>\n-    <!-- Required meta tags -->\n-    <meta charset=\"utf-8\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n-    <!-- Bootstrap CSS -->\n-    <link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n-    <title>Meta-review Score Ranking List</title>\n-  </head>\n-  <body>\n-    <h1>Details of meta-review score</h1>\n-    <ul>\n-      {% for participant in participants %}\n-      <div class=\"container\">\n-        <div class=\"row\">\n-          <div class=\"col-sm-6 col-md-4\">\n-            <div class=\"thumbnail\">\n-              <div class=\"caption\">\n-                <p>login: {{ participant.login }}</p>\n-                <p>name: {{ participant.name }}</p>\n-                <p>score: {{ participant.score|floatformat:2 }}</p>\n-                <p>rank: {{ participant.rank }}</p>\n-                <p>trend: {{ participant.trend }}</p>\n-                <p>received: </p>\n-                <p>number of positive reactions: {{ participant.pos_in }}</p>\n-                <p>\n-                  weighted positive reactions:\n-                  {{ participant.weighted_pos_in|floatformat:2 }}\n-                </p>\n-                <p>number of negative reactions: {{ participant.neg_in }}</p>\n-                <p>\n-                  weighted negative reactions:\n-                  {{ participant.weighted_neg_in|floatformat:2 }}\n-                </p>\n-                <p>give away: </p>\n-                <p>number of positive reactions: {{ participant.pos_out }}</p>\n-                <p>number of negative reactions: {{ participant.neg_out }}</p>\n-                <p>\n-                  negative point offset:\n-                  {{ participant.offset|floatformat:2 }}\n-                </p>\n-                <p>weight_factor: {{ participant.weight_factor|floatformat:2 }}</p>\n-              </div>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Meta-Review\n+{% endblock %}\n+\n+{% block add_css_files %}\n+  <link rel=\"stylesheet\" href=\"{% static 'css/contributors.css' %}\">\n+  <link rel=\"stylesheet\" href=\"{% static 'css/meta-reviewers.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+  <script src=\"{% static 'js/contributors.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"web-page-details apply-flex center-content\">\n+    <h3 style=\"padding-right: 15px\">~</h3>\n+    <h3 class=\"page-name\">\n+      Contributors Meta-Review Details\n+    </h3>\n+    <h3 style=\"padding-left: 15px\">~</h3>\n+  </div>\n+\n+  <div class=\"apply-flex center-content\">\n+    <p class=\"container web-page-description\">\n+      Contributor meta-review related details are calculated based upon the\n+      GitHub reactions made by that contributor on any issue or merge request\n+      within an organization, for example - {{ org.name }}.\n+    </p>\n+  </div>\n+\n+  <div class=\"contributors-section apply-flex center-content\">\n+    <div class=\"form-fields\">\n+      <form>\n+        <div class=\"input-field apply-flex center-content search-field\">\n+          <i class=\"fa fa-search social-icons\"></i>\n+          <input id=\"search\" type=\"search\" autocomplete=\"off\" placeholder=\"Search by username or name\" required>\n+          <i class=\"fa fa-close social-icons\"></i>\n+        </div>\n+      </form>\n+    <div class=\"apply-flex center-content\">\n+    </div>\n+      <div class=\"search-results\">\n+        <table>\n+          <thead>\n+            <tr>\n+              <th>Search Results</th>\n+            </tr>\n+          </thead>\n+          <tbody class=\"search-results-tbody large-font\">\n+            <tr>\n+              <td>\n+                No results found!\n+              </td>\n+            </tr>\n+          </tbody>\n+        </table>\n+      </div>\n+    </div>\n+  </div>\n+\n+  <div class=\"contributors-cards\">\n+  {% for contributor in contributors_meta_review_details %}\n+  <div class=\"contributor-card meta-reviewer apply-flex\" login=\"{{ contributor.login }}\" name=\"{{ contributor.name }}\">\n+    <div class=\"contributor-image meta-reviewer-image\">\n+      <img src=\"//github.com/{{ contributor.login }}.png/?size=210\"\n+           alt=\"user-image\">\n+      <div class=\"top-right large-font bold-text\">\n+        {{ contributor.rank }}\n+      </div>\n+    </div>\n+    <div class=\"metareviewer-details\">\n+      <div class=\"contributor-details-part-1 column-flex\">\n+        <a class=\"bold-text large-font\" href=\"//github.com","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-08-08T06:03:03Z","lastEditedAt":null,"updatedAt":"2019-08-08T06:03:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTg3MDA1MQ==","url":"https://github.com/coala/community/pull/254#discussion_r311870051","bodyText":"I will check if it is feasible to make it case insensitive!\nAnd will also check why the link the isn't working as it is an anchor tag","diffHunk":"@@ -1,53 +1,145 @@\n-<!DOCTYPE html>\n-<html lang=\"en\">\n-  <head>\n-    <!-- Required meta tags -->\n-    <meta charset=\"utf-8\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n-    <!-- Bootstrap CSS -->\n-    <link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n-    <title>Meta-review Score Ranking List</title>\n-  </head>\n-  <body>\n-    <h1>Details of meta-review score</h1>\n-    <ul>\n-      {% for participant in participants %}\n-      <div class=\"container\">\n-        <div class=\"row\">\n-          <div class=\"col-sm-6 col-md-4\">\n-            <div class=\"thumbnail\">\n-              <div class=\"caption\">\n-                <p>login: {{ participant.login }}</p>\n-                <p>name: {{ participant.name }}</p>\n-                <p>score: {{ participant.score|floatformat:2 }}</p>\n-                <p>rank: {{ participant.rank }}</p>\n-                <p>trend: {{ participant.trend }}</p>\n-                <p>received: </p>\n-                <p>number of positive reactions: {{ participant.pos_in }}</p>\n-                <p>\n-                  weighted positive reactions:\n-                  {{ participant.weighted_pos_in|floatformat:2 }}\n-                </p>\n-                <p>number of negative reactions: {{ participant.neg_in }}</p>\n-                <p>\n-                  weighted negative reactions:\n-                  {{ participant.weighted_neg_in|floatformat:2 }}\n-                </p>\n-                <p>give away: </p>\n-                <p>number of positive reactions: {{ participant.pos_out }}</p>\n-                <p>number of negative reactions: {{ participant.neg_out }}</p>\n-                <p>\n-                  negative point offset:\n-                  {{ participant.offset|floatformat:2 }}\n-                </p>\n-                <p>weight_factor: {{ participant.weight_factor|floatformat:2 }}</p>\n-              </div>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Meta-Review\n+{% endblock %}\n+\n+{% block add_css_files %}\n+  <link rel=\"stylesheet\" href=\"{% static 'css/contributors.css' %}\">\n+  <link rel=\"stylesheet\" href=\"{% static 'css/meta-reviewers.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+  <script src=\"{% static 'js/contributors.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"web-page-details apply-flex center-content\">\n+    <h3 style=\"padding-right: 15px\">~</h3>\n+    <h3 class=\"page-name\">\n+      Contributors Meta-Review Details\n+    </h3>\n+    <h3 style=\"padding-left: 15px\">~</h3>\n+  </div>\n+\n+  <div class=\"apply-flex center-content\">\n+    <p class=\"container web-page-description\">\n+      Contributor meta-review related details are calculated based upon the\n+      GitHub reactions made by that contributor on any issue or merge request\n+      within an organization, for example - {{ org.name }}.\n+    </p>\n+  </div>\n+\n+  <div class=\"contributors-section apply-flex center-content\">\n+    <div class=\"form-fields\">\n+      <form>\n+        <div class=\"input-field apply-flex center-content search-field\">\n+          <i class=\"fa fa-search social-icons\"></i>\n+          <input id=\"search\" type=\"search\" autocomplete=\"off\" placeholder=\"Search by username or name\" required>\n+          <i class=\"fa fa-close social-icons\"></i>\n+        </div>\n+      </form>\n+    <div class=\"apply-flex center-content\">\n+    </div>\n+      <div class=\"search-results\">\n+        <table>\n+          <thead>\n+            <tr>\n+              <th>Search Results</th>\n+            </tr>\n+          </thead>\n+          <tbody class=\"search-results-tbody large-font\">\n+            <tr>\n+              <td>\n+                No results found!\n+              </td>\n+            </tr>\n+          </tbody>\n+        </table>\n+      </div>\n+    </div>\n+  </div>\n+\n+  <div class=\"contributors-cards\">\n+  {% for contributor in contributors_meta_review_details %}\n+  <div class=\"contributor-card meta-reviewer apply-flex\" login=\"{{ contributor.login }}\" name=\"{{ contributor.name }}\">\n+    <div class=\"contributor-image meta-reviewer-image\">\n+      <img src=\"//github.com/{{ contributor.login }}.png/?size=210\"\n+           alt=\"user-image\">\n+      <div class=\"top-right large-font bold-text\">\n+        {{ contributor.rank }}\n+      </div>\n+    </div>\n+    <div class=\"metareviewer-details\">\n+      <div class=\"contributor-details-part-1 column-flex\">\n+        <a class=\"bold-text large-font\" href=\"//github.com","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-08T06:16:06Z","lastEditedAt":null,"updatedAt":"2019-08-08T06:16:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTg4MjU1MQ==","url":"https://github.com/coala/community/pull/254#discussion_r311882551","bodyText":"Made search case insensitive and the link too now is working 👍","diffHunk":"@@ -1,53 +1,145 @@\n-<!DOCTYPE html>\n-<html lang=\"en\">\n-  <head>\n-    <!-- Required meta tags -->\n-    <meta charset=\"utf-8\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n-    <!-- Bootstrap CSS -->\n-    <link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n-    <title>Meta-review Score Ranking List</title>\n-  </head>\n-  <body>\n-    <h1>Details of meta-review score</h1>\n-    <ul>\n-      {% for participant in participants %}\n-      <div class=\"container\">\n-        <div class=\"row\">\n-          <div class=\"col-sm-6 col-md-4\">\n-            <div class=\"thumbnail\">\n-              <div class=\"caption\">\n-                <p>login: {{ participant.login }}</p>\n-                <p>name: {{ participant.name }}</p>\n-                <p>score: {{ participant.score|floatformat:2 }}</p>\n-                <p>rank: {{ participant.rank }}</p>\n-                <p>trend: {{ participant.trend }}</p>\n-                <p>received: </p>\n-                <p>number of positive reactions: {{ participant.pos_in }}</p>\n-                <p>\n-                  weighted positive reactions:\n-                  {{ participant.weighted_pos_in|floatformat:2 }}\n-                </p>\n-                <p>number of negative reactions: {{ participant.neg_in }}</p>\n-                <p>\n-                  weighted negative reactions:\n-                  {{ participant.weighted_neg_in|floatformat:2 }}\n-                </p>\n-                <p>give away: </p>\n-                <p>number of positive reactions: {{ participant.pos_out }}</p>\n-                <p>number of negative reactions: {{ participant.neg_out }}</p>\n-                <p>\n-                  negative point offset:\n-                  {{ participant.offset|floatformat:2 }}\n-                </p>\n-                <p>weight_factor: {{ participant.weight_factor|floatformat:2 }}</p>\n-              </div>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Meta-Review\n+{% endblock %}\n+\n+{% block add_css_files %}\n+  <link rel=\"stylesheet\" href=\"{% static 'css/contributors.css' %}\">\n+  <link rel=\"stylesheet\" href=\"{% static 'css/meta-reviewers.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+  <script src=\"{% static 'js/contributors.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"web-page-details apply-flex center-content\">\n+    <h3 style=\"padding-right: 15px\">~</h3>\n+    <h3 class=\"page-name\">\n+      Contributors Meta-Review Details\n+    </h3>\n+    <h3 style=\"padding-left: 15px\">~</h3>\n+  </div>\n+\n+  <div class=\"apply-flex center-content\">\n+    <p class=\"container web-page-description\">\n+      Contributor meta-review related details are calculated based upon the\n+      GitHub reactions made by that contributor on any issue or merge request\n+      within an organization, for example - {{ org.name }}.\n+    </p>\n+  </div>\n+\n+  <div class=\"contributors-section apply-flex center-content\">\n+    <div class=\"form-fields\">\n+      <form>\n+        <div class=\"input-field apply-flex center-content search-field\">\n+          <i class=\"fa fa-search social-icons\"></i>\n+          <input id=\"search\" type=\"search\" autocomplete=\"off\" placeholder=\"Search by username or name\" required>\n+          <i class=\"fa fa-close social-icons\"></i>\n+        </div>\n+      </form>\n+    <div class=\"apply-flex center-content\">\n+    </div>\n+      <div class=\"search-results\">\n+        <table>\n+          <thead>\n+            <tr>\n+              <th>Search Results</th>\n+            </tr>\n+          </thead>\n+          <tbody class=\"search-results-tbody large-font\">\n+            <tr>\n+              <td>\n+                No results found!\n+              </td>\n+            </tr>\n+          </tbody>\n+        </table>\n+      </div>\n+    </div>\n+  </div>\n+\n+  <div class=\"contributors-cards\">\n+  {% for contributor in contributors_meta_review_details %}\n+  <div class=\"contributor-card meta-reviewer apply-flex\" login=\"{{ contributor.login }}\" name=\"{{ contributor.name }}\">\n+    <div class=\"contributor-image meta-reviewer-image\">\n+      <img src=\"//github.com/{{ contributor.login }}.png/?size=210\"\n+           alt=\"user-image\">\n+      <div class=\"top-right large-font bold-text\">\n+        {{ contributor.rank }}\n+      </div>\n+    </div>\n+    <div class=\"metareviewer-details\">\n+      <div class=\"contributor-details-part-1 column-flex\">\n+        <a class=\"bold-text large-font\" href=\"//github.com","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODM0MjcyMw==","createdAt":"2019-08-08T07:05:01Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2019-08-08T07:03:31Z","lastEditedAt":null,"updatedAt":"2019-08-08T07:03:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODUwODYzMQ==","url":"https://github.com/coala/community/pull/254#issuecomment-518508631","bodyText":"Do not close GitLab issues from here as mentioned earlier.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODE0OTIwNQ==","createdAt":"2019-08-06T05:52:55Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-06T05:33:45Z","lastEditedAt":null,"updatedAt":"2019-08-06T05:33:45Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565267955000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/261","number":261,"title":" gamification/: Redesign the webpage ","body":"The redesigned webpages provides a enhanced\nUI/UX design to web-page with additional\nfunctionality of searching the contributors.\nCloses #260","comments":8,"createdAt":"2019-06-15T12:22:25Z","updatedAt":"2019-08-08T12:39:15Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/261","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxODUxOTc5Nw==","url":"https://github.com/coala/community/pull/261#issuecomment-518519797","bodyText":"@sks444 Should I add filters to gamification leaderboard or is it OK, like now we currently have ?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-06T06:14:26Z","lastEditedAt":null,"updatedAt":"2019-08-06T06:14:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODUyMzg1OA==","url":"https://github.com/coala/community/pull/261#issuecomment-518523858","bodyText":"@KVGarg, What Kind of filter do you want to add?","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-08-06T06:28:44Z","lastEditedAt":null,"updatedAt":"2019-08-06T06:28:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODUyNDg3NQ==","url":"https://github.com/coala/community/pull/261#issuecomment-518524875","bodyText":"Filter results based on score range, badges earned, and the level!","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-06T06:31:51Z","lastEditedAt":null,"updatedAt":"2019-08-06T06:31:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODUyNzkxOQ==","url":"https://github.com/coala/community/pull/261#issuecomment-518527919","bodyText":"Sounds good, add it.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240ODE1MTg2OQ==","createdAt":"2019-08-06T06:42:35Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-08-06T06:41:09Z","lastEditedAt":null,"updatedAt":"2019-08-06T06:41:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxOTUwMDU5Ng==","url":"https://github.com/coala/community/pull/261#issuecomment-519500596","bodyText":"Added Filters 😇 Can you check the corresponding UI for it and do some random tests whether they are working or not?","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-08-08T12:39:15Z","lastEditedAt":null,"updatedAt":"2019-08-08T12:39:15Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565092088000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/263","number":263,"title":" Add netlify-OAuth ","body":"The contributor can sign-in with either\nGitHub or GitLab account provided the\nuser is member of the organization. The\nvalidation is being performed via a http\nrequest which accepts the access_token\nretrieved from the netlify o-authentication.\nCloses #262","comments":6,"createdAt":"2019-07-11T20:24:24Z","updatedAt":"2019-08-06T11:48:08Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/263","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUxMDY0MjI1Ng==","url":"https://github.com/coala/community/pull/263#issuecomment-510642256","bodyText":"The OAuth can be tested at: https://5d27924ef3c5950008706b3a--determined-goldstine-6dc504.netlify.com/","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-07-11T20:30:02Z","lastEditedAt":null,"updatedAt":"2019-07-11T20:30:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODU1NTUyNw==","url":"https://github.com/coala/community/pull/263#issuecomment-518555527","bodyText":"@KVGarg, can you show the preview of working OAuth flow on your fork?","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"createdAt":"2019-08-06T07:58:14Z","lastEditedAt":null,"updatedAt":"2019-08-06T07:58:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUxODYzMTk3MA==","url":"https://github.com/coala/community/pull/263#issuecomment-518631970","bodyText":"@sks444 The deployed version doesn't have OAuth token validation which is being checked in webservices. Omitted that check in testing\nhttps://5d32ca24a5e8d3c334303751--determined-goldstine-6dc504.netlify.com/","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-08-06T11:36:37Z","lastEditedAt":"2019-08-06T11:48:08Z","updatedAt":"2019-08-06T11:48:08Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1565022047000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/267","number":267,"title":"community/: Add a joining netlify form","body":"The netlify form will ask some particular\ninputs that will be used for validating\nthe user - whether the user is eligible\nto be a organization member. The checks for\nit have been defined in coala webservices API\nwhich will be accepting form-submissions over\na cron-job defined. After the user submits the\nform, a success message will be displayed.\nCloses #89, #266","comments":6,"createdAt":"2019-07-20T18:10:57Z","updatedAt":"2019-08-05T16:20:47Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/267","comments":[]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false},{"id":"MDU6TGFiZWwxMjE4ODkyMjU4","name":"area/dependencies","color":"96f7bf","default":false}]},{"repoOwner":"coala","repoName":"coala-bears","labels":[{"id":"MDU6TGFiZWwzMjcwNDg3MDQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MDU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjA=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjE=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjI=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjM=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMjczNjcxMTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2Mjg=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Mjg=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Nzg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwzMjg1NDk4MDg=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNjA=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNzU=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjk2MDc1MDg=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDg1MjY=","name":"type/test","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MDg5MTQ=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDkwMDM=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODU=","name":"importance/low","color":"70e870","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODY=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkzNDM=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4MjA=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4Nzk=","name":"type/codestyle","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMjk2MTE5MTA=","name":"status/needs design","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MTI5MjU=","name":"status/needs info","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0MzI=","name":"status/wontfix/accepting patches","color":"555555","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0OTA=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjk2MTkwMDc=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzNDg2NTk2MzE=","name":"area/lintbears","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzNDg2NjY2Mzk=","name":"area/documentation","color":"c5def5","default":false},{"id":"MDU6TGFiZWwzNzM3ODc1MzY=","name":"type/dependencies","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MTMxOTIzMjY=","name":"bear proposal","color":"ADFF2F","default":false},{"id":"MDU6TGFiZWw0MzQ3MDk3MDU=","name":"long-term-project","color":"c5def5","default":false},{"id":"MDU6TGFiZWw0MzYzMTQwNDQ=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM4MDEzOTY=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTI0NDE0NjI=","name":"hacktoberfest","color":"b60205","default":false},{"id":"MDU6TGFiZWw0ODM0OTI0NTY=","name":"area/newsettings","color":"006b75","default":false},{"id":"MDU6TGFiZWw0ODM1MDQ5MzQ=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw1MDkwMjY0MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1MjgxMjIzMjY=","name":"area/genericbears","color":"D01975","default":false},{"id":"MDU6TGFiZWw1NjYwNzE5MDc=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODUzMzI3NDM=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw1OTQ2NzgyMDM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw1OTQ2Nzg1MzM=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWw1OTQ3MzEwMDQ=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjAxNjU4NzE=","name":"area/ci","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjcxMTYzNTY=","name":"type/performance","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2ODA4NDE3NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDE2NzkwNjI=","name":"area/tests","color":"c5def5","default":false},{"id":"MDU6TGFiZWw3NDE2NzYzNDI=","name":"language/ruby","color":"dd27c8","default":false},{"id":"MDU6TGFiZWw3NDY4NzgxOTQ=","name":"status/needs discussion","color":"ead40e","default":false},{"id":"MDU6TGFiZWw4Njc1NzI1Mjk=","name":"area/install","color":"0b14bc","default":false},{"id":"MDU6TGFiZWw4NzU1ODUyMzk=","name":"status/non-free","color":"8f0dbf","default":false},{"id":"MDU6TGFiZWw5MDY3ODUyNjk=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5ODMyMTYyMDQ=","name":"needs rebase","color":"f4cd69","default":false},{"id":"MDU6TGFiZWw5OTg4NjE3NjI=","name":"type/style","color":"168fe0","default":false},{"id":"MDU6TGFiZWwxMDAwNDgxMzgw","name":"type/spelling","color":"50b5f4","default":false},{"id":"MDU6TGFiZWwxMDQzNzk3ODQ0","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMTAxMTE5MjMz","name":"language/c","color":"a0e5e4","default":false},{"id":"MDU6TGFiZWwxMTAxMTMzNDcx","name":"language/go","color":"4345cc","default":false},{"id":"MDU6TGFiZWwxMTAxMTM1MDA2","name":"language/python","color":"0a8474","default":false},{"id":"MDU6TGFiZWwxMTAxMTQ1MDYx","name":"area/globalbears","color":"3cc9a8","default":false},{"id":"MDU6TGFiZWwxMTAxMTc1MjE3","name":"area/nativebear","color":"36c14d","default":false},{"id":"MDU6TGFiZWwxMTAxMTgxMDYx","name":"language/javascript","color":"5abbfc","default":false},{"id":"MDU6TGFiZWwxMTAxMTg4MDY1","name":"language/perl","color":"b867ea","default":false}]},{"repoOwner":"coala","repoName":"documentation","labels":[{"id":"MDU6TGFiZWwzNDcxNjk0NTI=","name":"bug","color":"fc2929","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTM=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTQ=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTU=","name":"help wanted","color":"159818","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTc=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw0Mjc0OTIzNjA=","name":"area/documentation","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjE=","name":"cool and awesome","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjI=","name":"difficulty/medium","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzc=","name":"difficulty/newcomer","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzg=","name":"importance/low","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0Mjc0OTY0NjQ=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDE2Nzc=","name":"status/needs design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDIyNjA=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDE=","name":"area/usability","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDI=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc1MDMzOTg=","name":"importance/high","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0Mjc1MTA5MTA=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MzEwMDExMDM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0MzEwMDExODE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0MzE0MzQ5NzY=","name":"size/S","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0MzE0MzgxNjg=","name":"size/XS","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzE0NTI5ODI=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzIwNTAyMDE=","name":"size/M","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM1Njc4Mzk=","name":"size/L","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw0NDQzODgyODI=","name":"size/XL","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTI0NDIxNDQ=","name":"hacktoberfest","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTYxMTgwNzE=","name":"review carefully!","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTg1NDUwOTI=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MTAyNTE0Nzk=","name":"initiatives/gci","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDQxODE=","name":"status/stale","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NjE4MjQ3MDA=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw4MTg0NDUyNjI=","name":"status/needs info","color":"9bf2cf","default":false},{"id":"MDU6TGFiZWw4MzI2ODAwMzk=","name":"status/needs discussion","color":"f4ab8b","default":false},{"id":"MDU6TGFiZWw4NDcxMDQ2MDk=","name":"area/ci","color":"f49093","default":false},{"id":"MDU6TGFiZWwxMjA4OTMyMDQ0","name":"type/bug","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMjIzMDYwNDc4","name":"area/sphinx","color":"47c3cc","default":false}]},{"repoOwner":"coala","repoName":"projects","labels":[{"id":"MDU6TGFiZWw1MjAwNDU5MzU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5MzY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDE=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4MTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4Mzg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMTI2NDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMzA5ODU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MjAxMzgzMjY=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjAxNDgxNzc=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxNzM1OTQ=","name":"design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw1MjAxOTc5MjE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAyMDYyNTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA0MTEwMTk=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3MTI=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3NjI=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MjE5NDE2MTI=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjQzODgxMzc=","name":"community_team","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTM4ODMyNzI=","name":"Project Proposal","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDM5NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzAzNzE5NDQ=","name":"initiatives/gci","color":"fc7d0f","default":false},{"id":"MDU6TGFiZWw3MzgxODI0MzY=","name":"upstream","color":"ffb5bd","default":false},{"id":"MDU6TGFiZWw3NTE3NjE0NTk=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw4MzYzNjUxNjE=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw4MzcxMjA3OTA=","name":"importance/low","color":"2fe055","default":false},{"id":"MDU6TGFiZWw4MzcxNjY3NTk=","name":"difficulty/medium","color":"9dea67","default":false},{"id":"MDU6TGFiZWw4MzcxNzIzOTI=","name":"importance/medium","color":"f2db30","default":false},{"id":"MDU6TGFiZWw4NjIyMDU3MjQ=","name":"status/needs info","color":"71fcb7","default":false},{"id":"MDU6TGFiZWw4NzgxODM1OTc=","name":"status/blocked","color":"e56994","default":false},{"id":"MDU6TGFiZWw5MTIxODM1MTc=","name":"status/needs design","color":"f9a7df","default":false},{"id":"MDU6TGFiZWwxMDUxNDM0NjAx","name":"status/wontfix","color":"f2a90c","default":false}]},{"repoOwner":"coala","repoName":"devops","labels":[{"id":"MDU6TGFiZWw2MDkyNjQ4MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjQyMjkyMzE=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWw2MjU3NzY1MzM=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWw2MjgxNTMwNjk=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxNTM3MTA=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTM4NzI=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWw2MjgxNTQwODM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjgxNTQzMjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxNTQ4OTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTUwODE=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWw2MjgxNTU0NjE=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWw2MjgxOTMwNTQ=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjgxOTMxNTM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTM4OTE=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTQwMjk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQxMDI=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTQyMDI=","name":"status/invalid","color":"668866","default":false},{"id":"MDU6TGFiZWw2MjgxOTQzMzA=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ1MDg=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ2NTI=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ3NTk=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ5MDg=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTUwMjk=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTUyMjA=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTUzOTA=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjgxOTU3OTU=","name":"area/security","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxOTYwMzQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MjgxOTY5Nzg=","name":"scope/internal","color":"D01975","default":false},{"id":"MDU6TGFiZWw2MjgxOTczNjQ=","name":"area/ops","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjgxOTg4Nzc=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NDk5ODc=","name":"service/venus","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAwNDQ=","name":"service/nginx","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxNTg=","name":"service/cobot","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxODc=","name":"service/cherry-pick-bot","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAzMzU=","name":"type/new service","color":"006b75","default":false},{"id":"MDU6TGFiZWw2Mjg0NTA0NzA=","name":"area/web development","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTE2MDI=","name":"area/communication","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTY3ODQ=","name":"service/landing","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyMjI=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyOTQ=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0MTQ=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0Nzg=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1Mjk=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1NjU=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MzI5MTU0MTY=","name":"service/corobo","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTcyOTQ=","name":"area/CD","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTkwNjM=","name":"service/ikari","color":"ab78ff","default":false},{"id":"MDU6TGFiZWw2MzI5MTkzMzI=","name":"area/monitoring","color":"aaff88","default":false},{"id":"MDU6TGFiZWw2MzI5MTk4MjE=","name":"cool and awesome","color":"aaffdd","default":false},{"id":"MDU6TGFiZWw2ODA4NDM4MTA=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2ODU2MDMyOTc=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw3MzI4OTUxMTk=","name":"initiatives/gci","color":"936ed3","default":false},{"id":"MDU6TGFiZWw5MjY3OTg3OTc=","name":"process/pending_review","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"corobo","labels":[{"id":"MDU6TGFiZWw2MDExMDE3NTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjE=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDEzNTc0Mjk=","name":"importance/low","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2MDEzNTc0ODc=","name":"importance/high","color":"e99695","default":false},{"id":"MDU6TGFiZWw2MDEzNTc1OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MDEzNTc2NzE=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MDEzNTc3NDk=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWw2MDEzOTE3OTY=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MDEzOTMxOTY=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDE0MDQ2Mjc=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MDM2ODcwMTM=","name":"stretch goal","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3Mjk=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3NjU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MTQ2OTYxMzE=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MTUyODM2MTU=","name":"ready","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUyODUyMzI=","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUzNjgxODU=","name":"documentation","color":"5319e7","default":true},{"id":"MDU6TGFiZWw2MTcwNzUyNDA=","name":"pr available","color":"cccccc","default":false},{"id":"MDU6TGFiZWw2MTg0MTI1ODU=","name":"cool and awesome","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTg0MTMzNTk=","name":"plugin proposal","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2MTg5NjE5MDA=","name":"poll","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTk4NTMxNzU=","name":"design","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjI2MjMyMzE=","name":"decided","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjI3MTg0NTE=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw2MjI3MTg1MDE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjM0MDU1NTE=","name":"difficulty/newcomer","color":"65c8ff","default":false},{"id":"MDU6TGFiZWw2MjQyMzcwMjQ=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjQ3NzY3ODg=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjY3NDQ0MzY=","name":"deployment","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjY4NTIxOTM=","name":"non-existent","color":"ededed","default":false},{"id":"MDU6TGFiZWw2Mjc5NjE1Mjc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjkyODg1NDY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzA0NTUwODk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzIxMzg2ODg=","name":"upstream","color":"b60205","default":false},{"id":"MDU6TGFiZWw2NTc1NjY5MTY=","name":"gsoc2017/phase3","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2ODA4NDM3ODg=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MjY4ODMyMzQ=","name":"initiatives/gci","color":"f79e9f","default":false},{"id":"MDU6TGFiZWw3Mzk0NDIzNzA=","name":"status/cannot reproduce","color":"000000","default":false},{"id":"MDU6TGFiZWw3NDI4NzcxODA=","name":"importance/medium","color":"ddba61","default":false},{"id":"MDU6TGFiZWw3NTg3MDM2MzA=","name":"area/ui","color":"dd02cf","default":false},{"id":"MDU6TGFiZWw3NTg3MDQzNDU=","name":"area/labhub","color":"63ccf9","default":false},{"id":"MDU6TGFiZWw3NTg3MDUyNDY=","name":"area/security","color":"fc6805","default":false},{"id":"MDU6TGFiZWw3NjE3NTA5NTc=","name":"type/markdown","color":"2a0582","default":false},{"id":"MDU6TGFiZWw3NjE3OTU1NzE=","name":"type/regex","color":"d453e2","default":false},{"id":"MDU6TGFiZWw3NjE5NDI5ODM=","name":"area/errbot","color":"ed3d9b","default":false},{"id":"MDU6TGFiZWw3NjE5NDMzNTQ=","name":"backend/gitter","color":"7cf9c1","default":false},{"id":"MDU6TGFiZWw3NjE5NDQwMDg=","name":"backend/zulip","color":"0a546b","default":false},{"id":"MDU6TGFiZWw3NjE5NjI2ODg=","name":"backend/telegram","color":"e26858","default":false},{"id":"MDU6TGFiZWw3NjIwMTE4MTI=","name":"area/config","color":"60a1db","default":false},{"id":"MDU6TGFiZWw3NjIwMTIyNTM=","name":"area/tests","color":"5facd8","default":false},{"id":"MDU6TGFiZWw3NjIwMjkyMTI=","name":"status/needs info","color":"8e081e","default":false},{"id":"MDU6TGFiZWw3NjI0MTgyNzI=","name":"area/documentation","color":"969bdd","default":false},{"id":"MDU6TGFiZWw3NjY2Mzc1ODM=","name":"area/ci","color":"ab04e8","default":false},{"id":"MDU6TGFiZWw5OTg4NjM0Nzc=","name":"type/style","color":"567c09","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5NjE2","name":"hoster/github","color":"e57be5","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5ODMz","name":"hoster/gitlab","color":"bc4c32","default":false}]},{"repoOwner":"coala","repoName":"community","labels":[{"id":"MDU6TGFiZWw3NjYwMTk2MDQ=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDU=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDY=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDc=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDg=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDk=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTE=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NjYyMTU3OTg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw3NjYyMTU4NzE=","name":"initiatives/gci","color":"ff9549","default":false},{"id":"MDU6TGFiZWw3NjYyMTY0Njc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NjYyMzg3OTg=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3NjYzMjMwMjc=","name":"needs design","color":"db81c7","default":false},{"id":"MDU6TGFiZWw3Njc0MjMzMDE=","name":"process/wip","color":"f2d815","default":false},{"id":"MDU6TGFiZWw3Njg2NDc1NDg=","name":"upstream","color":"fcc4c5","default":false},{"id":"MDU6TGFiZWw3Njg3NTEyNzk=","name":"importance/low","color":"9cc6fc","default":false},{"id":"MDU6TGFiZWw3Njg3NTE3Nzc=","name":"importance/high","color":"e0401d","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyMTA=","name":"process/pending review","color":"9fe589","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyNDg=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4Njc2NDE=","name":"status/blocked","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzAxOTkwODc=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw3NzAzMDQ4MTY=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzA0MTk0MTA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzI2MTI0MzU=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzM5NDU4NjU=","name":"importance/medium","color":"ccf945","default":false},{"id":"MDU6TGFiZWw3Nzg1OTkxODY=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Nzg3Mzk5MjY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE1NTY4MzY=","name":"initiatives/gsoc","color":"ed95c1","default":false},{"id":"MDU6TGFiZWw3ODIxMTU0NDM=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODI1Njg2MjA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjI0MDg1NzI=","name":"area/ci","color":"4c95ad","default":false},{"id":"MDU6TGFiZWw5OTg4NjI4MTU=","name":"type/style","color":"93f486","default":false},{"id":"MDU6TGFiZWwxMDA1MjQ0Mjgx","name":"area/tests","color":"7b68dd","default":false},{"id":"MDU6TGFiZWwxMDQ0MDM3Njc3","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMDg3MDEwODA4","name":"area/documentation","color":"f296f0","default":false},{"id":"MDU6TGFiZWwxMDk1NjQxNTQ4","name":"importance/critical","color":"e21f98","default":false}]},{"repoOwner":"coala","repoName":"gci-leaders","labels":[{"id":"MDU6TGFiZWw3NjkyMjg1NTg=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NTk=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjA=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjE=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjI=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjM=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjQ=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjU=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw3Njk1ODQ5MjM=","name":"difficulty/low","color":"59db91","default":false},{"id":"MDU6TGFiZWw3Njk1ODQ5OTY=","name":"initiatives/gci","color":"98e9f9","default":false},{"id":"MDU6TGFiZWw3Njk1ODY4NTA=","name":"difficulty/newcomer","color":"ffcce2","default":false},{"id":"MDU6TGFiZWw3Njk1OTg5ODY=","name":"difficulty/medium","color":"ff91cd","default":false},{"id":"MDU6TGFiZWw3Njk2NDAyNjg=","name":"difficulty/high","color":"a667f7","default":false},{"id":"MDU6TGFiZWw3Njk2NDExNDk=","name":"status/blocked","color":"cc4158","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzMjE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzNjI=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk3MDg3Mjg=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw3Njk5MzE3MTA=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzAxMDE1MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw3NzA3MzgyMDU=","name":"area/ui","color":"442cf7","default":false},{"id":"MDU6TGFiZWw3NzA4MTQwMjk=","name":"type/bug","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzA5NDg4ODk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzEwOTQ3Njg=","name":"area/i18n","color":"ffccee","default":false},{"id":"MDU6TGFiZWw3NzQ3MTc4OTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzQ4ODI2ODM=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzYyNjk4NzM=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE0NTgxMTg=","name":"importance/low","color":"fcf1a6","default":false},{"id":"MDU6TGFiZWw3ODQxMDY0NDM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5NDc0NjU=","name":"importance/high","color":"dd007d","default":false},{"id":"MDU6TGFiZWwxMDUxMjg1NDUx","name":"importance/critical","color":"ed0e79","default":false},{"id":"MDU6TGFiZWwxMTE1NTM4NDMy","name":"importance/medium","color":"c595db","default":false}]},{"repoOwner":"coala","repoName":"gh-board","labels":[{"id":"MDU6TGFiZWw3NTM5MzE2OTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTg=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTk=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDA=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDE=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDI=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NTU4MTU1MzQ=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NzQyNDUxNDA=","name":"difficulty/low","color":"07eded","default":false},{"id":"MDU6TGFiZWw3NzQyNDU1NDI=","name":"initiatives/gci","color":"e5ce95","default":false},{"id":"MDU6TGFiZWw3ODU0MzEyMDI=","name":"difficulty/medium","color":"d30a8d","default":false},{"id":"MDU6TGFiZWw4NDA0NzA4Njk=","name":"process/wip","color":"ead483","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2MTg=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2OTE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NjI0NjY2NTA=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAwMjc1NTE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAxOTA1NTk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAyMzc5NDc=","name":"difficulty/high","color":"e88e53","default":false},{"id":"MDU6TGFiZWw5MjIzNjc2Nzg=","name":"importance/medium","color":"65f23e","default":false},{"id":"MDU6TGFiZWw5MjM2MTYxMTQ=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5ODk3ODk=","name":"upstream","color":"6ded77","default":false},{"id":"MDU6TGFiZWw5MzA1Mzc3NzI=","name":"importance/low","color":"1394a0","default":false},{"id":"MDU6TGFiZWw5MzgzMTQ4MjE=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTg5MTUwMDI=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk1OTUyODA=","name":"difficulty/newcomer","color":"33a7bf","default":false},{"id":"MDU6TGFiZWwxMDExNjQ0Mjg5","name":"area/dependencies","color":"ef88a2","default":false},{"id":"MDU6TGFiZWwxMDY1MDEyNTI5","name":"in progress","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"coala-html","labels":[{"id":"MDU6TGFiZWwzMjY1MzQ5Nzg=","name":"type/bug","color":"fc2929","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5Nzk=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODE=","name":"status/wontfix/accepting patches","color":"777777","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODI=","name":"status/invalid","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODM=","name":"status/need-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODQ=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NTU=","name":"difficulty/newcomer","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NjQ=","name":"difficulty/low","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3OTU=","name":"difficulty/medium","color":"fef2c0","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4MzE=","name":"difficulty/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4NzU=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzM=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzQ=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzODI=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTA=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTE=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTk=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMzI5NTk1MTI=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWwzMzMxMzU3NDk=","name":"status/blocked","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzMyNDI0NDU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMzMzNDE1OTY=","name":"status/needs design","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYyMDYxOTQ=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYzMTg0NTQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2ODA4NDQzNjM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzEwMjg5NTk=","name":"initiatives/gci","color":"f78589","default":false}]},{"repoOwner":"coala","repoName":"landing-frontend","labels":[{"id":"MDU6TGFiZWw1MjE2NDU4MTA=","name":"type/bug","color":"ee0701","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTE=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTQ=","name":"status/wontfix/not happening","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTU=","name":"needs-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTY=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjE3MDE0OTc=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjE3MDE1MzY=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MzE1MzAwNjE=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MzE1OTEwMDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE2MTQzODU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE3NDgxNzc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE4MzA2ODg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzIxNzM0NTY=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1NTk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1OTE=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjM0NzM5Mjg=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2NjkxNjAwOTA=","name":"status/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjkxNjEwODA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODc1ODI1ODg=","name":"area/documentation","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDU3ODgwNzM=","name":"needs-discussion","color":"aa52aa","default":false},{"id":"MDU6TGFiZWw3MzAzNTE0NDc=","name":"initiatives/gci","color":"f2d5a4","default":false},{"id":"MDU6TGFiZWw3NDgzMDE3MzE=","name":"difficulty/high","color":"f762d7","default":false},{"id":"MDU6TGFiZWw3ODQ4Mzc1NjQ=","name":"difficulty/medium","color":"dbc255","default":false},{"id":"MDU6TGFiZWw3ODYxOTA3MzM=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4Njc1Nzc2MzI=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw4ODM0MDIxNDI=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4OTU1MjU0NDM=","name":"enhancement","color":"097287","default":true}]},{"repoOwner":"coala","repoName":"coalaCSS","labels":[{"id":"MDU6TGFiZWw2MDk0OTkxNzc=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzg=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzk=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODA=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODE=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODI=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODM=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw2MzAzNTEzNDg=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzAzNTE1MjU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgyNTE=","name":"area/landing-frontend","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgzMzY=","name":"area/projects","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MzQ3OTg0ODU=","name":"design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MzQ3OTkzMjk=","name":"importance/critical","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mzk0NDkwNTc=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODEwMjUyMzA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzMwNDk1MjU=","name":"initiatives/gci","color":"ee79f7","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE0Nzc=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE2MDY=","name":"importance/low","color":"99c1dd","default":false},{"id":"MDU6TGFiZWw3Mzk1MDA1OTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NTEzMzIxMzA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDkxMjMwMjk=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw4NDkxMjM4OTY=","name":"difficulty/medium","color":"0052cc","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2019-08-23T05:57:30Z"},{"repoOwner":"coala","repoName":"coala-bears","isPrivate":false,"lastSeenAt":"2019-08-23T07:31:13Z"},{"repoOwner":"coala","repoName":"documentation","isPrivate":false,"lastSeenAt":"2019-08-20T15:26:01Z"},{"repoOwner":"coala","repoName":"projects","isPrivate":false,"lastSeenAt":"2019-08-22T22:19:27Z"},{"repoOwner":"coala","repoName":"devops","isPrivate":false,"lastSeenAt":"2018-08-18T10:36:44Z"},{"repoOwner":"coala","repoName":"corobo","isPrivate":false,"lastSeenAt":"2019-07-30T06:37:53Z"},{"repoOwner":"coala","repoName":"community","isPrivate":false,"lastSeenAt":"2019-08-15T08:49:18Z"},{"repoOwner":"coala","repoName":"gci-leaders","isPrivate":false,"lastSeenAt":"2019-02-24T20:30:03Z"},{"repoOwner":"coala","repoName":"gh-board","isPrivate":false,"lastSeenAt":"2019-08-18T09:23:03Z"},{"repoOwner":"coala","repoName":"coala-html","isPrivate":false,"lastSeenAt":"2019-06-12T09:15:25Z"},{"repoOwner":"coala","repoName":"landing-frontend","isPrivate":false,"lastSeenAt":"2019-08-18T07:18:27Z"},{"repoOwner":"coala","repoName":"coalaCSS","isPrivate":false,"lastSeenAt":"2018-11-23T05:07:32Z"}]}