{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561700301000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6036","number":6036,"title":"Unused and double imports","body":"There are a couple of unused and double imports in ShowAppliedPatchesActionTest.py and GeneratePatchesActionTest.py\ndifficulty/newcomer","comments":3,"createdAt":"2019-06-27T14:55:05Z","updatedAt":"2019-06-28T05:38:21Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1562122596000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6034","number":6034,"title":"`color_letter` function is buggy","body":"color_letter function in ConsoleInteraction module does not work as expected when there is an upper case letter after the upper case letter in parenthesis.\ne.g. If input line is Edit (C)ommit Message then output is Edit (M)ommit Message","comments":3,"createdAt":"2019-06-22T12:45:11Z","updatedAt":"2019-07-03T02:56:36Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561479723000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6035","number":6035,"title":"Coala counting whitespaces pressent aftercode.","body":"DESCRIPTION\nIts good to count white unnecessary white spaces present in the code but it will be more practical if Coala counts only those unnecessary whitespaces which are present between the words of the code, not those which are present at the end of the line as those have no effect on the code output as well as on the screen of the user.\nSTEPS TO REPRODUCE\nTake any general code in account .\nfor example - import sys\na = int(input())(SPACE)(SPACE)(SPACE)\nACTUAL RESULT\nYour source code contains trailing whitespaces. Those usually have no meaning. Please consider removing them.\nEXPECTED RESULT\nNo output statement or not any suggestion from Coala\nREPRODUCIBILITY\n100%\nADDITIONAL INFORMATION\nThe code is written on idle (of python) and not tested via any other ide like pycharm or anaconda.","comments":1,"createdAt":"2019-06-24T21:53:37Z","updatedAt":"2019-06-25T16:22:03Z","closedAt":null,"state":"open","user":{"login":"AayusHTiw","avatarUrl":"https://avatars2.githubusercontent.com/u/44875047?v=4"},"owner":{"login":"AayusHTiw","avatarUrl":"https://avatars2.githubusercontent.com/u/44875047?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560790983000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6024","number":6024,"title":"[BUG] --filter-by wrong section name throws exception","body":"Command Run\n$ coala --json --filter-by some_unknown_filter_that_doesnt_exist\n\nOutput\n[ERROR][14:47:33] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][14:47:33] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/amol/GitHub/coala/coalib/coala_main.py\", line 170, in run_coala\n    filtered = apply_filters(filters, sections=all_sections)\n\n  File \"/home/amol/GitHub/coala/coalib/parsing/FilterHelper.py\", line 81, in apply_filters\n    items = applier(filter_name, filter_args, items)\n\n  File \"/home/amol/GitHub/coala/coalib/parsing/FilterHelper.py\", line 101, in _apply_section_filter\n    raise InvalidFilterException(filter_name)\n\ncoalib.parsing.InvalidFilterException.InvalidFilterException: 'some_unknown_filter_that_doesnt_exist' is an invalid filter. Available filters: can_detect, can_fix, language, section_tags\n\n\nDuring handling of the above exception, another exception occurred:\n\n\nTraceback (most recent call last):\n\n  File \"/home/amol/GitHub/coala/coalib/coala_main.py\", line 174, in run_coala\n    console_printer.print(ex)\n\nAttributeError: 'NoneType' object has no attribute 'print'\n\n{\n  \"results\": {}\n}\n\nPossible Solution\nThe proper error message must be shown indicating such a filter doesn't exist instead of throwing a raw error message.\nInvalidFilterException exception is being correctly emitted by the bear, just need to catch it and show an error message.\ndifficulty/low","comments":1,"createdAt":"2019-06-10T09:20:02Z","updatedAt":"2019-06-17T17:03:03Z","closedAt":null,"state":"open","user":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"owner":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560926760000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6028","number":6028,"title":"Asyncio.py incompatible with Python 3.7","body":"#5891 introduced this file from an external repository, as it has a useful chunk of code, but it also includes code which is incompatible with Python 3.7\nLine 14: from·asyncio·import·async\nAlso on lower versions of python it triggers pycodestyle warning: W606 'async' and 'await' are reserved keywords starting with Python 3.7\nIdeally we enhance moban to somehow deal with this, where we want a subset of a file from an external source.\nAnother alternative is to move this chunk of code into a separate package, which we only need for older versions of Python, and in the separate repo/package the history/attribution/copyright of the chunk of code can be shown clearly.","comments":0,"createdAt":"2019-06-19T06:46:00Z","updatedAt":"2019-06-19T06:46:00Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561114374000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6031","number":6031,"title":"Add Language definition for TOML","body":"https://github.com/antlr/grammars-v4/tree/master/toml","comments":0,"createdAt":"2019-06-21T10:52:54Z","updatedAt":"2019-06-21T10:52:54Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561197699000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6033","number":6033,"title":"Running \"coala --json --show-bears --show-details\" is raising errors","body":"Build error:\nNotImplementedError: This platform doesn't have any of the specified package manager(s): brew\nOS System: Linux","comments":0,"createdAt":"2019-06-22T09:59:47Z","updatedAt":"2019-06-22T10:01:39Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1559815974000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6000","number":6000,"title":"coala_main.py and other files exceed line length according to PEP8 standard","body":"coala_main.py, coalib/core/Core.py, setup.py, and some other files exceed the line length limit according to PEP8 standard.\nSome of them can possibly be solved by adjusting the imports and docstrings.","comments":2,"createdAt":"2019-03-20T14:17:00Z","updatedAt":"2019-06-06T10:12:54Z","closedAt":null,"state":"open","user":{"login":"roshnet","avatarUrl":"https://avatars3.githubusercontent.com/u/40719199?v=4"},"owner":{"login":"roshnet","avatarUrl":"https://avatars3.githubusercontent.com/u/40719199?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560157407000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6012","number":6012,"title":"API Documentation build failing","body":"https://readthedocs.org/projects/coala-api/builds/\nTraceback (most recent call last):\n  File \"./setup.py\", line 156, in <module>\n    call(BuildDocsCommand.apidoc_command)\nAttributeError: type object 'BuildDocsCommand' has no attribute 'apidoc_command'\n\nLast passed build - https://readthedocs.org/projects/coala-api/builds/7341849/","comments":7,"createdAt":"2019-04-18T10:44:49Z","updatedAt":"2019-06-10T09:03:27Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560155504000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/6023","number":6023,"title":"[BUG] An unknown error occurred","body":"OS: Fedora 30\nKernel: 5.0.17-300.fc30.x86_64\nCommand Run\n$ coala --show-bears --filter-by language Java --show-details --json\n\nConsole Output\n[WARNING][13:56:33] show_description parameter is deprecated\n[WARNING][13:56:33] show_params parameter is deprecated\n[ERROR][13:56:33] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][13:56:33] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/amol/GitHub/coala/coalib/coala.py\", line 87, in main\n    args)\n\n  File \"/home/amol/GitHub/coala/coalib/output/ConsoleInteraction.py\", line 1010, in show_bears\n    print_bears(bears, show_description, show_params, console_printer, args)\n\n  File \"/home/amol/GitHub/coala/coalib/output/ConsoleInteraction.py\", line 971, in print_bears\n    separators=(',', ': '))\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 201, in encode\n    chunks = list(chunks)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 325, in _iterencode_list\n    yield from chunks\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 439, in _iterencode\n    yield from _iterencode(o, _current_indent_level)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 439, in _iterencode\n    yield from _iterencode(o, _current_indent_level)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 429, in _iterencode\n    yield from _iterencode_list(o, _current_indent_level)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 325, in _iterencode_list\n    yield from chunks\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/json/encoder.py\", line 438, in _iterencode\n    o = _default(o)\n\n  File \"/home/amol/GitHub/coala/coalib/output/JSONEncoder.py\", line 32, in default\n    for member in get_public_members(obj)}\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/site-packages/coala_utils/decorators.py\", line 135, in get_public_members\n    return {attr: getattr(obj, attr) for attr in dir(obj)\n\n  File \"/home/amol/anaconda3/envs/coala/lib/python3.7/site-packages/coala_utils/decorators.py\", line 137, in <dictcomp>\n    and not hasattr(getattr(obj, attr), '__call__')}\n\n  File \"/home/amol/.local/lib/python3.7/site-packages/dependency_management/requirements/DistributionRequirement.py\", line 205, in package_managers\n    self.get_package_managers())\n\n  File \"/home/amol/.local/lib/python3.7/site-packages/dependency_management/requirements/DistributionRequirement.py\", line 193, in get_package_managers\n    '{}'.format(','.join(self.packages.keys())))\n\nNotImplementedError: This platform doesn't have any of the specified package manager(s): apt_get\n\n--json argument was not built to handle a command like this, should show proper error message than a raw exception\ndifficulty/medium+","comments":0,"createdAt":"2019-06-10T08:31:44Z","updatedAt":"2019-06-10T08:31:44Z","closedAt":null,"state":"open","user":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"owner":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561905298000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5977","number":5977,"title":"Loosen pin on cli-helpers","body":"Like #5975 , newer versions of cli-helpers are also acceptable, but we should prevent the next major release.","comments":3,"createdAt":"2019-02-07T03:31:29Z","updatedAt":"2019-06-30T14:34:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"C0ffeeMachine","avatarUrl":"https://avatars1.githubusercontent.com/u/43390126?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560400943000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5983","number":5983,"title":"Setting.py: Change property name","body":"The line_number property for Setting class should be changed to start_line_number as it is the starting line number of a setting.\ndifficulty/newcomer","comments":7,"createdAt":"2019-02-10T06:04:00Z","updatedAt":"2019-06-13T04:42:23Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560926333000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5985","number":5985,"title":"Appveyor build fails","body":"Appveyor build is failing due to the recent changes in coalib\\misc\\Asyncio.py in the commit 58b9f41 . It is due QuotesBear.\nThe build report is here\nThe snippet of error:\nExecuting section python...\n**** QuotesBear [Section <empty> | Severity NORMAL] ****\n!    ! You do not use the preferred quotation marks. Preferred mark: '\n[----] c:\\projects\\coala\\coalib\\misc\\Asyncio.py\n[++++] c:\\projects\\coala\\coalib\\misc\\Asyncio.py\n[   1] \"\"\"Asyncio backports for Python 3.4.3 compatibility.\"\"\"\n[   1] '\"\"Asyncio backports for Python 3.4.3 compatibility.\"\"'\n\narea/ci difficulty/newcomer","comments":12,"createdAt":"2019-02-10T15:51:08Z","updatedAt":"2019-06-19T06:38:53Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1562116165000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5988","number":5988,"title":"coala_main.py: Documentation error","body":"coala/coalib/coala_main.py\n    \n    \n        Lines 93 to 94\n      in\n      acb2341\n    \n    \n    \n    \n\n        \n          \n               :param force_show_patch:        If set to True, a patch will be always \n        \n\n        \n          \n                                               shown. (Using ApplyPatchAction.) \n        \n    \n  \n\n\nThis uses ShowPatchAction not ApplyPatchAction","comments":8,"createdAt":"2019-02-13T10:29:35Z","updatedAt":"2019-07-03T01:09:25Z","closedAt":null,"state":"open","user":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"owner":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4"},"assignee":{"login":"xurror","avatarUrl":"https://avatars1.githubusercontent.com/u/45751948?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561724871000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5529","number":5529,"title":"'nltk_data' cache directory should be hidden","body":"It's so annoying, it downloads stuff directly to your home directory,  I have to delete it every time. When I run coala, the cycle goes on and on. It so annoying.","comments":5,"createdAt":"2018-06-15T05:17:18Z","updatedAt":"2019-06-28T12:27:51Z","closedAt":null,"state":"open","user":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"owner":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"assignee":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/upstream","color":"5319e7"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561925955000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3558","number":3558,"title":"provide a default value when a settings-question is left empty","body":"From @abit2:\n\nhttp://pastebin.com/jkPW92mA\nit should be something like this:\nPlease provide a value for use_spaces (True or False), when you don't enter something, the default is >True:\nTo reproduce the problem just skip the use_space without giving any boolean value.","comments":16,"createdAt":"2017-01-14T18:16:08Z","updatedAt":"2019-06-30T20:19:15Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562122665000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2931","number":2931,"title":"Upgrade infer","body":"InferBear is using infer 0.7.0 , which is very old and requires a lot of hand holding to keep building.\nIt would be good if a newer version of infer was supported.","comments":1,"createdAt":"2019-07-03T02:55:09Z","updatedAt":"2019-07-03T02:57:45Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561945925000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2929","number":2929,"title":"TextLintBear dependency on textlint-plugin-asciidoc-loose","body":"https://www.npmjs.com/package/textlint-plugin-asciidoc-loose is a compiled package, which is a build and security problem, especially considering it has not been maintained for three years.\nIt also has limited functionality https://github.com/azu/textlint-plugin-asciidoc-loose#limitation\nhttps://www.npmjs.com/package/textlint-plugin-asciidoctor is better in every regard, and is a drop in replacement for textlint-plugin-asciidoc-loose","comments":0,"createdAt":"2019-07-01T01:52:05Z","updatedAt":"2019-07-01T01:52:05Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561953136000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2930","number":2930,"title":"PHPLintBear fails on Windows","body":"The regex used doesnt match on Windows, which cuts the lines into parts.","comments":0,"createdAt":"2019-07-01T03:47:44Z","updatedAt":"2019-07-01T03:52:16Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560219792000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2923","number":2923,"title":"sqlint fails to compile on Windows","body":"Root of the problem is libpg_query doesnt compile on Windows.\nOur Gemfile should deselect this gem automatically, or that should be done upstream in the gem or its deps.","comments":0,"createdAt":"2019-06-11T02:23:12Z","updatedAt":"2019-06-11T02:23:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560223228000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2924","number":2924,"title":"elm-format version setting","body":"We currently work around this with a touch elm-package.json\nYou should either run elm-format from the directory containing\nyour elm.json (for Elm 0.19) or elm-package.json (for Elm 0.18),\nor tell me which version of Elm with --elm-version=0.19 or --elm-version=0.18\n\nIt looks like the bear needs a language setting, and it also needs to check which version if neither elm.json or elm-package.json can be found.","comments":0,"createdAt":"2019-06-11T02:43:10Z","updatedAt":"2019-06-11T03:20:28Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560224432000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2925","number":2925,"title":"elm-format tests fail on Windows","body":"______________________ ElmLintBearTest.test_bad_function ______________________\nself = <tests.elm.ElmLintBearTest.ElmLintBearTest testMethod=test_bad_function>\n    def test_bad_function(self):\n        prepared = prepare_file(bad_file_function.splitlines(),\n                                filename=None, create_tempfile=True)\n    \n        with prepared as (file, fname):\n            self.check_results(\n                self.uut,\n                bad_file_function.splitlines(),\n                [Result.from_values('ElmLintBear',\n                                    message=result_message_bad_function,\n                                    file=fname,\n                                    line=6,\n                                    severity=RESULT_SEVERITY.NORMAL)],\n                filename=fname,\n>               create_tempfile=False)\ntests\\elm\\ElmLintBearTest.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox\\py34-noskip-pip-npm-gem-go-perl-php-java8-adhoc-win-check-codecov\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:285: in check_results\n    sorted(bear_output), sorted(results))\n.tox\\py34-noskip-pip-npm-gem-go-perl-php-java8-adhoc-win-check-codecov\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n    self.assertEqual(observed_result, expected_result)\nE   AssertionError: Lists differ: [] != [<Result object(id=0xad4fdabc99ba422d83f08[728 chars]e70>]\nE   \nE   Second list contains 1 additional elements.\nE   First extra element 0:\nE   <Result object(id=0xad4fdabc99ba422d83f0858b9493b7a2, origin='ElmLintBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmplcowwzch', line=6, column=None) at 0x836f170>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmplcowwzch', line=6, column=None) at 0x836f6f0>) at 0x836faf0>,), severity=NORMAL, confidence=100, message='text (toString [four)\\x1b[31m\\n                         ^\\x1b[0m\\nI am looking for one of the following things:\\n\\n    \",\"\\n    \"]\"\\n    a field access like .name\\n    an expression\\n    an infix operator like +\\n    an infix operator like `andThen`\\n    more letters in this name\\n    whitespace', aspect=NoneType, applied_actions={}) at 0x836fe70>\nE   \nE   Diff is 783 characters long. Set self.maxDiff to None to see it\n\nhttps://ci.appveyor.com/project/jayvdb/coala-bears/builds/25185330/job/ab5vyu8usei0qpg2","comments":0,"createdAt":"2019-06-11T03:40:32Z","updatedAt":"2019-06-11T03:40:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560225938000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2926","number":2926,"title":"SpellCheckBear doesnt work on Windows","body":"The test gives no clue why.\nThe tests and commit message in b3be8f3 and discussion in #629 and #747 also give no clues.","comments":0,"createdAt":"2019-06-11T04:05:38Z","updatedAt":"2019-06-11T04:05:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560105019000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2915","number":2915,"title":"PowerShell linter","body":"https://github.com/PowerShell/PSScriptAnalyzer","comments":0,"createdAt":"2019-06-09T18:30:19Z","updatedAt":"2019-06-09T18:30:19Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560105795000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2916","number":2916,"title":"PHPCodeSnifferBearTest fails on Windows due to line endings","body":"___________________ PHPCodeSnifferBearTest.test_valid_files ___________________\nself = <coalib.testing.LocalBearTestHelper.verify_local_bear.<locals>.LocalBearTest testMethod=test_valid_files>\n    def test_valid_files(self):\n        self.assertIsInstance(valid_files, (list, tuple))\n        for file in valid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=True,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:401: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:174: in check_validity\n    aspects=aspects,\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:287: in check_results\n    self.assertComparableObjectsEqual(bear_output, results)\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n    self.assertEqual(observed_result, expected_result)\nE   AssertionError: Lists differ: [<Result object(id=0xd82c4e2175084ce584f02[508 chars]fd0>] != []\nE   \nE   First list contains 1 additional elements.\nE   First extra element 0:\nE   <Result object(id=0xd82c4e2175084ce584f02be686784cbf, origin='PHPCodeSnifferBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp21qj_zwo.php', line=1, column=1) at 0x8638cb0>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp21qj_zwo.php', line=1, column=1) at 0x8619ef0>) at 0x8638f70>,), severity=NORMAL, confidence=100, message='End of line character is invalid; expected \"\\\\n\" but found \"\\\\r\\\\n\"', aspect=NoneType, applied_actions={}) at 0x8638fd0>\nE   \nE   - [<Result object(id=0xd82c4e2175084ce584f02be686784cbf, origin='PHPCodeSnifferBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp21qj_zwo.php', line=1, column=1) at 0x8638cb0>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp21qj_zwo.php', line=1, column=1) at 0x8619ef0>) at 0x8638f70>,), severity=NORMAL, confidence=100, message='End of line character is invalid; expected \"\\\\n\" but found \"\\\\r\\\\n\"', aspect=NoneType, applied_actions={}) at 0x8638fd0>]\nE   + []\n---------------------------- Captured stdout call -----------------------------\nPHPCodeSnifferBear: Exit code 2\ntests\\php\\PHPCodeSnifferBearTest.py .F\n______________ PHPCodeSnifferBearLineLengthTest.test_valid_files ______________\nself = <coalib.testing.LocalBearTestHelper.verify_local_bear.<locals>.LocalBearTest testMethod=test_valid_files>\n    def test_valid_files(self):\n        self.assertIsInstance(valid_files, (list, tuple))\n        for file in valid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=True,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:401: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:174: in check_validity\n    aspects=aspects,\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:287: in check_results\n    self.assertComparableObjectsEqual(bear_output, results)\n.tox\\py36-noreqs-pip-npm-gem-go-perl-php-java8-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n    self.assertEqual(observed_result, expected_result)\nE   AssertionError: Lists differ: [<Result object(id=0xc6d5c36de6464abf9887f[508 chars]db0>] != []\nE   \nE   First list contains 1 additional elements.\nE   First extra element 0:\nE   <Result object(id=0xc6d5c36de6464abf9887fadc17081c51, origin='PHPCodeSnifferBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmpuw13bgin.php', line=1, column=1) at 0x861ff10>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmpuw13bgin.php', line=1, column=1) at 0x861f7b0>) at 0x861fc30>,), severity=NORMAL, confidence=100, message='End of line character is invalid; expected \"\\\\n\" but found \"\\\\r\\\\n\"', aspect=NoneType, applied_actions={}) at 0x8606db0>\nE   \nE   - [<Result object(id=0xc6d5c36de6464abf9887fadc17081c51, origin='PHPCodeSnifferBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmpuw13bgin.php', line=1, column=1) at 0x861ff10>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmpuw13bgin.php', line=1, column=1) at 0x861f7b0>) at 0x861fc30>,), severity=NORMAL, confidence=100, message='End of line character is invalid; expected \"\\\\n\" but found \"\\\\r\\\\n\"', aspect=NoneType, applied_actions={}) at 0x8606db0>]\nE   + []\n\nhttps://ci.appveyor.com/project/jayvdb/coala-bears/builds/25153020/job/xaquawe2t34l59a3","comments":0,"createdAt":"2019-06-09T18:43:15Z","updatedAt":"2019-06-09T18:43:15Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560133443000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2917","number":2917,"title":"Terraform linter","body":"https://github.com/wata727/tflint","comments":0,"createdAt":"2019-06-10T02:24:03Z","updatedAt":"2019-06-10T02:24:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560242871000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2918","number":2918,"title":"Create choco package for luacheck","body":"Due to problems regarding https://gitlab.com/coala/package_manager/issues/260 , the easiest approach for coala-bears is to create a package for 32bit luacheck, which can then be run in the 64 bit jobs.\nThis could be done by adding it to the choco lua package\nrjpcomputing/luaforwindows#126\nOr creating a new choco package which depends on either the lua or luarocks packages.","comments":1,"createdAt":"2019-06-10T06:52:53Z","updatedAt":"2019-06-11T08:47:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560174781000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2919","number":2919,"title":"R bears fail on Windows","body":"The quoting of the filenames is causing problems on Windows.\n______________________ RLintBearTest.test_invalid_files _______________________\nself = <coalib.testing.LocalBearTestHelper.LocalBearTest testMethod=test_invalid_files>\n    def test_invalid_files(self):\n        self.assertIsInstance(invalid_files, (list, tuple))\n        for file in invalid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=False,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n.tox\\py34-pip-npm-gem-go-perl-php-java8-r-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:412: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox\\py34-pip-npm-gem-go-perl-php-java8-r-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:183: in check_validity\n    aspects=aspects,\n.tox\\py34-pip-npm-gem-go-perl-php-java8-r-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:228: in check_invalidity\n    self.assertNotEqual(len(bear_output), 0, msg=msg)\nE   AssertionError: 0 == 0 : The local bear 'RLintBear' yields no result although it should.\n---------------------------- Captured stdout call -----------------------------\nRLintBear: Discarded stderr: Error: unexpected input in \"lintr::lint(C:\\\"\nExecution halted\nRLintBear: Exit code 1\nRLintBear: No output; skipping processing\ntests\\r\\RLintBearTest.py .                                               [ 93%]\n\ntests\\r\\FormatRBearTest.py .F\n_____________________ FormatRBearTest.test_invalid_files ______________________\nself = <coalib.testing.LocalBearTestHelper.LocalBearTest testMethod=test_invalid_files>\n    def test_invalid_files(self):\n        self.assertIsInstance(invalid_files, (list, tuple))\n        for file in invalid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=False,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n.tox\\py34-pip-npm-gem-go-perl-php-java8-r-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:412: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox\\py34-pip-npm-gem-go-perl-php-java8-r-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:183: in check_validity\n    aspects=aspects,\n.tox\\py34-pip-npm-gem-go-perl-php-java8-r-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:228: in check_invalidity\n    self.assertNotEqual(len(bear_output), 0, msg=msg)\nE   AssertionError: 0 == 0 : The local bear 'FormatRBear' yields no result although it should.\n---------------------------- Captured stdout call -----------------------------\nFormatRBear: Discarded stderr: Error: unexpected input in \"formatR::tidy_source(blank=TRUE,source=C:\\\"\nExecution halted\nFormatRBear: Exit code 1\nFormatRBear: No output; skipping processing\ntests\\r\\FormatRBearTest.py .F\nhttps://ci.appveyor.com/project/jayvdb/coala-bears/builds/25167755/job/ol1aystbk99owyen","comments":0,"createdAt":"2019-06-10T13:53:01Z","updatedAt":"2019-06-10T13:53:01Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560182555000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2920","number":2920,"title":"ShellCheckBear tests fail on Windows","body":"ShellCheck is emitting an extra result on Windows, breaking the tests.\n__________________ SmallFileTest.test_valid_files ________________________\nself = <coalib.testing.LocalBearTestHelper.LocalBearTest testMethod=test_valid_files>\n    def test_valid_files(self):\n        self.assertIsInstance(valid_files, (list, tuple))\n        for file in valid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=True,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:401: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:174: in check_validity\n    aspects=aspects,\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:287: in check_results\n    self.assertComparableObjectsEqual(bear_output, results)\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n    self.assertEqual(observed_result, expected_result)\nE   AssertionError: Lists differ: [<Result object(id=0x1dc6381484ed4c51aa434[494 chars]5b0>] != []\nE   \nE   First list contains 1 additional elements.\nE   First extra element 0:\nE   <Result object(id=0x1dc6381484ed4c51aa43403357d07624, origin='ShellCheckBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp2ihvhxxq', line=1, column=1) at 0x82f6eb0>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp2ihvhxxq', line=1, column=1) at 0x82f6210>) at 0x82f6310>,), severity=MAJOR, confidence=100, message=\"Literal carriage return. Run script through tr -d '\\\\r' . [SC1017]\", aspect=NoneType, applied_actions={}) at 0x82f65b0>\nE   ...:174: in check_validity\n....\nE   - [<Result object(id=0x1dc6381484ed4c51aa43403357d07624, origin='ShellCheckBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp2ihvhxxq', line=1, column=1) at 0x82f6eb0>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmp2ihvhxxq', line=1, column=1) at 0x82f6210>) at 0x82f6310>,), severity=MAJOR, confidence=100, message=\"Literal carriage return. Run script through tr -d '\\\\r' . [SC1017]\", aspect=NoneType, applied_actions={}) at 0x82f65b0>]\nE   + []\n---------------------------- Captured stdout call -----------------------------\nShellCheckBear: No output; skipping processing\nShellCheckBear: Exit code 1\ntests\\shell\\ShellCheckBearTest.py ....F\n_____________________ ShellCheckBearTest.test_valid_files _____________________\nself = <coalib.testing.LocalBearTestHelper.LocalBearTest testMethod=test_valid_files>\n    def test_valid_files(self):\n        self.assertIsInstance(valid_files, (list, tuple))\n        for file in valid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=True,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:401: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py    aspects=aspects,\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:287: in check_results\n    self.assertComparableObjectsEqual(bear_output, results)\n.tox\\py34-pip-npm-gem-go-perl-php-java8-adhoc-win-check-noskip\\lib\\site-packages\\coalib\\testing\\LocalBearTestHelper.py:138: in assertComparableObjectsEqual\n    self.assertEqual(observed_result, expected_result)\nE   AssertionError: Lists differ: [<Result object(id=0x2f9f84f76ba428a98b56e[2677 chars]310>] != []\nE   \nE   First list contains 5 additional elements.\nE   First extra element 0:\nE   <Result object(id=0x2f9f84f76ba428a98b56e4cc893067d, origin='ShellCheckBear', affected_code=(<SourceRange object(start=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmpobgmucrz', line=1, column=1) at 0x7279430>, end=<SourcePosition object(file='C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\tmpobgmucrz', line=1, column=1) at 0x7279170>) at 0x7279370>,), severity=MAJOR, confidence=100, message=\"Literal carriage return. Run script through tr -d '\\\\r' . [SC1017]\", aspect=NoneType, applied_actions={}) at 0x7279e30>\nE   \nE   Diff is 2744 characters long. Set self.maxDiff to None to see it.","comments":0,"createdAt":"2019-06-10T16:02:35Z","updatedAt":"2019-06-10T16:02:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560214885000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2921","number":2921,"title":"CSSAutoPrefixBear: autoprefixer detection fails on Windows","body":"On Windows the autoprefixer check is failing\n        prerequisite_check_command=('postcss', '--use', 'autoprefixer'),\n        prerequisite_check_fail_message='Autoprefixer is not installed.')\n\nThe following runs on the command line without error\ntouch foo.css\n./node_modules/.bin/postcss --use autoprefixer foo.css","comments":0,"createdAt":"2019-06-11T01:01:25Z","updatedAt":"2019-06-11T01:01:25Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561816080000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2922","number":2922,"title":"AlexBear fails alex detection on Windows","body":"The alex package could not be verified. Please ensure that the package that has been installed is the one to 'Catch insensitive, inconsiderate writing'. This can be verified by running alex --help and seeing what it does.\n\nWhen I print the exception, it is\n\n[WinError 2] The system cannot find the file specified\n\nHowever alex.cmd is in node_modules/.bin , and alex --help on the command line works.","comments":1,"createdAt":"2019-06-11T01:54:11Z","updatedAt":"2019-06-29T13:48:00Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561086747000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2885","number":2885,"title":"pip fails to upgrade six on python3.4","body":"jsonschema has dropped support for Python3.4 as reported on gitter by @bkhanale.\nThe failure is here.","comments":22,"createdAt":"2019-03-06T07:12:38Z","updatedAt":"2019-06-21T03:12:27Z","closedAt":null,"state":"open","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560435307000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2898","number":2898,"title":"Create linter bear for Pyright","body":"https://github.com/Microsoft/pyright\na static type checker for python, written in typescript","comments":1,"createdAt":"2019-03-26T13:09:34Z","updatedAt":"2019-06-13T14:15:07Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"shivank1234","avatarUrl":"https://avatars3.githubusercontent.com/u/40287383?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560767519000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2909","number":2909,"title":"csvlint fails on AppVeyor due to missing libcurl.dll","body":"CSVLintBear: Discarded stderr: C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/ffi-1.11.1-x64-mingw32/lib/ffi/library.rb:145:in `block in ffi_lib': Could not open library 'libcurl': The specified module could not be found.\n (LoadError)\n.\nCould not open library 'libcurl.dll': The specified module could not be found.\n.\nCould not open library 'libcurl.so.4': The specified module could not be found.\n.\nCould not open library 'libcurl.so.4.dll': The specified module could not be found.","comments":3,"createdAt":"2019-05-25T16:37:19Z","updatedAt":"2019-06-17T10:31:59Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1559658971000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2911","number":2911,"title":"test-requirements.txt: ruamel.yaml install fails for Python 3.4","body":"Looking at https://pypi.org/project/ruamel.yaml:\n\n0.15.95 (2019-05-16):\n\nwheel files for Python 3.4 no longer provided (Python 3.4 EOL 2019-03-18).\n\n\nI don't find ruamel.yaml in mobans template, so I guess this is project specific requirement.","comments":1,"createdAt":"2019-06-02T13:00:48Z","updatedAt":"2019-06-04T14:36:11Z","closedAt":"2019-06-04T14:36:10Z","state":"closed","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560087278000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2913","number":2913,"title":"RubySecurityBear failure","body":"On Ruby 2.6\n______________ RubySecurityBearTest.test_warning_with_value_code ______________\nself = <tests.ruby.RubySecurityBearTest.RubySecurityBearTest testMethod=test_warning_with_value_code>\n    def test_warning_with_value_code(self):\n        results = self.get_results(self.test_files)\n        messages = [result.message for result in results]\n        self.assertEqual(\"'Evaluation' (in 'eval(params)'): \"\n>                        'User input in eval.', messages[1])\nE       IndexError: list index out of range\ntests\\ruby\\RubySecurityBearTest.py:38: IndexError\n---------------------------- Captured stdout call -----------------------------\nRubySecurityBear: Discarded stderr: Loading scanner...\nProcessing application in C:/projects/coala-bears/tests/ruby/brakeman_test_files\nProcessing gems...\n[Notice] Detected Rails 4 application\nProcessing configuration...\n[Notice] Escaping HTML by default\nParsing files...\nProcessing initializers...\nProcessing libs...\nProcessing routes...          \n[Notice] No route information found\nProcessing templates...       \nProcessing data flow in templates...\nProcessing models...          \nProcessing controllers...     \nProcessing data flow in controllers...\nIndexing call sites...        \nRunning checks in parallel...\n - CheckBasicAuth\n - CheckBasicAuthTimingAttack\n - CheckCrossSiteScripting\n - CheckContentTag\n - CheckCreateWith\n - CheckDefaultRoutes\n - CheckDeserialize\n - CheckDetailedExceptions\n - CheckDigestDoS\n - CheckDynamicFinders\n - CheckEscapeFunction\n - CheckEvaluation\n - CheckExecute\n - CheckFileAccess\n - CheckFileDisclosure\n - CheckFilterSkipping\n - CheckForgerySetting\n - CheckHeaderDoS\n - CheckI18nXSS\n - CheckJRubyXML\n - CheckJSONEncoding\n - CheckJSONParsing\n - CheckLinkTo\n - CheckLinkToHref\n - CheckMailTo\n - CheckMassAssignment\n - CheckMimeTypeDoS\n - CheckModelAttrAccessible\n - CheckModelAttributes\n - CheckModelSerialize\n - CheckNestedAttributes\n - CheckNestedAttributesBypass\n - CheckNumberToCurrency\n - CheckPermitAttributes\n - CheckQuoteTableName\n - CheckRedirect\n - CheckRegexDoS\n - CheckRender\n - CheckRenderDoS\n - CheckRenderInline\n - CheckResponseSplitting\n - CheckRouteDoS\n - CheckSafeBufferManipulation\n - CheckSanitizeMethods\n - CheckSelectTag\n - CheckSelectVulnerability\n - CheckSend\n - CheckSendFile\n - CheckSessionManipulation\n - CheckSessionSettings\n - CheckSimpleFormat\n - CheckSingleQuotes\n - CheckSkipBeforeFilter\n - CheckSQL\n - CheckSQLCVEs\n - CheckSSLVerify\n - CheckStripTags\n - CheckSymbolDoSCVE\n - CheckTranslateBug\n - CheckUnsafeReflection\n - CheckValidationRegex\n - CheckWithoutProtection\n - CheckXMLDoS\n - CheckYAMLParsing\nChecks finished, collecting results...\nGenerating report...\ntests\\ruby\\RubySecurityBearTest.py F\n____________ RubySecurityBearTest.test_warning_without_value_code _____________\nself = <tests.ruby.RubySecurityBearTest.RubySecurityBearTest testMethod=test_warning_without_value_code>\n    def test_warning_without_value_code(self):\n        results = self.get_results(self.test_files)\n        messages = [result.message for result in results]\n        self.assertEqual(\"'ValidationRegex': Insufficient validation \"\n                         \"for 'name' using /^[a-zA-Z]+$/. Use \"\n>                        r'\\A and \\z as anchors', messages[0])\nE       IndexError: list index out of range\ntests\\ruby\\RubySecurityBearTest.py:45: IndexError\n---------------------------- Captured stdout call -----------------------------\nRubySecurityBear: Discarded stderr: Loading scanner...\nProcessing application in C:/projects/coala-bears/tests/ruby/brakeman_test_files\nProcessing gems...\n[Notice] Detected Rails 4 application\nProcessing configuration...\n[Notice] Escaping HTML by default\nParsing files...\nProcessing initializers...\nProcessing libs...\nProcessing routes...          \n[Notice] No route information found\nProcessing templates...       \nProcessing data flow in templates...\nProcessing models...          \nProcessing controllers...     \nProcessing data flow in controllers...\nIndexing call sites...        \nRunning checks in parallel...\n - CheckBasicAuth\n - CheckBasicAuthTimingAttack\n - CheckCrossSiteScripting\n - CheckContentTag\n - CheckCreateWith\n - CheckDefaultRoutes\n - CheckDeserialize\n - CheckDetailedExceptions\n - CheckDigestDoS\n - CheckDynamicFinders\n - CheckEscapeFunction\n - CheckEvaluation\n - CheckExecute\n - CheckFileAccess\n - CheckFileDisclosure\n - CheckFilterSkipping\n - CheckForgerySetting\n - CheckHeaderDoS\n - CheckI18nXSS\n - CheckJRubyXML\n - CheckJSONEncoding\n - CheckJSONParsing\n - CheckLinkTo\n - CheckLinkToHref\n - CheckMailTo\n - CheckMassAssignment\n - CheckMimeTypeDoS\n - CheckModelAttrAccessible\n - CheckModelAttributes\n - CheckModelSerialize\n - CheckNestedAttributes\n - CheckNestedAttributesBypass\n - CheckNumberToCurrency\n - CheckPermitAttributes\n - CheckQuoteTableName\n - CheckRedirect\n - CheckRegexDoS\n - CheckRender\n - CheckRenderDoS\n - CheckRenderInline\n - CheckResponseSplitting\n - CheckRouteDoS\n - CheckSafeBufferManipulation\n - CheckSanitizeMethods\n - CheckSelectTag\n - CheckSelectVulnerability\n - CheckSend\n - CheckSendFile\n - CheckSessionManipulation\n - CheckSessionSettings\n - CheckSimpleFormat\n - CheckSingleQuotes\n - CheckSkipBeforeFilter\n - CheckSQL\n - CheckSQLCVEs\n - CheckSSLVerify\n - CheckStripTags\n - CheckSymbolDoSCVE\n - CheckTranslateBug\n - CheckUnsafeReflection\n - CheckValidationRegex\n - CheckWithoutProtection\n - CheckXMLDoS\n - CheckYAMLParsing\nChecks finished, collecting results...\nGenerating report...\n\nhttps://ci.appveyor.com/project/jayvdb/coala-bears/builds/25149958/job/q0arqr4l0c3ln449","comments":0,"createdAt":"2019-06-09T13:34:38Z","updatedAt":"2019-06-09T13:34:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560967734000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2914","number":2914,"title":"PowerShell formatter","body":"https://github.com/DTW-DanWard/PowerShell-Beautifier seems to be the best option","comments":2,"createdAt":"2019-06-09T18:29:50Z","updatedAt":"2019-06-19T18:08:54Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562122703000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2664","number":2664,"title":"Travis CI failing due to infer breakage with javalib","body":"Recent travis build for python 3.6 fail while trying to build infer.\nError: No implementations provided for the following modules:\n         CamomileLibrary__UTF8 referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__UChar referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\n         CamomileLibrary__ referenced from /home/travis/.opam/system/lib/javalib/javalib.cmxa(Javalib_pack)\nCommand exited with code 2.\nmake[2]: *** [build_java] Error 10\nmake[2]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer/src'\nmake[1]: *** [java] Error 2\nmake[1]: Leaving directory `/home/travis/infer-linux64-v0.7.0/infer'\nmake: *** [java] Error 2\n  compilation failure; you can try running\n    make clean\n    ./build-infer.sh java\nThe command \".ci/deps.opam.sh\" failed and exited with 1 during .\n\nhttps://travis-ci.org/coala/coala-bears/jobs/413575180","comments":6,"createdAt":"2018-08-08T17:04:00Z","updatedAt":"2019-07-03T02:58:23Z","closedAt":null,"state":"open","user":{"login":"saksham189","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"saksham189","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/ci","color":"d93f0b"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"},{"name":"type/dependencies","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561953584000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2387","number":2387,"title":"Bear Proposal: PHPLint","body":"According to http://www.icosaedro.it/phplint/phplint2/doc/tutorial.htm\nThis is wrong code:\nif( ! $f = fopen(\"myFile.txt\", \"r\") ){\n    die(\"error opening the file\");\n}\n\nCan't get PHPLintBear to detect it.\nInfact can't get PHPLintBear to detect any error in my code","comments":5,"createdAt":"2018-03-29T18:10:13Z","updatedAt":"2019-07-01T03:59:44Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70e870"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560134350000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/2297","number":2297,"title":"Add vale lint bear","body":"https://github.com/ValeLint/vale","comments":2,"createdAt":"2018-02-27T20:36:29Z","updatedAt":"2019-06-10T02:39:10Z","closedAt":null,"state":"open","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"chetasr","avatarUrl":"https://avatars3.githubusercontent.com/u/12978868?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562122282000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/issues/1825","number":1825,"title":"InferBearTest: test_invalid_files fails on Python 3.4","body":"From https://circleci.com/gh/coala/coala-bears/6480?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link with pyenv local 3.4.3:\n_______________________ InferBearTest.test_invalid_files _______________________\n\nself = <coalib.testing.LocalBearTestHelper.LocalBearTest testMethod=test_invalid_files>\n\n    def test_invalid_files(self):\n        self.assertIsInstance(invalid_files, (list, tuple))\n        for file in invalid_files:\n            self.check_validity(self.uut,\n                                file.splitlines(keepends=True),\n                                filename,\n                                valid=False,\n                                force_linebreaks=force_linebreaks,\n                                create_tempfile=create_tempfile,\n>                               tempfile_kwargs=tempfile_kwargs)\n\n../.pyenv/versions/3.4.3/lib/python3.4/site-packages/coalib/testing/LocalBearTestHelper.py:302: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../.pyenv/versions/3.4.3/lib/python3.4/site-packages/coalib/testing/LocalBearTestHelper.py:92: in check_validity\n    settings=settings,\n../.pyenv/versions/3.4.3/lib/python3.4/site-packages/coalib/testing/LocalBearTestHelper.py:132: in check_invalidity\n    self.assertNotEqual(len(bear_output), 0, msg=msg)\nE   AssertionError: 0 == 0 : The local bear 'InferBear' yields no result although it should.","comments":2,"createdAt":"2017-06-08T11:56:51Z","updatedAt":"2019-07-03T02:51:22Z","closedAt":"2019-07-03T02:51:22Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/tests","color":"c5def5"},{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1560626681000,"issue":{"htmlUrl":"https://github.com/coala/documentation/issues/597","number":597,"title":"Add documentation on how to write configuration in TOML","body":"","comments":0,"createdAt":"2019-06-15T19:24:41Z","updatedAt":"2019-06-15T19:24:41Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1561488265000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/649","number":649,"title":"Use latest coala-bears","body":"Semaphore needs to install coala from the master branch here.\nOne of the reason for this is the build failure due to InvalidLinkBear which was fixed recently.","comments":4,"createdAt":"2019-02-27T17:49:55Z","updatedAt":"2019-06-25T18:44:25Z","closedAt":null,"state":"open","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[{"name":"bug","color":"ee0701"},{"name":"difficulty/newcomer","color":"65c8ff"}]}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1561488818000,"issue":{"htmlUrl":"https://github.com/coala/corobo/issues/594","number":594,"title":"Minor refractoring in labhub tests","body":"Do minor changes in labhub_tests as asked here #572 (review) (see below)\ndifficulty/low","comments":11,"createdAt":"2018-07-31T10:23:08Z","updatedAt":"2019-06-25T18:53:38Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"ssg2526","avatarUrl":"https://avatars2.githubusercontent.com/u/22372359?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65c8ff"},{"name":"importance/low","color":"f9d0c4"}]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1560599065000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/260","number":260,"title":"Redesign the gamification leaderboard web-apge","body":"","comments":0,"createdAt":"2019-06-15T11:44:25Z","updatedAt":"2019-06-15T11:44:25Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1560598914000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/258","number":258,"title":"Redesign the contributors webpage acc. to decided design","body":"Decided design: https://gitlab.com/coala/GSoC/gsoc-2019/uploads/dd5e7fe75e3bbd7496c0e6a839e9fc27/Contributors.png","comments":0,"createdAt":"2019-06-15T11:41:54Z","updatedAt":"2019-06-15T11:41:54Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1560599028000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/259","number":259,"title":"Redesign the meta-review webpage","body":"","comments":0,"createdAt":"2019-06-15T11:43:48Z","updatedAt":"2019-06-15T11:43:48Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1560598681000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/255","number":255,"title":"Redesign the community website homepage","body":"","comments":0,"createdAt":"2019-06-15T11:38:01Z","updatedAt":"2019-06-15T11:38:01Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1560598745000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/256","number":256,"title":"Redesign the community website build-logs webpage","body":"The new web-page should combine info.txt and logs webpages.","comments":0,"createdAt":"2019-06-15T11:39:05Z","updatedAt":"2019-06-15T11:39:05Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1560598799000,"issue":{"htmlUrl":"https://github.com/coala/community/issues/257","number":257,"title":"Redesign the GCI students web-page ","body":"","comments":0,"createdAt":"2019-06-15T11:39:59Z","updatedAt":"2019-06-15T11:39:59Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561912347000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6039","number":6039,"title":"ConsoleInteraction: Modify color_letter function","body":"This modifies color_letter function to run as correctly\nwhen there is a uppercase letter after \"the\" uppercase\nletter in parenthesis and also if action has a associated warning then\nit gets highlighted.\nFixes #6034","comments":1,"createdAt":"2019-06-30T12:06:52Z","updatedAt":"2019-06-30T16:32:27Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6039","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUwNzAzMTM1MQ==","url":"https://github.com/coala/coala/pull/6039#issuecomment-507031351","bodyText":"If action has warning the it looks something like","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-30T12:14:26Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:14:26Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561998450000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6037","number":6037,"title":"ConsoleInteraction.py: Show context for diffs","body":"Shows context for the affected lines\nCloses #2745\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-28T03:49:33Z","updatedAt":"2019-07-01T16:27:30Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6037","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODU0OTA3Ng==","url":"https://github.com/coala/coala/pull/6037#discussion_r298549076","bodyText":"The code in else block looks almost the same as code in if block - why not merge them together?","diffHunk":"@@ -466,6 +554,27 @@ def print_results_no_input(log_printer,\n     \"\"\"\n     for result in result_list:\n \n+        console_printer.print('\\n'+format_lines(result.message, symbol='!'))\n+        if hasattr(section, 'name'):\n+            console_printer.print(\n+                '**** {bear} [Section: {section} | Severity: '\n+                '{severity}] ****'\n+                .format(\n+                    bear=result.origin,\n+                    section=section.name,\n+                    severity=RESULT_SEVERITY.__str__(\n+                                              result.severity\n+                                              )\n+                        ),\n+                color=RESULT_SEVERITY_COLORS[result.severity])\n+        else:   # pragma: no cover\n+            console_printer.print(\n+                '**** {bear} [Section {section} | Severity '\n+                '{severity}] ****'\n+                .format(bear=result.origin, section='<empty>',\n+                        severity=RESULT_SEVERITY.__str__(result.severity)),\n+                color=RESULT_SEVERITY_COLORS[result.severity])","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2019-06-28T10:57:22Z","lastEditedAt":"2019-06-28T10:57:47Z","updatedAt":"2019-06-28T10:57:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODU2MjQwNA==","url":"https://github.com/coala/coala/pull/6037#discussion_r298562404","bodyText":"Fixed it. The code can be merged in print_results function as well","diffHunk":"@@ -466,6 +554,27 @@ def print_results_no_input(log_printer,\n     \"\"\"\n     for result in result_list:\n \n+        console_printer.print('\\n'+format_lines(result.message, symbol='!'))\n+        if hasattr(section, 'name'):\n+            console_printer.print(\n+                '**** {bear} [Section: {section} | Severity: '\n+                '{severity}] ****'\n+                .format(\n+                    bear=result.origin,\n+                    section=section.name,\n+                    severity=RESULT_SEVERITY.__str__(\n+                                              result.severity\n+                                              )\n+                        ),\n+                color=RESULT_SEVERITY_COLORS[result.severity])\n+        else:   # pragma: no cover\n+            console_printer.print(\n+                '**** {bear} [Section {section} | Severity '\n+                '{severity}] ****'\n+                .format(bear=result.origin, section='<empty>',\n+                        severity=RESULT_SEVERITY.__str__(result.severity)),\n+                color=RESULT_SEVERITY_COLORS[result.severity])","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2019-06-28T11:51:47Z","lastEditedAt":null,"updatedAt":"2019-06-28T11:51:47Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561975829000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6038","number":6038,"title":"Create a .travis2.yml","body":"Add CI travis service\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-06-30T03:12:25Z","updatedAt":"2019-07-01T10:10:29Z","closedAt":"2019-07-01T10:10:29Z","state":"closed","user":{"login":"jievince","avatarUrl":"https://avatars2.githubusercontent.com/u/38901892?v=4"},"owner":{"login":"jievince","avatarUrl":"https://avatars2.githubusercontent.com/u/38901892?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6038","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUwNzAyOTYzNA==","url":"https://github.com/coala/coala/pull/6038#issuecomment-507029634","bodyText":"Is this PR related to some issue, if yes then refer it in commit message otherwise create an issue and ask on our gitter channel and get assigned to it.","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-30T11:47:15Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:47:15Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561400638000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6027","number":6027,"title":" TomlConfParser.py: Support Toml","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-06-18T06:50:43Z","updatedAt":"2019-06-24T18:23:58Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6027","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUwNDg1OTE4Mg==","url":"https://github.com/coala/coala/pull/6027#issuecomment-504859182","bodyText":"@jayvdb Can you review this PR ?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-06-24T05:06:56Z","lastEditedAt":null,"updatedAt":"2019-06-24T05:06:56Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561196181000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6029","number":6029,"title":"Result.py: Add actions attribute","body":"This adds a new attribute actions to the Result class. It is a list of action objects which are specific to the origin to that Result.\nThis also makes changes in ConsoleInteraction module and Processing module to incorporate these additions and support bears to define their own actions.","comments":0,"createdAt":"2019-06-19T12:46:20Z","updatedAt":"2019-06-22T09:36:21Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6029","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561000988000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6030","number":6030,"title":"Use Fudge for Windows development and CI","body":"Includes workaround for #5985\nNote commit .moban.yaml: Use local mobans needs to be removed before merging.","comments":0,"createdAt":"2019-06-20T03:23:08Z","updatedAt":"2019-06-20T03:23:08Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6030","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561698197000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6032","number":6032,"title":"TOML.py: Add Language definition","body":"Add TOML language to coala language definitions\nCloses #6031\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2019-06-21T11:51:20Z","updatedAt":"2019-06-28T05:03:17Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6032","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUwNDg2MjU1NA==","url":"https://github.com/coala/coala/pull/6032#issuecomment-504862554","bodyText":"@jayvdb @RaiVaibhav @Nosferatul @virresh @ksdme @margobra8 Can you review this?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-06-24T05:26:10Z","lastEditedAt":null,"updatedAt":"2019-06-24T05:26:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNTU3NTYyOQ==","url":"https://github.com/coala/coala/pull/6032#issuecomment-505575629","bodyText":"Push again to trigger appveyor retest","diffHunk":null,"author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"createdAt":"2019-06-25T18:53:45Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:53:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNTYwNTk0Nw==","url":"https://github.com/coala/coala/pull/6032#issuecomment-505605947","bodyText":"Push again to trigger appveyor retest\n\nAppveyor is currently broken. It is being fixed.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-06-25T20:18:02Z","lastEditedAt":null,"updatedAt":"2019-06-25T20:18:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560927728000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6018","number":6018,"title":"setup.py: Add minimum pip requirement check","body":"Older setuptools/pip fails on installation\ndue to missing syntax in them. This fixes\nthat problem by avoiding such installation.\nRelated to: #6017\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2019-05-17T05:58:39Z","updatedAt":"2019-06-19T07:02:08Z","closedAt":"2019-06-19T06:41:02Z","state":"merged","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6018","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTEzNjc1Ng==","url":"https://github.com/coala/coala/pull/6018#discussion_r285136756","bodyText":"this import needs to be after the standard library imports, as pip is not a part of the standard library","diffHunk":"@@ -3,6 +3,7 @@\n import datetime\n import locale\n import os\n+import pip","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240Mjg0MjEzMg==","createdAt":"2019-05-17T14:26:25Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-05-17T13:55:39Z","lastEditedAt":null,"updatedAt":"2019-05-17T13:55:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTEzODUyNA==","url":"https://github.com/coala/coala/pull/6018#discussion_r285138524","bodyText":"this isnt relevant for this issue -- only check_unsupported.sh is executed on these old unsupported pythons which have old pip.  In there, the pip needs to be upgraded.","diffHunk":"@@ -109,6 +108,8 @@ before_script:\n   # Restore the original requirements.txt\n   - mv requirements.orig requirements.txt\n   - python .misc/check_setuptools.py\n+  - pip --version\n+  - pip install --upgrade pip~=9.0","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-17T13:59:46Z","lastEditedAt":null,"updatedAt":"2019-05-17T13:59:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTE0NTQwNw==","url":"https://github.com/coala/coala/pull/6018#discussion_r285145407","bodyText":"@jayvdb I know, but if you check the previous build, it was failing due to pip==9.0 being used. So, I added these two to check.","diffHunk":"@@ -109,6 +108,8 @@ before_script:\n   # Restore the original requirements.txt\n   - mv requirements.orig requirements.txt\n   - python .misc/check_setuptools.py\n+  - pip --version\n+  - pip install --upgrade pip~=9.0","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-17T14:16:40Z","lastEditedAt":null,"updatedAt":"2019-05-17T14:16:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTMyNzExOQ==","url":"https://github.com/coala/coala/pull/6018#discussion_r285327119","bodyText":"per 58b9f41 , 3.4.3 is now supported, so this could be part of the problem -- it should be 3.4.1?","diffHunk":"@@ -53,6 +52,7 @@ jobs:\n     - python: 3.4.3","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-18T03:16:49Z","lastEditedAt":null,"updatedAt":"2019-05-18T03:16:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTMyNzE4NQ==","url":"https://github.com/coala/coala/pull/6018#discussion_r285327185","bodyText":"Ah, yes. 🤦‍♂","diffHunk":"@@ -53,6 +52,7 @@ jobs:\n     - python: 3.4.3","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-18T03:19:40Z","lastEditedAt":null,"updatedAt":"2019-05-18T03:19:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTMyNzIwNg==","url":"https://github.com/coala/coala/pull/6018#discussion_r285327206","bodyText":"But I have no idea, why pip-9 wasn't getting installed on 3.4.3","diffHunk":"@@ -53,6 +52,7 @@ jobs:\n     - python: 3.4.3","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-18T03:20:41Z","lastEditedAt":null,"updatedAt":"2019-05-18T03:20:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3MjMzNQ==","url":"https://github.com/coala/coala/pull/6018#discussion_r287572335","bodyText":"can you pull this change out into a separate commit , and I'd like to see a build with only this commit so I can see if this solves the breakage.  if not, why not.","diffHunk":"@@ -50,7 +49,7 @@ jobs:\n       <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n-    - python: 3.4.3\n+    - python: 3.4.1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240MzM0Nzc5NA==","createdAt":"2019-05-26T07:21:42Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-05-25T19:05:53Z","lastEditedAt":null,"updatedAt":"2019-05-25T19:05:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzczMjE3MQ==","url":"https://github.com/coala/coala/pull/6018#discussion_r287732171","bodyText":"As I expected, the job is green after this fix.  Please make a separate PR for just that change, as that is what solves the issue and turns our CI for master green. (the min pip problem is a separate problem which doesnt need to be solved urgently)\nThe commit message should indicate that the bug is in my commit which dropped the minimum version but forgot to update .travis.yml","diffHunk":"@@ -50,7 +49,7 @@ jobs:\n       <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n-    - python: 3.4.3\n+    - python: 3.4.1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240MzM4NzczNg==","createdAt":"2019-05-27T10:43:24Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-05-27T10:10:46Z","lastEditedAt":null,"updatedAt":"2019-05-27T10:10:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzMzNDM3Mg==","url":"https://github.com/coala/coala/pull/6018#issuecomment-493334372","bodyText":"Sorry, created the PR accidentally.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-17T06:15:33Z","lastEditedAt":"2019-05-17T06:54:26Z","updatedAt":"2019-05-17T06:54:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzM0OTMyNA==","url":"https://github.com/coala/coala/pull/6018#issuecomment-493349324","bodyText":"@jayvdb Have a look at this :)","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-17T07:18:19Z","lastEditedAt":null,"updatedAt":"2019-05-17T07:18:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzUwODY3NA==","url":"https://github.com/coala/coala/pull/6018#issuecomment-493508674","bodyText":"@jayvdb I'm not sure why this is happening:\n$ pip install --upgrade pip~=9.0\nCollecting pip~=9.0\n  Using cached https://files.pythonhosted.org/packages/ac/95/a05b56bb975efa78d3557efa36acaf9cf5d2fd0ee0062060493687432e03/pip-9.0.3-py2.py3-none-any.whl\nInstalling collected packages: pip\n  Found existing installation: pip 7.1.2\n    Uninstalling pip-7.1.2:\n      Successfully uninstalled pip-7.1.2\nSuccessfully installed pip-8.1.2\n\nLet me know your thoughts on the changes :)","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-17T16:05:56Z","lastEditedAt":null,"updatedAt":"2019-05-17T16:05:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzY0MzY4NQ==","url":"https://github.com/coala/coala/pull/6018#issuecomment-493643685","bodyText":"After running pip install, use pip list or pip --version to show what is installed, or even python -c 'import pip; print(pip.__version__)' to show what was installed.  Never trust pip.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-18T03:10:59Z","lastEditedAt":"2019-05-18T03:12:12Z","updatedAt":"2019-05-18T03:12:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzY0Mzc1Mg==","url":"https://github.com/coala/coala/pull/6018#issuecomment-493643752","bodyText":"Why it happening?  Maybe pip 9.x refuses to install into Python 3.4.3?\nOr maybe there are multiple versions of pip installed.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-18T03:12:38Z","lastEditedAt":null,"updatedAt":"2019-05-18T03:12:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzY0Mzg1Mw==","url":"https://github.com/coala/coala/pull/6018#issuecomment-493643853","bodyText":"Maybe pip 9.x refuses to install into Python 3.4.3?\n\nI tried it locally, but pip~=9.0 installs well as expected.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-18T03:15:01Z","lastEditedAt":null,"updatedAt":"2019-05-18T03:15:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5MzY0NzI5NA==","url":"https://github.com/coala/coala/pull/6018#issuecomment-493647294","bodyText":"@jayvdb Seems like its done now, I'll remove the travis unsupported job change once you approve. Also, the moban needs to be updated.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-18T04:27:12Z","lastEditedAt":null,"updatedAt":"2019-05-18T04:27:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk0MTExOA==","url":"https://github.com/coala/coala/pull/6018#issuecomment-495941118","bodyText":"@abhishalya where is your change to the mobans templates?  Link to MR please.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-05-25T19:00:07Z","lastEditedAt":null,"updatedAt":"2019-05-25T19:00:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk3Njk0Ng==","url":"https://github.com/coala/coala/pull/6018#issuecomment-495976946","bodyText":"@jayvdb Done as you asked https://gitlab.com/coala/mobans/merge_requests/127, I'm not familiar with moban that much, so maybe I might've made mistake. Apologies for that.\nAlso, I've created a separate commit for the travis change, the build with just that commit can be seen here: https://travis-ci.org/abhishalya/coala/builds/537371787","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-26T07:33:59Z","lastEditedAt":null,"updatedAt":"2019-05-26T07:33:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMzQxMTQ4NA==","url":"https://github.com/coala/coala/pull/6018#issuecomment-503411484","bodyText":"Great job.  Now we need this rebased, and a moban sync done.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDkxMTA0Mg==","createdAt":"2019-06-19T05:49:10Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-06-19T05:26:05Z","lastEditedAt":null,"updatedAt":"2019-06-19T05:26:05Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560928861000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6022","number":6022,"title":".misc/appveyor.yml: Add path matching workaround","body":"Windows is case-insensitive and auto-renames the\nfiles to lowercase while Linux files are case-sensitive.\nAs a result to fix the build failure, a workaround\nis introduced in this commit.\nFixes #5985\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2019-05-28T09:22:22Z","updatedAt":"2019-06-19T07:21:01Z","closedAt":"2019-06-19T05:53:39Z","state":"closed","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6022","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ5NjQzNzE0OA==","url":"https://github.com/coala/coala/pull/6022#issuecomment-496437148","bodyText":"Appveyor is having too many connection failures :(","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-28T09:23:07Z","lastEditedAt":null,"updatedAt":"2019-05-28T09:23:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NjQ2NTg5MQ==","url":"https://github.com/coala/coala/pull/6022#issuecomment-496465891","bodyText":"Have a look at the build https://ci.appveyor.com/project/abhishalya/coala/builds/24858052 (same commit, on my fork).","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-28T10:50:23Z","lastEditedAt":null,"updatedAt":"2019-05-28T10:50:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5Njc5MjI4Mg==","url":"https://github.com/coala/coala/pull/6022#issuecomment-496792282","bodyText":"I was using the sed command to introduce the change, considering it as a very bad approach to solve this problem, I have introduced a os-check on the Collector.py file. This hits the coverage though, to cover the change, I think we need to mock the output of the platform.system() and write all the tests again for Windows.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-05-29T05:41:02Z","lastEditedAt":null,"updatedAt":"2019-05-29T05:41:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMzQxNzE0OA==","url":"https://github.com/coala/coala/pull/6022#issuecomment-503417148","bodyText":"(soon to be) Irrelevant.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-06-19T05:53:39Z","lastEditedAt":null,"updatedAt":"2019-06-19T05:53:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMzQyNzY4NA==","url":"https://github.com/coala/coala/pull/6022#issuecomment-503427684","bodyText":"Not sure this is irrelevant.  I just did an ugly hack.\nThe analysis is good at least.   Im not sure about the solution in this PR.  Needs tests, etc :P","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-06-19T06:37:20Z","lastEditedAt":null,"updatedAt":"2019-06-19T06:37:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMzQzNTQwMA==","url":"https://github.com/coala/coala/pull/6022#issuecomment-503435400","bodyText":"Yeah, tests are also getting ugly. Not sure how to handle os-specific things...","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-06-19T07:06:03Z","lastEditedAt":null,"updatedAt":"2019-06-19T07:06:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMzQzNjMzMw==","url":"https://github.com/coala/coala/pull/6022#issuecomment-503436333","bodyText":"We can have OS specific tests, and there are OS specific coverage rules (see setup.cfg)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-06-19T07:09:16Z","lastEditedAt":null,"updatedAt":"2019-06-19T07:09:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMzQzODcwNQ==","url":"https://github.com/coala/coala/pull/6022#issuecomment-503438705","bodyText":"Hmm, what do you think about this solution then, if the tests, etc are prepared.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-06-19T07:17:25Z","lastEditedAt":null,"updatedAt":"2019-06-19T07:17:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMzQzOTgzNA==","url":"https://github.com/coala/coala/pull/6022#issuecomment-503439834","bodyText":"I havent tried to understand the problem yet, so I cant comment on a solution just yet.\nI've suggested one workaround at #5985 (comment)\nAnd note the bigger problem is #6028","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDkxNjU1Mw==","createdAt":"2019-06-19T07:25:57Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-06-19T07:21:00Z","lastEditedAt":null,"updatedAt":"2019-06-19T07:21:00Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560854053000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6025","number":6025,"title":"TomlConfParser.py: Support Toml","body":"Allow configurations to be written in TOML\nCloses #4609\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2019-06-14T18:14:43Z","updatedAt":"2019-06-18T10:34:13Z","closedAt":"2019-06-18T10:31:11Z","state":"closed","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6025","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUwMzA0Nzc1MQ==","url":"https://github.com/coala/coala/pull/6025#issuecomment-503047751","bodyText":"This PR uses toml library.\ntomlkit seems to be a better library and pip and pipenv will be changing to tomlkit.\nHence this PR is refactored to use tomlkit library in #6027","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2019-06-18T10:34:12Z","lastEditedAt":null,"updatedAt":"2019-06-18T10:34:12Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561352490000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6026","number":6026,"title":"Add `require_files` settings","body":"This adds couple of new settings to coala,\nrequire_files_not_empty and require_files_for_each_glob\nto require the existence of the files.\nRelated to coala/coala-bears#527\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-18T03:21:50Z","updatedAt":"2019-06-24T05:01:30Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6026","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1559639831000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5995","number":5995,"title":"LocalBearTestHelper.py: Add base directory argument","body":"This adds an optional argument base_directory to verify_local_bear\nfunction.\nCloses #5895\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":16,"createdAt":"2019-02-16T12:33:51Z","updatedAt":"2019-06-04T09:17:11Z","closedAt":null,"state":"open","user":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"owner":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"assignee":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5995","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NzQ1OTM0Mg==","url":"https://github.com/coala/coala/pull/5995#discussion_r257459342","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n              :param base_directory:   Path to base directory. Change to base_directory\n        \n          \n            \n                :param base_directory:   Path to the base directory. Changes the CWD to base_directory","diffHunk":"@@ -370,6 +371,8 @@ def verify_local_bear(bear,\n     :param timeout:          Unused.  Use pytest-timeout or similar.\n     :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp() if tempfile\n                              needs to be created.\n+    :param base_directory:   Path to base directory. Change to base_directory","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-02-16T12:46:40Z","lastEditedAt":null,"updatedAt":"2019-02-16T12:46:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTU3MjY0Ng==","url":"https://github.com/coala/coala/pull/5995#discussion_r259572646","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n                                                      base_directory='tests/bears'\n        \n          \n            \n                                                        base_directory='tests/bears',","diffHunk":"@@ -49,6 +49,12 @@\n         ]),\n     settings={'max_line_length': 20},\n )\n+ChangeBaseDirectoryTest = verify_local_bear(TestBear,\n+                                            valid_files=files,\n+                                            invalid_files=(),\n+                                            settings={'result': True},\n+                                            base_directory='tests/bears'","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"createdAt":"2019-02-23T09:20:56Z","lastEditedAt":null,"updatedAt":"2019-02-23T09:20:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MDYyODUwMw==","url":"https://github.com/coala/coala/pull/5995#discussion_r260628503","bodyText":"This test doesn't seem thorough. You're supposed to test if the directory is actually changing when you supply base_directory so I'd suggest mocking change_directory and testing if it is called with the right arguments and the right number of times.\nI recommend consulting one other reviewer though.","diffHunk":"@@ -49,6 +49,11 @@\n         ]),\n     settings={'max_line_length': 20},\n )\n+ChangeBaseDirectoryTest = verify_local_bear(TestBear,","author":{"login":"areebbeigh","avatarUrl":"https://avatars3.githubusercontent.com/u/15276828?v=4","name":"Areeb Beigh (Euphinx)"},"createdAt":"2019-02-27T08:01:35Z","lastEditedAt":null,"updatedAt":"2019-02-27T08:01:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg1Mjg3NQ==","url":"https://github.com/coala/coala/pull/5995#discussion_r261852875","bodyText":"Yeah, this doesn't test the working of the changes made. Since even if base_directory isin't provided the test would pass.","diffHunk":"@@ -49,6 +49,11 @@\n         ]),\n     settings={'max_line_length': 20},\n )\n+ChangeBaseDirectoryTest = verify_local_bear(TestBear,","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-03-03T06:12:31Z","lastEditedAt":null,"updatedAt":"2019-03-03T06:12:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTg1MzMxOA==","url":"https://github.com/coala/coala/pull/5995#discussion_r261853318","bodyText":"Yeah Agreeing with both the reviewers above you could try mocking change_directory, or if you are not familiar with mocking you could follow the assert,check and test method and see if you are able to solve the issue.","diffHunk":"@@ -49,6 +49,11 @@\n         ]),\n     settings={'max_line_length': 20},\n )\n+ChangeBaseDirectoryTest = verify_local_bear(TestBear,","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-03-03T06:37:14Z","lastEditedAt":null,"updatedAt":"2019-03-03T06:37:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2NDc5MTk2MA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-464791960","bodyText":"@frextrite I tested the function change_directory externally and realized it uses the Context Manager, so I wrapped it within a with statement. Can you give me a hint on how to implement tests? I mean is there any test bear which requires directory change?","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2019-02-18T16:08:47Z","lastEditedAt":null,"updatedAt":"2019-02-18T16:08:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2NTExMTU3MQ==","url":"https://github.com/coala/coala/pull/5995#issuecomment-465111571","bodyText":"You can take a look and see how the other functions in this file have been tested. I don't think a bear is required for testing purposes since it should be mocked anyway.","diffHunk":null,"author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"createdAt":"2019-02-19T12:33:38Z","lastEditedAt":null,"updatedAt":"2019-02-19T12:33:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2Njc2NjY3Ng==","url":"https://github.com/coala/coala/pull/5995#issuecomment-466766676","bodyText":"@123vivekr  have you tried to run the script  on your local system?","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"createdAt":"2019-02-24T11:49:10Z","lastEditedAt":null,"updatedAt":"2019-02-24T11:49:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2Njc5NDQ2Ng==","url":"https://github.com/coala/coala/pull/5995#issuecomment-466794466","bodyText":"@Dhiraj240\n\nThis is the only error shown when I run python setup.py test\nI have updated pip using the command but still the error persists. A google search says async has been added as a keyword from the latest versions.\nAlso I don't see any errors in TravisCI except for only 99.89% code coverage.","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2019-02-24T17:00:14Z","lastEditedAt":"2019-02-24T17:02:41Z","updatedAt":"2019-02-24T17:02:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2Njc5NjUwNA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-466796504","bodyText":"@123vivekr Okay ideally it should be 100% it does need changes. Does  python localbeartesthelpertest.py working ? Can you show me the screenshot of that one.","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"createdAt":"2019-02-24T17:22:55Z","lastEditedAt":null,"updatedAt":"2019-02-24T17:22:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2NjgwMjg0Ng==","url":"https://github.com/coala/coala/pull/5995#issuecomment-466802846","bodyText":"@Dhiraj240\n\nThis is the output of python LocalBearTestHelperTest.py\nI don't see any error arising from python setup.py test either","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2019-02-24T18:31:05Z","lastEditedAt":null,"updatedAt":"2019-02-24T18:31:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2Njg3MzIzOA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-466873238","bodyText":"what could be the reason for  no module tests.test_bears  ? should we avoid it ?","diffHunk":null,"author":{"login":"Dhiraj240","avatarUrl":"https://avatars1.githubusercontent.com/u/29758643?v=4","name":"Dhiraj Sharma"},"createdAt":"2019-02-25T05:04:03Z","lastEditedAt":null,"updatedAt":"2019-02-25T05:04:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2NzExODYxMA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-467118610","bodyText":"@areebbeigh I didn't notice that. Thanks for your help :) Changes have been made and Travis CI tests are passing","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2019-02-25T18:15:24Z","lastEditedAt":null,"updatedAt":"2019-02-25T18:15:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTYzOTc3NA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-469639774","bodyText":"Please run coala or use an editor like vscode with all the liners enabled.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-03-05T11:07:47Z","lastEditedAt":null,"updatedAt":"2019-03-05T11:07:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTY0MTA2NQ==","url":"https://github.com/coala/coala/pull/5995#issuecomment-469641065","bodyText":"Please don't push without making sure of the above comment. Are you running coala!?","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-03-05T11:12:29Z","lastEditedAt":"2019-03-05T11:13:34Z","updatedAt":"2019-03-05T11:13:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTY0MzQ2OA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-469643468","bodyText":"I have run coala before pushing. It doesn't show any autopep8 errors now","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2019-03-05T11:20:33Z","lastEditedAt":"2019-03-05T11:21:58Z","updatedAt":"2019-03-05T11:21:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2OTY0NDEwOA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-469644108","bodyText":"Also, running python setup.py test doesn't give any other error on my local system. But TravisCI shows error\nLocal System python version: 3.7.2","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2019-03-05T11:22:41Z","lastEditedAt":"2019-03-05T11:23:48Z","updatedAt":"2019-03-05T11:23:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MzkyNjE1MA==","url":"https://github.com/coala/coala/pull/5995#issuecomment-473926150","bodyText":"@123vivekr Are these two commits different to each other if not then kindly squash those commits.Cheers","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-03-18T14:12:35Z","lastEditedAt":null,"updatedAt":"2019-03-18T14:12:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NDE2Nzc1OQ==","url":"https://github.com/coala/coala/pull/5995#issuecomment-474167759","bodyText":"@123vivekr Are these two commits different to each other if not then kindly squash those commits.Cheers\n\nThe first commit is the solution to the issue and the second one is the tests for the same. Currently the tests are failing. I'll squash once the fix is complete.","diffHunk":null,"author":{"login":"123vivekr","avatarUrl":"https://avatars1.githubusercontent.com/u/28249428?v=4","name":"Vivek R"},"createdAt":"2019-03-19T01:57:30Z","lastEditedAt":null,"updatedAt":"2019-03-19T01:57:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NDE2ODA1MQ==","url":"https://github.com/coala/coala/pull/5995#issuecomment-474168051","bodyText":"Yeah🔥 no problem :)","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-03-19T01:58:59Z","lastEditedAt":null,"updatedAt":"2019-03-19T01:58:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1560862302000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5999","number":5999,"title":"Language support/solidity","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2019-03-19T08:15:55Z","updatedAt":"2019-06-18T12:51:42Z","closedAt":null,"state":"open","user":{"login":"xurror","avatarUrl":"https://avatars1.githubusercontent.com/u/45751948?v=4"},"owner":{"login":"xurror","avatarUrl":"https://avatars1.githubusercontent.com/u/45751948?v=4"},"assignee":{"login":"xurror","avatarUrl":"https://avatars1.githubusercontent.com/u/45751948?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"initiatives/gci","color":"e99695"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5999","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDQwMTAxNg==","url":"https://github.com/coala/coala/pull/5999#discussion_r294401016","bodyText":"Add a space before 'do'","diffHunk":"@@ -0,0 +1,17 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+@Language\n+class Solidity:\n+    extensions = '.sol'\n+    comment_delimiters = '//',\n+    string_delimiters = {'\"': '\"'}\n+    multiline_string_delimiters = {}\n+    indent_types = {'{': '}'}\n+    keywords = [\n+        'address', 'bool', 'break', 'byte',\n+        'const', 'continue','do', 'else',","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2019-06-17T17:13:47Z","lastEditedAt":null,"updatedAt":"2019-06-17T17:13:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDc4Mjg3OQ==","url":"https://github.com/coala/coala/pull/5999#discussion_r294782879","bodyText":"Add a newline at the end","diffHunk":"@@ -0,0 +1,18 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Solidity:\n+    extensions = '.sol'\n+    comment_delimiters = '//',\n+    string_delimiters = {'\"': '\"'}\n+    multiline_string_delimiters = {}\n+    indent_types = {'{': '}'}\n+    keywords = [\n+        'address', 'bool', 'break', 'byte',\n+        'const', 'continue', 'do', 'else',\n+        'emit', 'enum', 'false', 'float',\n+        'for', 'function', 'goto', 'if',\n+        'int', 'long', 'pragma', 'return',\n+        'string', 'struct', 'throw', 'true',\n+        'uint', 'while']","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2019-06-18T12:21:43Z","lastEditedAt":null,"updatedAt":"2019-06-18T12:21:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NDM0MDgxOQ==","url":"https://github.com/coala/coala/pull/5999#issuecomment-474340819","bodyText":"I'm sorry\nI wasn't expecting this to be of difficulty newcomer","diffHunk":null,"author":{"login":"xurror","avatarUrl":"https://avatars1.githubusercontent.com/u/45751948?v=4","name":"Yemdjih Kaze Nasser"},"createdAt":"2019-03-19T12:26:44Z","lastEditedAt":null,"updatedAt":"2019-03-19T12:26:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMjc3MTEwMQ==","url":"https://github.com/coala/coala/pull/5999#issuecomment-502771101","bodyText":"Please add your language and its versions to TestUtilities.py","diffHunk":null,"author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2019-06-17T17:11:22Z","lastEditedAt":"2019-06-17T17:22:33Z","updatedAt":"2019-06-17T17:22:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMjc3MzYyMg==","url":"https://github.com/coala/coala/pull/5999#issuecomment-502773622","bodyText":"Please read this - https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html\nYour commit body is empty. You should specify the issue you have fixed and the changes you've done ;)","diffHunk":null,"author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2019-06-17T17:18:08Z","lastEditedAt":null,"updatedAt":"2019-06-17T17:18:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMjkyMTc1MQ==","url":"https://github.com/coala/coala/pull/5999#issuecomment-502921751","bodyText":"Please read this - https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html\nYour commit body is empty. You should specify the issue you have fixed and the changes you've done ;)\n\nI don't think my commit body is empty, It's just too short\nAnd the issue link is referenced with \" Closes  #5857 \"","diffHunk":null,"author":{"login":"xurror","avatarUrl":"https://avatars1.githubusercontent.com/u/45751948?v=4","name":"Yemdjih Kaze Nasser"},"createdAt":"2019-06-18T02:35:00Z","lastEditedAt":null,"updatedAt":"2019-06-18T02:35:00Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561646044000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6002","number":6002,"title":"comma added to line 54 of Writing_Linter_Bears.rst","body":"This PR closes #5943\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2019-03-21T18:38:16Z","updatedAt":"2019-06-27T14:34:04Z","closedAt":null,"state":"open","user":{"login":"tab1tha","avatarUrl":"https://avatars1.githubusercontent.com/u/42181805?v=4"},"owner":{"login":"tab1tha","avatarUrl":"https://avatars1.githubusercontent.com/u/42181805?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6002","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ3NTQ0ODIyMA==","url":"https://github.com/coala/coala/pull/6002#issuecomment-475448220","bodyText":"Hi, I think you may refer to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html and change your commit message ;)","diffHunk":null,"author":{"login":"Gromy1211","avatarUrl":"https://avatars0.githubusercontent.com/u/33060023?v=4","name":"Shiming Xiao"},"createdAt":"2019-03-22T00:05:19Z","lastEditedAt":null,"updatedAt":"2019-03-22T00:05:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NTYwODIzNQ==","url":"https://github.com/coala/coala/pull/6002#issuecomment-475608235","bodyText":"@tab1tha You have multiple commits, squash them into one. Also follow the commit guidelines properly. After creating a commit, just run coala --non-interactive and make sure that it doesn't throw any issues with your changes.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-03-22T12:47:04Z","lastEditedAt":null,"updatedAt":"2019-03-22T12:47:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NTcwNzM1Ng==","url":"https://github.com/coala/coala/pull/6002#issuecomment-475707356","bodyText":"@abhishalya Please help.I do not know why it isstill failing.Should I remove the underscores from the file name?","diffHunk":null,"author":{"login":"tab1tha","avatarUrl":"https://avatars1.githubusercontent.com/u/42181805?v=4","name":"Tambe Tabitha Achere"},"createdAt":"2019-03-22T17:22:57Z","lastEditedAt":null,"updatedAt":"2019-03-22T17:22:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNjM2OTc4NQ==","url":"https://github.com/coala/coala/pull/6002#issuecomment-506369785","bodyText":"Please rebase your commit on top of master and re-push.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-27T14:28:04Z","lastEditedAt":null,"updatedAt":"2019-06-27T14:28:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1559964628000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/6007","number":6007,"title":"Git_Basics.rst: Fix comma in docstring","body":"Fixes #6006","comments":2,"createdAt":"2019-04-03T17:34:27Z","updatedAt":"2019-06-08T03:30:28Z","closedAt":null,"state":"open","user":{"login":"roshnet","avatarUrl":"https://avatars3.githubusercontent.com/u/40719199?v=4"},"owner":{"login":"roshnet","avatarUrl":"https://avatars3.githubusercontent.com/u/40719199?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/6007","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ5MjYwODAwMg==","url":"https://github.com/coala/coala/pull/6007#issuecomment-492608002","bodyText":"Any updates on why this pull request was not authorised? And what progress has been made on that end?","diffHunk":null,"author":{"login":"nishant-sachdeva","avatarUrl":"https://avatars1.githubusercontent.com/u/32475507?v=4","name":"Nishant Sachdeva "},"createdAt":"2019-05-15T11:00:40Z","lastEditedAt":null,"updatedAt":"2019-05-15T11:00:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1561645607000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5952","number":5952,"title":"Correcting typo in docs/Developers/Writing_Linter_Bears.rst","body":"Fix of Issue #5943 and #5942\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2019-01-14T09:03:33Z","updatedAt":"2019-06-27T14:26:47Z","closedAt":null,"state":"open","user":{"login":"ShashKash","avatarUrl":"https://avatars2.githubusercontent.com/u/35264544?v=4"},"owner":{"login":"ShashKash","avatarUrl":"https://avatars2.githubusercontent.com/u/35264544?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5952","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDExMDAwMQ==","url":"https://github.com/coala/coala/pull/5952#issuecomment-460110001","bodyText":"Invited @ShashKash to join coala newcomers","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-02-04T01:46:33Z","lastEditedAt":null,"updatedAt":"2019-02-04T01:46:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ2MDExMDEwMw==","url":"https://github.com/coala/coala/pull/5952#issuecomment-460110103","bodyText":"Once you accept, please come onto gitter and ask to be assigned to one of the issues you are working on.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-02-04T01:47:27Z","lastEditedAt":null,"updatedAt":"2019-02-04T01:47:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNjM2OTI1Mw==","url":"https://github.com/coala/coala/pull/5952#issuecomment-506369253","bodyText":"@ShashKash , please fix your commit message to comply with https://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-27T14:26:47Z","lastEditedAt":null,"updatedAt":"2019-06-27T14:26:47Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561378590000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2928","number":2928,"title":"bears/general: Add OutdatedDependencyBear","body":"Closes #2445\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-24T12:16:30Z","updatedAt":"2019-06-24T12:16:30Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2928","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560576298000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2912","number":2912,"title":"bears/general: Add FileModeBear","body":"Closes #2370\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-06-04T15:19:00Z","updatedAt":"2019-06-15T05:24:58Z","closedAt":null,"state":"open","user":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"owner":{"login":"bkhanale","avatarUrl":"https://avatars1.githubusercontent.com/u/23272598?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2912","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzNTQ0Mg==","url":"https://github.com/coala/coala-bears/pull/2912#discussion_r294035442","bodyText":"Mention the reason wherever you have done this.","diffHunk":"@@ -0,0 +1,212 @@\n+import os\n+import platform\n+import stat\n+\n+from queue import Queue\n+\n+from bears.general.FileModeBear import FileModeBear\n+from coalib.testing.LocalBearTestHelper import LocalBearTestHelper\n+from coalib.results.Result import RESULT_SEVERITY, Result\n+from coalib.settings.Section import Section\n+from coalib.settings.Setting import Setting\n+\n+\n+def get_testfile_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'filemode_test_files', file)\n+\n+\n+FILE_PATH = get_testfile_path('test_file.txt')\n+\n+\n+class FileModeBearTest(LocalBearTestHelper):\n+\n+    def setUp(self):\n+        self.section = Section('')\n+        self.uut = FileModeBear(self.section, Queue())\n+\n+    def test_r_to_r_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IRUSR)\n+        self.section.append(Setting('filemode', 'r'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_w_to_w_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IWUSR)\n+        self.section.append(Setting('filemode', 'w'))\n+        self.check_results(\n+            self.uut,\n+            [],\n+            [],\n+            filename=FILE_PATH,\n+            )\n+\n+    def test_x_to_x_permissions(self):\n+        os.chmod(FILE_PATH, stat.S_IXUSR)\n+        if platform.system() != 'Windows':","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-15T05:24:17Z","lastEditedAt":null,"updatedAt":"2019-06-15T05:24:17Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561897233000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2927","number":2927,"title":"New actions for GitCommitBear","body":"This adds two new actions for GitCommitBear:\n\nAddNewlineAction: This adds a newline between shortlog and body of the commit message.\nEditCommitMessageAction: Open an editor in which user can edit the commit message\n\nThis also modifies CommitBear.py to pass these actions when Result is yielded.","comments":1,"createdAt":"2019-06-19T12:48:01Z","updatedAt":"2019-06-30T12:20:33Z","closedAt":null,"state":"open","user":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"owner":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2927","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTQxNzE5OA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295417198","bodyText":"@abhishalya I think git commit --amend also adds the staged changes. This is not good. Any alternatives?","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-19T17:27:47Z","lastEditedAt":"2019-06-19T17:33:52Z","updatedAt":"2019-06-19T17:33:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYxODAxMQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295618011","bodyText":"I guess git rebase would do then.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:47:17Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:47:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyMjA3Mw==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295622073","bodyText":"Since this action is only to be used by one of the vcs bears, the better place for this action would be in bears/vcs/actions.","diffHunk":"@@ -13,6 +13,7 @@\n from coalib.settings.Setting import typed_list\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from dependency_management.requirements.PipRequirement import PipRequirement\n+from bears.actions.AddNewlineAction import AddNewlineAction","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:53:21Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:53:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyNDI2MA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295624260","bodyText":"shortlog: str = ''","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:56:52Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:56:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTYyNTAxNA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295625014","bodyText":"Nope, no \\. Its a rule now, we even have a bear to check this :P","diffHunk":"@@ -271,8 +272,10 @@ def check_body(self, body,\n             return\n \n         if body[0] != '\\n':\n-            yield Result(self, 'No newline found between shortlog and body at '\n-                               'HEAD commit. Please add one.')\n+            message = 'No newline found between shortlog and body at '\\","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T03:58:06Z","lastEditedAt":null,"updatedAt":"2019-06-20T03:58:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTcxOTk3NQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295719975","bodyText":"Have a look at this. Even rebase is not ideal if someone is using your commits.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T09:21:09Z","lastEditedAt":"2019-06-20T09:21:19Z","updatedAt":"2019-06-20T09:21:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTcyMTQ1Mg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295721452","bodyText":"PycodestyleBear is complaining for shortlog: str = ''","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T09:24:57Z","lastEditedAt":"2019-06-20T09:25:06Z","updatedAt":"2019-06-20T09:25:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg0MzY0OQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295843649","bodyText":"ping @Vamshi99 @kriti21","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T14:48:22Z","lastEditedAt":null,"updatedAt":"2019-06-20T14:48:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg0ODUxMg==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295848512","bodyText":"Oh, I guess it must be complaining about no spaces around =.","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T14:57:12Z","lastEditedAt":null,"updatedAt":"2019-06-20T14:57:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1MTUxOQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295851519","bodyText":"Yeah, but here we are expecting the user to change the commit message. If the commit is not pushed doing rebase is just fine.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T15:02:52Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:02:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1Njg0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295856846","bodyText":"ping @abhishalya @Vamshi99 Looking at this I don't think amending or rebasing a commit is a good idea because it changes the history.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add New(L)ine\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:13:33Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:13:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg1NzEzMQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295857131","bodyText":"My bad, it's not.","diffHunk":"@@ -246,7 +247,7 @@ def check_imperative(self, paragraph):\n         else:\n             return None\n \n-    def check_body(self, body,\n+    def check_body(self, body, shortlog='',","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:14:06Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:14:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg2NTIyNw==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295865227","bodyText":"Maybe we can warn that history will be rewritten action is applied.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-20T15:31:07Z","lastEditedAt":null,"updatedAt":"2019-06-20T15:31:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTg4MTM0Ng==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r295881346","bodyText":"Yeah, a warning message would be good 👍","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-06-20T16:04:10Z","lastEditedAt":null,"updatedAt":"2019-06-20T16:04:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQ0MTI2NA==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r296441264","bodyText":"I guess git rebase would do then.\n\ngit rebase doesn't run when there are unstaged or uncommitted changes.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-22T10:16:43Z","lastEditedAt":null,"updatedAt":"2019-06-22T10:16:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NjQ0MjExOQ==","url":"https://github.com/coala/coala-bears/pull/2927#discussion_r296442119","bodyText":"git commit --amend -o will do the job.","diffHunk":"@@ -0,0 +1,28 @@\n+from coalib.misc.Shell import run_shell_command\n+from coalib.results.result_actions.ResultAction import ResultAction\n+\n+\n+class AddNewlineAction(ResultAction):\n+\n+    SUCCESS_MESSAGE = 'New Line added successfully.'\n+\n+    def __init__(self, shortlog, body):\n+        self.shortlog = shortlog\n+        self.body = body\n+\n+    @staticmethod\n+    def is_applicable(result,\n+                      original_file_dict,\n+                      file_diff_dict,\n+                      applied_actions=()):\n+        return 'AddNewlineAction' not in file_diff_dict\n+\n+    def apply(self, result, original_file_dict, file_diff_dict):\n+        \"\"\"\n+        Add (N)ewline\n+        \"\"\"\n+        new_commit_message = '{}\\n\\n{}'.format(self.shortlog, self.body)\n+        command = 'git commit --amend -m \"{}\"'.format(new_commit_message)","author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-22T10:50:45Z","lastEditedAt":null,"updatedAt":"2019-06-22T10:50:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzAzMTc0NA==","url":"https://github.com/coala/coala-bears/pull/2927#issuecomment-507031744","bodyText":"EditCommitMessageAction and AddNewlineAction in action","diffHunk":null,"author":{"login":"akshatkarani","avatarUrl":"https://avatars3.githubusercontent.com/u/29230845?v=4","name":"Akshat Karani"},"createdAt":"2019-06-30T12:20:33Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:20:33Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1561194375000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2901","number":2901,"title":"configfiles: Add NginxBear","body":"Closes #1638\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2019-04-02T16:52:24Z","updatedAt":"2019-06-22T09:06:15Z","closedAt":null,"state":"open","user":{"login":"44rdvark","avatarUrl":"https://avatars0.githubusercontent.com/u/25840847?v=4"},"owner":{"login":"44rdvark","avatarUrl":"https://avatars0.githubusercontent.com/u/25840847?v=4"},"assignee":{"login":"44rdvark","avatarUrl":"https://avatars0.githubusercontent.com/u/25840847?v=4"},"labels":[{"name":"area/lintbears","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"hacktoberfest","color":"b60205"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2901","comments":[]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1562115022000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2910","number":2910,"title":"WIP: Use tox","body":"Green builds, and lots of closes.  Continues #1386 .  This is a new PR because that one is so old and has some interesting implementation choices where are no longer relevant due to new approaches.\nWIP as the commits need to be split up, linked to issues, etc.\nA few parts of this are hopefully going to be replaced with PRs underway by other folk, otherwise I'll take over the assigned issues.\nThis also implements https://gitlab.com/coala/mobans/merge_requests/130 for Windows CI on both AppVeyor and Travis CI.","comments":3,"createdAt":"2019-05-25T20:02:36Z","updatedAt":"2019-07-03T00:50:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2910","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3Mzk4OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r287573989","bodyText":"unused file; should be deleted.  Also the two files above changing only permissions dont need to be in this PR","diffHunk":"@@ -0,0 +1,17 @@\n+#!/bin/sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:16:55Z","lastEditedAt":null,"updatedAt":"2019-05-25T20:16:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzU3NDAwMA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r287574000","bodyText":"unused iirc","diffHunk":"@@ -0,0 +1,10 @@\n+#!/bin/bash","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:17:42Z","lastEditedAt":null,"updatedAt":"2019-05-25T20:17:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg0NA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799844","bodyText":"Not worth raising upstream to tox-travis - which isnt too active and unlikely to fix it soon (I'm one of the contributors)  They have related issues unsolved for years\njust remove this comment.","diffHunk":"@@ -0,0 +1,141 @@\n+[tox]\n+envlist = py{34,35,36,37}-{all,pip,clang,npm,gem,go,perl,php,cabal,java,java7,java8,scala,elm,r,dart,julia,lua,infer,opam,apt,adhoc,disabled,win,swift,mono}-{list,check,collectonly,skip,noskip}-codecov\n+minversion = 3.4\n+# Doesnt work","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:38:53Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:38:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg1MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799851","bodyText":"probably unnecessary","diffHunk":"@@ -80,6 +80,18 @@ def tearDown(self):\n             onerror = None\n         shutil.rmtree(self.gitdir, onerror=onerror)\n \n+    def test_check_prerequisites(self):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:39:15Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:39:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg1OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799859","bodyText":"move to separate commit.","diffHunk":"@@ -9,9 +6,6 @@\n bad_file = 'tihs si surly som incoreclt speling.'\n \n \n-SpellCheckLintBearTest = unittest.skipIf(\n-    platform.system() == 'Windows',\n-    \"SpellCheckBear doesn't work on windows\")(\n-        verify_local_bear(SpellCheckBear,\n-                          valid_files=(good_file,),\n-                          invalid_files=(bad_file,)))\n+SpellCheckLintBearTest = verify_local_bear(SpellCheckBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:39:44Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:39:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg4MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799881","bodyText":"this possibly needs a change to the template.\nBut the other changes to this file need to be undone.","diffHunk":"@@ -17,9 +17,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n-  --doctest-modules\n   --doctest-ignore-import-error\n-  --cov","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:40:54Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:40:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTg4OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799889","bodyText":"this was working around a bug - remove and fix bug","diffHunk":"@@ -17,9 +17,7 @@ addopts =\n   -p no:logging\n   --color=yes\n   --doctest-glob=*.rst\n-  --doctest-modules","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:41:11Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:41:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODc5OTkzOA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298799938","bodyText":"switch to using @frextrite 's branch","diffHunk":"@@ -15,17 +15,16 @@\n         severity_map={'style': RESULT_SEVERITY.NORMAL,\n                       'warning': RESULT_SEVERITY.NORMAL,\n                       'error': RESULT_SEVERITY.MAJOR},\n-        prerequisite_check_command=('Rscript', '-e', 'library(lintr)'),\n-        prerequisite_check_fail_message='R library \"lintr\" is not installed.')\n-class RLintBear:  # pragma nt: no cover\n+        )\n+class RLintBear:\n     \"\"\"\n     Checks the code with ``lintr``.\n     \"\"\"\n     LANGUAGES = {'R'}\n     AUTHORS = {'The coala developers'}\n     AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n     REQUIREMENTS = {RscriptRequirement('lintr',\n-                                       version='>=1.0.2'),\n+                                       ),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:43:45Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:43:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDA0Mw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800043","bodyText":"discard changes.  they can be included in #2922 (comment)","diffHunk":"@@ -37,9 +37,9 @@ def check_prerequisites(cls):\n         try:\n             output = subprocess.check_output(('alex', '--help'),\n                                              stderr=subprocess.STDOUT)\n-        except (OSError, subprocess.CalledProcessError):\n-            return ('The `alex` package could not be verified. ' +\n-                    incorrect_pkg_msg)\n+        except (OSError, subprocess.CalledProcessError) as e:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:48:25Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:48:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDA3Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800077","bodyText":"separate commit","diffHunk":"@@ -17,7 +17,7 @@ html-linter~=0.4.0\n isort~=4.2\n language-check~=1.0\n libclang-py3~=3.4.0\n-lxml==3.6.0\n+lxml","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:49:50Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:49:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDEwOQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800109","bodyText":"re-check - probably not needed","diffHunk":"@@ -0,0 +1 @@\n+install:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:50:56Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:50:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDEzMA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800130","bodyText":"use main()","diffHunk":"@@ -0,0 +1,12 @@\n+#!/usr/bin/env python3\n+\n+import sys\n+\n+# Tags like list, check and collectonly shouldnt appear on codecov\n+# but they also shouldnt be submitted to codecov, so they are not\n+# removed here as that would hide a bug in tox.ini\n+REJECT_TAGS = set(['codecov', 'skip', 'noskip'])\n+\n+env_factors = set(sys.argv[1].split('-'))\n+\n+print(','.join(sorted(env_factors - REJECT_TAGS)))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:51:29Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:51:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDE5NQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800195","bodyText":"If time allows, get all of this moved into the PM repo","diffHunk":"@@ -0,0 +1,515 @@\n+#!/usr/bin/env python3\n+\n+# This program is free software: you can redistribute it and/or modify it\n+# under the terms of the GNU Affero General Public License as published by the\n+# Free Software Foundation, either version 3 of the License, or (at your\n+# option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License\n+# for more details.\n+#\n+# You should have received a copy of the GNU Affero General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+import argparse\n+import collections\n+import copy\n+import itertools\n+import logging\n+import os\n+import sys\n+\n+from ruamel.yaml import YAML, RoundTripDumper\n+from ruamel.yaml.comments import CommentedMap\n+\n+from coalib.bears.BEAR_KIND import BEAR_KIND\n+from coalib.collecting.Collectors import collect_bears\n+\n+from dependency_management.requirements.AnyOneOfRequirements import (\n+    AnyOneOfRequirements,\n+)\n+from dependency_management.requirements.DistributionRequirement import (\n+    DistributionRequirement,\n+)\n+from dependency_management.requirements.ExecutableRequirement import (\n+    ExecutableRequirement,\n+)\n+\n+DISABLED_BEARS = []\n+\n+yaml = YAML(typ='rt')\n+yaml.default_flow_style = False\n+yaml.Dumper = RoundTripDumper\n+\n+BEAR_METADATA_YAML = 'bear-metadata.yaml'\n+BEAR_REQUIREMENTS_YAML = 'bear-requirements.yaml'\n+BEAR_LANGUAGES_YAML = 'bear-languages.yaml'\n+\n+_VERSION_OPERATORS = ('<', '>', '~', '=', '-', '!')\n+\n+THIS_DIR = os.path.dirname(os.path.abspath(__file__))\n+\n+PROJECT_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\n+\n+PROJECT_BEAR_DIR = os.path.abspath(os.path.join(PROJECT_DIR, 'bears'))\n+\n+\n+def get_args():\n+    parser = argparse.ArgumentParser(\n+        description='This program generates a yaml requirement file for '\n+                    'installation of linters that are used by the bears.')\n+    parser.add_argument('--output', '-o',\n+                        help='name of file to generate, or - for stdout',\n+                        default=os.path.join(PROJECT_DIR,\n+                                             BEAR_REQUIREMENTS_YAML))\n+    parser.add_argument('--bear-dirs', '-d', nargs='+', metavar='DIR',\n+                        help='additional directories which may contain bears')\n+\n+    parser.add_argument('--debug', action='store_true',\n+                        help='sets logging level to debug.')\n+    parser.add_argument('--check', '-c', action='store_true',\n+                        help='performs a dry run, and reports differences.')\n+    parser.add_argument('--update', '-u', action='store_true',\n+                        help='updates \"bear-requirements.yaml\" '\n+                             'instead of overwriting')\n+    args = parser.parse_args()\n+\n+    return args\n+\n+\n+def get_all_bears(bear_dirs):\n+    local_bears, global_bears = collect_bears(\n+        bear_dirs,\n+        ['**'],\n+        [BEAR_KIND.LOCAL, BEAR_KIND.GLOBAL],\n+        warn_if_unused_glob=False)\n+    return list(itertools.chain(local_bears, global_bears))\n+\n+\n+def get_inherited_requirements():\n+    inherited_requirements = set()\n+\n+    in_inherited = False\n+    with open(os.path.join(PROJECT_DIR, 'requirements.txt'), 'r') as file:\n+        for line in file.read().splitlines():\n+            if 'inherited' in line:\n+                in_inherited = True\n+                continue\n+            if in_inherited:\n+                if line.startswith('# '):\n+                    requirement = line[2:]\n+                    inherited_requirements.add(requirement.replace('-', '_'))\n+                    inherited_requirements.add(requirement.replace('_', '-'))\n+                else:\n+                    in_inherited = False\n+\n+    return inherited_requirements\n+\n+\n+INHERITED_PIP_REQUIREMENTS = get_inherited_requirements()\n+\n+REQUIREMENT_TYPES = collections.OrderedDict({","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:54:55Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:54:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDIxNA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800214","bodyText":"-v 1.16.1 necessary ??  Needs a comment explaining why","diffHunk":"@@ -0,0 +1 @@\n+gem install bundler -v 1.16.1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:55:52Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:55:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI0MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800240","bodyText":"remove R_LIB_USER everywhere as it is mispelt; find variable for /usr/local/lib/R/site-library","diffHunk":"@@ -4,7 +4,7 @@ set -e\n set -x\n \n # R commands\n-echo '.libPaths( c( \"'\"$R_LIB_USER\"'\", .libPaths()) )' >> .Rprofile\n+echo '.libPaths( c( \"/usr/local/lib/R/site-library\", .libPaths()) )' >> ~/.Rprofile","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:56:57Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:56:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI1Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800256","bodyText":".cmd not needed ?","diffHunk":"@@ -0,0 +1,4 @@\n+R.exe -e \"install.packages('formatR')\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:57:44Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:57:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI2MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800261","bodyText":"doubt this is needed either","diffHunk":"@@ -0,0 +1,2 @@\n+install.packages(\"formatR\")","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:57:59Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:57:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI5MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800291","bodyText":"separate commit for this","diffHunk":"@@ -24,7 +24,18 @@ if [ ! -e ~/infer-linux64-v0.7.0/infer/bin ]; then\n   # See https://github.com/coala/coala-bears/issues/1763\n   opam pin add --yes --no-action reason 1.13.5\n \n+  opam pin add --yes --no-action javalib 2.3.1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:59:21Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:59:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDI5OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800299","bodyText":"cleanup","diffHunk":"@@ -0,0 +1,12 @@\n+#julia -e \"Pkg.add(\\\"Lint\\\")\"\n+\n+#julia -e \"import Lint.lintfile\"\n+\n+#mkdir deps","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T13:59:41Z","lastEditedAt":null,"updatedAt":"2019-06-29T13:59:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDMzMA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800330","bodyText":"inline it, so no need for extra file .ci/deps.goreturns.sh","diffHunk":"@@ -7,3 +7,5 @@ go get -u github.com/alecthomas/gometalinter\n gometalinter --install\n \n go get -u github.com/BurntSushi/toml/cmd/tomlv\n+\n+.ci/deps.goreturns.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T14:01:21Z","lastEditedAt":null,"updatedAt":"2019-06-29T14:01:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgwMDM2MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298800361","bodyText":"Add note about elm version here; as 0.19 needs elm.json instead","diffHunk":"@@ -0,0 +1,11 @@\n+function Install-Elm-Format {\n+    elm-compiler --version\n+    wget https://github.com/avh4/elm-format/releases/download/0.8.1/elm-format-0.8.1-win-i386.zip\n+    7z e elm-format-0.8.1-win-i386.zip\n+    mv elm-format.exe ./node_modules/.bin\n+    touch elm-package.json","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-29T14:02:41Z","lastEditedAt":null,"updatedAt":"2019-06-29T14:02:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgyOTY4Mw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298829683","bodyText":"Need to also address status of old & unusable circle.yml","diffHunk":"@@ -4,7 +4,7 @@ set -e\n set -x\n \n # R commands\n-echo '.libPaths( c( \"'\"$R_LIB_USER\"'\", .libPaths()) )' >> .Rprofile\n+echo '.libPaths( c( \"/usr/local/lib/R/site-library\", .libPaths()) )' >> ~/.Rprofile","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:32:47Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:32:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgyOTg2MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298829860","bodyText":"probably related to .travis.yml entry if [ -f .ci/$TRAVIS_LANGUAGE.GNUMakefile ]; then ln -s .ci/$TRAVIS_LANGUAGE.GNUMakefile ./GNUMakefile; fi , possibly to deactivate something.","diffHunk":"@@ -0,0 +1 @@\n+install:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:37:09Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:37:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDEyMQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830121","bodyText":"this should be moved into .ci/deps.elm.sh","diffHunk":"@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+set -e -x\n+\n+# NPM commands\n+ALEX=$(which alex || true)\n+# Delete 'alex' if it is not in a node_modules directory,\n+# which means it is ghc-alex.\n+if [[ -n \"$ALEX\" && \"${ALEX/node_modules/}\" == \"${ALEX}\" ]]; then\n+  echo \"Removing $ALEX\"\n+  sudo rm -rf $ALEX\n+fi\n+\n+if [ -z \"$TRAVIS_LANGUAGE\" ]; then\n+  npm install\n+  npm list --depth=0\n+fi\n+\n+# elm-format Installation\n+if [ ! -e ~/.local/bin/elm-format ]; then","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:43:34Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:43:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDEzNQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830135","bodyText":"not sure what this was about","diffHunk":"@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+set -e -x\n+\n+# NPM commands\n+ALEX=$(which alex || true)\n+# Delete 'alex' if it is not in a node_modules directory,\n+# which means it is ghc-alex.\n+if [[ -n \"$ALEX\" && \"${ALEX/node_modules/}\" == \"${ALEX}\" ]]; then\n+  echo \"Removing $ALEX\"\n+  sudo rm -rf $ALEX\n+fi\n+\n+if [ -z \"$TRAVIS_LANGUAGE\" ]; then","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:43:54Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:43:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDE4Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830187","bodyText":"move into a new .ci/deps.alex.sh, as it is probably useful from generic images","diffHunk":"@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+set -e -x\n+\n+# NPM commands\n+ALEX=$(which alex || true)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:45:15Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:45:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMDM1OA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298830358","bodyText":"this is unused unless there is a travis BEARS= entry referring to 'pear'","diffHunk":"@@ -0,0 +1,2 @@\n+pear install pear/PHP_CodeSniffer","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T11:49:06Z","lastEditedAt":null,"updatedAt":"2019-06-30T11:49:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMjEyNw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298832127","bodyText":"todo: this depends on another feature in tox-backticks","diffHunk":"@@ -0,0 +1,135 @@\n+[tox]\n+envlist = py{34,35,36,37}-{all,pip,clang,npm,gem,go,perl,php,cabal,java,java7,java8,scala,elm,r,dart,julia,lua,infer,opam,apt,adhoc,disabled,win,swift,mono}-{list,check,collectonly,skip,noskip}-codecov\n+minversion = 3.4\n+\n+[travis:env]\n+TRAVIS =\n+  true: codecov\n+TRAVIS_LANGUAGE =\n+  python: pip-noskip\n+  node_js: py36-npm-noskip\n+  ruby: py36-gem-noskip\n+  haskell: py36-cabal-noskip\n+  go: py36-go-noskip\n+  perl: py36-perl-noskip\n+  php: py36-php-noskip\n+  scala: py36-scala-noskip\n+  elm: py36-elm-noskip\n+  r: py36-r-noskip\n+  dart: py36-dart-noskip\n+  julia: py36-julia-noskip\n+  objective_c: py36-swift-noskip\n+  swift: py36-swift-noskip\n+  objectivec: py36-swift-noskip\n+  objective-c: py36-swift-noskip\n+  csharp: py36-mono-noskip\n+  minimal,generic: py36-adhoc-noskip\n+TRAVIS_JDK_VERSION =\n+  oraclejdk11: py36-java-skip\n+  oraclejdk9: py36-java-skip\n+  oraclejdk8: py36-java8-noskip\n+  openjdk11: py36-java-skip\n+  openjdk10: py36-java-skip\n+  openjdk9: py36-java-skip\n+  openjdk8: py36-java8-noskip\n+  openjdk7: py36-java7-noskip\n+# apt_get is the only group allowed to skip\n+BEARS =\n+  apt_get: py36-apt-skip\n+  lua: py36-lua-noskip\n+  infer: py36-infer-noskip\n+  opam: py36-opam-noskip\n+  adhoc: py36-adhoc-noskip\n+  clang: py36-clang-noskip\n+  disabled: py36-disabled-noskip\n+\n+# pyyaml literally here to support get_tests.py\n+[testenv]\n+passenv =\n+  HOME\n+  PATH\n+  CI CI_*\n+  TRAVIS TRAVIS_*\n+  APPVEYOR APPVEYOR_*\n+  TOX_*\n+  PIP_*\n+  VIRTUALENV_*\n+  LOCALAPPDATA\n+  GEM_HOME\n+  GEM_PATH\n+  JULIA_PROJECT\n+  GOROOT\n+  GOPATH\n+  BEARS\n+  BEAR_LIST\n+  DISABLE_BEARS\n+  R_LIBS_USER\n+  R_LIBS_SITE\n+  _R_CHECK_CRAN_INCOMING_\n+  NOT_CRAN\n+  R_PROFILE\n+pip_version = 9.0.1\n+alwayscopy = true\n+skipsdist = true\n+skip_install = true\n+list_dependencies_command = python -m pip freeze --local\n+whitelist_externals =\n+    pytest\n+    bash\n+    rm\n+deps =\n+    # Doing this inside tox failed once\n+    # https://travis-ci.org/jayvdb/coala-bears/jobs/547197301\n+    # hg+https://bitbucket.org/jayvdb/sarge@win-reg-lookup#egg=sarge\n+    git+https://github.com/coala/coala#egg=coala\n+    pip: -rbear-requirements.txt\n+    # These two are needed for some non-pip bears\n+    !pip: aenum\n+    !pip: PyYAML\n+    npm: docutils-ast-writer~=0.1.2\n+    apt,clang,mono,adhoc: libclang-py3~=3.4.0\n+    clang: munkres3~=1.0\n+    java7,java8: language-check~=1.0\n+    java7,java8: guess-language-spirit~=0.5.2\n+    -rtest-requirements.txt\n+    # pytest-cov-threshold is incompatible with py34\n+    !py34: git+https://github.com/krkd/pytest-cov-threshold\n+    noskip: pytest-error-for-skips\n+setenv =\n+    all,pip: PIPBEARS=`python .ci/get_tests.py noreqs pip`\n+    all,clang: PIPBEARS=`python .ci/get_tests.py clang`\n+    all,npm: NPMBEARS=`python .ci/get_tests.py npm`\n+    all,elm: NPMBEARS=`python .ci/get_tests.py elm`\n+    all,gem: GEMBEARS=`python .ci/get_tests.py gem`\n+    all,go: GOBEARS=`python .ci/get_tests.py go`\n+    all,perl: PERLBEARS=`python .ci/get_tests.py perl`\n+    all,php: PHPBEARS=`python .ci/get_tests.py php`\n+    all,cabal: CABALBEARS=`python .ci/get_tests.py cabal`\n+    all,java8: JAVABEARS=`python .ci/get_tests.py java`\n+    all,java7: JAVABEARS=`python .ci/get_tests.py java`\n+    all,java: JAVABEARS=`python .ci/get_tests.py java`\n+    all,scala: JAVABEARS=`python .ci/get_tests.py scala`\n+    all,swift: JAVABEARS=`python .ci/get_tests.py swift`\n+    all,mono: MONOBEARS=`python .ci/get_tests.py mono`\n+    all,r: RBEARS=`python .ci/get_tests.py r`\n+    all,dart: DARTBEARS=`python .ci/get_tests.py dart`\n+    all,julia: JULIABEARS=`python .ci/get_tests.py julia`\n+    all,lua: LUABEARS=`python .ci/get_tests.py lua`\n+    all,opam,infer: OPAMBEARS=`python .ci/get_tests.py opam`\n+    all,apt: APTBEARS=`python .ci/get_tests.py apt_get`\n+    adhoc: ADHOCBEARS=`python .ci/get_tests.py {env:BEAR_LIST}`\n+    disabled: DISABLEDBEARS=`python .ci/get_tests.py --disabled {env:BEAR_LIST}`\n+    SELECTED={env:PIPBEARS:} {env:NPMBEARS:} {env:GEMBEARS:} {env:GOBEARS:} {env:PERLBEARS:} {env:PHPBEARS:} {env:CABALBEARS:} {env:JAVABEARS:} {env:MONOBEARS:} {env:RBEARS:} {env:DARTBEARS:} {env:JULIABEARS:} {env:LUABEARS:} {env:OPAMBEARS:} {env:APTBEARS:} {env:ADHOCBEARS:} {env:DISABLEDBEARS:}\n+    noskip: PYTEST_ARGS=--error-for-skips\n+    py34-noskip: PYTEST_ARGS=--error-for-skips -k 'not test_valid_async'\n+    win-noskip: PYTEST_ARGS=--error-for-skips -k 'not test_language_french and not test_valid_async'\n+    collectonly,list: PYTEST_ARGS=--collect-only\n+    codecov: CODECOV_FLAGS=`python .ci/get_codecov_tags.py {envname}`\n+commands =\n+    check,list,all: python .ci/get_bears.py --missing {env:SELECTED}\n+    java: bash -e -x .ci/deps.coala-bears.sh\n+    !py34,!apt: python .ci/generate_coverage_thresholds.py {posargs:{env:SELECTED}}\n+    py34,apt: rm -f .threshold.json\n+    !list: pytest {env:PYTEST_ARGS:} --cov --cov-fail-under=0 --continue-on-collection-errors --cov-report term-missing:skip-covered --deselect=requirements.txt {posargs:{env:SELECTED}}\n+    codecov: codecov --name={envname} --flags={env:CODECOV_FLAGS}\n+# Use commands_post =","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:36:42Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:36:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMjE2Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298832166","bodyText":"maybe not required; nor Project.toml or JuliaProject.toml","diffHunk":"@@ -0,0 +1,2 @@\n+julia\n+Lint","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:37:45Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:37:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMjMxMw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298832313","bodyText":"remove - coala isnt installed yet, so we cant use .ci/deps.coala-bears.sh","diffHunk":"@@ -1,22 +1,18 @@\n-#!/bin/sh\n+#!/bin/bash\n \n-set -e\n-set -x\n+set -e -x\n \n-# PMD commands\n-PMD_VERSION=5.4.1\n-if [ ! -e ~/.local/bin/pmd ]; then\n-  wget -nc -O ~/pmd.zip https://github.com/pmd/pmd/releases/download/pmd_releases%2F5.4.1/pmd-bin-5.4.1.zip\n-  unzip ~/pmd.zip -d ~/\n-  cp -r ~/pmd-bin-$PMD_VERSION/* ~/.local/\n+if [ -n \"$TRAVIS_JDK_VERSION\" ]; then\n+  jdk_version=${TRAVIS_JDK_VERSION#openjdk}\n+  jdk_version=${jdk_version#oraclejdk}\n fi\n \n-# Tailor (Swift) commands\n-# Comment out the hardcoded PREFIX, so we can put it into ~/.local\n-if [ ! -e ~/.local/tailor/tailor-latest ]; then\n-  curl -fsSL -o install.sh https://tailor.sh/install.sh\n-  sed -i 's/read -r CONTINUE < \\/dev\\/tty/CONTINUE=y/;;s/^PREFIX.*/# PREFIX=\"\"/;' install.sh\n-  PREFIX=$HOME/.local bash ./install.sh\n-  # Provide a constant path for the executable\n-  ln -s ~/.local/tailor/tailor-* ~/.local/tailor/tailor-latest\n+if [ -z \"$jdk_version\" ] || [ $jdk_version -eq 8 ]; then\n+  .ci/deps.tailor.sh\n fi\n+\n+if [ -z \"$(which pmd || true)\" ]; then\n+  .ci/deps.pmd.sh\n+fi\n+\n+#bash -e -x .ci/deps.coala-bears.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:41:08Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:41:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzE1MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833150","bodyText":"This is a future task todo; not feasible in short term","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:58:41Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:58:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzE1Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833157","bodyText":"todo now!","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T12:58:49Z","lastEditedAt":null,"updatedAt":"2019-06-30T12:58:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzI1MQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833251","bodyText":"this job is holding up the build, as it takes longer than the others in test-languages; maybe move to test-other-versions\nthe others finish around 20mins - the windows job takes 27 mins","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:01:07Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:01:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzI3MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833270","bodyText":"these jobs might be better in test-other-versions","diffHunk":"@@ -21,13 +17,19 @@ python:\n stages:\n   - name: sentinel\n     if: branch != master OR type = pull_request\n-  - test\n+  - test-python\n+  - test-languages\n+  - test-other-versions\n+  - test-apt","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:01:35Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:01:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzM2NA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833364","bodyText":"another \"must work out what to do with old circle.yml\" stuff.","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is\n+        # disabled in choco_requirements.  Uninstalling vctools fails\n+      install:\n+        - powershell -c \". .ci/Fudge.ps1 install\"\n+        - refreshenv\n+        - taskkill -IM \"gpg-agent.exe\" || true\n+      before_script:\n+        - python --version\n+      script:\n+        - \"sed -i 's/^envlist.*$/envlist: '$TOXENV/ tox.ini\"\n+        - python -m tox --sitepackages\n+        - git checkout tox.ini\n+\n+    - stage: test-python\n+\n+      language: python\n+      python: 3.6\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.5\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.4\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: csharp\n+      mono: 5.20.1\n+\n+    - language: r\n+      r: release\n+\n+    - language: node_js\n+      node_js: 10\n+\n+    - language: julia\n+      # default language is 0.6.4, and has problems with pre-installed Lint.jl\n+      julia: 1.1\n+      env: JL_PKG=CoalaBears\n+      # install not provided https://github.com/travis-ci/travis-build/pull/1571\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        # Verify compilation works\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: dart\n+      dart: 1.15.0\n+\n+    - language: perl\n+      perl: 5.14\n+\n+    - language: go\n+      go: 1.11\n+      install: true\n+\n+    - language: ruby\n+      rvm: 2.4\n+\n+    - language: php\n+      php: 7.2\n+\n+    - language: java\n+      jdk: oraclejdk8\n+\n+    - language: scala\n+      scala: 2.11\n+\n+    - language: lua\n+      env: BEARS=lua\n+      addons:\n+        apt:\n+          packages:\n+            - luarocks\n+\n+    - language: generic\n+      env: BEARS=opam INFER_VERSION=0.7.0\n+           PATH=$PATH:$HOME/infer-linux64-v$INFER_VERSION/infer/bin\n+      addons:\n+        apt:\n+          sources:\n+            - avsm\n+          packages:\n+            - camlp4-extra\n+            - ocaml\n+            - opam\n+\n+    # This is in generic image, as language: haskell isnt working yet\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"ghc-mod hlint\"\n+      # ghc-mod needs parts of ghc, specifically at least /usr/lib/ghc/settings\n+      # ghc-mod needs cabal-install\n+      # shellcheck is failing in xenial\n+      addons:\n+        apt:\n+          packages:\n+            - cabal-install\n+            - ghc\n+            - ghc-mod\n+            - hlint\n+\n+    # BEARS=apt_get rather than 'apt' to avoid invoking .deps.apt.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:03:37Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:03:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzk0Mg==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833942","bodyText":"need to get out the blame for these libraries -- they probably made one of the languages faster; probably R","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is\n+        # disabled in choco_requirements.  Uninstalling vctools fails\n+      install:\n+        - powershell -c \". .ci/Fudge.ps1 install\"\n+        - refreshenv\n+        - taskkill -IM \"gpg-agent.exe\" || true\n+      before_script:\n+        - python --version\n+      script:\n+        - \"sed -i 's/^envlist.*$/envlist: '$TOXENV/ tox.ini\"\n+        - python -m tox --sitepackages\n+        - git checkout tox.ini\n+\n+    - stage: test-python\n+\n+      language: python\n+      python: 3.6\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.5\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+    - language: python\n+      python: 3.4\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: csharp\n+      mono: 5.20.1\n+\n+    - language: r\n+      r: release\n+\n+    - language: node_js\n+      node_js: 10\n+\n+    - language: julia\n+      # default language is 0.6.4, and has problems with pre-installed Lint.jl\n+      julia: 1.1\n+      env: JL_PKG=CoalaBears\n+      # install not provided https://github.com/travis-ci/travis-build/pull/1571\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        # Verify compilation works\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: dart\n+      dart: 1.15.0\n+\n+    - language: perl\n+      perl: 5.14\n+\n+    - language: go\n+      go: 1.11\n+      install: true\n+\n+    - language: ruby\n+      rvm: 2.4\n+\n+    - language: php\n+      php: 7.2\n+\n+    - language: java\n+      jdk: oraclejdk8\n+\n+    - language: scala\n+      scala: 2.11\n+\n+    - language: lua\n+      env: BEARS=lua\n+      addons:\n+        apt:\n+          packages:\n+            - luarocks\n+\n+    - language: generic\n+      env: BEARS=opam INFER_VERSION=0.7.0\n+           PATH=$PATH:$HOME/infer-linux64-v$INFER_VERSION/infer/bin\n+      addons:\n+        apt:\n+          sources:\n+            - avsm\n+          packages:\n+            - camlp4-extra\n+            - ocaml\n+            - opam\n+\n+    # This is in generic image, as language: haskell isnt working yet\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"ghc-mod hlint\"\n+      # ghc-mod needs parts of ghc, specifically at least /usr/lib/ghc/settings\n+      # ghc-mod needs cabal-install\n+      # shellcheck is failing in xenial\n+      addons:\n+        apt:\n+          packages:\n+            - cabal-install\n+            - ghc\n+            - ghc-mod\n+            - hlint\n+\n+    # BEARS=apt_get rather than 'apt' to avoid invoking .deps.apt.sh\n+    # which is the old circle init\n+    - stage: test-apt\n+      language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=apt_get DISABLE_BEARS=shellcheck\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php7.0-cli\n+            - phpmd\n+            - php-codesniffer\n+            - verilator\n+\n+    - stage: test-apt\n+      language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"bakalint default-jre\"\n+\n+    - stage: test-apt\n+      language: generic\n+      env: DIST=trusty BEARS=adhoc BEAR_LIST=astyle\n+      addons:\n+        apt:\n+          sources:\n+            - sourceline:  # astyle\n+                deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main\n+              key_url:\n+                https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C\n+          packages:\n+            - astyle\n+\n+    - stage: test-other-versions\n+\n+      language: node_js\n+      node_js: 9\n+    - language: node_js\n+      node_js: 8\n+    - language: node_js\n+      node_js: 7\n+    - language: node_js\n+      node_js: 6\n+\n+    - language: ruby\n+      rvm: 2.5\n+      env: DISABLE_BEARS=csvlint\n+    - language: ruby\n+      rvm: 2.3\n+    - language: ruby\n+      rvm: 2.2\n+    - language: ruby\n+      rvm: 2.1\n+\n+    - language: go\n+      go: '1.10'\n+      install: true\n+\n+    - language: php\n+      php: hhvm-3.18\n+    - language: php\n+      php: 5.5\n+\n+    - language: scala\n+      jdk: oraclejdk8\n+      scala: 2.12.2\n+\n+    # oraclejdk10 is EOL\n+    - language: java\n+      jdk: oraclejdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+\n+    - language: java\n+      jdk: openjdk11\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk10\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk7\n+      env: DISABLE_BEARS=tailor\n+\n+    - language: dart\n+      dart: 1.14.2\n+\n+    - language: julia\n+      julia: 1.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: julia\n+      julia: 0.7.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: r\n+      r: devel\n+\n+    - language: r\n+      r: oldrel\n+\n+    - language: generic\n+      env: DIST=trusty BEARS=apt_get\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - php-codesniffer\n+            - shellcheck\n+            - verilator\n+\n+    - stage: test-apt\n+      language: generic\n+      env: DIST=precise BEARS=apt_get\n+      dist: precise\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - python3\n+            - verilator\n+\n+    - stage: test-master\n+\n+      # This is under other languages, as the only bear is tailor\n+      # which is java, already covered above.  Listed first to schedule\n+      # it early onto osx, as they take a while to spin up\n+      language: objective_c\n+      os: osx\n+      dist: false\n+\n     - *check_moban\n   allow_failures:\n     - *check_moban\n \n-dist: trusty\n-\n-.apt_sources: &apt_sources\n-  - ubuntu-toolchain-r-test\n-  # avsm  # OPAM stable\n-  - hvr-ghc  # Haskell\n-  - sourceline:  # R\n-      deb https://cloud.r-project.org/bin/linux/ubuntu trusty-cran35/\n-    key_url:\n-      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x51716619E084DAB9\n-  - sourceline:  # Julia\n-      deb http://ppa.launchpad.net/staticfloat/juliareleases/ubuntu trusty main\n-    key_url:\n-      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xCF979FFA3D3D3ACC\n-  - sourceline:  # astyle\n-      deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main\n-    key_url:\n-      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C\n-\n-addons:\n-  apt:\n-    sources: *apt_sources\n-    packages:\n-      - aspcud\n-      - astyle\n-      - cabal-install-1.24\n-      - chktex\n-      - clang-3.4\n-      - cppcheck\n-      - devscripts\n-      - flawfinder\n-      - gfortran\n-      - ghc\n-      - happy\n-      - indent\n-      - julia\n-      - libarpack2\n-      - libblas-dev\n-      - libcolamd2.8.0\n-      - libfftw3-3\n-      - liblapack-dev\n-      - libopenblas-base\n-      - libpaper-utils\n-      - libperl-critic-perl\n-      - libumfpack5.6.2","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:18:05Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:18:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzMzk5Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298833996","bodyText":"fudge unnecessary; as it is now in the repo","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:19:18Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:19:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDAxNg==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834016","bodyText":"turn off","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:19:43Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:19:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDA1OQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834059","bodyText":"do this in a .ci/deps* file","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh\n+\n+  - if [ -f .ci/deps.$TRAVIS_LANGUAGE.sh ]; then\n+      bash -e -x .ci/deps.$TRAVIS_LANGUAGE.sh;\n+    fi\n+\n+  - python --version\n+  # ~/bin is uncached; ~/local/bin is cached; we dont want python/pip in latter\n+  - rm -f ~/.local/bin/python* ~/.local/bin/pip*\n+\n+  - source .ci/deps.pyenv.sh\n+  - pyenv versions\n+  - pyenv versions --bare\n+  # node-gpy needs py27\n+  - if [ \"$TRAVIS_LANGUAGE\" = \"node_js\" ]; then pyenv global 2.7; hash -r; fi\n+  - if [ \"$BEARS\" = \"infer\" ]; then pyenv global 2.7; hash -r; fi\n+  - pyenv versions\n+  - python --version\n+\n+  # Remove Ruby directive from Gemfile as we test many versions\n+  - sed -i.bak '/^ruby/d' Gemfile","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:20:41Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:20:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDA3MA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834070","bodyText":"needs to go if not used.","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh\n+\n+  - if [ -f .ci/deps.$TRAVIS_LANGUAGE.sh ]; then\n+      bash -e -x .ci/deps.$TRAVIS_LANGUAGE.sh;\n+    fi\n+\n+  - python --version\n+  # ~/bin is uncached; ~/local/bin is cached; we dont want python/pip in latter\n+  - rm -f ~/.local/bin/python* ~/.local/bin/pip*\n+\n+  - source .ci/deps.pyenv.sh\n+  - pyenv versions\n+  - pyenv versions --bare\n+  # node-gpy needs py27\n+  - if [ \"$TRAVIS_LANGUAGE\" = \"node_js\" ]; then pyenv global 2.7; hash -r; fi\n+  - if [ \"$BEARS\" = \"infer\" ]; then pyenv global 2.7; hash -r; fi\n+  - pyenv versions\n+  - python --version\n+\n+  # Remove Ruby directive from Gemfile as we test many versions\n+  - sed -i.bak '/^ruby/d' Gemfile\n+\n+  # Used by go, to do nothing; not working\n+  - if [ -f .ci/$TRAVIS_LANGUAGE.GNUMakefile ]; then","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:20:53Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:20:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDA4NA==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834084","bodyText":"recheck if this is needed","diffHunk":"@@ -1,3 +1,6 @@\n Package: coala\n Version: 0.10\n Depends: R (>= 3.1.0), lintr, formatR\n+Imports:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:21:14Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:21:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODgzNDk3Nw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298834977","bodyText":"recheck how important this is","diffHunk":"@@ -147,54 +413,101 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.nuget/packages/fudge/1.3.0/tools:$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    - VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-06-30T13:42:25Z","lastEditedAt":null,"updatedAt":"2019-06-30T13:42:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODg2ODQ3Ng==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298868476","bodyText":"outdated comment","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-other-versions\n+      os: windows\n+      language: bash\n+      python: 3.6.8\n+      env:\n+        BEAR_LIST=\"astyle cppcheck xmllint\"\n+        TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc\n+      cache:\n+        directories:\n+          - /C/nuget_http_cache\n+          - /C/choco_cache\n+          - /C/pip_cache\n+      before_install:\n+        - bash --version\n+        - powershell -c \"$PSVersionTable\"\n+        - powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'\n+        - powershell -c 'Set-MpPreference -DisableArchiveScanning $true'\n+        - powershell -c 'Set-MpPreference -DisableBehaviorMonitoring $true'\n+\n+        - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache\n+        - export CHOCO_CACHE_DIR=/C/choco_cache\n+        - export PIP_CACHE_DIR=/C/pip_cache\n+\n+        - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win\n+\n+        - printenv\n+\n+        - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config\n+        - powershell -c \"Set-ExecutionPolicy -ExecutionPolicy Unrestricted\n+                                             -Scope LocalMachine\"\n+\n+        # TODO: move into post-install\n+        # These are empty at this stage, and probably not used at all\n+        # but pip complains about them not being in the PATH, which might\n+        # be for --user support\n+        - ls /C/Users/travis/AppData/Roaming/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/ || true\n+        - ls /C/Users/travis/AppData/Roaming/Python/Python36/Scripts/ || true\n+        - PYTHON_PATH=/C/Users/travis/AppData/Roaming/Python/Python36\n+        - export PATH=\"$PYTHON_PATH:$PYTHON_PATH/Scripts:$PATH\"\n+        - echo $PATH\n+\n+        - python .ci/store_env_in_registry.py\n+        - source .ci/refreshenv.sh\n+\n+        # TODO: Add support for disabling pre-installed vctools which is\n+        # disabled in choco_requirements.  Uninstalling vctools fails\n+      install:\n+        - powershell -c \". .ci/Fudge.ps1 install\"\n+        - refreshenv\n+        - taskkill -IM \"gpg-agent.exe\" || true\n+      before_script:\n+        - python --version\n+      script:\n+        - \"sed -i 's/^envlist.*$/envlist: '$TOXENV/ tox.ini\"\n+        - python -m tox --sitepackages\n+        - git checkout tox.ini\n+\n+    - stage: sentinel\n+      language: python\n+      python: 3.6\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: python\n+      python: 3.5\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-other-versions\n+      language: python\n+      python: 3.4\n+      addons:\n+        apt:\n+          packages: clang-3.4\n+\n+    - stage: test-languages\n+      language: csharp\n+      mono: 5.20.1\n+\n+    - language: r\n+      r: release\n+\n+    - language: node_js\n+      node_js: 10\n+\n+    - language: julia\n+      # default language is 0.6.4, and has problems with pre-installed Lint.jl\n+      julia: 1.1\n+      env: JL_PKG=CoalaBears\n+      # install not provided https://github.com/travis-ci/travis-build/pull/1571\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        # Verify compilation works\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: dart\n+      dart: 1.15.0\n+\n+    - language: perl\n+      perl: 5.14\n+\n+    - language: go\n+      go: 1.11\n+      install: true\n+\n+    - language: ruby\n+      rvm: 2.4\n+\n+    - language: php\n+      php: 7.2\n+\n+    - language: java\n+      jdk: oraclejdk8\n+\n+    - language: scala\n+      scala: 2.11\n+\n+    - language: lua\n+      env: BEARS=lua\n+      addons:\n+        apt:\n+          packages:\n+            - luarocks\n+\n+    - language: generic\n+      env: BEARS=opam INFER_VERSION=0.7.0\n+           PATH=$PATH:$HOME/infer-linux64-v$INFER_VERSION/infer/bin\n+      addons:\n+        apt:\n+          sources:\n+            - avsm\n+          packages:\n+            - camlp4-extra\n+            - ocaml\n+            - opam\n+\n+    # This is in generic image, as language: haskell isnt working yet\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"ghc-mod hlint\"\n+      # ghc-mod needs parts of ghc, specifically at least /usr/lib/ghc/settings\n+      # ghc-mod needs cabal-install\n+      # shellcheck is failing in xenial\n+      addons:\n+        apt:\n+          packages:\n+            - cabal-install\n+            - ghc\n+            - ghc-mod\n+            - hlint\n+\n+    # BEARS=apt_get rather than 'apt' to avoid invoking .deps.apt.sh\n+    # which is the old circle init\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=apt_get DISABLE_BEARS=shellcheck\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php7.0-cli\n+            - phpmd\n+            - php-codesniffer\n+            - verilator\n+\n+    - language: generic\n+      dist: xenial\n+      env: DIST=xenial BEARS=adhoc BEAR_LIST=\"bakalint default-jre\"\n+\n+    - language: generic\n+      env: DIST=trusty BEARS=adhoc BEAR_LIST=astyle\n+      addons:\n+        apt:\n+          sources:\n+            - sourceline:  # astyle\n+                deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main\n+              key_url:\n+                https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C\n+          packages:\n+            - astyle\n+\n+    - stage: test-other-versions\n+\n+      language: node_js\n+      node_js: 9\n+    - language: node_js\n+      node_js: 8\n+    - language: node_js\n+      node_js: 7\n+    - language: node_js\n+      node_js: 6\n+\n+    - language: ruby\n+      rvm: 2.5\n+      env: DISABLE_BEARS=csvlint\n+    - language: ruby\n+      rvm: 2.3\n+    - language: ruby\n+      rvm: 2.2\n+    - language: ruby\n+      rvm: 2.1\n+\n+    - language: go\n+      go: '1.10'\n+      install: true\n+\n+    - language: php\n+      php: hhvm-3.18\n+    - language: php\n+      php: 5.5\n+\n+    - language: scala\n+      jdk: oraclejdk8\n+      scala: 2.12.2\n+\n+    # oraclejdk10 is EOL\n+    - language: java\n+      jdk: oraclejdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+\n+    - language: java\n+      jdk: openjdk11\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk10\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk9\n+      env: DISABLE_BEARS=\"languagetool tailor\"\n+    - language: java\n+      jdk: openjdk7\n+      env: DISABLE_BEARS=tailor\n+\n+    - language: dart\n+      dart: 1.14.2\n+\n+    - language: julia\n+      julia: 1.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: julia\n+      julia: 0.7.0\n+      env: JL_PKG=CoalaBears\n+      install:\n+        - julia --color=yes .ci/deps.julia.jl\n+        - julia -e 'import Lint.lintfile'\n+\n+    - language: r\n+      r: devel\n+\n+    - language: r\n+      r: oldrel\n+\n+    - language: generic\n+      env: DIST=trusty BEARS=apt_get\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - php-codesniffer\n+            - shellcheck\n+            - verilator\n+\n+    - stage: test-other-versions\n+      language: generic\n+      env: DIST=precise BEARS=apt_get\n+      dist: precise\n+      addons:\n+        apt:\n+          packages:\n+            - chktex\n+            - cppcheck\n+            - devscripts\n+            - flawfinder\n+            - indent\n+            - libperl-critic-perl\n+            - libxml2-utils\n+            - mono-mcs\n+            - php5-cli\n+            - python3\n+            - verilator\n+\n+    - stage: test-master\n+\n+      # This is under other languages, as the only bear is tailor","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-01T02:56:40Z","lastEditedAt":null,"updatedAt":"2019-07-01T02:56:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODg2ODYwMQ==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298868601","bodyText":"node-gpy should no longer be necessary","diffHunk":"@@ -147,54 +413,94 @@ cache:\n     # coala managed data\n     - ~/nltk_data\n     # Installed linters\n+    # Check this version works\n     - ~/infer-linux64-v$INFER_VERSION\n     - ~/.local/\n \n env:\n   global:\n     - TERM=dumb\n     - R_LIB_USER=~/R/Library\n+    - R_PROFILE=~/.Rprofile\n     - LINTR_COMMENT_BOT=false\n     - CABAL_VERSION=1.24\n-    - INFER_VERSION=0.7.0\n-    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    - PATH=\"$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin\"\n+    # These are only needed by Windows\n+    - NUGET_EXE_NO_PROMPT=true\n+    - VIRTUALENV_NO_DOWNLOAD=1\n+    - VIRTUALENV_NO_PIP=1\n+    - VIRTUALENV_NO_SETUPTOOLS=1\n+    # Enable to debug tox\n+    # VIRTUALENV_VERBOSE=1\n+    - PIP_DISABLE_PIP_VERSION_CHECK=1\n+    - PIP_YES=1\n+    - FudgeCI=${TRAVIS_BUILD_DIR}/.ci/\n+    - TOX_FEATURES=check-noskip-codecov\n \n before_install:\n-  # Install latest stable version of Go using gimme\n-  - gimme 1.11.5 > setup_go_root.sh\n-  - source setup_go_root.sh\n-  - nvm install 6.10.2\n-  # Remove Ruby directive from Gemfile as this image has 2.2.5\n-  - sed -i '/^ruby/d' Gemfile\n-  - .ci/deps.sh\n-  - .ci/deps.go.sh\n-  - .ci/deps.cabal.sh\n-  - .ci/deps.r.sh\n-  # .ci/deps.opam.sh\n-  - .ci/deps.java.sh\n+  - printenv\n+  - mkdir -p ~/bin ~/.local/bin\n+\n+  - if [ -z \"$GOPATH\" ]; then\n+      export GOPATH=\"/home/travis/gopath\";\n+    fi\n+  # TODO: implement DISABLE_BEARS globally, esp deps.generic.sh\n+\n+  - if [ -f .ci/deps.$TRAVIS_LANGUAGE.sh ]; then\n+      bash -e -x .ci/deps.$TRAVIS_LANGUAGE.sh;\n+    fi\n+\n+  - python --version\n+  # ~/bin is uncached; ~/local/bin is cached; we dont want python/pip in latter\n+  - rm -f ~/.local/bin/python* ~/.local/bin/pip*\n+\n+  - source .ci/deps.pyenv.sh\n+  - pyenv versions\n+  - pyenv versions --bare\n+  # node-gpy needs py27","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-01T02:57:57Z","lastEditedAt":null,"updatedAt":"2019-07-01T02:57:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODg3NjczNw==","url":"https://github.com/coala/coala-bears/pull/2910#discussion_r298876737","bodyText":"It has been moved into Test-other-versions and the other jobs in this group take appox 27 mins, however that is largely because the R jobs are very inefficient, so that may need to be revisited if the R jobs are improved.","diffHunk":"@@ -70,67 +77,326 @@ jobs:\n       after_success: false\n       after_failure: false\n       if: branch = master AND type = push\n+\n+    - stage: test-languages","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-01T04:15:17Z","lastEditedAt":null,"updatedAt":"2019-07-01T04:15:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk0NTU4Mw==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-495945583","bodyText":"Coverage appearing at https://codecov.io/gh/coala/coala-bears/tree/c50ebe9/bears\n99.9%  The remaining coverage is Constants, which is only used by docs/conf.py:from bears.Constants import VERSION\nHaving coverage at 100% isnt critical any more because of the use of per-file 100% coverage requirements.  We should remove Constants.  Anyway, this will be fixed by running the docs inside tox also.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-25T20:14:27Z","lastEditedAt":"2019-05-26T01:56:27Z","updatedAt":"2019-05-26T01:56:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5NTk2MjE2Mg==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-495962162","bodyText":"The travis failures are intentional, and will be added to \"allowed failures\", except for Elm and Haskell, the two languages which are supported by Travis but not yet working.\nAnother change I'll likely try getting into this PR is adding Linux to AppVeyor, as it supports Bionic, which the apt_get factor should handle ok, and there are many more bears with OS distributed packages in bionic.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-05-26T02:07:05Z","lastEditedAt":null,"updatedAt":"2019-05-26T02:07:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzc0MTU2Nw==","url":"https://github.com/coala/coala-bears/pull/2910#issuecomment-507741567","bodyText":"Failures atm are due to travis-ci/travis-cookbooks#976","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2019-07-02T16:03:25Z","lastEditedAt":null,"updatedAt":"2019-07-02T16:03:25Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1559658342000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2897","number":2897,"title":"bear-requirements.txt: Add six~=1.11.0","body":"coala-bears has been throwing internal version\nconflict due to six requirement. This works as\ntemporary fix and ensures that six is managed\nmanually.\nCloses #2885\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2019-03-26T06:09:50Z","updatedAt":"2019-06-04T14:25:42Z","closedAt":"2019-06-04T14:25:36Z","state":"closed","user":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"owner":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2897","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQ3NjQ4OTMxMA==","url":"https://github.com/coala/coala-bears/pull/2897#issuecomment-476489310","bodyText":"@Makman2 @jayvdb Can you please review :)","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-26T06:12:28Z","lastEditedAt":null,"updatedAt":"2019-03-26T06:12:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NjQ5MjI2MA==","url":"https://github.com/coala/coala-bears/pull/2897#issuecomment-476492260","bodyText":"This works as a hotfix for the six version conflict. This was happening on Python3.4 because jsonschema dropped support for Python3.4 and which bumped the requirement to six>=1.11.0 while everyone else had six>=1.10.0. I did some analysis here, and found that the best way to handle this would be to manually handle the six dependency. This also means that if the packages update their six dependency or the build start to break this will need change as per them.\nI still think this not a good best approach of handling version conflicts, but the way pip works right now, its hard to find a good fix. If you have better approaches, mention them here. 😃","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-26T06:26:38Z","lastEditedAt":null,"updatedAt":"2019-03-26T06:26:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NjUyMjU3OA==","url":"https://github.com/coala/coala-bears/pull/2897#issuecomment-476522578","bodyText":"Is it possible to add a comment there referring to the issue? If someone reads that a year later that change is still understandable^^ And we then might even remove it again if things have improved^^","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTQ5MzU5Mg==","createdAt":"2019-03-26T08:31:21Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-03-26T08:29:58Z","lastEditedAt":null,"updatedAt":"2019-03-26T08:29:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ5ODY5NDkyOA==","url":"https://github.com/coala/coala-bears/pull/2897#issuecomment-498694928","bodyText":"Irrelevant now due to #2910","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-06-04T14:25:36Z","lastEditedAt":null,"updatedAt":"2019-06-04T14:25:36Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560345803000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2687","number":2687,"title":"CSSCombBear.py: Expand languages and not use stdin","body":"Expand csscomb's languages to add SCSS and SASS\nUse filename be given from command line, and not use stdin\nCloses #2682\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-09-03T08:09:13Z","updatedAt":"2019-06-12T13:23:23Z","closedAt":"2019-06-12T13:21:23Z","state":"closed","user":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"owner":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"assignee":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2687","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTEzMzEwNQ==","url":"https://github.com/coala/coala-bears/pull/2687#discussion_r215133105","bodyText":"Read https://github.com/coala/coala/blob/master/coalib/bearlib/abstractions/Linter.py#L880 to understand how use_stdin works. Simply removing this line is definitely not enough. It would not work properly.","diffHunk":"@@ -7,15 +7,14 @@\n \n @linter(executable='csscomb',\n         output_format='corrected',\n-        use_stdin=True,","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-05T04:30:02Z","lastEditedAt":null,"updatedAt":"2018-09-05T04:30:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTI2MDY0OA==","url":"https://github.com/coala/coala-bears/pull/2687#discussion_r215260648","bodyText":"If possible, please help me look for proper documentation on writing bears, i have been able to find only a basic one, i don't think that cuts out for this work, a more detailed one, if exists, should do the trick!\nThanks in advance! 😄","diffHunk":"@@ -7,15 +7,14 @@\n \n @linter(executable='csscomb',\n         output_format='corrected',\n-        use_stdin=True,","author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-05T13:06:20Z","lastEditedAt":null,"updatedAt":"2018-09-05T13:06:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTI2MTM2Ng==","url":"https://github.com/coala/coala-bears/pull/2687#discussion_r215261366","bodyText":"This is a linter bear so you should read http://api.coala.io/en/latest/Developers/Writing_Linter_Bears.html and http://api.coala.io/en/latest/Developers/Linter_Bears_Advanced.html. If you cannot find everything you need, read the source code ;)","diffHunk":"@@ -7,15 +7,14 @@\n \n @linter(executable='csscomb',\n         output_format='corrected',\n-        use_stdin=True,","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODk2NTc4Mw==","createdAt":"2018-09-05T13:11:17Z","content":"THUMBS_UP","user":{"login":"atb00ker","name":"Ajay Tripathi"}}],"createdAt":"2018-09-05T13:08:44Z","lastEditedAt":null,"updatedAt":"2018-09-05T13:08:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjkyNTIyMw==","url":"https://github.com/coala/coala-bears/pull/2687#discussion_r222925223","bodyText":"The output can be configured using CSScomb's CLI.Kindly have a look at that.","diffHunk":"@@ -7,15 +7,14 @@\n \n @linter(executable='csscomb',\n         output_format='corrected',\n-        use_stdin=True,","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2018-10-05T08:17:17Z","lastEditedAt":null,"updatedAt":"2018-10-05T08:17:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODAzNjY0OA==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-418036648","bodyText":"To be a 100% honest, i am not sure if i have solved the issue based on shear number of lines edited, since it is an issue marked as difficulty/low.\nMade the PR still because it seemed to work on my machine and i can't figure out further.\nGuidance would be appreciated.\nThanks! 😄","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-03T08:12:48Z","lastEditedAt":null,"updatedAt":"2018-09-03T08:12:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODEzNzMxMA==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-418137310","bodyText":"You said it worked on your machine, that's why I say it would be better to post evidence to show that you have a correct understanding of the issue and let people know it is working as expected. In this case, IMO you should run that bear on a testing file. The best case would be you do a comparison between the results before & after your change.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-03T14:52:11Z","lastEditedAt":null,"updatedAt":"2018-09-03T14:52:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE1Mzc2OA==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-418153768","bodyText":"Oh!\nI did coala --show-bears --filter-by-language SCSS, before CSSCombBear was not appearing, after the change it was appearing in that list. That's what i thought expanding the languages means.\nThe other thing in the issue was\nfilename be given on the command line, and not use stdin, for that\ni did coala -d=path/to/bear -b=CSSCombBear --files=test.css , and the errors in the file were pointed out.\nThat's what i meant by \"worked on my machine\".\nHowever, i am not confident about my PR because i don't understand what \"not use stdin\" means,(because even before the change the bear was taking file input from the command line), it'll be great help if you point me to the correct direction! 😄\nThanks!","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-03T16:09:53Z","lastEditedAt":"2018-09-03T16:12:04Z","updatedAt":"2018-09-03T16:12:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxOTM0MDU4MQ==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-419340581","bodyText":"Since i could not do it, i decided to look for solution on the csscomb's github and i found a gem: csscomb/csscomb.js#451\nSince, it has not been solved, how do i go about it?","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-07T06:48:39Z","lastEditedAt":null,"updatedAt":"2018-09-07T06:48:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxOTM0NDAzOQ==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-419344039","bodyText":"Have you tried if csscomb has an option to send the response to stdout? csscomb/csscomb.js#451 is quite old, maybe they have developed some more features which could solve the problem, but forgot to reply in that post. I see csscomb has --linter option, not sure if that is related.\nIf you cannot find a solution, maybe you could reply that post or file a new issue to seek help from their community. And this pr has to be blocked in that case.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-07T07:05:25Z","lastEditedAt":"2018-09-07T07:05:55Z","updatedAt":"2018-09-07T07:05:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxOTM2NTc0MA==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-419365740","bodyText":"Yes, i tried the options you have mentioned and more, no luck, been reading the code too, no luck still.\nI'll post the question on their community, but i don't expect any response because currently there is no maintainer on the project and it has been inactive for a more than a year now.\nFollow for more: csscomb/csscomb.js#591\nYes, i understand a not-working bear is useless and the issue needs to be blocked.","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-07T08:34:44Z","lastEditedAt":"2018-09-07T08:35:26Z","updatedAt":"2018-09-07T08:35:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxOTM3NDc1MQ==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-419374751","bodyText":"ping @jayvdb","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-07T09:06:42Z","lastEditedAt":null,"updatedAt":"2018-09-07T09:06:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQyNzI3OTc2OA==","url":"https://github.com/coala/coala-bears/pull/2687#issuecomment-427279768","bodyText":"Usage: csscomb [options] <file ...>\nOptions:\n-l, --lint           in case some fixes needed returns an error\nYou can try using the linter options here\nI dont know much of JS but you can have a look at their command line interface file for some hints.\nhttps://github.com/csscomb/csscomb.js/blob/dev/src/cli.js","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2018-10-05T08:00:59Z","lastEditedAt":"2018-10-05T08:15:45Z","updatedAt":"2018-10-05T08:15:45Z"}]}}},{"repoOwner":"coala","repoName":"coala-bears","updatedAtMs":1560346153000,"issue":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2689","number":2689,"title":"PyreBear.py: Add pyre-check bear","body":"Add PyreBear and Tests\nCloses #2487\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-09-10T12:04:31Z","updatedAt":"2019-06-12T13:29:13Z","closedAt":"2019-06-12T13:29:13Z","state":"closed","user":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"owner":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"assignee":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4"},"labels":[{"name":"bear proposal","color":"ADFF2F"},{"name":"difficulty/low","color":"207de5"},{"name":"in progress","color":"ededed"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-bears/pull/2689","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjMwMjQ0MA==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r216302440","bodyText":"Besides a bad file test case, it's better to have another good file case IMO.","diffHunk":"@@ -0,0 +1,45 @@\n+import os\n+import unittest\n+from queue import Queue\n+\n+from bears.python.PyreBear import PyreBear\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from coalib.settings.Section import Section\n+\n+\n+def get_absolute_test_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'pyre_test_files', file)\n+\n+\n+@generate_skip_decorator(PyreBear)\n+class PyreBearTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('pyre')\n+        self.file_dict = {}\n+        self.queue = Queue()\n+        test_folder = os.path.join(\n+            os.path.dirname(__file__), 'pyre_test_files')\n+        self.test_file = os.path.join(test_folder, 'pyre_test.py')\n+\n+    def get_results(self, file):\n+        with open(file, 'r', encoding='utf-8') as content:\n+            self.file_dict[file] = tuple(content.readlines())\n+\n+        self.uut = PyreBear(self.file_dict,\n+                            self.section,\n+                            self.queue)\n+\n+        return list(self.uut.run_bear_from_section([], {}))\n+\n+    def test_results(self):","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-10T12:30:12Z","lastEditedAt":null,"updatedAt":"2018-09-10T12:30:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjMwMjk5Mg==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r216302992","bodyText":"Better put global_bear=True in a new line","diffHunk":"@@ -0,0 +1,41 @@\n+import json\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+from coalib.results.Result import Result\n+\n+\n+@linter(executable='pyre', global_bear=True)","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-10T12:32:10Z","lastEditedAt":null,"updatedAt":"2018-09-10T12:32:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjMwNTc1OA==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r216305758","bodyText":"can add SEE_MORE field here","diffHunk":"@@ -0,0 +1,41 @@\n+import json\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+from coalib.results.Result import Result\n+\n+\n+@linter(executable='pyre', global_bear=True)\n+class PyreBear:\n+    \"\"\"\n+    Checks Python files for errors using ``pyre``.\n+\n+    See https://pyre-check.org/ for more info.\n+    \"\"\"\n+    LANGUAGES = {'Python', 'Python 3'}\n+    REQUIREMENTS = {PipRequirement('pyre', '0.0.11')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+    CAN_DETECT = {'TypeError in statically typed variables'}","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-10T12:42:40Z","lastEditedAt":null,"updatedAt":"2018-09-10T12:42:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjMxMTQ4Mw==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r216311483","bodyText":"Apart from the message, we'd better also verify line & column number. This will be useful for reviewers to check if the linter is using 1-based line & column number convention. Also, if we bump to a new version where they change their line or column number convention, CI would fail to remind us.","diffHunk":"@@ -0,0 +1,45 @@\n+import os\n+import unittest\n+from queue import Queue\n+\n+from bears.python.PyreBear import PyreBear\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from coalib.settings.Section import Section\n+\n+\n+def get_absolute_test_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'pyre_test_files', file)\n+\n+\n+@generate_skip_decorator(PyreBear)\n+class PyreBearTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('pyre')\n+        self.file_dict = {}\n+        self.queue = Queue()\n+        test_folder = os.path.join(\n+            os.path.dirname(__file__), 'pyre_test_files')\n+        self.test_file = os.path.join(test_folder, 'pyre_test.py')\n+\n+    def get_results(self, file):\n+        with open(file, 'r', encoding='utf-8') as content:\n+            self.file_dict[file] = tuple(content.readlines())\n+\n+        self.uut = PyreBear(self.file_dict,\n+                            self.section,\n+                            self.queue)\n+\n+        return list(self.uut.run_bear_from_section([], {}))\n+\n+    def test_results(self):\n+        # Get result from bear\n+        results = self.get_results(self.test_file)\n+        # Check result is as expected\n+        messages = [result.message for result in results]\n+        self.assertEqual(len(messages), 2)\n+        self.assertEquals(messages[0], 'Incompatible return type [7]: '\n+                          'Expected `int` but got `str`.')\n+        self.assertEquals(messages[1], 'Incompatible return type [7]: '","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-10T13:01:27Z","lastEditedAt":null,"updatedAt":"2018-09-10T13:01:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjMxMTkzMg==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r216311932","bodyText":"redundant blank line.","diffHunk":"@@ -0,0 +1,41 @@\n+import json\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+from coalib.results.Result import Result\n+\n+\n+@linter(executable='pyre', global_bear=True)\n+class PyreBear:\n+    \"\"\"\n+    Checks Python files for errors using ``pyre``.\n+\n+    See https://pyre-check.org/ for more info.\n+    \"\"\"\n+    LANGUAGES = {'Python', 'Python 3'}\n+    REQUIREMENTS = {PipRequirement('pyre', '0.0.11')}\n+    AUTHORS = {'The coala developers'}\n+    AUTHORS_EMAILS = {'coala-devel@googlegroups.com'}\n+    LICENSE = 'AGPL-3.0'\n+    CAN_DETECT = {'TypeError in statically typed variables'}\n+\n+    def process_output(self, output, filename, file):\n+        try:\n+            errors = json.loads(output)\n+            for error in errors:\n+                yield Result.from_values(\n+                    origin=self,\n+                    file=error['path'],\n+                    message=error['description'],\n+                    column=error['column'],\n+                    line=error['line'])\n+        except TypeError:\n+            pass\n+\n+    def create_arguments(self, config_file):\n+","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-10T13:02:44Z","lastEditedAt":null,"updatedAt":"2018-09-10T13:02:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjMxMjM3Mg==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r216312372","bodyText":"Any reason for using == instead of ~=?","diffHunk":"@@ -28,6 +28,7 @@ pycodestyle~=2.2\n pydocstyle~=2.0\n pyflakes~=2.0.0\n pylint~=1.7.2\n+pyre-check==0.0.11","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-09-10T13:04:05Z","lastEditedAt":null,"updatedAt":"2018-09-10T13:04:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkwMzMxMA==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r217903310","bodyText":"increase the minimum version.\nnice work on reporting the bug upstream.","diffHunk":"@@ -0,0 +1,30 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+@linter(executable='pyre',\n+        output_format='regex',\n+        output_regex=r'\\s*(?P<filename>.+)\\s*:(?P<line>\\d+):(?P<column>\\d+)'\n+                     r' \\s*(?P<message>.+)',\n+        global_bear=True)\n+class PyreBear:\n+    \"\"\"\n+    Checks Python files for errors using ``pyre``.\n+    Run bear with `` --files=./<MY_DIR>/*``.\n+\n+    See https://pyre-check.org/ for more info.\n+    \"\"\"\n+    LANGUAGES = {'Python', 'Python 3'}\n+    REQUIREMENTS = {PipRequirement('pyre', '0.0.11')}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMDgxNzI0Ng==","createdAt":"2018-10-13T09:17:24Z","content":"THUMBS_UP","user":{"login":"atb00ker","name":"Ajay Tripathi"}}],"createdAt":"2018-09-16T06:07:01Z","lastEditedAt":null,"updatedAt":"2018-09-16T06:07:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ5MTA3Ng==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r232491076","bodyText":"Updated minimum version to 0.0.12 😄","diffHunk":"@@ -0,0 +1,30 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+@linter(executable='pyre',\n+        output_format='regex',\n+        output_regex=r'\\s*(?P<filename>.+)\\s*:(?P<line>\\d+):(?P<column>\\d+)'\n+                     r' \\s*(?P<message>.+)',\n+        global_bear=True)\n+class PyreBear:\n+    \"\"\"\n+    Checks Python files for errors using ``pyre``.\n+    Run bear with `` --files=./<MY_DIR>/*``.\n+\n+    See https://pyre-check.org/ for more info.\n+    \"\"\"\n+    LANGUAGES = {'Python', 'Python 3'}\n+    REQUIREMENTS = {PipRequirement('pyre', '0.0.11')}","author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-11-11T14:55:02Z","lastEditedAt":null,"updatedAt":"2018-11-11T14:55:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjk0MzY1Mw==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r232943653","bodyText":"Shouldn't this be pyrecheck?","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.bearlib.abstractions.Linter import linter\n+from dependency_management.requirements.PipRequirement import PipRequirement\n+\n+\n+@linter(executable='pyre',\n+        output_format='regex',\n+        output_regex=r'\\s*(?P<filename>.+)\\s*:(?P<line>\\d+):(?P<column>\\d+)'\n+                     r' \\s*(?P<message>.+)',\n+        global_bear=True)\n+class PyreBear:\n+    \"\"\"\n+    Checks Python files for errors using ``pyre``.\n+    See https://pyre-check.org/ for more info.\n+    \"\"\"\n+    LANGUAGES = {'Python', 'Python 3'}\n+    REQUIREMENTS = {PipRequirement('pyre', '0.0.12')}","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMzkxODA5Nw==","createdAt":"2018-12-13T11:22:43Z","content":"THUMBS_UP","user":{"login":"atb00ker","name":"Ajay Tripathi"}}],"createdAt":"2018-11-13T08:54:05Z","lastEditedAt":null,"updatedAt":"2018-11-13T08:54:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjk0ODA3Mw==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r232948073","bodyText":"'split into test_good_file and test_bad_file , so when these fail we have a better idea of what has happened'\norigin: #2759 (comment)","diffHunk":"@@ -0,0 +1,65 @@\n+import os\n+import unittest\n+from queue import Queue\n+\n+from bears.python.PyreBear import PyreBear\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from coalib.settings.Section import Section\n+\n+\n+def get_absolute_test_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'pyre_test_files', file)\n+\n+\n+@generate_skip_decorator(PyreBear)\n+class PyreBearTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('pyre')\n+        self.queue = Queue()\n+        test_folder = os.path.join(os.path.dirname(__file__),\n+                                   'pyre_test_files')\n+        self.test_good_file = os.path.join(test_folder,\n+                                           'pyre_test_good/pyre_good.py')\n+        self.test_bad_file = os.path.join(test_folder,\n+                                          'pyre_test_bad/pyre_bad.py')\n+\n+    def get_results(self, file):\n+        file_dict = {}\n+        with open(file, 'r', encoding='utf-8') as content:\n+            file_dict[file] = tuple(content.readlines())\n+        self.uut = PyreBear(file_dict,\n+                            self.section,\n+                            self.queue)\n+        if self.uut.run_bear_from_section([], {}) is None:\n+            return []\n+        return list(self.uut.run_bear_from_section([], {}))\n+\n+    def test_results(self):\n+        # Test Bad File\n+        results = self.get_results(self.test_bad_file)\n+        # Check Result Message(s)\n+        messages = [result.message for result in results]\n+        self.assertEqual(len(messages), 2)\n+        self.assertEqual(messages[0], 'Incompatible return type [7]: '\n+                         'Expected `int` but got `str`.')\n+        self.assertEqual(messages[1], 'Incompatible return type [7]: '\n+                         'Expected `str` but got `int`.')\n+        # Check Result Lines & Columns\n+        lines = [result.affected_code[0] for result in results]\n+        # For Message #1\n+        self.assertEqual(lines[0].end.column, 4)\n+        self.assertEqual(lines[0].start.column, 4)\n+        self.assertEqual(lines[0].end.line, 2)\n+        self.assertEqual(lines[0].start.line, 2)\n+        # For Message #2\n+        self.assertEqual(lines[1].end.column, 4)\n+        self.assertEqual(lines[1].start.column, 4)\n+        self.assertEqual(lines[1].end.line, 6)\n+        self.assertEqual(lines[1].start.line, 6)\n+\n+        # Test Good File","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjM0NTgxNQ==","createdAt":"2018-11-13T15:26:22Z","content":"THUMBS_UP","user":{"login":"atb00ker","name":"Ajay Tripathi"}}],"createdAt":"2018-11-13T09:06:27Z","lastEditedAt":null,"updatedAt":"2018-11-13T09:06:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjk1MzE5Nw==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r232953197","bodyText":"I suspect this indicates that your bear is wrong. From the test file, it looks like their column number start from 0. So this should be 5 instead. Can you confirm if they use 0-based offset?","diffHunk":"@@ -0,0 +1,65 @@\n+import os\n+import unittest\n+from queue import Queue\n+\n+from bears.python.PyreBear import PyreBear\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from coalib.settings.Section import Section\n+\n+\n+def get_absolute_test_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'pyre_test_files', file)\n+\n+\n+@generate_skip_decorator(PyreBear)\n+class PyreBearTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('pyre')\n+        self.queue = Queue()\n+        test_folder = os.path.join(os.path.dirname(__file__),\n+                                   'pyre_test_files')\n+        self.test_good_file = os.path.join(test_folder,\n+                                           'pyre_test_good/pyre_good.py')\n+        self.test_bad_file = os.path.join(test_folder,\n+                                          'pyre_test_bad/pyre_bad.py')\n+\n+    def get_results(self, file):\n+        file_dict = {}\n+        with open(file, 'r', encoding='utf-8') as content:\n+            file_dict[file] = tuple(content.readlines())\n+        self.uut = PyreBear(file_dict,\n+                            self.section,\n+                            self.queue)\n+        if self.uut.run_bear_from_section([], {}) is None:\n+            return []\n+        return list(self.uut.run_bear_from_section([], {}))\n+\n+    def test_results(self):\n+        # Test Bad File\n+        results = self.get_results(self.test_bad_file)\n+        # Check Result Message(s)\n+        messages = [result.message for result in results]\n+        self.assertEqual(len(messages), 2)\n+        self.assertEqual(messages[0], 'Incompatible return type [7]: '\n+                         'Expected `int` but got `str`.')\n+        self.assertEqual(messages[1], 'Incompatible return type [7]: '\n+                         'Expected `str` but got `int`.')\n+        # Check Result Lines & Columns\n+        lines = [result.affected_code[0] for result in results]\n+        # For Message #1\n+        self.assertEqual(lines[0].end.column, 4)","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjM0NTg2OQ==","createdAt":"2018-11-13T15:27:14Z","content":"THUMBS_UP","user":{"login":"atb00ker","name":"Ajay Tripathi"}}],"createdAt":"2018-11-13T09:21:04Z","lastEditedAt":null,"updatedAt":"2018-11-13T09:21:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTM2ODM5OA==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r241368398","bodyText":"Hi,\nRunning pyre without the bear reveals error in this format <file>:<row>:<column> <error>.\nRunning the check on that file reveals:\npyre_bad.py:2:4 Incompatible return type [7]: Expected `int` but got `str`.\npyre_bad.py:6:4 Incompatible return type [7]: Expected `str` but got `int`.\n\nSo, i think it's correct. If you have any objection, please let me know.\nThanks","diffHunk":"@@ -0,0 +1,65 @@\n+import os\n+import unittest\n+from queue import Queue\n+\n+from bears.python.PyreBear import PyreBear\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from coalib.settings.Section import Section\n+\n+\n+def get_absolute_test_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'pyre_test_files', file)\n+\n+\n+@generate_skip_decorator(PyreBear)\n+class PyreBearTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('pyre')\n+        self.queue = Queue()\n+        test_folder = os.path.join(os.path.dirname(__file__),\n+                                   'pyre_test_files')\n+        self.test_good_file = os.path.join(test_folder,\n+                                           'pyre_test_good/pyre_good.py')\n+        self.test_bad_file = os.path.join(test_folder,\n+                                          'pyre_test_bad/pyre_bad.py')\n+\n+    def get_results(self, file):\n+        file_dict = {}\n+        with open(file, 'r', encoding='utf-8') as content:\n+            file_dict[file] = tuple(content.readlines())\n+        self.uut = PyreBear(file_dict,\n+                            self.section,\n+                            self.queue)\n+        if self.uut.run_bear_from_section([], {}) is None:\n+            return []\n+        return list(self.uut.run_bear_from_section([], {}))\n+\n+    def test_results(self):\n+        # Test Bad File\n+        results = self.get_results(self.test_bad_file)\n+        # Check Result Message(s)\n+        messages = [result.message for result in results]\n+        self.assertEqual(len(messages), 2)\n+        self.assertEqual(messages[0], 'Incompatible return type [7]: '\n+                         'Expected `int` but got `str`.')\n+        self.assertEqual(messages[1], 'Incompatible return type [7]: '\n+                         'Expected `str` but got `int`.')\n+        # Check Result Lines & Columns\n+        lines = [result.affected_code[0] for result in results]\n+        # For Message #1\n+        self.assertEqual(lines[0].end.column, 4)","author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-12-13T11:40:45Z","lastEditedAt":null,"updatedAt":"2018-12-13T11:40:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjUxNzk5OQ==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r242517999","bodyText":"Sorry if my review wasn't very clear. Take pyre_bad.py:2 for example.\n    return 'string'\npyre says the error happens on line 2, column 4.\nNow the problem comes:\nWhat is column 4? Is the first column numbered 0 or 1?\nBack to our example. It is clear that there are 4 spaces before return. Very likely, they consider the position of the first character of return, as the error position, i.e. the position of r. They call this position column 4. If that is the case, we can infer that they count column numbers from 0. However, coala counts from 1. column 4 needs to be converted into column 5 in coala.\nBut I am not sure. I don't know how they come up with column 4. Maybe they are referring to the last space before the word return, but chances are small. Maybe they have inconsistencies/bugs within their tool. You need to look up in their documentation (or even code), or ask them in their community.\nIt might not be an easy task, but such 'tiny' thing is important. coala needs to be accurate: sometimes upstream linters are not accurate, and we detect problems and help solve them.\nLet me know if my words are not clear enough 😉","diffHunk":"@@ -0,0 +1,65 @@\n+import os\n+import unittest\n+from queue import Queue\n+\n+from bears.python.PyreBear import PyreBear\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from coalib.settings.Section import Section\n+\n+\n+def get_absolute_test_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'pyre_test_files', file)\n+\n+\n+@generate_skip_decorator(PyreBear)\n+class PyreBearTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('pyre')\n+        self.queue = Queue()\n+        test_folder = os.path.join(os.path.dirname(__file__),\n+                                   'pyre_test_files')\n+        self.test_good_file = os.path.join(test_folder,\n+                                           'pyre_test_good/pyre_good.py')\n+        self.test_bad_file = os.path.join(test_folder,\n+                                          'pyre_test_bad/pyre_bad.py')\n+\n+    def get_results(self, file):\n+        file_dict = {}\n+        with open(file, 'r', encoding='utf-8') as content:\n+            file_dict[file] = tuple(content.readlines())\n+        self.uut = PyreBear(file_dict,\n+                            self.section,\n+                            self.queue)\n+        if self.uut.run_bear_from_section([], {}) is None:\n+            return []\n+        return list(self.uut.run_bear_from_section([], {}))\n+\n+    def test_results(self):\n+        # Test Bad File\n+        results = self.get_results(self.test_bad_file)\n+        # Check Result Message(s)\n+        messages = [result.message for result in results]\n+        self.assertEqual(len(messages), 2)\n+        self.assertEqual(messages[0], 'Incompatible return type [7]: '\n+                         'Expected `int` but got `str`.')\n+        self.assertEqual(messages[1], 'Incompatible return type [7]: '\n+                         'Expected `str` but got `int`.')\n+        # Check Result Lines & Columns\n+        lines = [result.affected_code[0] for result in results]\n+        # For Message #1\n+        self.assertEqual(lines[0].end.column, 4)","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24zNDEzOTIzNg==","createdAt":"2018-12-18T12:44:18Z","content":"THUMBS_UP","user":{"login":"atb00ker","name":"Ajay Tripathi"}}],"createdAt":"2018-12-18T12:30:00Z","lastEditedAt":null,"updatedAt":"2018-12-18T12:30:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzIzNDkxMA==","url":"https://github.com/coala/coala-bears/pull/2689#discussion_r243234910","bodyText":"Oh, yes, it's clear now, thank you. 😄\nIndeed, pyre is using 0-based offset for column and 1-based offset for row.\nThat should not be a problem, we can take the output from pyre and add 1 to column. I'll get to it as soon as possible.","diffHunk":"@@ -0,0 +1,65 @@\n+import os\n+import unittest\n+from queue import Queue\n+\n+from bears.python.PyreBear import PyreBear\n+from coalib.testing.BearTestHelper import generate_skip_decorator\n+from coalib.settings.Section import Section\n+\n+\n+def get_absolute_test_path(file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        'pyre_test_files', file)\n+\n+\n+@generate_skip_decorator(PyreBear)\n+class PyreBearTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('pyre')\n+        self.queue = Queue()\n+        test_folder = os.path.join(os.path.dirname(__file__),\n+                                   'pyre_test_files')\n+        self.test_good_file = os.path.join(test_folder,\n+                                           'pyre_test_good/pyre_good.py')\n+        self.test_bad_file = os.path.join(test_folder,\n+                                          'pyre_test_bad/pyre_bad.py')\n+\n+    def get_results(self, file):\n+        file_dict = {}\n+        with open(file, 'r', encoding='utf-8') as content:\n+            file_dict[file] = tuple(content.readlines())\n+        self.uut = PyreBear(file_dict,\n+                            self.section,\n+                            self.queue)\n+        if self.uut.run_bear_from_section([], {}) is None:\n+            return []\n+        return list(self.uut.run_bear_from_section([], {}))\n+\n+    def test_results(self):\n+        # Test Bad File\n+        results = self.get_results(self.test_bad_file)\n+        # Check Result Message(s)\n+        messages = [result.message for result in results]\n+        self.assertEqual(len(messages), 2)\n+        self.assertEqual(messages[0], 'Incompatible return type [7]: '\n+                         'Expected `int` but got `str`.')\n+        self.assertEqual(messages[1], 'Incompatible return type [7]: '\n+                         'Expected `str` but got `int`.')\n+        # Check Result Lines & Columns\n+        lines = [result.affected_code[0] for result in results]\n+        # For Message #1\n+        self.assertEqual(lines[0].end.column, 4)","author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-12-20T11:10:57Z","lastEditedAt":null,"updatedAt":"2018-12-20T11:10:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxOTg5NDc2Mg==","url":"https://github.com/coala/coala-bears/pull/2689#issuecomment-419894762","bodyText":"The tests continuous-integration/appveyor/pr & continuous-integration/travis-ci/pr run on Python-3.4, pyre-check is available for Python 3.5+; Hence the test failed.","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-10T12:27:15Z","lastEditedAt":"2018-09-10T12:28:46Z","updatedAt":"2018-09-10T12:28:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxOTkzMDE2MA==","url":"https://github.com/coala/coala-bears/pull/2689#issuecomment-419930160","bodyText":"Hi! @li-boxuan\nThanks, made changes as per suggestions! 😄","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-10T14:20:52Z","lastEditedAt":"2018-09-10T14:28:29Z","updatedAt":"2018-09-10T14:28:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQyMDM3ODI1OQ==","url":"https://github.com/coala/coala-bears/pull/2689#issuecomment-420378259","bodyText":"Python 3.5.6 fail looks like it's because of an issue with pyre-check\nFor more, please follow: facebook/pyre-check#102","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[{"id":"MDg6UmVhY3Rpb24zMjMyMjU4NQ==","createdAt":"2018-11-13T08:49:52Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-09-11T18:41:48Z","lastEditedAt":null,"updatedAt":"2018-09-11T18:41:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQzNzk2NDcwNQ==","url":"https://github.com/coala/coala-bears/pull/2689#issuecomment-437964705","bodyText":"travis-ci and appveyor are failing because pyre-check only supports Python >= 3.5","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-11-12T17:29:10Z","lastEditedAt":null,"updatedAt":"2018-11-12T17:29:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1NzgwOTQ0Mw==","url":"https://github.com/coala/coala-bears/pull/2689#issuecomment-457809443","bodyText":"@li-boxuan updated! 😄\nPlease let me know your views! 😄","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2019-01-26T07:18:16Z","lastEditedAt":"2019-01-26T07:18:44Z","updatedAt":"2019-01-26T07:18:44Z"}]}}},{"repoOwner":"coala","repoName":"documentation","updatedAtMs":1561650797000,"issue":{"htmlUrl":"https://github.com/coala/documentation/pull/598","number":598,"title":"toml_config.rst: Config in TOML","body":"Documentation on how to write coala configuration file in TOML\nCloses #597\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2019-06-15T19:34:26Z","updatedAt":"2019-06-27T15:53:17Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/documentation/pull/598","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTE4MDU1Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r295180556","bodyText":"This coafile is in TOML format or in coala format? Also specify what type of format is because from the example i can't be sure and for other examples.","diffHunk":"@@ -0,0 +1,155 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three coafiles to configure your project.\n+\n+1. A project-wide coafile.\n+2. A user-wide coafile.\n+3. A system-wide coafile.\n+\n+Project-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDk2NjI0MA==","createdAt":"2019-06-19T17:16:20Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-19T08:34:36Z","lastEditedAt":null,"updatedAt":"2019-06-19T08:34:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTE4MTkwMw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295181903","bodyText":"Maybe it is useful to have like a side-by-side comparison of how the syntax is. You can start with a complex coafile in coala format and explain how it can be written in toml format because users already know how to write in coala format but not in toml.","diffHunk":"@@ -0,0 +1,155 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three coafiles to configure your project.\n+\n+1. A project-wide coafile.\n+2. A user-wide coafile.\n+3. A system-wide coafile.\n+\n+Project-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide coafile\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. In coala you will be using TOML strings,\n+booleans, integers and arrays as values.\n+\n+Section Inheritance\n+----------------------------\n+coala supports section inheritance. You can define section inheritance\n+explicitly by naming a section in the format ``[\"basesection.newsection\"]``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+.. note::\n+\n+    In ``[\"basesection.newsection\"]``, the quotes insides the square braces are\n+    necessary for specifying section inheritance in TOML.\n+\n+\n+Consider the following coafile::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [\"all.section1\"]\n+  overridable = 3\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [\"all.section2\"]\n+  overridable = 4\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section. This is the same file without section\n+inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Defining Aspects and Tastes\n+---------------------------\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDk2NjI0Ng==","createdAt":"2019-06-19T17:16:24Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-19T08:37:34Z","lastEditedAt":null,"updatedAt":"2019-06-19T08:37:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyNTQ3Mw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295525473","bodyText":"why string?","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:10:40Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:10:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyNTk1OA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295525958","bodyText":"If there is a case where appends can be section name then create a subheading and explain with example (what will happen when you do so)","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:12:00Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:12:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUyODY3Nw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295528677","bodyText":"Mention above that if property is redefined in the inherited section then it will overwrite if appends is not mentioned","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:19:32Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:19:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzMDk2OA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295530968","bodyText":"appends can be list If I am correct, mention it here,","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:25:56Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:25:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzMjk1Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r295532956","bodyText":"What will happen when someone writes all.a, if nothing happens, mention that inherits can be a section name only","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:31:50Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:31:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNTYxOA==","url":"https://github.com/coala/documentation/pull/598#discussion_r295535618","bodyText":"Move this in aspect section","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:39:48Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:39:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNTk1Mg==","url":"https://github.com/coala/documentation/pull/598#discussion_r295535952","bodyText":"Remove ]","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:40:48Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:40:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNjY2NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295536665","bodyText":"See other files how they have define headings with subheadings","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:43:12Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:43:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzNzA3NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295537075","bodyText":"why gap","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:44:28Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:44:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzODgwMQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r295538801","bodyText":"If you are putting some type of warning then you should see how we have written the docs.\nDon't forget to preview it on netlify","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'\n+ appends = 'bears'\n+ language = 'Python'\n+ remove_all_unused_imports = true\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:49:55Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:49:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTUzOTQ0Nw==","url":"https://github.com/coala/documentation/pull/598#discussion_r295539447","bodyText":"In future, we will split this doc in 2 part\n\ncoafile to TOML\nTOML to coafile\n\nso you should see how they are doing it in the docs.","diffHunk":"@@ -0,0 +1,286 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+~~~~~~~~~~~~~~~~~~~~\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML ::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+~~~~~~~~~~~~~~~~~~~~\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML ::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same is coafile appears as\n+\n+::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+Defining Aspects and Tastes\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  ['all.python']\n+  files = '**.py'\n+  language = 'Python'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+\n+For existing coala users\n+~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+In this section we will see how to convert a complex coafile into\n+a configuration file in TOML\n+\n+coafile ::\n+\n+ [all]\n+ files = *.py, coantlib/**/*.py, tests/**/*.py, coantbears/**/*.py, .ci/*.py\n+ max_line_length = 80\n+ use_spaces = True\n+\n+ [all.python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ bears = SpaceConsistencyBear\n+ language = Python\n+ preferred_quotation = '\n+\n+ default_actions = **: ApplyPatchAction\n+\n+ [all.flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+\n+ default_actions = *: ShowPatchAction\n+\n+ bears += PyUnusedCodeBear\n+ language = Python\n+ remove_all_unused_imports = true\n+\n+To convert a coafile to configuration file in TOML\n+\n+- Enclose all string values in quotes\n+- Use array notation to depict list of strings\n+- Replace ``[parent_section.inherited_section]]`` with ``[inherited.section]``\n+  and add ``inherits = parent_section`` as a key-value pair\n+- Use ``true`` or ``false`` to specify booleans\n+- Replace ``a += b`` with\n+  ::\n+\n+   a = 'b'\n+   appends = 'a'\n+\n+- If you are using aspects  ``a:b = 'c'``  in a section named `example`\n+  then replace\n+  ``a:b = 'c'`` with ``a.b = 'c'`` or\n+  ::\n+\n+   [example.a]\n+   b = 'c'\n+\n+Using the above rules we get a configuration file in TOML\n+\n+::\n+\n+ [all]\n+ files = ['*.py', 'coantlib/**/*.py', 'tests/**/*.py', 'coantbears/**/*.py',\n+         '.ci/*.py']\n+ max_line_length = 80\n+ use_spaces = true\n+\n+ [python]\n+ # Patches may conflict with autopep8 so putting them in own section so they\n+ # will be executed sequentially; also we need the LineLengthBear to double\n+ # check the line length because PEP8Bear sometimes isn't able to correct the\n+ # linelength.\n+ inherits = 'all'\n+ bears = 'SpaceConsistencyBear'\n+ language = 'Python'\n+ preferred_quotation = '\n+\n+ default_actions = '**: ApplyPatchAction'\n+\n+ [flakes]\n+ # Do not set default_action to ApplyPatchAction as it may lead to some\n+ # required imports being removed that might result in coala behaving weirdly.\n+ inherits = 'all'\n+ default_actions = '*: ShowPatchAction'\n+\n+ bears = 'PyUnusedCodeBear'\n+ appends = 'bears'\n+ language = 'Python'\n+ remove_all_unused_imports = true\n+","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2019-06-19T21:52:02Z","lastEditedAt":null,"updatedAt":"2019-06-19T21:52:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2MTM5MQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r296761391","bodyText":"typo caofile","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.\n+\n+1. A project-wide configuration file.\n+2. A user-wide configuration file.\n+3. A system-wide configuration file.\n+\n+Project-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+It is a convention that the project-wide configuration file is named\n+``.coafile.toml`` and lies in the project root directory.\n+If you follow this convention, simply executing ``coala -T`` from the\n+project root will execute the configuration specified in that file.\n+\n+Settings given in the project-wide configuration file override all settings\n+given by other files and can only be overridden by settings given via the\n+command line interface.\n+\n+User-Wide and System-Wide configuration file\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+You can place a ``.coarc.toml`` file in your home directory to set certain\n+user wide settings. Those settings will automatically be taken for all\n+projects executed with that user.\n+\n+All settings specified here override only settings given by the system\n+wide configuration file which has the lowest priority. The\n+``system_coafile.toml`` must lie in the coala installation directory\n+and is valid for everyone using this coala installation.\n+\n+It can be used to define the type of files you usually don't want to lint,\n+like minified files (e.g. ``*.min.js``) and backup files (e.g. ``*.orig``)::\n+\n+    ignore = [ '**.min.js', '**.orig' ]\n+\n+Basic TOML concepts\n+---------------------\n+This part describes the basic TOML concepts required to write coala\n+configuration files in TOML\n+\n+- TOML is case sensitive. So remember to not have duplicate sections/tables\n+  or duplicate keys in same section.\n+- key-value pairs are building blocks of a TOML document. Use key-value\n+  pairs to specify rules for coala bears.\n+- A table is a collection of key-value pairs. Use a table for specifying\n+  a coala section.\n+\n+This is an example of a coala configuration file written in TOML\n+\n+.. code::\n+\n+    [cli]\n+    bears = 'SpaceConsistencyBear'\n+    files = 'src/*.c'\n+    use_spaces = true\n+\n+    [invalidlinks]\n+    enabled = false\n+    files = [ '**/*.rst', 'README.rst']\n+    ignore = 'venv/**'\n+    bears = 'InvalidLinkBear'\n+\n+\n+Here tables ``cli`` and ``invalidlinks`` are coala sections.\n+The contents of the tables like ``bears``, ``files`` are rules\n+that govern a section. To write coala configuration file you will\n+be using TOML strings, booleans, integers and arrays as values.\n+\n+Section Inheritance\n+---------------------\n+coala supports section inheritance. You can define section inheritance\n+by using the key ``inherits``.\n+Extra values can be appended to an inherited setting using the ``appends`` key.\n+\n+Consider the following configuration file in TOML\n+\n+.. code::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  overridable = 3\n+  inherits = 'all'\n+  appends = 'ignore'\n+  ignore = 'vendor2/'\n+  other = 'some_value'\n+\n+  [section2]\n+  overridable = 4\n+  inherits = 'all'\n+  ignore = 'vendor3/'\n+  appends = 'ignore'\n+  other = 'some_other_value'\n+\n+\n+In the inherited sections above, ``appends`` key specifies that the value of\n+``ignore`` in the derived sections must be appended with the value of\n+``ignore`` key in the base section.\n+\n+This is the same file without section inheritance\n+\n+.. code::\n+\n+  [all]\n+  enabled = true\n+  overridable = 2\n+  ignore = 'vendor1/'\n+\n+  [section1]\n+  enabled = true\n+  overridable = 3\n+  ignore = ['vendor1/', 'vendor2/']\n+  other = 'some_value'\n+\n+  [section2]\n+  enabled = true\n+  overridable = 4\n+  ignore = ['vendor1/', 'vendor3/']\n+  other = 'some_other_value'\n+\n+\n+Consider another example\n+\n+Config file in TOML\n+\n+.. code::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [python]\n+ p = 5\n+ q = 6\n+ inherits = [ 'all', 'java']\n+\n+You can use this syntax to specify multiple inheritance\n+The same in coafile format appears as\n+\n+.. code::\n+\n+ [all]\n+ a = 1\n+ b = 2\n+\n+ [java]\n+ c = 3\n+ d = 4\n+\n+ [all.python]\n+ a = 1\n+ b = 2\n+ p = 5\n+ q = 6\n+\n+ [java.python]\n+ c = 3\n+ d = 4\n+ p = 5\n+ q = 6\n+\n+.. note::\n+\n+   - If you want to append multiple settings then use ``appends`` as a list\n+     ::\n+\n+        appends = [ 'a', 'b']\n+   - If you want to inherit multiple sections use ``inherits`` as a list\n+     ::\n+\n+        inherits = [ 'section1', 'section2']\n+   - You can only inherit sections\n+   - You can only append settings\n+   - If  a setting is redefined in the inherited section then it will\n+     overwritten if appends is not used.\n+\n+Defining Aspects and Tastes\n+----------------------------\n+\n+Aspects is an alternative way to configure coala. In this mode, we don't need\n+to explicitly state list of bears, coala will choose it automatically based on\n+requested aspects in configuration file. To run coala in this mode, we need to\n+define `aspects`, `files`, `languages`, and optionally aspect tastes setting.\n+See the following example\n+\n+.. code::\n+\n+  [all]\n+  files = '**'\n+  aspects = ['aspectname1', 'AspectName2'] # case-insensitive\n+  # defining an aspect's taste\n+  aspectname1.aspect_taste = 80\n+  # we can define subaspect taste through its parent\n+  aspectname1.subaspect_taste = ['word1', 'word2', 'word3']\n+\n+  [python]\n+  files = '**.py'\n+  language = 'Python'\n+  inherits = 'all'\n+  # appending additional aspect\n+  appends = 'all'\n+  aspects = 'aspectname3'\n+  # excluding certain subaspect\n+  excludes = 'AspectName2Subaspect'\n+\n+For caofile users who want to write configuration in TOML","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2019-06-24T14:47:29Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:47:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2NjAxMw==","url":"https://github.com/coala/documentation/pull/598#discussion_r296766013","bodyText":"This should be rephrased as two of the three configuration files don't just affect a project but rather multiple projects.","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.\n+\n+Naming, Scope and Location\n+--------------------------\n+\n+You can use up to three configuration files to configure your project.","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2019-06-24T14:56:33Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:56:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njc2OTE4NQ==","url":"https://github.com/coala/documentation/pull/598#discussion_r296769185","bodyText":"Do we have a list of recognized parameters a section can have such as bears, ignore, files etc. If we do, we should link it here with appropriate text.","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2019-06-24T15:02:51Z","lastEditedAt":null,"updatedAt":"2019-06-24T15:02:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg2NDkxNA==","url":"https://github.com/coala/documentation/pull/598#discussion_r296864914","bodyText":"At line 60 I have added :\nA list of settings required to write configuration can be found at\nSettings <http://api.coala.io/en/latest/Developers/coala_settings.html>","diffHunk":"@@ -0,0 +1,308 @@\n+Writing a coala Configuration File in TOML\n+======================================================\n+\n+This document describes how to write configuration files for\n+coala in TOML format.","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI4MTM2NA==","createdAt":"2019-06-25T00:22:34Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2019-06-24T18:49:04Z","lastEditedAt":null,"updatedAt":"2019-06-24T18:49:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzM0MTQ0Ng==","url":"https://github.com/coala/documentation/pull/598#discussion_r297341446","bodyText":"typo: can be the same","diffHunk":"@@ -8,6 +8,9 @@ Naming, Scope and Location\n --------------------------\n \n You can use up to three configuration files to configure your project.\n+Two of these configuration files ``.coarc.toml`` and ``system_coafile.toml``\n+can be same for any number of projects but ``.coafile.toml`` can be","author":{"login":"margobra8","avatarUrl":"https://avatars1.githubusercontent.com/u/11057853?v=4","name":"Marcos Gómez"},"reactions":[],"createdAt":"2019-06-25T18:50:48Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:50:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNDg2MTgyMw==","url":"https://github.com/coala/documentation/pull/598#issuecomment-504861823","bodyText":"@jayvdb  @margobra8 @ksdme Can you review this?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2019-06-24T05:22:18Z","lastEditedAt":null,"updatedAt":"2019-06-24T05:22:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNTA0MzgyMw==","url":"https://github.com/coala/documentation/pull/598#issuecomment-505043823","bodyText":"it looks good to me, when thinks will be changed we will update the documentation too. ack","diffHunk":null,"author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI0Mjc0OA==","createdAt":"2019-06-24T14:51:01Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2019-06-24T14:49:33Z","lastEditedAt":null,"updatedAt":"2019-06-24T14:49:33Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1561921989000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/724","number":724,"title":"README.md: Remove Spacing Inconsistency","body":"Readme.md contained some spacing inconsitency\nwhich has been now removed.\nFixes #713\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":24,"createdAt":"2019-03-25T11:27:51Z","updatedAt":"2019-06-30T19:13:09Z","closedAt":null,"state":"open","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/724","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM5NzUxNA==","url":"https://github.com/coala/projects/pull/724#discussion_r269397514","bodyText":"Why has this section been removed?","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T03:52:28Z","lastEditedAt":null,"updatedAt":"2019-03-27T03:52:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTM5NzU4Ng==","url":"https://github.com/coala/projects/pull/724#discussion_r269397586","bodyText":"and this added?\nThese changes are not related to the SpaceConsistencyBear issue afaik","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T03:53:01Z","lastEditedAt":null,"updatedAt":"2019-03-27T03:53:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQwODQ4MA==","url":"https://github.com/coala/projects/pull/724#discussion_r269408480","bodyText":"No your right these sections are not related. This is related to another issue #600. Actually makman2 and me were planning to fix the CI in this pr itself because gsoc is already upon us. I have discussed this with him and based on that appropriate action will be taken :)","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T05:19:14Z","lastEditedAt":null,"updatedAt":"2019-03-27T05:19:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTU5MTA2NA==","url":"https://github.com/coala/projects/pull/724#discussion_r269591064","bodyText":"That's great. Just add that issue reference to the comment/pr as well.","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[],"createdAt":"2019-03-27T14:29:08Z","lastEditedAt":null,"updatedAt":"2019-03-27T14:29:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTU5NDI2Ng==","url":"https://github.com/coala/projects/pull/724#discussion_r269594266","bodyText":"Suggested change\n        \n          \n            \n          \n        \n      \n    \n    \n      \n        \n          \n                  - cOALA_ZIP_URL=https://github.com/coala/coala/archive/master.zip\n        \n          \n            \n                    - COALA_ZIP_URL=https://codeload.github.com/coala/coala/archive/master.zip","diffHunk":"@@ -22,6 +22,19 @@ jobs:\n       cache: pip\n       install: pip install moban\n       script: .ci/check_moban.sh\n+    - stage: coala\n+      <<: *disable_global\n+      language: python\n+      python: 3.6\n+      cache: pip\n+      install:\n+        - cOALA_ZIP_URL=https://github.com/coala/coala/archive/master.zip","author":{"login":"frextrite","avatarUrl":"https://avatars2.githubusercontent.com/u/29180487?v=4","name":"Amol Grover"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTc4OTMyNQ==","createdAt":"2019-03-29T12:15:57Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2019-03-27T14:34:57Z","lastEditedAt":null,"updatedAt":"2019-03-27T14:34:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4MzU5MQ==","url":"https://github.com/coala/projects/pull/724#discussion_r269683591","bodyText":"I don't think so this is required. This was reporting InvalidLink because we were using old coala. You should run latest coala and verify if it still throws InvalidLink.","diffHunk":"@@ -164,7 +164,7 @@ investigation/review. Based on this feature, I implemented a\n [script](https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d) to\n demonstrate the ability of bootstrapping coala Go bears on a bare-metal FreeBSD\n system\n-([Screen record for the demo](https://asciinema.org/a/0poVbHE7lqehV4islFo6cptjb)),\n+([Screen record for the demo]()),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:29:42Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:29:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NDEwNw==","url":"https://github.com/coala/projects/pull/724#discussion_r269684107","bodyText":"Are these changes related to SpaceConsistency?","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:30:47Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:30:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NTgwMA==","url":"https://github.com/coala/projects/pull/724#discussion_r269685800","bodyText":"No the link bear complained even after we installed the latest version so I removed the backslash","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T17:34:16Z","lastEditedAt":"2019-03-27T17:34:32Z","updatedAt":"2019-03-27T17:34:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY4NjQ0MQ==","url":"https://github.com/coala/projects/pull/724#discussion_r269686441","bodyText":"I just followed up on @kriti21's PR and I think she installed the latest coala and still the bear complained.","diffHunk":"@@ -164,7 +164,7 @@ investigation/review. Based on this feature, I implemented a\n [script](https://gist.github.com/yzgyyang/13ebb46a5c90ac624b5c6eb43deedc0d) to\n demonstrate the ability of bootstrapping coala Go bears on a bare-metal FreeBSD\n system\n-([Screen record for the demo](https://asciinema.org/a/0poVbHE7lqehV4islFo6cptjb)),\n+([Screen record for the demo]()),","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTYzNTI2MA==","createdAt":"2019-03-27T19:14:31Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}}],"createdAt":"2019-03-27T17:35:39Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:35:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY5MTQxMA==","url":"https://github.com/coala/projects/pull/724#discussion_r269691410","bodyText":"Then I think its better to add a new commit for this change. Actually for all invalid link changes.","diffHunk":"@@ -64,14 +64,14 @@ so that coala can check most file types.\n \n Find a GitHub repository that meets all these criteria:\n \n-1. 100 or more [stars](https://help.github.com/articles/about-stars/),\n+1. 100 or more [stars](https://help.github.com/articles/about-stars),","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:46:28Z","lastEditedAt":"2019-03-27T17:46:51Z","updatedAt":"2019-03-27T17:46:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDM4NDc2NQ==","url":"https://github.com/coala/projects/pull/724#discussion_r270384765","bodyText":"See  @kriti21's PR.\n@sladyn98 \t, i suggest you make your PR only about fixing the spacing.  Leave the other problem to kriti.\nOr split your commit into two well written commits, as they are two distinct fixes.","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2019-03-29T12:17:50Z","lastEditedAt":null,"updatedAt":"2019-03-29T12:17:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDM4NjQ3Mw==","url":"https://github.com/coala/projects/pull/724#discussion_r270386473","bodyText":"@jayvdb yep agreed I made these changes intially with the aim of having my PR merged but since @kriti21 got her CI green I am removing these changes 👍","diffHunk":"@@ -31,12 +44,6 @@ before_install:\n # the `install` step will run `bundle install` by default.\n script:\n   - .ci/build.sh\n-  # https://github.com/coala/coala-bears/issues/1037","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-29T12:23:46Z","lastEditedAt":null,"updatedAt":"2019-03-29T12:23:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI2NzU0NQ==","url":"https://github.com/coala/projects/pull/724#issuecomment-477267545","bodyText":"@sladyn98 I would've really liked if there is a single PR fixing the CI. Two PRs for same purpose makes one redundant. Although this PR references changes regarding space consistency but the goal is same. Anyways, as soon as #600 is finished, you need to cherry pick that commit and push here. We should be able to see the CI green here, since that commit is has been done before than this (following linear git history).","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"reactions":[],"createdAt":"2019-03-27T17:27:32Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:27:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI2ODg5OA==","url":"https://github.com/coala/projects/pull/724#issuecomment-477268898","bodyText":"@sladyn98 I would've really liked if there is a single PR fixing the CI. Two PRs for same purpose makes one redundant. Although this PR references changes regarding space consistency but the goal is same. Anyways, as soon as #600 is finished, you need to cherry pick that commit and push here. We should be able to see the CI green here, since that commit is has been done before than this (following linear git history).\n\nYeah @abhishalya your bang on I will remove the changes from my PR once #600 has been fixed :)","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-03-27T17:30:27Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:30:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3NzI3MjQ0Mg==","url":"https://github.com/coala/projects/pull/724#issuecomment-477272442","bodyText":"@abhishalya @kriti21  https://travis-ci.org/sladyn98/projects/builds/511483343 I have linked the branch which made the CI green on my local fork you can have a look.The one problem is the asci link. I do not think I should have made that change because we just cannot remove a link from someone's project.So we need to find a workaround that.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[{"id":"MDg6UmVhY3Rpb24zOTYzNTMwMQ==","createdAt":"2019-03-27T19:15:02Z","content":"THUMBS_UP","user":{"login":"abhishalya","name":"Abhinav Kaushlya"}},{"id":"MDg6UmVhY3Rpb24zOTcwNzcxOQ==","createdAt":"2019-03-28T14:14:47Z","content":"THUMBS_UP","user":{"login":"kriti21","name":"Kriti Rohilla"}}],"createdAt":"2019-03-27T17:38:15Z","lastEditedAt":null,"updatedAt":"2019-03-27T17:38:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzA1OTYzNg==","url":"https://github.com/coala/projects/pull/724#issuecomment-507059636","bodyText":"@jayvdb I guess this is done, and ready to be merged.?","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"reactions":[],"createdAt":"2019-06-30T19:10:37Z","lastEditedAt":null,"updatedAt":"2019-06-30T19:10:37Z"}]}}},{"repoOwner":"coala","repoName":"projects","updatedAtMs":1561960277000,"issue":{"htmlUrl":"https://github.com/coala/projects/pull/721","number":721,"title":"projects.html: Add hyperlink to the mentors' name","body":"The coala projects site https://projects.coala.io/#/projects didn't had\nhyperlink to the mentors' name in the modal window of each project\ndescription. This improvement adds hyperlink to it for convenience.\nCloses #36\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":16,"createdAt":"2019-03-12T08:38:31Z","updatedAt":"2019-07-01T05:51:17Z","closedAt":null,"state":"open","user":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4"},"owner":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4"},"assignee":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4"},"labels":[{"name":"difficulty/newcomer","color":"0e8a16"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/projects/pull/721","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDY1NzI4Nw==","url":"https://github.com/coala/projects/pull/721#discussion_r264657287","bodyText":"There is no use of class clickable here as it just sets the cursor pointer. Since an anchor tag has been used, adding clickable class is just adding an extra CSS that can be avoided.\nBreak the HTML code to multiple lines for this div as it will look pretty. It will be good if you start anchor tag from next line ;-)","diffHunk":"@@ -68,7 +68,7 @@\n         <div ng-show=\"currentProject.difficulty\" class=\"project-detail-element\">\n           <div class=\"small-heading uppercase\">Difficulty</div> <span class=\"pr-element-detail chip\">{{ currentProject.difficulty }}</span> </div>\n         <div ng-show=\"currentProject.mentors.length>0\" class=\"project-detail-element\">\n-          <div class=\"small-heading uppercase\">Mentors</div> <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\">@{{mentor}}</span> </div>\n+          <div class=\"small-heading uppercase\">Mentors</div> <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\"><a ng-href=\"https://github.com/{{mentor}}\" class=\"mentors-github-id chip clickable\" target=\"_blank\">@{{mentor}}</a></span> </div>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-12T12:42:54Z","lastEditedAt":null,"updatedAt":"2019-03-12T12:42:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDgyMzQ1Nw==","url":"https://github.com/coala/projects/pull/721#discussion_r264823457","bodyText":"Reason for this change?","diffHunk":"@@ -34,15 +34,15 @@ Why?\n 1. Install [asdf-vm](https://asdf-vm.github.io/asdf/#/core-manage-asdf-vm) for your OS.\n 2. Using asdf-vm, install [ruby](https://github.com/asdf-vm/asdf-ruby).\n 3. Install Jekyll\n-    \n+","author":{"login":"rajdeepbharati","avatarUrl":"https://avatars1.githubusercontent.com/u/30660439?v=4","name":"Rajdeep Bharati"},"reactions":[],"createdAt":"2019-03-12T18:26:52Z","lastEditedAt":null,"updatedAt":"2019-03-12T18:26:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDgyNDAyMg==","url":"https://github.com/coala/projects/pull/721#discussion_r264824022","bodyText":"I guess removing whitespaces is unrelated to this issue","diffHunk":"@@ -34,15 +34,15 @@ Why?\n 1. Install [asdf-vm](https://asdf-vm.github.io/asdf/#/core-manage-asdf-vm) for your OS.\n 2. Using asdf-vm, install [ruby](https://github.com/asdf-vm/asdf-ruby).\n 3. Install Jekyll\n-    \n+\n         $ gem install jekyll bundler\n \n ### Clone and Run\n \n Clone coala Projects repository\n-    \n+\n     $ git clone https://github.com/coala/projects.git\n-    \n+","author":{"login":"rajdeepbharati","avatarUrl":"https://avatars1.githubusercontent.com/u/30660439?v=4","name":"Rajdeep Bharati"},"reactions":[],"createdAt":"2019-03-12T18:28:16Z","lastEditedAt":null,"updatedAt":"2019-03-12T18:28:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDgyNjE4Nw==","url":"https://github.com/coala/projects/pull/721#discussion_r264826187","bodyText":"I was trying to resolve the issues that the Travis Log said. I thought it failed at indentations, so I removed them. I didn't know there is another issue for this. I'll uncommit it. :)","diffHunk":"@@ -34,15 +34,15 @@ Why?\n 1. Install [asdf-vm](https://asdf-vm.github.io/asdf/#/core-manage-asdf-vm) for your OS.\n 2. Using asdf-vm, install [ruby](https://github.com/asdf-vm/asdf-ruby).\n 3. Install Jekyll\n-    \n+","author":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4","name":"Ashish Kushwaha"},"reactions":[],"createdAt":"2019-03-12T18:33:24Z","lastEditedAt":null,"updatedAt":"2019-03-12T18:33:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTE2ODI4OA==","url":"https://github.com/coala/projects/pull/721#discussion_r265168288","bodyText":"Why is there an extra space after @{{mentor}}?","diffHunk":"@@ -68,7 +68,11 @@\n         <div ng-show=\"currentProject.difficulty\" class=\"project-detail-element\">\n           <div class=\"small-heading uppercase\">Difficulty</div> <span class=\"pr-element-detail chip\">{{ currentProject.difficulty }}</span> </div>\n         <div ng-show=\"currentProject.mentors.length>0\" class=\"project-detail-element\">\n-          <div class=\"small-heading uppercase\">Mentors</div> <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\">@{{mentor}}</span> </div>\n+          <div class=\"small-heading uppercase\">Mentors</div>\n+            <span class=\"pr-element-detail chip\" ng-repeat=\"mentor in currentProject.mentors\">\n+              <a ng-href=\"https://github.com/{{mentor}}\" class=\"mentors-github-id chip\" target=\"_blank\">@{{mentor}} </a>","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2019-03-13T14:53:45Z","lastEditedAt":null,"updatedAt":"2019-03-13T14:53:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MjEwNjY2Mw==","url":"https://github.com/coala/projects/pull/721#issuecomment-472106663","bodyText":"@ashkush21 Changes in README.md isn't related to this issue. A separate has been created for that one #713\nPlease un-commit those changes, after this no changes need to me made IMO 💯","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-03-12T17:40:55Z","lastEditedAt":null,"updatedAt":"2019-03-12T17:40:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ3MjE0Mjc5Nw==","url":"https://github.com/coala/projects/pull/721#issuecomment-472142797","bodyText":"The commit heading is too large. Please reword the commit heading as well as commit description.","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[{"id":"MDg6UmVhY3Rpb24zODY1ODA0Mg==","createdAt":"2019-03-12T19:15:57Z","content":"THUMBS_UP","user":{"login":"rajdeepbharati","name":"Rajdeep Bharati"}}],"createdAt":"2019-03-12T19:14:09Z","lastEditedAt":null,"updatedAt":"2019-03-12T19:14:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNjc1MjI4OQ==","url":"https://github.com/coala/projects/pull/721#issuecomment-506752289","bodyText":"Please remove the trailing white spaces @ashkush21 , And get the PR merged\n\nWhich trailing spaces?","diffHunk":null,"author":{"login":"ashkush21","avatarUrl":"https://avatars2.githubusercontent.com/u/32236261?v=4","name":"Ashish Kushwaha"},"reactions":[],"createdAt":"2019-06-28T14:22:18Z","lastEditedAt":null,"updatedAt":"2019-06-28T14:22:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNjc1Mzg2Nw==","url":"https://github.com/coala/projects/pull/721#issuecomment-506753867","bodyText":"Please remove the trailing white spaces @ashkush21 , And get the PR merged\n\nWhich trailing spaces?\n\nRun a lint on local you will get it or google it","diffHunk":null,"author":{"login":"kushthedude","avatarUrl":"https://avatars0.githubusercontent.com/u/44091822?v=4","name":"Kush Trivedi"},"reactions":[],"createdAt":"2019-06-28T14:26:45Z","lastEditedAt":null,"updatedAt":"2019-06-28T14:26:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNjc1Nzg2Ng==","url":"https://github.com/coala/projects/pull/721#issuecomment-506757866","bodyText":"Please remove the trailing white spaces @ashkush21 , And get the PR merged\n\nWhich trailing spaces?\n\nThe trailing whitespaces is a separate issue! And has been solved in another PR #724\nPlease correctly re-base your commits and squash them into one commit. Also, do check if it needs a moban-sync or not? I guess it needs that","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-28T14:38:18Z","lastEditedAt":"2019-06-28T14:42:20Z","updatedAt":"2019-06-28T14:42:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNjc2OTY2MA==","url":"https://github.com/coala/projects/pull/721#issuecomment-506769660","bodyText":"You tagged wrong guy\n…\nOn Fri, 28 Jun 2019 at 8:08 PM, Keshav Garg ***@***.***> wrote:\n Please remove the trailing white spaces @ashkush21\n <https://github.com/ashkush21> , And get the PR merged\n\n Which trailing spaces?\n\n The trailing whitespaces is a separate issue! And has been solved in\n another PR.\n\n @kushthedude <https://github.com/kushthedude> Please correctly re-base\n your commits and squash them into one commit. Also, do check if it needs a\n moban-sync or not? I guess it needs that\n\n —\n You are receiving this because you were mentioned.\n\n\n Reply to this email directly, view it on GitHub\n <#721?email_source=notifications&email_token=AKQMTLSCFZ4JTS4NWBFLEVTP4YO5ZA5CNFSM4G5JLHU2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY2IF2Q#issuecomment-506757866>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AKQMTLRYE5TDMAVVUFMKOGTP4YO5ZANCNFSM4G5JLHUQ>\n .","diffHunk":null,"author":{"login":"kushthedude","avatarUrl":"https://avatars0.githubusercontent.com/u/44091822?v=4","name":"Kush Trivedi"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTYwNjY1NA==","createdAt":"2019-06-28T15:20:46Z","content":"LAUGH","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-28T15:11:10Z","lastEditedAt":null,"updatedAt":"2019-06-28T15:11:10Z"}]}}},{"repoOwner":"coala","repoName":"corobo","updatedAtMs":1561922634000,"issue":{"htmlUrl":"https://github.com/coala/corobo/pull/645","number":645,"title":"backends.py: Add profile_link function","body":"This function is created to map github and gitlab usernames.\nEnsures correct profile links are mapped for both websites.\nFixes #347\nReviewers Checklist\n\n Appropriate logging is done.\n Appropriate error responses.\n Handle every possible exception.\n Make sure there is a docstring in the command functions. Hint: Lookout for\nbotcmd and re_botcmd decorators.\n See that 100% coverage is there.\n See to it that mocking is not done where it is not necessary.","comments":20,"createdAt":"2018-12-20T10:31:40Z","updatedAt":"2019-06-30T19:23:54Z","closedAt":null,"state":"open","user":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"owner":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"assignee":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4"},"labels":[{"name":"area/labhub","color":"63ccf9"},{"name":"bug","color":"ee0701"},{"name":"difficulty/low","color":"207de5"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/corobo/pull/645","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTYwNjQxMg==","url":"https://github.com/coala/corobo/pull/645#discussion_r245606412","bodyText":"Remove this.","diffHunk":"@@ -15,3 +15,4 @@ nocover_file_globs:\n nocover_regexes:\n   # utils/backends.py\n   - def message_link\n+  - def profile_link","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-01-07T10:19:43Z","lastEditedAt":null,"updatedAt":"2019-01-07T10:19:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTYwNjY0MA==","url":"https://github.com/coala/corobo/pull/645#discussion_r245606640","bodyText":"Use ' '. Do it wherever you have used \" \"","diffHunk":"@@ -222,6 +222,17 @@ def create_issue_cmd(self, msg, match):\n                 target=user,\n             )\n \n+    def profile_link(bot, msg):\n+        gitter_username = msg.frm.nick\n+        pattern = '^(.*)(_.*?)$'\n+        if \"_gitlab\" in str:","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-01-07T10:20:36Z","lastEditedAt":null,"updatedAt":"2019-01-07T10:20:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTYwNzYzOA==","url":"https://github.com/coala/corobo/pull/645#discussion_r245607638","bodyText":"There should be no change in this file.","diffHunk":"@@ -19,4 +18,4 @@ def message_link(bot, msg):\n     elif backend == 'text':\n         return ''\n     else:\n-        raise NotImplementedError\n+        raise NotImplementedError","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-01-07T10:24:08Z","lastEditedAt":null,"updatedAt":"2019-01-07T10:24:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTYwNzkzOQ==","url":"https://github.com/coala/corobo/pull/645#discussion_r245607939","bodyText":"Rather than simply passing the string, you should mock the username and then test it.","diffHunk":"@@ -207,6 +207,13 @@ def test_is_newcomer_issue(self):\n         mock_iss.labels = ('difficulty/medium',)\n         self.assertFalse(LabHub.is_newcomer_issue(mock_iss))\n \n+    def test_profile_link(self):\n+        link = profile_link(\"sladyn98\")","author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-01-07T10:25:16Z","lastEditedAt":null,"updatedAt":"2019-01-07T10:25:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTYyMzA0MA==","url":"https://github.com/coala/corobo/pull/645#discussion_r245623040","bodyText":"@abhishalya you mean i should just create a mock object for the string and assert true on that mock object ?","diffHunk":"@@ -207,6 +207,13 @@ def test_is_newcomer_issue(self):\n         mock_iss.labels = ('difficulty/medium',)\n         self.assertFalse(LabHub.is_newcomer_issue(mock_iss))\n \n+    def test_profile_link(self):\n+        link = profile_link(\"sladyn98\")","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-01-07T11:18:41Z","lastEditedAt":null,"updatedAt":"2019-01-07T11:18:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTYyNDkxMg==","url":"https://github.com/coala/corobo/pull/645#discussion_r245624912","bodyText":"Why wont a simple assert true be better in this case?","diffHunk":"@@ -207,6 +207,13 @@ def test_is_newcomer_issue(self):\n         mock_iss.labels = ('difficulty/medium',)\n         self.assertFalse(LabHub.is_newcomer_issue(mock_iss))\n \n+    def test_profile_link(self):\n+        link = profile_link(\"sladyn98\")","author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-01-07T11:26:40Z","lastEditedAt":null,"updatedAt":"2019-01-07T11:26:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTAwMjQ1OQ==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449002459","bodyText":"@sladyn98 The changes you made I think are only valid for gitter as backend. You need to find the ways of mapping usernames for other backends too. Also, you need to use this function while creating the issue.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2018-12-20T13:39:54Z","lastEditedAt":null,"updatedAt":"2018-12-20T13:39:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTAwNTg2Mg==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449005862","bodyText":"@abhishalya but I think the issue description mentions issues created only via gitter right?In terms of  other backends we would by default have to just make a guess for the username because we won't be absolutely sure that they are the original gitlab/github usernames.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-20T13:52:01Z","lastEditedAt":null,"updatedAt":"2018-12-20T13:52:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTAwNjk0OA==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449006948","bodyText":"If the issue demands In terms of mattermost we could return gitlab. For slack and other backends,I think github would be the best guess. Thoughts?","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-20T13:55:51Z","lastEditedAt":null,"updatedAt":"2018-12-20T13:55:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTAwODQ2Nw==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449008467","bodyText":"@sladyn98 Well then you should not make changes to the backend.py file. Instead I feel the function should be added to the labhub because that is where the issue is being created.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2018-12-20T14:01:15Z","lastEditedAt":null,"updatedAt":"2018-12-20T14:01:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTAxNDI0Ng==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449014246","bodyText":"Yeah @abhishalya I totally agree but that wouldn't change much because we would be doing the same things there as well.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-20T14:20:19Z","lastEditedAt":null,"updatedAt":"2018-12-20T14:20:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTAyMDE2NA==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449020164","bodyText":"I think the functions in the backend.py file are the ones where the output is dependent on the backend used by the corobo. Here since we can only form solution for gitter backend we should not add that function to the backend file. Also, currently the function does nothing, we are not using it. You'll need to form the entire solution and then test it too.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2018-12-20T14:39:38Z","lastEditedAt":null,"updatedAt":"2018-12-20T14:39:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTA4MTI5Nw==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449081297","bodyText":"Yeah so for now I think we can add the gitter backend functionality to\nlabhub and test out the functionality,i don't see the point of other\nbackends because we would return only the github profile for that username\nbased on a guess. The other backend we can add is mattermost so I think\nI'll add a function to labhub and integrate it with create issues and\ncreate a PR.\n…\nOn Thu, Dec 20, 2018, 8:09 PM Abhinav Kaushlya ***@***.*** wrote:\n I think the functions in the backend.py file are the ones where the output\n is dependent on the backend used by the corobo. Here since we can only form\n solution for gitter backend we should not add that function to the backend\n file. Also, currently the function does nothing, we are not using it.\n You'll need to form the entire solution and then test it too.\n\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#645 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AbgGHv_3vW1TnpRVFQ_klsHhjgm3OtYuks5u66EqgaJpZM4Zb6g->\n .","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-20T17:49:57Z","lastEditedAt":null,"updatedAt":"2018-12-20T17:49:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTA4MTgyMw==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449081823","bodyText":"We can then test out this  functionality,because most of the issues would be created via gitter so this solution should be more than enough","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-20T17:51:44Z","lastEditedAt":null,"updatedAt":"2018-12-20T17:51:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTU0NDI4NQ==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449544285","bodyText":"@sladyn98 You'll also have to prepare tests for the changes you make. :)","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2018-12-22T04:29:32Z","lastEditedAt":null,"updatedAt":"2018-12-22T04:29:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTU3OTY2Ng==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449579666","bodyText":"@abhishalya yeah buddy i will write the tests .Is this PR  good till now.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-22T15:55:50Z","lastEditedAt":"2018-12-22T17:31:25Z","updatedAt":"2018-12-22T17:31:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTY0NzI5NQ==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449647295","bodyText":"@abhishalya I can't seem to find the tests written for backend.py could you help me a bit","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-23T16:22:25Z","lastEditedAt":null,"updatedAt":"2018-12-23T16:22:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTY0NzQ4NA==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449647484","bodyText":"@sladyn98 Test where you use it 😉\nI mean if you are using the function from the backends.py file in labhub then the test will lie in the labhub test file where the function from the backend file will be automatically tested based on the use in the labhub.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2018-12-23T16:24:11Z","lastEditedAt":"2018-12-23T16:25:32Z","updatedAt":"2018-12-23T16:25:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTY0NzcyNg==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449647726","bodyText":"Yeah is there a test for the function message_link which is a part of the backend file,because I thought it would give me a sort of example on how to write a test for it.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-23T16:27:21Z","lastEditedAt":null,"updatedAt":"2018-12-23T16:27:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTY0ODIxMw==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449648213","bodyText":"@sladyn98 git grep message_link","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2018-12-23T16:33:20Z","lastEditedAt":null,"updatedAt":"2018-12-23T16:33:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ0OTY1MzYxMA==","url":"https://github.com/coala/corobo/pull/645#issuecomment-449653610","bodyText":"@abhishalya I did a grep search but no such tests popped up.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2018-12-23T17:58:04Z","lastEditedAt":null,"updatedAt":"2018-12-23T17:58:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1Mzc0MjIxMA==","url":"https://github.com/coala/corobo/pull/645#issuecomment-453742210","bodyText":"Also please run coala before pushing, so as to avoid bunch of comments from the gitmate-bot.","diffHunk":null,"author":{"login":"abhishalya","avatarUrl":"https://avatars0.githubusercontent.com/u/34682737?v=4","name":"Abhinav Kaushlya"},"createdAt":"2019-01-12T12:04:19Z","lastEditedAt":null,"updatedAt":"2019-01-12T12:04:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1Mzc0MjY3NA==","url":"https://github.com/coala/corobo/pull/645#issuecomment-453742674","bodyText":"Also please run coala before pushing, so as to avoid bunch of comments from the gitmate-bot.\n\nYeah Im sorry I will run that.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-01-12T12:12:03Z","lastEditedAt":null,"updatedAt":"2019-01-12T12:12:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1Mzc2NzQ5Mw==","url":"https://github.com/coala/corobo/pull/645#issuecomment-453767493","bodyText":"@abhishalya now the tests are passing and the coverage has also gone up.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-01-12T17:51:40Z","lastEditedAt":null,"updatedAt":"2019-01-12T17:51:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQ1Mzg1ODA2MA==","url":"https://github.com/coala/corobo/pull/645#issuecomment-453858060","bodyText":"utils/backends.py has still been changed.\n\nYeah I will change that when I am sure the tests I have written are good to go.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-01-13T19:27:28Z","lastEditedAt":null,"updatedAt":"2019-01-13T19:27:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwNzA2MDYyMg==","url":"https://github.com/coala/corobo/pull/645#issuecomment-507060622","bodyText":"@Makman2 Kindly review this PR.","diffHunk":null,"author":{"login":"sladyn98","avatarUrl":"https://avatars1.githubusercontent.com/u/28837406?v=4","name":"Sladyn"},"createdAt":"2019-06-30T19:23:54Z","lastEditedAt":null,"updatedAt":"2019-06-30T19:23:54Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1561918339000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/261","number":261,"title":" gamification/: Redesign the webpage ","body":"The redesigned webpages provides a enhanced\nUI/UX design to web-page with additional\nfunctionality of searching the contributors.\nCloses #260","comments":1,"createdAt":"2019-06-15T12:22:25Z","updatedAt":"2019-06-30T18:12:19Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/261","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1561961972000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/253","number":253,"title":"data/: Redesign the contributors webpage","body":"Closes https://gitlab.com/coala/GSoC/gsoc-2019/issues/268 , #240 , #231 ,\n#141 , #139 , #141 , #140","comments":3,"createdAt":"2019-06-14T04:23:16Z","updatedAt":"2019-07-01T06:19:32Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/253","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Mzg1MTM2NA==","url":"https://github.com/coala/community/pull/253#discussion_r293851364","bodyText":"This image looks too large IMO.","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2019-06-14T15:13:19Z","lastEditedAt":null,"updatedAt":"2019-06-14T15:13:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzkxOTc2NQ==","url":"https://github.com/coala/community/pull/253#discussion_r293919765","bodyText":"exported from Photoshop itself for web display! Adjusted the header image height to make it look good on large screen otherwise it would have taken whole visible screen to display that image.\nAny suggestions? On how can I make it better.\n\nimage looks too large","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"createdAt":"2019-06-14T18:07:43Z","lastEditedAt":null,"updatedAt":"2019-06-14T18:07:43Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1561912564000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/254","number":254,"title":" meta-review/: Redesign the webpage","body":"The redesigned web-page provides a nice\nUI/UX design to the web-page with \"search\"\nfeature.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/143","comments":0,"createdAt":"2019-06-15T04:17:42Z","updatedAt":"2019-06-30T16:36:04Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/254","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1559761555000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/249","number":249,"title":"README.md: Update header image","body":"The new header image is designed on the thought\nthat this project is a re-usable project which\ncan be forked by any other organisation. Therefore,\nthe header should be a project specific logo which\nsymbolises three components - creating, growing and\nsupporting community.\nCloses #55","comments":0,"createdAt":"2019-05-29T08:09:28Z","updatedAt":"2019-06-05T19:05:55Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/249","comments":[]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1561704234000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/250","number":250,"title":"Redesign homepage","body":"The enhancement includes addition of materialize\ncss, JQuery, responsiveness, and easy-navigation\nof website features. The easy-navigatibility is\nachieved by adding a navbar with display of meta\n-review and gamification leaderboard on homepage.\nApart from this, the activity graph url is omitted\nfrom website by displaying the graph itslef on the\nhomepage on large devices.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/142","comments":9,"createdAt":"2019-06-09T16:20:08Z","updatedAt":"2019-06-28T06:43:54Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/250","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODQyNg==","url":"https://github.com/coala/community/pull/250#discussion_r294038426","bodyText":"Any specific reason to have the import here instead of at the top of the module?\nP.S. https://stackoverflow.com/questions/128478/should-import-statements-always-be-at-the-top-of-a-module","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):\n+        org_name = get_org_name()\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team_objs = [Team.objects.get(name=team), ]\n+            contributors = Contributor.objects.filter(teams__in=team_objs)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        import requests\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:\n+            return None\n+        return {\n+            'quote': qod_data['contents']['quotes'][0]['quote'],\n+            'author': qod_data['contents']['quotes'][0]['author'],\n+        }\n+\n+    def get_top_meta_review_users(self, count):\n+        from meta_review.models import Participant","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:35:39Z","lastEditedAt":"2019-06-15T08:19:07Z","updatedAt":"2019-06-15T08:19:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODQ4NA==","url":"https://github.com/coala/community/pull/250#discussion_r294038484","bodyText":"Can we use f-Strings to do all the string formatting?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:39:20Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:39:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODU0MQ==","url":"https://github.com/coala/community/pull/250#discussion_r294038541","bodyText":"Why http instead of https?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:42:01Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:42:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzODU3NA==","url":"https://github.com/coala/community/pull/250#discussion_r294038574","bodyText":"I believe we are already using it in this repo at some places, can you check?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-15T07:43:58Z","lastEditedAt":null,"updatedAt":"2019-06-15T07:43:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzOTExOQ==","url":"https://github.com/coala/community/pull/250#discussion_r294039119","bodyText":"Add a related_name in the teams field of the Contributor model.\nGet a Team by it's name.\nGet contributors of that team by using the related_name.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NzI1Nw==","createdAt":"2019-06-15T14:00:44Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:08:28Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:08:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDAzOTMwMg==","url":"https://github.com/coala/community/pull/250#discussion_r294039302","bodyText":"handle should have only few lines of code, add all the other code in a separate file and use them here. E.g. see https://github.com/coala/community/blob/master/meta_review/management/commands/run_meta_review_system.py","diffHunk":"@@ -0,0 +1,119 @@\n+import logging\n+import json\n+import getorg\n+import os\n+\n+from django.core.management.base import BaseCommand\n+\n+from data.models import Contributor\n+from activity.scraper import activity_json\n+\n+\n+class Command(BaseCommand):\n+    help = 'Create a cluster map using contributors geolocation'\n+\n+    def add_arguments(self, parser):\n+        parser.add_argument('output_dir', nargs='?', type=str)\n+\n+    def handle(self, *args, **options):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NjI5OA==","createdAt":"2019-06-15T13:00:06Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:15:18Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:15:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTYyMQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045621","bodyText":"Any specific reason to have the import here instead of at the top of the module?\n\nNo! Specific reason. I have seen in some of the upstream packages where they were also importing a module within a function.\nWill Move it to top of the module","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self):\n+        org_name = get_org_name()\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team_objs = [Team.objects.get(name=team), ]\n+            contributors = Contributor.objects.filter(teams__in=team_objs)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        import requests\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:\n+            return None\n+        return {\n+            'quote': qod_data['contents']['quotes'][0]['quote'],\n+            'author': qod_data['contents']['quotes'][0]['author'],\n+        }\n+\n+    def get_top_meta_review_users(self, count):\n+        from meta_review.models import Participant","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:33:56Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:33:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTY4Nw==","url":"https://github.com/coala/community/pull/250#discussion_r294045687","bodyText":"Will correct it!","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:36:23Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:36:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTkzNQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045935","bodyText":"Sure! I will check it. But using .format() is an improved way of formatting the strings. Its' also mentioned in the provided link by you.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:45:06Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:45:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NTk5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r294045995","bodyText":"We can also opt-for this one https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:47:33Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:47:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA0NjAzMg==","url":"https://github.com/coala/community/pull/250#discussion_r294046032","bodyText":"I believe we are already using it in this repo at some places, can you check?\n\nBoth are being used %-formatting as well as .format()","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-15T12:49:04Z","lastEditedAt":null,"updatedAt":"2019-06-15T12:49:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjQ2Mg==","url":"https://github.com/coala/community/pull/250#discussion_r294072462","bodyText":"We can also opt-for this one https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python\n\nYeah that's what I mean, are we using these anywhere in this project?","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T07:59:09Z","lastEditedAt":null,"updatedAt":"2019-06-16T07:59:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjYzOA==","url":"https://github.com/coala/community/pull/250#discussion_r294072638","bodyText":"team.contributors.count() should give you the count.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTQzNw==","createdAt":"2019-06-16T10:34:37Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:04:18Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:04:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MjY4Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294072686","bodyText":"You changed string team to an object in the line 62.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T08:05:24Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:05:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Mjk0Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294072946","bodyText":"Can you do something like \n  \n    \n      community/data/contrib_data.py\n    \n    \n         Line 14\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           try:","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        if qod.status_code == 429:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTExMg==","createdAt":"2019-06-16T10:08:04Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:12:13Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:12:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzE3Ng==","url":"https://github.com/coala/community/pull/250#discussion_r294073176","bodyText":"You can directly do contributor['location'] = contributor.get('location')\nIf there is no location field you will have None. And location field can accept null values. https://github.com/coala/community/pull/250/files#diff-6556cd068e37d3b094ccb8363a7e3a7dR18","diffHunk":"@@ -32,6 +32,9 @@ def import_data(contributor):\n     try:\n         contributor['issues_opened'] = contributor.pop('issues')\n         contributor['num_commits'] = contributor.pop('contributions')\n+        contributor_location = contributor.get('location')\n+        if contributor_location:\n+            contributor['location'] = contributor_location","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTExMw==","createdAt":"2019-06-16T10:08:08Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:18:11Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:18:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzMxOA==","url":"https://github.com/coala/community/pull/250#discussion_r294073318","bodyText":"You can do def handle(output_dir='cluster_map') by default, if they provide some other dir it will be replaced by that.\nYou can also log that the cluster_map dir is used by default for this thing.","diffHunk":"@@ -0,0 +1,113 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir=None):\n+    logger = logging.getLogger(__name__)\n+\n+    if not output_dir:\n+        logger.debug('output_dir arg not provided! Setting output_dir'\n+                     ' to cluster_map/')\n+        output_dir = 'cluster_map'","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTA4MA==","createdAt":"2019-06-16T10:06:01Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:23:05Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:23:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3MzUxNg==","url":"https://github.com/coala/community/pull/250#discussion_r294073516","bodyText":"Add a proper documentations for any new methods you add.\nE.g. see: \n  \n    \n      community/gamification/process/update.py\n    \n    \n         Line 25\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def update_participants_data_with_mr(mr): \n        \n    \n  \n\n or \n  \n    \n      community/gamification/models.py\n    \n    \n         Line 84\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def add_points(self, points, activity_string, performed_at, updated_at):","diffHunk":"@@ -0,0 +1,113 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir=None):\n+    logger = logging.getLogger(__name__)\n+\n+    if not output_dir:\n+        logger.debug('output_dir arg not provided! Setting output_dir'\n+                     ' to cluster_map/')\n+        output_dir = 'cluster_map'\n+\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDcxMTA3NQ==","createdAt":"2019-06-16T10:05:32Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-16T08:29:08Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:29:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Mzc4Nw==","url":"https://github.com/coala/community/pull/250#discussion_r294073787","bodyText":"Btw, can you give me some good reasons on why we should have a quote on our home page? I mean how are those quote relatable to the website? 😄","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T08:34:12Z","lastEditedAt":null,"updatedAt":"2019-06-16T08:34:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3NjYxNQ==","url":"https://github.com/coala/community/pull/250#discussion_r294076615","bodyText":"Yes! These are also being used in this repo.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:02:06Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:02:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3NjcwNg==","url":"https://github.com/coala/community/pull/250#discussion_r294076706","bodyText":"Since It's an open-source community project and is a reusable project by any of the org. And, any contributor or user visiting must receive some type of motivation in any of the manner. Showing inspirational quotes will be helpful to contributors to find some inspiration as well as motivation","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:05:19Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:05:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA3Njc2OQ==","url":"https://github.com/coala/community/pull/250#discussion_r294076769","bodyText":"Ohh! My bad. I will correct it 👍","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T10:07:50Z","lastEditedAt":null,"updatedAt":"2019-06-16T10:07:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA4MTc4Mw==","url":"https://github.com/coala/community/pull/250#discussion_r294081783","bodyText":"Then try to use that only. They are more readable and faster.","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-16T12:26:56Z","lastEditedAt":null,"updatedAt":"2019-06-16T12:26:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDA4ODQ5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r294088495","bodyText":"Used them and pushed it! 🙂👍🏻","diffHunk":"@@ -8,21 +8,104 @@\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team, Contributor\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'http://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'http://{}.io/newcomer'.format(org_name),\n+        'coc': 'http://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-16T15:08:10Z","lastEditedAt":null,"updatedAt":"2019-06-16T15:08:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg3OTkwOA==","url":"https://github.com/coala/community/pull/250#discussion_r296879908","bodyText":"Have these imports in an order.\nE.g. built modules should be imported at one place. all the django imports should go at one place, etc..etc..see other files for more examples.","diffHunk":"@@ -1,28 +1,110 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n+import logging","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTMxMjE2NA==","createdAt":"2019-06-25T10:12:39Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:30:39Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:30:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4MjEyOA==","url":"https://github.com/coala/community/pull/250#discussion_r296882128","bodyText":"No, not like this, I meant have the request.get in the try:except and useraise_for_status also. Similar to what is done in \n  \n    \n      community/data/contrib_data.py\n    \n    \n         Line 9\n      in\n      9a7b5f4\n    \n    \n    \n    \n\n        \n          \n           def get_contrib_data(): \n        \n    \n  \n\n as I said earlier.","diffHunk":"@@ -1,28 +1,110 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n+import logging\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': f'https://blog.{org_name}.io/',\n+        'twitter_url': f'https://twitter.com/{org_name}_io/',\n+        'facebook_url': f'https://www.facebook.com/{org_name}Analyzer',\n+        'repo_url': get_remote_url().href,\n+        'docs': f'https://{org_name}.io/docs',\n+        'newcomer_docs': f'https://{org_name}.io/newcomer',\n+        'coc': f'https://{org_name}.io/coc',\n+        'logo_url': (f'https://api.{org_name}.io/en/latest/_static/images/'\n+                     f'{org_name}_logo.svg'),\n+        'gitter_chat': f'https://gitter.im/{org_name}/{org_name}/',\n+        'github_core_repo': f'https://github.com/{org_name}/{org_name}/',\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team_name in teams:\n+            team = Team.objects.get(name=team_name)\n+            team_details[team] = team.contributors.count()\n+        return team_details\n+\n+    def get_quote_of_the_day(self):\n+        qod = requests.get('http://quotes.rest/qod?category=inspire')\n+        qod_data = qod.json()\n+        try:\n+            return {\n+                'quote': qod_data['contents']['quotes'][0]['quote'],\n+                'author': qod_data['contents']['quotes'][0]['author'],\n+            }","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:37:07Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:37:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4Mzg1NA==","url":"https://github.com/coala/community/pull/250#discussion_r296883854","bodyText":"Can you use double inverted commas(\"\") here, then you don't have to use \\ for ''","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:41:50Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:41:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4ODgxMQ==","url":"https://github.com/coala/community/pull/250#discussion_r296888811","bodyText":"the code should not depend on test, tests should depends on code.\nI understand the problem, can you try removing the test users from https://github.com/sks444/webservices.coala.io/blob/master/contrib.json, and see what are the existing test cases which fails(on master branch), or if we are not getting the 100 % coverage, we will try to fix those, because the original data which will come from the webservices will not have the testusers.\nI will give you access to push directly to https://github.com/sks444/webservices.coala.io/ so that you don't have to create a pr each time you have to modify the data for testing.","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI5MzgyMA==","createdAt":"2019-06-25T05:59:23Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:55:31Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:55:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg4OTUxNA==","url":"https://github.com/coala/community/pull/250#discussion_r296889514","bodyText":"When you're writing the documentation under \"\"\" \"\"\" you don't have to use #","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T19:57:26Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:57:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5MDAxNg==","url":"https://github.com/coala/community/pull/250#discussion_r296890016","bodyText":"use f Strings.","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and\n+    # the 'map.html' file to django templates directory to get it displayed\n+    # on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                       output_dir)\n+    leaflet_destination_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTI5Mzc0OA==","createdAt":"2019-06-25T05:57:15Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T19:58:48Z","lastEditedAt":null,"updatedAt":"2019-06-24T19:58:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5MzAzNA==","url":"https://github.com/coala/community/pull/250#discussion_r296893034","bodyText":"I guess, you can directly do:\nIn [1]: with open('file.txt') as f:\n   ...:     for line in f:\n   ...:         print (line)\nsee https://stackoverflow.com/questions/39086/search-and-replace-a-line-in-a-file-in-python","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and\n+    # the 'map.html' file to django templates directory to get it displayed\n+    # on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                       output_dir)\n+    leaflet_destination_path = '{}/{}/leaflet_dist/'.format(os.getcwd(),\n+                                                            'static')\n+\n+    # Remove existing leaflet_dir if exists\n+    for root, dirs, files in os.walk(leaflet_destination_path):\n+        for file in files:\n+            os.remove(os.path.join(leaflet_destination_path, file))\n+        os.rmdir(root)\n+\n+    os.renames(leaflet_source_path, leaflet_destination_path)\n+\n+    # Move org_locations.js to static folder\n+    locations_source_path = '{}/{}/org-locations.js'.format(os.getcwd(),\n+                                                            output_dir)\n+    locations_destination_path = '{}/{}/org-locations.js'.format(\n+        os.getcwd(), 'static')\n+    os.rename(locations_source_path, locations_destination_path)\n+\n+    # Make changes in map.html to support django syntax with needed CSS\n+    with open('{}/map.html'.format(output_dir)) as f:\n+        django_supported_htmls = []\n+        lines = f.readlines()\n+        for index in range(len(lines)):\n+            line = lines[index].strip()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTMwOTcyOA==","createdAt":"2019-06-25T09:40:52Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-24T20:06:52Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:06:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5ODYzNQ==","url":"https://github.com/coala/community/pull/250#discussion_r296898635","bodyText":"Can you make the whole card clickable instead of just the footer?\nI also think that these cards should look similar(in color, etc.) with the individual cards on their respective pages. What's your opinion?","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}\n+  <div class=\"center quote-of-day custom-green-color-font\">\n+    <div class=\"center apply-flex center-content\">\n+      <h3 style=\"padding-right: 15px\">~</h3>\n+      <div class=\"quote\">\n+        <p style=\"margin-bottom: 0px\">{{ quote_details.quote }}</p>\n+        <h6 style=\"margin-top: 0px\">- {{ quote_details.author }}</h6>\n+      </div>\n+      <h3 style=\"padding-left: 15px\">~</h3>\n+    </div>\n+  </div>\n+  {% endif %}{# if quote_details #}\n+\n+  <div class=\"center org-teams-stats apply-flex center-content custom-green-color-font\">\n+    {% for team_name, members_count in org.team_details.items %}\n+    <div class=\"team\" style=\"margin-right: 20px\">\n+      <h3 style=\"margin-bottom: 0\">{{ members_count }}</h3>\n+      <h4 style=\"margin-top: 0\">{{ team_name }}</h4>\n+    </div>\n+    {% endfor %}{# for team_name, members_count in org.team_details.items #}\n+  </div>\n+\n+  <div class=\"organization-map\">\n+    {% include 'map.html' %}\n+  </div>\n+\n+  <div class=\"top-contributors\">\n+    <div class=\"top-meta-reviewers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Meta-review Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for contrib in top_meta_review_users %}\n+          <tr>\n+            <td>{{ contrib.rank }}</td>\n+            <td>{{ contrib.login }}</td>\n+            <td>{{ contrib.score|floatformat:0 }}</td>\n+          </tr>\n+        {% endfor %}{# for contrib in top_meta_review_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"meta-review/\" class=\"waves-effect waves-light btn leaderboards-btn\">Contributors Meta-review</a>\n+    </div>\n+    <div class=\"top-gamifiers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Gamification Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for index, contrib in top_gamification_users %}\n+          <tr>\n+            <td>{{ index|add:\"1\" }}</td>\n+            <td>{{ contrib.username }}</td>\n+            <td>{{ contrib.score }}</td>\n+          </tr>\n+        {% endfor %}{# for index, contrib in top_gamification_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"gamification/\" class=\"waves-effect waves-light btn leaderboards-btn\">Gamification leaderboard</a>","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T20:22:00Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:22:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5Njg5OTM3Nw==","url":"https://github.com/coala/community/pull/250#discussion_r296899377","bodyText":"Is it solved? I see you're still using the team object in team_details[team] instead of a string team.","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-24T20:23:57Z","lastEditedAt":null,"updatedAt":"2019-06-24T20:23:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzAxNTc3NQ==","url":"https://github.com/coala/community/pull/250#discussion_r297015775","bodyText":"Won't coala raise errors! As single quotation marks are being preferred as mentioned in .coafile","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T05:52:09Z","lastEditedAt":null,"updatedAt":"2019-06-25T05:52:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzAxNjc5NQ==","url":"https://github.com/coala/community/pull/250#discussion_r297016795","bodyText":"Ohh! I forgot to remove them","diffHunk":"@@ -0,0 +1,138 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+\n+    logger.info('\\'cluster_map/\\' is the default directory for storing'\n+                ' organization map related files. If arg \\'output_dir\\''\n+                ' not provided it will be used as a default directory by'\n+                ' \\'getorg\\' package.')\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if not contrib.login.startswith('testuser') and contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug('{} location {} added on map'.format(\n+                contrib.login, user_location))\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    # Move static files from 'output_dir' to django static folder and","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T05:56:42Z","lastEditedAt":null,"updatedAt":"2019-06-25T05:56:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzEwOTcxMw==","url":"https://github.com/coala/community/pull/250#discussion_r297109713","bodyText":"Yeas! I will make the whole card clickable. What will make it more good is that we can add a href to each row which when clicked will redirect the user to the same user-details card on which the user has clicked.\n\nCan you make the whole card clickable instead of just the footer?\n\nI tried to give them same color (all green color variants being used in website) but it wasn't looking good, it was giving a dull-like experience. Currently, both of them are having that background colors which are going in match with header, body-background as well as text. Also, the yellow-orange color combination is one of the famous combinations.\n\nI also think that these cards should look similar(in color, etc.)\n\nWe can surely do that! but the only issue is space, we can't separate the current main-content div into two div blocks in which one div block will be used for a single card. Also, if we don't choose to create partitions then the concern is where will it be shown at top or bottom of page. Neither of the positions will have a nice UX experience. Showing at home-page will give user a glance giving a nice UX experience and with giving them an additional information that the website has two types of leaderboards related to contribs. And, a new-user to website always recognizes the website by its homepage and easy-navigability.\n\nwith the individual cards on their respective pages. What's your opinion?","diffHunk":"@@ -1,29 +1,118 @@\n-<!DOCTYPE html>\n-<html>\n-  <head>\n-    <meta charset=\"utf-8\">\n-    <title>Community website</title>\n-  </head>\n-  <body>\n-    <img src=\"static/org_logo.png\" alt=\"org logo\" height=\"42\" width=\"42\">\n-    <ul>\n-      <li><a href=\"gci/\">Google Code-in</a>\n-      <li><a href=\"activity/\">GitHub activity</a>\n-      <li><a href=\"twitter/\">Twitter Feed</a>\n-      <li><a href=\"info.txt\">Build info</a>\n-      <li><a href=\"log/\">Logs</a>\n-      <li><a href=\"contributors/\">Contributors data</a>\n-      <li><a href=\"meta-review/\">Meta-review data</a>\n-      <li><a href=\"gamification/\">Gamification leaderboard</a>\n-      <li><a title=\"List of all the issues on organization's main repository on which assignee has not shown any activity for more than 2 months.\"\n-        href=\"static/inactive-issues.json\">Inactive Issues</a>\n-      <li><a href=\"openhub/\">OpenHub Data</a>\n-      <li><a href=\"model/\">Visit imported data</a>\n-      <li><a title=\"List of all the issues on organization main repository on which someone has opened a pull request without getting assigned to it.\"\n-        href=\"static/unassigned-issues.json\">Unassigned issues activity</a>\n-    </ul>\n-    {% if isTravis %}\n-    <small>This website was built automatically using Travis CI. A link to the build can be found <a href=\"{{ travisLink }}\">here</a>.</small>\n-    {% endif %}{# if isTravis #}\n-  </body>\n-</html>\n+{% extends 'base.html' %}\n+{% load staticfiles %}\n+{% block title %}\n+  Community | Homepage\n+{% endblock %}\n+\n+{% block add_css_files %}\n+<link rel=\"stylesheet\" href=\"{% static 'css/index.css' %}\">\n+{% endblock %}\n+\n+{% block add_js_files %}\n+<script src=\"//cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js\"></script>\n+<script src=\"{% static 'js/index.js' %}\"></script>\n+{% endblock %}\n+\n+{% block main-content %}\n+\n+  <div class=\"community-header-image\">\n+    <img src=\"{% static 'images/os_community_header.jpg' %}\">\n+  </div>\n+\n+  <div class=\"center about-org custom-green-color-font\" id=\"about\" style=\"margin-top: -2%\">\n+    <div class=\"center\">\n+      <h3>Welcome to {{ org.name }}</h3>\n+      <p style=\"margin: 0% 10%; color: black\">{{ org.about }}</p>\n+    </div>\n+  </div>\n+  {% if quote_details %}\n+  <div class=\"center quote-of-day custom-green-color-font\">\n+    <div class=\"center apply-flex center-content\">\n+      <h3 style=\"padding-right: 15px\">~</h3>\n+      <div class=\"quote\">\n+        <p style=\"margin-bottom: 0px\">{{ quote_details.quote }}</p>\n+        <h6 style=\"margin-top: 0px\">- {{ quote_details.author }}</h6>\n+      </div>\n+      <h3 style=\"padding-left: 15px\">~</h3>\n+    </div>\n+  </div>\n+  {% endif %}{# if quote_details #}\n+\n+  <div class=\"center org-teams-stats apply-flex center-content custom-green-color-font\">\n+    {% for team_name, members_count in org.team_details.items %}\n+    <div class=\"team\" style=\"margin-right: 20px\">\n+      <h3 style=\"margin-bottom: 0\">{{ members_count }}</h3>\n+      <h4 style=\"margin-top: 0\">{{ team_name }}</h4>\n+    </div>\n+    {% endfor %}{# for team_name, members_count in org.team_details.items #}\n+  </div>\n+\n+  <div class=\"organization-map\">\n+    {% include 'map.html' %}\n+  </div>\n+\n+  <div class=\"top-contributors\">\n+    <div class=\"top-meta-reviewers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Meta-review Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for contrib in top_meta_review_users %}\n+          <tr>\n+            <td>{{ contrib.rank }}</td>\n+            <td>{{ contrib.login }}</td>\n+            <td>{{ contrib.score|floatformat:0 }}</td>\n+          </tr>\n+        {% endfor %}{# for contrib in top_meta_review_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"meta-review/\" class=\"waves-effect waves-light btn leaderboards-btn\">Contributors Meta-review</a>\n+    </div>\n+    <div class=\"top-gamifiers\">\n+      <table class=\"highlight centered\">\n+        <thead class=\"custom-green-color-font\">\n+          <tr>\n+            <th>Rank</th>\n+            <th>Username</th>\n+            <th>Gamification Score</th>\n+          </tr>\n+        </thead>\n+        <tbody>\n+        {% for index, contrib in top_gamification_users %}\n+          <tr>\n+            <td>{{ index|add:\"1\" }}</td>\n+            <td>{{ contrib.username }}</td>\n+            <td>{{ contrib.score }}</td>\n+          </tr>\n+        {% endfor %}{# for index, contrib in top_gamification_users #}\n+        </tbody>\n+      </table>\n+      <a href=\"gamification/\" class=\"waves-effect waves-light btn leaderboards-btn\">Gamification leaderboard</a>","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T10:08:18Z","lastEditedAt":null,"updatedAt":"2019-06-25T10:08:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzExMTE3Mg==","url":"https://github.com/coala/community/pull/250#discussion_r297111172","bodyText":"Yeah! Its solved. Also, will change to make it more clear to team_name instead of object","diffHunk":"@@ -1,28 +1,109 @@\n from django.http import HttpResponse\n from django.views.generic.base import TemplateView\n-\n+import requests\n from trav import Travis\n \n from .git import (\n     get_deploy_url,\n     get_org_name,\n     get_owner,\n     get_upstream_deploy_url,\n+    get_remote_url\n )\n+from data.models import Team\n+from gamification.models import Participant as GamificationParticipant\n+from meta_review.models import Participant as MetaReviewer\n+\n+\n+def initialize_org_context_details():\n+    org_name = get_org_name()\n+    org_details = {\n+        'name': org_name,\n+        'blog_url': 'https://blog.{}.io/'.format(org_name),\n+        'twitter_url': 'https://twitter.com/{}_io/'.format(org_name),\n+        'facebook_url': 'https://www.facebook.com/{}Analyzer'.format(\n+            org_name),\n+        'repo_url': get_remote_url().href,\n+        'docs': 'https://{}.io/docs'.format(org_name),\n+        'newcomer_docs': 'https://{}.io/newcomer'.format(org_name),\n+        'coc': 'https://{}.io/coc'.format(org_name),\n+        'logo_url': ('https://api.{}.io/en/latest/_static/images/'\n+                     '{}_logo.svg'.format(org_name, org_name)),\n+        'gitter_chat': 'https://gitter.im/{}/{}/'.format(org_name,\n+                                                         org_name),\n+        'github_core_repo': 'https://github.com/{}/{}/'.format(org_name,\n+                                                               org_name),\n+        'licence_type': 'GNU AGPL v3.0'\n+    }\n+    return org_details\n+\n+\n+def get_header_and_footer(context):\n+    context['isTravis'] = Travis.TRAVIS\n+    context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    context['org'] = initialize_org_context_details()\n+    print('Running on Travis: {}, build link: {}'.format(context['isTravis'],\n+                                                         context['travisLink']\n+                                                         ))\n+    return context\n \n \n class HomePageView(TemplateView):\n     template_name = 'index.html'\n \n-    def get_context_data(self, **kwargs):\n-        context = super().get_context_data(**kwargs)\n-        context['isTravis'] = Travis.TRAVIS\n-        context['travisLink'] = Travis.TRAVIS_BUILD_WEB_URL\n+    def get_team_details(self, org_name):\n+        teams = [\n+            '{} newcomers'.format(org_name),\n+            '{} developers'.format(org_name),\n+            '{} admins'.format(org_name)\n+        ]\n+        team_details = {}\n+        for team in teams:\n+            team = Team.objects.get(name=team)\n+            contributors = team.contributors.filter(teams=team)\n+            team_details[team] = contributors.count()","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T10:12:02Z","lastEditedAt":null,"updatedAt":"2019-06-25T10:12:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMwODU3Ng==","url":"https://github.com/coala/community/pull/250#discussion_r297308576","bodyText":"line is looping variable, don't use the same variable name to store the line after the modfication(use newline maybe). It might work in this case, but it's not the correct way to do it, it will not behave expectedly always.\nDo change it everywhere you're doing this.","diffHunk":"@@ -0,0 +1,132 @@\n+import json\n+import logging\n+import os\n+import getorg\n+\n+from data.models import Contributor\n+\n+\n+def handle(output_dir='cluster_map'):\n+    \"\"\"\n+    Creates a organization cluster map using the contributors location\n+    stored in the database\n+    :param output_dir: Directory where all the required CSS and JS files\n+    are copied by 'getorg' package\n+    :return: None\n+    \"\"\"\n+    logger = logging.getLogger(__name__)\n+    logger.info(\"'cluster_map/' is the default directory for storing\"\n+                \" organization map related files. If arg 'output_dir'\"\n+                ' not provided it will be used as a default directory by'\n+                \" 'getorg' package.\")\n+\n+    # For creating the organization map, the 'getorg' uses a 'Nominatim' named\n+    # package which geocodes the contributor location and then uses that class\n+    # to create the map. Since, we're not dealing with that function which use\n+    # that 'Nominatim' package because we're fetching a JSON data and storing\n+    # it in our db. Therefore, defining our own simple class that can aid us\n+    # to create a cluster map.\n+    class Location:\n+\n+        def __init__(self, longitude, latitude):\n+            self.longitude = longitude\n+            self.latitude = latitude\n+\n+    org_location_dict = {}\n+\n+    for contrib in Contributor.objects.all():\n+        if contrib.location:\n+            user_location = json.loads(contrib.location)\n+            location = Location(user_location['longitude'],\n+                                user_location['latitude'])\n+            org_location_dict[contrib.login] = location\n+            logger.debug(f'{contrib.login} location {user_location}'\n+                         f' added on map')\n+    getorg.orgmap.output_html_cluster_map(org_location_dict,\n+                                          folder_name=output_dir)\n+\n+    move_and_make_changes_in_files(output_dir)\n+\n+\n+def move_and_make_changes_in_files(output_dir):\n+    \"\"\"\n+    Move static files from 'output_dir' to django static folder and\n+    the 'map.html' file to django templates directory to get it displayed\n+    on the homepage with the needed django syntax and CSS in the html file.\n+    :param output_dir: Directory from where the files have to be moved\n+    :return: None\n+    \"\"\"\n+\n+    # Move leaflet_dist folder to static folder\n+    leaflet_source_path = f'{os.getcwd()}/{output_dir}/leaflet_dist/'\n+    leaflet_destination_path = f'{os.getcwd()}/static/leaflet_dist/'\n+\n+    # Remove existing leaflet_dir if exists\n+    for root, dirs, files in os.walk(leaflet_destination_path):\n+        for file in files:\n+            os.remove(os.path.join(leaflet_destination_path, file))\n+        os.rmdir(root)\n+\n+    os.renames(leaflet_source_path, leaflet_destination_path)\n+\n+    # Move org_locations.js to static folder\n+    locations_source_path = f'{os.getcwd()}/{output_dir}/org-locations.js'\n+    locations_destination_path = f'{os.getcwd()}/static/org-locations.js'\n+    os.rename(locations_source_path, locations_destination_path)\n+\n+    # Make changes in map.html to support django syntax with needed CSS\n+    with open('{}/map.html'.format(output_dir)) as f:\n+        django_supported_htmls = []\n+        for line in f:\n+            line = line.strip()\n+            if line.__contains__('<html>'):\n+                django_supported_htmls.append('{% load staticfiles %}\\n')\n+                django_supported_htmls.append(line + '\\n')\n+            elif line.__contains__('</head>'):\n+                adjust_prop = '''\n+                <style>\n+                    #map {\n+                    width: 60%;\n+                    height: 300px;\n+                    margin: auto;\n+                    box-shadow: 0px 0px 25px 2px;\n+                    }\n+                    @media only screen and (max-width:750px){\n+                        #map {\n+                            width: 90%\n+                        }\n+                    }\n+                </style>\\n\n+                '''\n+                meta_charset = '<meta charset=\"utf-8\">'\n+                adjust_prop = adjust_prop.strip().replace('    ', '')\n+                django_supported_htmls.insert(6, meta_charset + '\\n')\n+                django_supported_htmls.append(adjust_prop + '\\n')\n+                django_supported_htmls.append(line + '\\n')\n+            elif line.__contains__('https://'):\n+                line = line.replace('https:', '').replace(' />', '>')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTM1MTEyMQ==","createdAt":"2019-06-25T17:48:51Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-25T17:36:07Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:36:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMDcxODU0Ng==","url":"https://github.com/coala/community/pull/250#issuecomment-500718546","bodyText":"@sks444 @damngamerz @margobra8\nPlease review, Thnx","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-11T07:18:23Z","lastEditedAt":null,"updatedAt":"2019-06-11T07:18:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMjM0NjE4OQ==","url":"https://github.com/coala/community/pull/250#issuecomment-502346189","bodyText":"Create an issue in this repo and close that one, do not close the gitlab issues from here.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NDY5NjY2MA==","createdAt":"2019-06-15T13:24:24Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-15T08:20:43Z","lastEditedAt":null,"updatedAt":"2019-06-15T08:20:43Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1561720215000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/251","number":251,"title":"Create build logs webapge","body":"The newly created webpage combines the previous\ntwo webpages- info.txt and log/index.html. This\nweb-page combines the results of both the pages\nand shows them in a better UI/UX with additional\nfeatures of filtering and searching within the\nexisting logs. The logs are fetched from a JSON\nfile which is created from the logs stored in\nthe log file _site/community.log\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/145","comments":3,"createdAt":"2019-06-10T20:00:27Z","updatedAt":"2019-06-28T11:10:15Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/251","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxNDI5Ng==","url":"https://github.com/coala/community/pull/251#discussion_r297314296","bodyText":"from community.git import (\n    get_org_name,\n    get_owner,\n    get_deploy_url,\n    get_upstream_deploy_url,\n)","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:49:10Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:49:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxNTI4OQ==","url":"https://github.com/coala/community/pull/251#discussion_r297315289","bodyText":"data is already dict right? Then why you're converting it to dict again?","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:51:28Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:51:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMxODczNA==","url":"https://github.com/coala/community/pull/251#discussion_r297318734","bodyText":"You should directly do with open('./_site/community.log') as log_file: as it was done earlier without above three lines.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T17:58:57Z","lastEditedAt":null,"updatedAt":"2019-06-25T17:58:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzMDE1OA==","url":"https://github.com/coala/community/pull/251#discussion_r297330158","bodyText":"I am not sure in what condition this line will execute, you have already set  previous_found_level to None, and I am not seeing getting it overridden anywhere except the if condition.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-25T18:24:57Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:24:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzMzYxNA==","url":"https://github.com/coala/community/pull/251#discussion_r297333614","bodyText":"Earlier it was raising some kind of error when we try to open the template as there .items is being used in django templates. Now, its working fine. I don't how. I will make it change","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:32:47Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:32:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzNTQ1MA==","url":"https://github.com/coala/community/pull/251#discussion_r297335450","bodyText":"I'm doing this because the message in html page will shown accordingly. If the file doesn't exists a different message will be displayed asking user to run the build command. 31f2135#diff-b640fac2a47fbe8bce3f0bfc4a528452R67","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:37:10Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:37:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzMzNjI3Nw==","url":"https://github.com/coala/community/pull/251#discussion_r297336277","bodyText":"It will get execute in case we have a Traceback error or a long error message being logged in multiple lines. That log message will be depending upon the previous line which mentions what type of log it is!","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-25T18:39:04Z","lastEditedAt":null,"updatedAt":"2019-06-25T18:39:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMjk3NA==","url":"https://github.com/coala/community/pull/251#discussion_r297502974","bodyText":"Our README.md should explain how to setup the project and how to run it.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T06:34:57Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:34:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMzk1MA==","url":"https://github.com/coala/community/pull/251#discussion_r297503950","bodyText":"Yeah! It should. Already created a task in phase-3 where all the required information will updated in repositories README’s as well as docs.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:38:34Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:38:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwMzk5Mw==","url":"https://github.com/coala/community/pull/251#discussion_r297503993","bodyText":"I still did't get you.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T06:38:44Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:38:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwNDQ5MQ==","url":"https://github.com/coala/community/pull/251#discussion_r297504491","bodyText":"Allow me to explain this via an example.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:40:38Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:40:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzUwODMzOA==","url":"https://github.com/coala/community/pull/251#discussion_r297508338","bodyText":"2019-06-26 06:50:10,770 [ERROR] django.request: Internal Server Error: /CI/Build/\nTraceback (most recent call last):\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 34, in inner\n    response = get_response(request)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 124, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 88, in dispatch\n    return handler(request, *args, **kwargs)\n  File \"/home/kvgarg/anaconda3/envs/community-env/lib/python3.6/site-packages/django/views/generic/base.py\", line 149, in get\n    context = self.get_context_data(**kwargs)\n  File \"/home/kvgarg/GSoC/community/ci_build/view_log.py\", line 92, in get_context_data\n    context['build_logs_stored'] = list(self.get_build_logs())\nTypeError: 'bool' object is not iterable\nSince the Traceback doesn't have any kind of log-level specified, So it is clear that it will depend upon the log-line just before it i.e. 2019-06-26 06:50:10,770 [ERROR] django.request: Internal Server Error: /CI/Build/ therefore the Traceback error log will be appended in Error dict list.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T06:54:36Z","lastEditedAt":null,"updatedAt":"2019-06-26T06:54:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxMTA4Mw==","url":"https://github.com/coala/community/pull/251#discussion_r297811083","bodyText":"You should directly do with open('./_site/community.log') as log_file: as it was done earlier without above three lines.\n\nSo, I think we can go ahead with the above solution? Any way if the file doesn't exist the other commands will fail, right?\n\nI'm doing this because the message in html page will shown accordingly. If the file doesn't exists a different message will be displayed asking user to run the build command. 31f2135#diff-b640fac2a47fbe8bce3f0bfc4a528452R67","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T18:36:15Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:36:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxNTk2MA==","url":"https://github.com/coala/community/pull/251#discussion_r297815960","bodyText":"No what I meant is how will you enter into this loop?\nsomething = None\nd = 3\nif d == 3:\n    something = 'something'\nelif something:\n    print(\"how can it get printed?\")\nSorry, if I am missing something.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-26T18:47:58Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:47:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgxNjU2NQ==","url":"https://github.com/coala/community/pull/251#discussion_r297816565","bodyText":"Yeah! They’ll fail to get executed","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T18:49:30Z","lastEditedAt":null,"updatedAt":"2019-06-26T18:49:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgyMTU5Mg==","url":"https://github.com/coala/community/pull/251#discussion_r297821592","bodyText":"Initially previous_found_level is None but once the for-loop begins it will never have the value None. And, the levels will either be empty or containing atmost one entry representing the log-level..\nSince, the traceback like log-messages will not contain any type of log-level enclosed in brackets which will return an empty regex match which in turn will execute this code.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T19:02:44Z","lastEditedAt":null,"updatedAt":"2019-06-26T19:02:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NzgyMjE0Nw==","url":"https://github.com/coala/community/pull/251#discussion_r297822147","bodyText":"In the example you have taken the value of d Will be getting changed. It will either have a value or will be None","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-26T19:04:21Z","lastEditedAt":null,"updatedAt":"2019-06-26T19:04:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMyNzI0MA==","url":"https://github.com/coala/community/pull/251#discussion_r298327240","bodyText":"Understood.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb240NTU0MzU5Nw==","createdAt":"2019-06-27T19:21:46Z","content":"THUMBS_UP","user":{"login":"KVGarg","name":"Keshav Garg"}}],"createdAt":"2019-06-27T19:08:46Z","lastEditedAt":null,"updatedAt":"2019-06-27T19:08:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMyNzgxMA==","url":"https://github.com/coala/community/pull/251#discussion_r298327810","bodyText":"Btw, can we break this function into smaller ones?","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2019-06-27T19:10:22Z","lastEditedAt":null,"updatedAt":"2019-06-27T19:10:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5ODMzMTg1OA==","url":"https://github.com/coala/community/pull/251#discussion_r298331858","bodyText":"Yeah! In new changes I’ve breaked up this functions into multiple functions\nTalked about org_map func here 😅\nYeah! We can divide this one too.","diffHunk":"@@ -0,0 +1,91 @@\n+import re\n+import json\n+import os\n+import sys\n+\n+from django.views.generic import TemplateView\n+\n+from community.views import get_header_and_footer\n+from community.git import (get_org_name,\n+                           get_owner,\n+                           get_deploy_url,\n+                           get_upstream_deploy_url)\n+\n+\n+class BuildLogsView(TemplateView):\n+    template_name = 'build_logs.html'\n+\n+    def get_build_info(self):\n+        data = {\n+            'Org name': get_org_name(),\n+            'Owner': get_owner(),\n+            'Deploy URL': get_deploy_url(),\n+        }\n+        try:\n+            upstream_deploy_url = get_upstream_deploy_url()\n+            data['Upstream deploy URL'] = upstream_deploy_url\n+        except RuntimeError:\n+            data['Upstream deploy URL'] = 'Not found'\n+        return dict(data)\n+\n+    def get_build_logs(self):\n+        log_lines = []\n+        log_level_specific_lines = {\n+            'INFO': [],\n+            'DEBUG': [],\n+            'WARNING': [],\n+            'ERROR': [],\n+            'CRITICAL': []\n+        }\n+        log_file_path = './_site/community.log'\n+        log_file_exists = os.path.isfile(log_file_path)\n+        if log_file_exists:\n+            with open(log_file_path) as log_file:\n+                previous_found_level = None\n+                for line in log_file:\n+                    log_lines.append(line)\n+                    levels = re.findall(r'\\[[A-Z]+]', line)\n+                    if levels:\n+                        level = levels[0]\n+                        level = previous_found_level = level[1:-1]\n+                        log_level_specific_lines[level].append(line)\n+                    elif previous_found_level:","author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-27T19:21:39Z","lastEditedAt":"2019-06-27T19:32:36Z","updatedAt":"2019-06-27T19:32:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDUwMDcxODU3NA==","url":"https://github.com/coala/community/pull/251#issuecomment-500718574","bodyText":"@sks444 @damngamerz @margobra8\nPlease review, Thnx","diffHunk":null,"author":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4","name":"Keshav Garg"},"reactions":[],"createdAt":"2019-06-11T07:18:30Z","lastEditedAt":null,"updatedAt":"2019-06-11T07:18:30Z"}]}}},{"repoOwner":"coala","repoName":"community","updatedAtMs":1561961022000,"issue":{"htmlUrl":"https://github.com/coala/community/pull/252","number":252,"title":"gci/: Redesign gci students web-page","body":"The redesigned web-page displays the data\nin a better UI/UX form with some additional\ninformation to make it more interactive and\nattractive.\nCloses https://gitlab.com/coala/GSoC/gsoc-2019/issues/269","comments":2,"createdAt":"2019-06-12T12:12:05Z","updatedAt":"2019-07-01T06:03:42Z","closedAt":null,"state":"open","user":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"owner":{"login":"KVGarg","avatarUrl":"https://avatars2.githubusercontent.com/u/35761292?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/community/pull/252","comments":[]}}},{"repoOwner":"coala","repoName":"coala-html","updatedAtMs":1560330925000,"issue":{"htmlUrl":"https://github.com/coala/coala-html/pull/160","number":160,"title":"updated icon","body":"#151","comments":2,"createdAt":"2019-06-12T09:12:06Z","updatedAt":"2019-06-12T09:15:25Z","closedAt":"2019-06-12T09:13:48Z","state":"closed","user":{"login":"akhilputhiry","avatarUrl":"https://avatars1.githubusercontent.com/u/747410?v=4"},"owner":{"login":"akhilputhiry","avatarUrl":"https://avatars1.githubusercontent.com/u/747410?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala-html/pull/160","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUwMTE4OTM5Mg==","url":"https://github.com/coala/coala-html/pull/160#issuecomment-501189392","bodyText":"Sorry I never knew that the issue needs to be assigned.","diffHunk":null,"author":{"login":"akhilputhiry","avatarUrl":"https://avatars1.githubusercontent.com/u/747410?v=4","name":"Akhil Lawrence"},"createdAt":"2019-06-12T09:14:06Z","lastEditedAt":null,"updatedAt":"2019-06-12T09:14:06Z"}]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false},{"id":"MDU6TGFiZWwxMjE4ODkyMjU4","name":"area/dependencies","color":"96f7bf","default":false}]},{"repoOwner":"coala","repoName":"coala-bears","labels":[{"id":"MDU6TGFiZWwzMjcwNDg3MDQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MDU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjA=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjE=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjI=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMjcwNDg3MjM=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMjczNjcxMTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2Mjg=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWwzMjg1NDk2OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Mjg=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjg1NDk3Nzg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwzMjg1NDk4MDg=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNjA=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk1NDgzNzU=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjk2MDc1MDg=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDg1MjY=","name":"type/test","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MDg5MTQ=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMjk2MDkwMDM=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODU=","name":"importance/low","color":"70e870","default":false},{"id":"MDU6TGFiZWwzMjk2MDkyODY=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMjk2MDkzNDM=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4MjA=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMjk2MDk4Nzk=","name":"type/codestyle","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMjk2MTE5MTA=","name":"status/needs design","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMjk2MTI5MjU=","name":"status/needs info","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0MzI=","name":"status/wontfix/accepting patches","color":"555555","default":false},{"id":"MDU6TGFiZWwzMjk2MTg0OTA=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjk2MTkwMDc=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzNDg2NTk2MzE=","name":"area/lintbears","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzNDg2NjY2Mzk=","name":"area/documentation","color":"c5def5","default":false},{"id":"MDU6TGFiZWwzNzM3ODc1MzY=","name":"type/dependencies","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MTMxOTIzMjY=","name":"bear proposal","color":"ADFF2F","default":false},{"id":"MDU6TGFiZWw0MzQ3MDk3MDU=","name":"long-term-project","color":"c5def5","default":false},{"id":"MDU6TGFiZWw0MzYzMTQwNDQ=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM4MDEzOTY=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTI0NDE0NjI=","name":"hacktoberfest","color":"b60205","default":false},{"id":"MDU6TGFiZWw0ODM0OTI0NTY=","name":"area/newsettings","color":"006b75","default":false},{"id":"MDU6TGFiZWw0ODM1MDQ5MzQ=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw1MDkwMjY0MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1MjgxMjIzMjY=","name":"area/genericbears","color":"D01975","default":false},{"id":"MDU6TGFiZWw1NjYwNzE5MDc=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODUzMzI3NDM=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw1OTQ2NzgyMDM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw1OTQ2Nzg1MzM=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWw1OTQ3MzEwMDQ=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjAxNjU4NzE=","name":"area/ci","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjcxMTYzNTY=","name":"type/performance","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2ODA4NDE3NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDE2NzkwNjI=","name":"area/tests","color":"c5def5","default":false},{"id":"MDU6TGFiZWw3NDE2NzYzNDI=","name":"language/ruby","color":"dd27c8","default":false},{"id":"MDU6TGFiZWw3NDY4NzgxOTQ=","name":"status/needs discussion","color":"ead40e","default":false},{"id":"MDU6TGFiZWw4Njc1NzI1Mjk=","name":"area/install","color":"0b14bc","default":false},{"id":"MDU6TGFiZWw4NzU1ODUyMzk=","name":"status/non-free","color":"8f0dbf","default":false},{"id":"MDU6TGFiZWw5MDY3ODUyNjk=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5ODMyMTYyMDQ=","name":"needs rebase","color":"f4cd69","default":false},{"id":"MDU6TGFiZWw5OTg4NjE3NjI=","name":"type/style","color":"168fe0","default":false},{"id":"MDU6TGFiZWwxMDAwNDgxMzgw","name":"type/spelling","color":"50b5f4","default":false},{"id":"MDU6TGFiZWwxMDQzNzk3ODQ0","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMTAxMTE5MjMz","name":"language/c","color":"a0e5e4","default":false},{"id":"MDU6TGFiZWwxMTAxMTMzNDcx","name":"language/go","color":"4345cc","default":false},{"id":"MDU6TGFiZWwxMTAxMTM1MDA2","name":"language/python","color":"0a8474","default":false},{"id":"MDU6TGFiZWwxMTAxMTQ1MDYx","name":"area/globalbears","color":"3cc9a8","default":false},{"id":"MDU6TGFiZWwxMTAxMTc1MjE3","name":"area/nativebear","color":"36c14d","default":false},{"id":"MDU6TGFiZWwxMTAxMTgxMDYx","name":"language/javascript","color":"5abbfc","default":false},{"id":"MDU6TGFiZWwxMTAxMTg4MDY1","name":"language/perl","color":"b867ea","default":false}]},{"repoOwner":"coala","repoName":"documentation","labels":[{"id":"MDU6TGFiZWwzNDcxNjk0NTI=","name":"bug","color":"fc2929","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTM=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTQ=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTU=","name":"help wanted","color":"159818","default":true},{"id":"MDU6TGFiZWwzNDcxNjk0NTc=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw0Mjc0OTIzNjA=","name":"area/documentation","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjE=","name":"cool and awesome","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjI=","name":"difficulty/medium","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc0OTIzNjM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzc=","name":"difficulty/newcomer","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWw0Mjc0OTI3Nzg=","name":"importance/low","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0Mjc0OTY0NjQ=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDE2Nzc=","name":"status/needs design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0Mjc1MDIyNjA=","name":"area/bears","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDE=","name":"area/usability","color":"ededed","default":false},{"id":"MDU6TGFiZWw0Mjc1MDI0MDI=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw0Mjc1MDMzOTg=","name":"importance/high","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0Mjc1MTA5MTA=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw0MzEwMDExMDM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0MzEwMDExODE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0MzE0MzQ5NzY=","name":"size/S","color":"1d76db","default":false},{"id":"MDU6TGFiZWw0MzE0MzgxNjg=","name":"size/XS","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzE0NTI5ODI=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw0MzIwNTAyMDE=","name":"size/M","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0NDM1Njc4Mzk=","name":"size/L","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw0NDQzODgyODI=","name":"size/XL","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTI0NDIxNDQ=","name":"hacktoberfest","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw0NTYxMTgwNzE=","name":"review carefully!","color":"b60205","default":false},{"id":"MDU6TGFiZWw0NTg1NDUwOTI=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MTAyNTE0Nzk=","name":"initiatives/gci","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDQxODE=","name":"status/stale","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NjE4MjQ3MDA=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWw4MTg0NDUyNjI=","name":"status/needs info","color":"9bf2cf","default":false},{"id":"MDU6TGFiZWw4MzI2ODAwMzk=","name":"status/needs discussion","color":"f4ab8b","default":false},{"id":"MDU6TGFiZWw4NDcxMDQ2MDk=","name":"area/ci","color":"f49093","default":false},{"id":"MDU6TGFiZWwxMjA4OTMyMDQ0","name":"type/bug","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMjIzMDYwNDc4","name":"area/sphinx","color":"47c3cc","default":false}]},{"repoOwner":"coala","repoName":"projects","labels":[{"id":"MDU6TGFiZWw1MjAwNDU5MzU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5MzY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5Mzk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw1MjAwNDU5NDE=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4MTY=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw1MjAxMDU4Mzg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMTI2NDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxMzA5ODU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MjAxMzgzMjY=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjAxNDgxNzc=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAxNzM1OTQ=","name":"design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw1MjAxOTc5MjE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjAyMDYyNTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA0MTEwMTk=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3MTI=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjA5Nzk3NjI=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MjE5NDE2MTI=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MjQzODgxMzc=","name":"community_team","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTM4ODMyNzI=","name":"Project Proposal","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2ODA4NDM5NjY=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzAzNzE5NDQ=","name":"initiatives/gci","color":"fc7d0f","default":false},{"id":"MDU6TGFiZWw3MzgxODI0MzY=","name":"upstream","color":"ffb5bd","default":false},{"id":"MDU6TGFiZWw3NTE3NjE0NTk=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw4MzYzNjUxNjE=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw4MzcxMjA3OTA=","name":"importance/low","color":"2fe055","default":false},{"id":"MDU6TGFiZWw4MzcxNjY3NTk=","name":"difficulty/medium","color":"9dea67","default":false},{"id":"MDU6TGFiZWw4MzcxNzIzOTI=","name":"importance/medium","color":"f2db30","default":false},{"id":"MDU6TGFiZWw4NjIyMDU3MjQ=","name":"status/needs info","color":"71fcb7","default":false},{"id":"MDU6TGFiZWw4NzgxODM1OTc=","name":"status/blocked","color":"e56994","default":false},{"id":"MDU6TGFiZWw5MTIxODM1MTc=","name":"status/needs design","color":"f9a7df","default":false},{"id":"MDU6TGFiZWwxMDUxNDM0NjAx","name":"status/wontfix","color":"f2a90c","default":false}]},{"repoOwner":"coala","repoName":"devops","labels":[{"id":"MDU6TGFiZWw2MDkyNjQ4MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjQyMjkyMzE=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWw2MjU3NzY1MzM=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWw2MjgxNTMwNjk=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxNTM3MTA=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTM4NzI=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWw2MjgxNTQwODM=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MjgxNTQzMjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxNTQ4OTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MjgxNTUwODE=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWw2MjgxNTU0NjE=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWw2MjgxOTMwNTQ=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2MjgxOTMxNTM=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTM4OTE=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTQwMjk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQxMDI=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTQyMDI=","name":"status/invalid","color":"668866","default":false},{"id":"MDU6TGFiZWw2MjgxOTQzMzA=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ1MDg=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ2NTI=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ3NTk=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWw2MjgxOTQ5MDg=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWw2MjgxOTUwMjk=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjgxOTUyMjA=","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjgxOTUzOTA=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjgxOTU3OTU=","name":"area/security","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2MjgxOTYwMzQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MjgxOTY5Nzg=","name":"scope/internal","color":"D01975","default":false},{"id":"MDU6TGFiZWw2MjgxOTczNjQ=","name":"area/ops","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjgxOTg4Nzc=","name":"upstream","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NDk5ODc=","name":"service/venus","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAwNDQ=","name":"service/nginx","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxNTg=","name":"service/cobot","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAxODc=","name":"service/cherry-pick-bot","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mjg0NTAzMzU=","name":"type/new service","color":"006b75","default":false},{"id":"MDU6TGFiZWw2Mjg0NTA0NzA=","name":"area/web development","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2Mjg0NTE2MDI=","name":"area/communication","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2Mjg0NTY3ODQ=","name":"service/landing","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyMjI=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw2MjkwMjAyOTQ=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0MTQ=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjkwMjA0Nzg=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1Mjk=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MjkwMjA1NjU=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWw2MzI5MTU0MTY=","name":"service/corobo","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTcyOTQ=","name":"area/CD","color":"006b75","default":false},{"id":"MDU6TGFiZWw2MzI5MTkwNjM=","name":"service/ikari","color":"ab78ff","default":false},{"id":"MDU6TGFiZWw2MzI5MTkzMzI=","name":"area/monitoring","color":"aaff88","default":false},{"id":"MDU6TGFiZWw2MzI5MTk4MjE=","name":"cool and awesome","color":"aaffdd","default":false},{"id":"MDU6TGFiZWw2ODA4NDM4MTA=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2ODU2MDMyOTc=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw3MzI4OTUxMTk=","name":"initiatives/gci","color":"936ed3","default":false},{"id":"MDU6TGFiZWw5MjY3OTg3OTc=","name":"process/pending_review","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"corobo","labels":[{"id":"MDU6TGFiZWw2MDExMDE3NTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTg=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NTk=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDExMDE3NjE=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw2MDEzNTc0Mjk=","name":"importance/low","color":"f9d0c4","default":false},{"id":"MDU6TGFiZWw2MDEzNTc0ODc=","name":"importance/high","color":"e99695","default":false},{"id":"MDU6TGFiZWw2MDEzNTc1OTM=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw2MDEzNTc2NzE=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MDEzNTc3NDk=","name":"difficulty/high","color":"b319e7","default":false},{"id":"MDU6TGFiZWw2MDEzOTE3OTY=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWw2MDEzOTMxOTY=","name":"importance/critical","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDE0MDQ2Mjc=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MDM2ODcwMTM=","name":"stretch goal","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3Mjk=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2MTQyMTk3NjU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2MTQ2OTYxMzE=","name":"status/blocked","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MTUyODM2MTU=","name":"ready","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUyODUyMzI=","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MTUzNjgxODU=","name":"documentation","color":"5319e7","default":true},{"id":"MDU6TGFiZWw2MTcwNzUyNDA=","name":"pr available","color":"cccccc","default":false},{"id":"MDU6TGFiZWw2MTg0MTI1ODU=","name":"cool and awesome","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTg0MTMzNTk=","name":"plugin proposal","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw2MTg5NjE5MDA=","name":"poll","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MTk4NTMxNzU=","name":"design","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MjI2MjMyMzE=","name":"decided","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjI3MTg0NTE=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWw2MjI3MTg1MDE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjM0MDU1NTE=","name":"difficulty/newcomer","color":"65c8ff","default":false},{"id":"MDU6TGFiZWw2MjQyMzcwMjQ=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjQ3NzY3ODg=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjY3NDQ0MzY=","name":"deployment","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MjY4NTIxOTM=","name":"non-existent","color":"ededed","default":false},{"id":"MDU6TGFiZWw2Mjc5NjE1Mjc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MjkyODg1NDY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzA0NTUwODk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzIxMzg2ODg=","name":"upstream","color":"b60205","default":false},{"id":"MDU6TGFiZWw2NTc1NjY5MTY=","name":"gsoc2017/phase3","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2ODA4NDM3ODg=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MjY4ODMyMzQ=","name":"initiatives/gci","color":"f79e9f","default":false},{"id":"MDU6TGFiZWw3Mzk0NDIzNzA=","name":"status/cannot reproduce","color":"000000","default":false},{"id":"MDU6TGFiZWw3NDI4NzcxODA=","name":"importance/medium","color":"ddba61","default":false},{"id":"MDU6TGFiZWw3NTg3MDM2MzA=","name":"area/ui","color":"dd02cf","default":false},{"id":"MDU6TGFiZWw3NTg3MDQzNDU=","name":"area/labhub","color":"63ccf9","default":false},{"id":"MDU6TGFiZWw3NTg3MDUyNDY=","name":"area/security","color":"fc6805","default":false},{"id":"MDU6TGFiZWw3NjE3NTA5NTc=","name":"type/markdown","color":"2a0582","default":false},{"id":"MDU6TGFiZWw3NjE3OTU1NzE=","name":"type/regex","color":"d453e2","default":false},{"id":"MDU6TGFiZWw3NjE5NDI5ODM=","name":"area/errbot","color":"ed3d9b","default":false},{"id":"MDU6TGFiZWw3NjE5NDMzNTQ=","name":"backend/gitter","color":"7cf9c1","default":false},{"id":"MDU6TGFiZWw3NjE5NDQwMDg=","name":"backend/zulip","color":"0a546b","default":false},{"id":"MDU6TGFiZWw3NjE5NjI2ODg=","name":"backend/telegram","color":"e26858","default":false},{"id":"MDU6TGFiZWw3NjIwMTE4MTI=","name":"area/config","color":"60a1db","default":false},{"id":"MDU6TGFiZWw3NjIwMTIyNTM=","name":"area/tests","color":"5facd8","default":false},{"id":"MDU6TGFiZWw3NjIwMjkyMTI=","name":"status/needs info","color":"8e081e","default":false},{"id":"MDU6TGFiZWw3NjI0MTgyNzI=","name":"area/documentation","color":"969bdd","default":false},{"id":"MDU6TGFiZWw3NjY2Mzc1ODM=","name":"area/ci","color":"ab04e8","default":false},{"id":"MDU6TGFiZWw5OTg4NjM0Nzc=","name":"type/style","color":"567c09","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5NjE2","name":"hoster/github","color":"e57be5","default":false},{"id":"MDU6TGFiZWwxMTAyMjI5ODMz","name":"hoster/gitlab","color":"bc4c32","default":false}]},{"repoOwner":"coala","repoName":"community","labels":[{"id":"MDU6TGFiZWw3NjYwMTk2MDQ=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDU=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDY=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDc=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDg=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MDk=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTA=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjYwMTk2MTE=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NjYyMTU3OTg=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw3NjYyMTU4NzE=","name":"initiatives/gci","color":"ff9549","default":false},{"id":"MDU6TGFiZWw3NjYyMTY0Njc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NjYyMzg3OTg=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3NjYzMjMwMjc=","name":"needs design","color":"db81c7","default":false},{"id":"MDU6TGFiZWw3Njc0MjMzMDE=","name":"process/wip","color":"f2d815","default":false},{"id":"MDU6TGFiZWw3Njg2NDc1NDg=","name":"upstream","color":"fcc4c5","default":false},{"id":"MDU6TGFiZWw3Njg3NTEyNzk=","name":"importance/low","color":"9cc6fc","default":false},{"id":"MDU6TGFiZWw3Njg3NTE3Nzc=","name":"importance/high","color":"e0401d","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyMTA=","name":"process/pending review","color":"9fe589","default":false},{"id":"MDU6TGFiZWw3Njk4MDEyNDg=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk4Njc2NDE=","name":"status/blocked","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzAxOTkwODc=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWw3NzAzMDQ4MTY=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzA0MTk0MTA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzI2MTI0MzU=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzM5NDU4NjU=","name":"importance/medium","color":"ccf945","default":false},{"id":"MDU6TGFiZWw3Nzg1OTkxODY=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Nzg3Mzk5MjY=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE1NTY4MzY=","name":"initiatives/gsoc","color":"ed95c1","default":false},{"id":"MDU6TGFiZWw3ODIxMTU0NDM=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODI1Njg2MjA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjI0MDg1NzI=","name":"area/ci","color":"4c95ad","default":false},{"id":"MDU6TGFiZWw5OTg4NjI4MTU=","name":"type/style","color":"93f486","default":false},{"id":"MDU6TGFiZWwxMDA1MjQ0Mjgx","name":"area/tests","color":"7b68dd","default":false},{"id":"MDU6TGFiZWwxMDQ0MDM3Njc3","name":"in progress","color":"ededed","default":false},{"id":"MDU6TGFiZWwxMDg3MDEwODA4","name":"area/documentation","color":"f296f0","default":false},{"id":"MDU6TGFiZWwxMDk1NjQxNTQ4","name":"importance/critical","color":"e21f98","default":false}]},{"repoOwner":"coala","repoName":"gci-leaders","labels":[{"id":"MDU6TGFiZWw3NjkyMjg1NTg=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NTk=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjA=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjE=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjI=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjM=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjQ=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NjkyMjg1NjU=","name":"wontfix","color":"000000","default":true},{"id":"MDU6TGFiZWw3Njk1ODQ5MjM=","name":"difficulty/low","color":"59db91","default":false},{"id":"MDU6TGFiZWw3Njk1ODQ5OTY=","name":"initiatives/gci","color":"98e9f9","default":false},{"id":"MDU6TGFiZWw3Njk1ODY4NTA=","name":"difficulty/newcomer","color":"ffcce2","default":false},{"id":"MDU6TGFiZWw3Njk1OTg5ODY=","name":"difficulty/medium","color":"ff91cd","default":false},{"id":"MDU6TGFiZWw3Njk2NDAyNjg=","name":"difficulty/high","color":"a667f7","default":false},{"id":"MDU6TGFiZWw3Njk2NDExNDk=","name":"status/blocked","color":"cc4158","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzMjE=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw3Njk2NjUzNjI=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw3Njk3MDg3Mjg=","name":"process/approved","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw3Njk5MzE3MTA=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzAxMDE1MjM=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw3NzA3MzgyMDU=","name":"area/ui","color":"442cf7","default":false},{"id":"MDU6TGFiZWw3NzA4MTQwMjk=","name":"type/bug","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw3NzA5NDg4ODk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzEwOTQ3Njg=","name":"area/i18n","color":"ffccee","default":false},{"id":"MDU6TGFiZWw3NzQ3MTc4OTE=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzQ4ODI2ODM=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NzYyNjk4NzM=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw3ODE0NTgxMTg=","name":"importance/low","color":"fcf1a6","default":false},{"id":"MDU6TGFiZWw3ODQxMDY0NDM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5NDc0NjU=","name":"importance/high","color":"dd007d","default":false},{"id":"MDU6TGFiZWwxMDUxMjg1NDUx","name":"importance/critical","color":"ed0e79","default":false},{"id":"MDU6TGFiZWwxMTE1NTM4NDMy","name":"importance/medium","color":"c595db","default":false}]},{"repoOwner":"coala","repoName":"gh-board","labels":[{"id":"MDU6TGFiZWw3NTM5MzE2OTU=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTY=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTc=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTg=","name":"help wanted","color":"33aa3f","default":true},{"id":"MDU6TGFiZWw3NTM5MzE2OTk=","name":"good first issue","color":"7057ff","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDA=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDE=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw3NTM5MzE3MDI=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw3NTU4MTU1MzQ=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWw3NzQyNDUxNDA=","name":"difficulty/low","color":"07eded","default":false},{"id":"MDU6TGFiZWw3NzQyNDU1NDI=","name":"initiatives/gci","color":"e5ce95","default":false},{"id":"MDU6TGFiZWw3ODU0MzEyMDI=","name":"difficulty/medium","color":"d30a8d","default":false},{"id":"MDU6TGFiZWw4NDA0NzA4Njk=","name":"process/wip","color":"ead483","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2MTg=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDQ4NjU2OTE=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NjI0NjY2NTA=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAwMjc1NTE=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAxOTA1NTk=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjAyMzc5NDc=","name":"difficulty/high","color":"e88e53","default":false},{"id":"MDU6TGFiZWw5MjIzNjc2Nzg=","name":"importance/medium","color":"65f23e","default":false},{"id":"MDU6TGFiZWw5MjM2MTYxMTQ=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5MjU5ODk3ODk=","name":"upstream","color":"6ded77","default":false},{"id":"MDU6TGFiZWw5MzA1Mzc3NzI=","name":"importance/low","color":"1394a0","default":false},{"id":"MDU6TGFiZWw5MzgzMTQ4MjE=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTg5MTUwMDI=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk1OTUyODA=","name":"difficulty/newcomer","color":"33a7bf","default":false},{"id":"MDU6TGFiZWwxMDExNjQ0Mjg5","name":"area/dependencies","color":"ef88a2","default":false},{"id":"MDU6TGFiZWwxMDY1MDEyNTI5","name":"in progress","color":"ededed","default":false}]},{"repoOwner":"coala","repoName":"coala-html","labels":[{"id":"MDU6TGFiZWwzMjY1MzQ5Nzg=","name":"type/bug","color":"fc2929","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5Nzk=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODE=","name":"status/wontfix/accepting patches","color":"777777","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODI=","name":"status/invalid","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODM=","name":"status/need-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWwzMjY1MzQ5ODQ=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NTU=","name":"difficulty/newcomer","color":"009800","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3NjQ=","name":"difficulty/low","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc3OTU=","name":"difficulty/medium","color":"fef2c0","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4MzE=","name":"difficulty/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMjc0Mzc4NzU=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzM=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzNzQ=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzODI=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTA=","name":"size/M","color":"CFB80A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTE=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwzMzIzMzIzOTk=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMzI5NTk1MTI=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWwzMzMxMzU3NDk=","name":"status/blocked","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzMyNDI0NDU=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMzMzNDE1OTY=","name":"status/needs design","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYyMDYxOTQ=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw0ODYzMTg0NTQ=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWw2ODA4NDQzNjM=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzEwMjg5NTk=","name":"initiatives/gci","color":"f78589","default":false}]},{"repoOwner":"coala","repoName":"landing-frontend","labels":[{"id":"MDU6TGFiZWw1MjE2NDU4MTA=","name":"type/bug","color":"ee0701","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTE=","name":"status/duplicate","color":"cccccc","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTQ=","name":"status/wontfix/not happening","color":"e6e6e6","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTU=","name":"needs-design","color":"cc317c","default":false},{"id":"MDU6TGFiZWw1MjE2NDU4MTY=","name":"status/wontfix/accepting patches","color":"ffffff","default":false},{"id":"MDU6TGFiZWw1MjE3MDE0OTc=","name":"difficulty/newcomer","color":"0e8a16","default":false},{"id":"MDU6TGFiZWw1MjE3MDE1MzY=","name":"difficulty/low","color":"1d76db","default":false},{"id":"MDU6TGFiZWw1MzE1MzAwNjE=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWw1MzE1OTEwMDc=","name":"size/S","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE2MTQzODU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE3NDgxNzc=","name":"size/L","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzE4MzA2ODg=","name":"size/XXL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzIxNzM0NTY=","name":"size/M","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1NTk=","name":"size/XL","color":"ededed","default":false},{"id":"MDU6TGFiZWw1MzczNTY1OTE=","name":"review carefully!","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjM0NzM5Mjg=","name":"process/pending review","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw2NjkxNjAwOTA=","name":"status/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NjkxNjEwODA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODc1ODI1ODg=","name":"area/documentation","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MDU3ODgwNzM=","name":"needs-discussion","color":"aa52aa","default":false},{"id":"MDU6TGFiZWw3MzAzNTE0NDc=","name":"initiatives/gci","color":"f2d5a4","default":false},{"id":"MDU6TGFiZWw3NDgzMDE3MzE=","name":"difficulty/high","color":"f762d7","default":false},{"id":"MDU6TGFiZWw3ODQ4Mzc1NjQ=","name":"difficulty/medium","color":"dbc255","default":false},{"id":"MDU6TGFiZWw3ODYxOTA3MzM=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw4Njc1Nzc2MzI=","name":"invalid","color":"000000","default":true},{"id":"MDU6TGFiZWw4ODM0MDIxNDI=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4OTU1MjU0NDM=","name":"enhancement","color":"097287","default":true}]},{"repoOwner":"coala","repoName":"coalaCSS","labels":[{"id":"MDU6TGFiZWw2MDk0OTkxNzc=","name":"bug","color":"ee0701","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzg=","name":"duplicate","color":"cccccc","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxNzk=","name":"enhancement","color":"84b6eb","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODA=","name":"help wanted","color":"128A0C","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODE=","name":"invalid","color":"e6e6e6","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODI=","name":"question","color":"cc317c","default":true},{"id":"MDU6TGFiZWw2MDk0OTkxODM=","name":"wontfix","color":"ffffff","default":true},{"id":"MDU6TGFiZWw2MzAzNTEzNDg=","name":"process/pending_review","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzAzNTE1MjU=","name":"size/XS","color":"ededed","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgyNTE=","name":"area/landing-frontend","color":"5319e7","default":false},{"id":"MDU6TGFiZWw2MzQ3OTgzMzY=","name":"area/projects","color":"0052cc","default":false},{"id":"MDU6TGFiZWw2MzQ3OTg0ODU=","name":"design","color":"1d76db","default":false},{"id":"MDU6TGFiZWw2MzQ3OTkzMjk=","name":"importance/critical","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2Mzk0NDkwNTc=","name":"process/wip","color":"ededed","default":false},{"id":"MDU6TGFiZWw2ODEwMjUyMzA=","name":"status/STALE","color":"ededed","default":false},{"id":"MDU6TGFiZWw3MzMwNDk1MjU=","name":"initiatives/gci","color":"ee79f7","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE0Nzc=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWw3Mzk0NjE2MDY=","name":"importance/low","color":"99c1dd","default":false},{"id":"MDU6TGFiZWw3Mzk1MDA1OTA=","name":"process/pending review","color":"ededed","default":false},{"id":"MDU6TGFiZWw3NTEzMzIxMzA=","name":"process/approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw4NDkxMjMwMjk=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWw4NDkxMjM4OTY=","name":"difficulty/medium","color":"0052cc","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2019-07-03T02:56:36Z"},{"repoOwner":"coala","repoName":"coala-bears","isPrivate":false,"lastSeenAt":"2019-07-03T02:58:23Z"},{"repoOwner":"coala","repoName":"documentation","isPrivate":false,"lastSeenAt":"2019-06-27T15:53:17Z"},{"repoOwner":"coala","repoName":"projects","isPrivate":false,"lastSeenAt":"2019-07-01T05:51:17Z"},{"repoOwner":"coala","repoName":"devops","isPrivate":false,"lastSeenAt":"2018-08-18T10:36:44Z"},{"repoOwner":"coala","repoName":"corobo","isPrivate":false,"lastSeenAt":"2019-06-30T19:23:54Z"},{"repoOwner":"coala","repoName":"community","isPrivate":false,"lastSeenAt":"2019-07-01T06:19:32Z"},{"repoOwner":"coala","repoName":"gci-leaders","isPrivate":false,"lastSeenAt":"2019-02-24T20:30:03Z"},{"repoOwner":"coala","repoName":"gh-board","isPrivate":false,"lastSeenAt":"2019-03-18T09:10:24Z"},{"repoOwner":"coala","repoName":"coala-html","isPrivate":false,"lastSeenAt":"2019-06-12T09:15:25Z"},{"repoOwner":"coala","repoName":"landing-frontend","isPrivate":false,"lastSeenAt":"2019-05-31T11:46:34Z"},{"repoOwner":"coala","repoName":"coalaCSS","isPrivate":false,"lastSeenAt":"2018-11-23T05:07:32Z"}]}